// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "steammessages.pb.h"
#import "matchmaker_common.pb.h"

@class CDOTALobbyMember;
@class CDOTALobbyMember_Builder;
@class CDOTAOverview;
@class CDOTAOverview_Builder;
@class CDOTAOverview_PlayersByRegion;
@class CDOTAOverview_PlayersByRegion_Builder;
@class CDOTAOverview_ServersByRegion;
@class CDOTAOverview_ServersByRegion_Builder;
@class CGCMsgGetIPLocation;
@class CGCMsgGetIPLocationResponse;
@class CGCMsgGetIPLocationResponse_Builder;
@class CGCMsgGetIPLocation_Builder;
@class CGCMsgGetSystemStats;
@class CGCMsgGetSystemStatsResponse;
@class CGCMsgGetSystemStatsResponse_Builder;
@class CGCMsgGetSystemStats_Builder;
@class CGCMsgMemCachedDelete;
@class CGCMsgMemCachedDelete_Builder;
@class CGCMsgMemCachedGet;
@class CGCMsgMemCachedGetResponse;
@class CGCMsgMemCachedGetResponse_Builder;
@class CGCMsgMemCachedGetResponse_ValueTag;
@class CGCMsgMemCachedGetResponse_ValueTag_Builder;
@class CGCMsgMemCachedGet_Builder;
@class CGCMsgMemCachedSet;
@class CGCMsgMemCachedSet_Builder;
@class CGCMsgMemCachedSet_KeyPair;
@class CGCMsgMemCachedSet_KeyPair_Builder;
@class CGCMsgSystemStatsSchema;
@class CGCMsgSystemStatsSchema_Builder;
@class CGCSystemMsg_GetAccountDetails;
@class CGCSystemMsg_GetAccountDetails_Builder;
@class CGCSystemMsg_GetAccountDetails_Response;
@class CGCSystemMsg_GetAccountDetails_Response_Builder;
@class CIPLocationInfo;
@class CIPLocationInfo_Builder;
@class CItemDropEvent;
@class CItemDropEvent_Builder;
@class CLeague;
@class CLeague_Builder;
@class CLobbyPendingPlayerReport;
@class CLobbyPendingPlayerReport_Builder;
@class CLobbyTeamDetails;
@class CLobbyTeamDetails_Builder;
@class CLobbyTimedRewardDetails;
@class CLobbyTimedRewardDetails_Builder;
@class CLowPriPenalty;
@class CLowPriPenalty_Builder;
@class CMsgAMAddFreeLicense;
@class CMsgAMAddFreeLicenseResponse;
@class CMsgAMAddFreeLicenseResponse_Builder;
@class CMsgAMAddFreeLicense_Builder;
@class CMsgAMFindAccounts;
@class CMsgAMFindAccountsResponse;
@class CMsgAMFindAccountsResponse_Builder;
@class CMsgAMFindAccounts_Builder;
@class CMsgAMGetLicenses;
@class CMsgAMGetLicensesResponse;
@class CMsgAMGetLicensesResponse_Builder;
@class CMsgAMGetLicenses_Builder;
@class CMsgAMGetUserGameStats;
@class CMsgAMGetUserGameStatsResponse;
@class CMsgAMGetUserGameStatsResponse_Achievement_Blocks;
@class CMsgAMGetUserGameStatsResponse_Achievement_Blocks_Builder;
@class CMsgAMGetUserGameStatsResponse_Builder;
@class CMsgAMGetUserGameStatsResponse_Stats;
@class CMsgAMGetUserGameStatsResponse_Stats_Builder;
@class CMsgAMGetUserGameStats_Builder;
@class CMsgAMGrantGuestPasses2;
@class CMsgAMGrantGuestPasses2Response;
@class CMsgAMGrantGuestPasses2Response_Builder;
@class CMsgAMGrantGuestPasses2_Builder;
@class CMsgAMSendEmail;
@class CMsgAMSendEmailResponse;
@class CMsgAMSendEmailResponse_Builder;
@class CMsgAMSendEmail_Builder;
@class CMsgAMSendEmail_PersonaNameReplacementToken;
@class CMsgAMSendEmail_PersonaNameReplacementToken_Builder;
@class CMsgAMSendEmail_ReplacementToken;
@class CMsgAMSendEmail_ReplacementToken_Builder;
@class CMsgAbandonCurrentGame;
@class CMsgAbandonCurrentGame_Builder;
@class CMsgApplyTeamToPracticeLobby;
@class CMsgApplyTeamToPracticeLobby_Builder;
@class CMsgCancelWatchGame;
@class CMsgCancelWatchGame_Builder;
@class CMsgCastMatchVote;
@class CMsgCastMatchVote_Builder;
@class CMsgCheckSpectatorOnly;
@class CMsgCheckSpectatorOnlyResponse;
@class CMsgCheckSpectatorOnlyResponse_Builder;
@class CMsgCheckSpectatorOnly_Builder;
@class CMsgConnectedPlayers;
@class CMsgConnectedPlayers_Builder;
@class CMsgConnectedPlayers_Player;
@class CMsgConnectedPlayers_Player_Builder;
@class CMsgDOTABetaParticipation;
@class CMsgDOTABetaParticipationRequest;
@class CMsgDOTABetaParticipationRequest_Builder;
@class CMsgDOTABetaParticipation_Builder;
@class CMsgDOTABroadcastNotification;
@class CMsgDOTABroadcastNotification_Builder;
@class CMsgDOTAChatChannelFullUpdate;
@class CMsgDOTAChatChannelFullUpdate_Builder;
@class CMsgDOTAChatMember;
@class CMsgDOTAChatMember_Builder;
@class CMsgDOTAChatMessage;
@class CMsgDOTAChatMessage_Builder;
@class CMsgDOTAClearNotifySuccessfulReport;
@class CMsgDOTAClearNotifySuccessfulReport_Builder;
@class CMsgDOTAClearTournamentGame;
@class CMsgDOTAClearTournamentGame_Builder;
@class CMsgDOTACreateTeam;
@class CMsgDOTACreateTeamResponse;
@class CMsgDOTACreateTeamResponse_Builder;
@class CMsgDOTACreateTeam_Builder;
@class CMsgDOTADailyStats;
@class CMsgDOTADailyStats_Builder;
@class CMsgDOTADiretidePrizeResponse;
@class CMsgDOTADiretidePrizeResponse_Builder;
@class CMsgDOTADiretidePrizesRewardedResponse;
@class CMsgDOTADiretidePrizesRewardedResponse_Builder;
@class CMsgDOTADisbandTeam;
@class CMsgDOTADisbandTeamResponse;
@class CMsgDOTADisbandTeamResponse_Builder;
@class CMsgDOTADisbandTeam_Builder;
@class CMsgDOTAEditTeamDetails;
@class CMsgDOTAEditTeamDetailsResponse;
@class CMsgDOTAEditTeamDetailsResponse_Builder;
@class CMsgDOTAEditTeamDetails_Builder;
@class CMsgDOTAEditTeamLogo;
@class CMsgDOTAEditTeamLogoResponse;
@class CMsgDOTAEditTeamLogoResponse_Builder;
@class CMsgDOTAEditTeamLogo_Builder;
@class CMsgDOTAGCToGCMatchCompleted;
@class CMsgDOTAGCToGCMatchCompleted_Builder;
@class CMsgDOTAGenerateDiretidePrizeList;
@class CMsgDOTAGenerateDiretidePrizeListResponse;
@class CMsgDOTAGenerateDiretidePrizeListResponse_Builder;
@class CMsgDOTAGenerateDiretidePrizeList_Builder;
@class CMsgDOTAGenericResult;
@class CMsgDOTAGenericResult_Builder;
@class CMsgDOTAHallOfFame;
@class CMsgDOTAHallOfFameRequest;
@class CMsgDOTAHallOfFameRequest_Builder;
@class CMsgDOTAHallOfFameResponse;
@class CMsgDOTAHallOfFameResponse_Builder;
@class CMsgDOTAHallOfFame_Builder;
@class CMsgDOTAHallOfFame_FeaturedFarmer;
@class CMsgDOTAHallOfFame_FeaturedFarmer_Builder;
@class CMsgDOTAHallOfFame_FeaturedPlayer;
@class CMsgDOTAHallOfFame_FeaturedPlayer_Builder;
@class CMsgDOTAHalloweenHighScoreRequest;
@class CMsgDOTAHalloweenHighScoreRequest_Builder;
@class CMsgDOTAHalloweenHighScoreResponse;
@class CMsgDOTAHalloweenHighScoreResponse_Builder;
@class CMsgDOTAHeroFavoritesAdd;
@class CMsgDOTAHeroFavoritesAdd_Builder;
@class CMsgDOTAHeroFavoritesRemove;
@class CMsgDOTAHeroFavoritesRemove_Builder;
@class CMsgDOTAInitiateTeamInvite;
@class CMsgDOTAInitiateTeamInviteResponse;
@class CMsgDOTAInitiateTeamInviteResponse_Builder;
@class CMsgDOTAInitiateTeamInvite_Builder;
@class CMsgDOTAJoinChatChannel;
@class CMsgDOTAJoinChatChannelResponse;
@class CMsgDOTAJoinChatChannelResponse_Builder;
@class CMsgDOTAJoinChatChannel_Builder;
@class CMsgDOTAKickTeamMember;
@class CMsgDOTAKickTeamMemberResponse;
@class CMsgDOTAKickTeamMemberResponse_Builder;
@class CMsgDOTAKickTeamMember_Builder;
@class CMsgDOTAKickedFromMatchmakingQueue;
@class CMsgDOTAKickedFromMatchmakingQueue_Builder;
@class CMsgDOTALeaveChatChannel;
@class CMsgDOTALeaveChatChannel_Builder;
@class CMsgDOTALeaveTeam;
@class CMsgDOTALeaveTeamResponse;
@class CMsgDOTALeaveTeamResponse_Builder;
@class CMsgDOTALeaveTeam_Builder;
@class CMsgDOTALiveScoreboardUpdate;
@class CMsgDOTALiveScoreboardUpdate_Builder;
@class CMsgDOTALiveScoreboardUpdate_Team;
@class CMsgDOTALiveScoreboardUpdate_Team_Builder;
@class CMsgDOTALiveScoreboardUpdate_Team_Player;
@class CMsgDOTALiveScoreboardUpdate_Team_Player_Builder;
@class CMsgDOTAMatch;
@class CMsgDOTAMatchGroupWaitTimesRequest;
@class CMsgDOTAMatchGroupWaitTimesRequest_Builder;
@class CMsgDOTAMatchGroupWaitTimesResponse;
@class CMsgDOTAMatchGroupWaitTimesResponse_Builder;
@class CMsgDOTAMatchHistoryFilter;
@class CMsgDOTAMatchHistoryFilter_Builder;
@class CMsgDOTAMatchVotes;
@class CMsgDOTAMatchVotes_Builder;
@class CMsgDOTAMatchVotes_PlayerVote;
@class CMsgDOTAMatchVotes_PlayerVote_Builder;
@class CMsgDOTAMatch_Builder;
@class CMsgDOTAMatch_Player;
@class CMsgDOTAMatch_Player_Builder;
@class CMsgDOTANotifyResetKeybindings;
@class CMsgDOTANotifyResetKeybindings_Builder;
@class CMsgDOTANotifySuccessfulReport;
@class CMsgDOTANotifySuccessfulReport_Builder;
@class CMsgDOTAOtherJoinedChatChannel;
@class CMsgDOTAOtherJoinedChatChannel_Builder;
@class CMsgDOTAOtherLeftChatChannel;
@class CMsgDOTAOtherLeftChatChannel_Builder;
@class CMsgDOTAPlayerFailedToConnect;
@class CMsgDOTAPlayerFailedToConnect_Builder;
@class CMsgDOTAPlayerHeroesRecentRequest;
@class CMsgDOTAPlayerHeroesRecentRequest_Builder;
@class CMsgDOTAPlayerHeroesRecentResponse;
@class CMsgDOTAPlayerHeroesRecentResponse_Builder;
@class CMsgDOTAPlayerMatchHistory;
@class CMsgDOTAPlayerMatchHistory_Builder;
@class CMsgDOTAPlayerReports;
@class CMsgDOTAPlayerReports_Builder;
@class CMsgDOTAPlayerReports_PlayerReport;
@class CMsgDOTAPlayerReports_PlayerReport_Builder;
@class CMsgDOTAPopup;
@class CMsgDOTAPopup_Builder;
@class CMsgDOTAProTeamListRequest;
@class CMsgDOTAProTeamListRequest_Builder;
@class CMsgDOTAProTeamListResponse;
@class CMsgDOTAProTeamListResponse_Builder;
@class CMsgDOTAProTeamListResponse_TeamEntry;
@class CMsgDOTAProTeamListResponse_TeamEntry_Builder;
@class CMsgDOTAProfileRequest;
@class CMsgDOTAProfileRequest_Builder;
@class CMsgDOTAProfileResponse;
@class CMsgDOTAProfileResponse_Builder;
@class CMsgDOTAProfileResponse_EventTicket;
@class CMsgDOTAProfileResponse_EventTicket_Builder;
@class CMsgDOTAProfileResponse_LeaguePass;
@class CMsgDOTAProfileResponse_LeaguePass_Builder;
@class CMsgDOTAProfileResponse_PlayedHero;
@class CMsgDOTAProfileResponse_PlayedHero_Builder;
@class CMsgDOTAProfileResponse_ShowcaseHero;
@class CMsgDOTAProfileResponse_ShowcaseHero_Builder;
@class CMsgDOTAReportCountsRequest;
@class CMsgDOTAReportCountsRequest_Builder;
@class CMsgDOTAReportCountsResponse;
@class CMsgDOTAReportCountsResponse_Builder;
@class CMsgDOTAReportsRemainingRequest;
@class CMsgDOTAReportsRemainingRequest_Builder;
@class CMsgDOTAReportsRemainingResponse;
@class CMsgDOTAReportsRemainingResponse_Builder;
@class CMsgDOTARequestChatChannelList;
@class CMsgDOTARequestChatChannelListResponse;
@class CMsgDOTARequestChatChannelListResponse_Builder;
@class CMsgDOTARequestChatChannelListResponse_ChatChannel;
@class CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder;
@class CMsgDOTARequestChatChannelList_Builder;
@class CMsgDOTARequestDailyStats;
@class CMsgDOTARequestDailyStats_Builder;
@class CMsgDOTARequestDefaultChatChannel;
@class CMsgDOTARequestDefaultChatChannelResponse;
@class CMsgDOTARequestDefaultChatChannelResponse_Builder;
@class CMsgDOTARequestDefaultChatChannel_Builder;
@class CMsgDOTARequestMatches;
@class CMsgDOTARequestMatchesResponse;
@class CMsgDOTARequestMatchesResponse_Builder;
@class CMsgDOTARequestMatches_Builder;
@class CMsgDOTARequestPlayerResources;
@class CMsgDOTARequestPlayerResourcesResponse;
@class CMsgDOTARequestPlayerResourcesResponse_Builder;
@class CMsgDOTARequestPlayerResources_Builder;
@class CMsgDOTARequestSaveGames;
@class CMsgDOTARequestSaveGamesResponse;
@class CMsgDOTARequestSaveGamesResponse_Builder;
@class CMsgDOTARequestSaveGamesResponse_SaveGame;
@class CMsgDOTARequestSaveGamesResponse_SaveGame_Builder;
@class CMsgDOTARequestSaveGamesResponse_SaveGame_Player;
@class CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder;
@class CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance;
@class CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder;
@class CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions;
@class CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder;
@class CMsgDOTARequestSaveGamesServer;
@class CMsgDOTARequestSaveGamesServer_Builder;
@class CMsgDOTARequestSaveGames_Builder;
@class CMsgDOTARequestTeamData;
@class CMsgDOTARequestTeamDataResponse;
@class CMsgDOTARequestTeamDataResponse_Builder;
@class CMsgDOTARequestTeamData_Builder;
@class CMsgDOTARewardDiretidePrizes;
@class CMsgDOTARewardDiretidePrizes_Builder;
@class CMsgDOTASetChatChannelVerbosity;
@class CMsgDOTASetChatChannelVerbosity_Builder;
@class CMsgDOTASetChatChannelVerbosity_ChannelVerbosity;
@class CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder;
@class CMsgDOTAStorePromoPagesRequest;
@class CMsgDOTAStorePromoPagesRequest_Builder;
@class CMsgDOTAStorePromoPagesResponse;
@class CMsgDOTAStorePromoPagesResponse_Builder;
@class CMsgDOTAStorePromoPagesResponse_PromoPage;
@class CMsgDOTAStorePromoPagesResponse_PromoPage_Builder;
@class CMsgDOTASubmitPlayerReport;
@class CMsgDOTASubmitPlayerReportResponse;
@class CMsgDOTASubmitPlayerReportResponse_Builder;
@class CMsgDOTASubmitPlayerReport_Builder;
@class CMsgDOTASuggestTeamMatchmaking;
@class CMsgDOTASuggestTeamMatchmaking_Builder;
@class CMsgDOTATeam;
@class CMsgDOTATeamData;
@class CMsgDOTATeamData_Builder;
@class CMsgDOTATeamInvite;
@class CMsgDOTATeamInviteComplete;
@class CMsgDOTATeamInviteComplete_Builder;
@class CMsgDOTATeamInviteReply;
@class CMsgDOTATeamInviteReplyResponse;
@class CMsgDOTATeamInviteReplyResponse_Builder;
@class CMsgDOTATeamInviteReply_Builder;
@class CMsgDOTATeamInvite_Builder;
@class CMsgDOTATeamMember;
@class CMsgDOTATeamMemberSDO;
@class CMsgDOTATeamMemberSDO_Builder;
@class CMsgDOTATeamMember_Builder;
@class CMsgDOTATeamProfileRequest;
@class CMsgDOTATeamProfileRequest_Builder;
@class CMsgDOTATeamProfileResponse;
@class CMsgDOTATeamProfileResponse_Builder;
@class CMsgDOTATeam_Builder;
@class CMsgDOTATournament;
@class CMsgDOTATournamentRequest;
@class CMsgDOTATournamentRequest_Builder;
@class CMsgDOTATournamentResponse;
@class CMsgDOTATournamentResponse_Builder;
@class CMsgDOTATournament_Builder;
@class CMsgDOTATournament_Game;
@class CMsgDOTATournament_Game_Builder;
@class CMsgDOTATournament_Game_ReplayURL;
@class CMsgDOTATournament_Game_ReplayURL_Builder;
@class CMsgDOTATournament_Team;
@class CMsgDOTATournament_Team_Builder;
@class CMsgDOTATransferTeamAdmin;
@class CMsgDOTATransferTeamAdmin_Builder;
@class CMsgDOTAWelcome;
@class CMsgDOTAWelcome_Builder;
@class CMsgDismissLootGreevil;
@class CMsgDismissLootGreevil_Builder;
@class CMsgFindSourceTVGames;
@class CMsgFindSourceTVGames_Builder;
@class CMsgForceSOCacheResend;
@class CMsgForceSOCacheResend_Builder;
@class CMsgFriendPracticeLobbyListRequest;
@class CMsgFriendPracticeLobbyListRequest_Builder;
@class CMsgFriendPracticeLobbyListResponse;
@class CMsgFriendPracticeLobbyListResponse_Builder;
@class CMsgGCBanStatusRequest;
@class CMsgGCBanStatusRequest_Builder;
@class CMsgGCBanStatusResponse;
@class CMsgGCBanStatusResponse_Builder;
@class CMsgGCGetCommandList;
@class CMsgGCGetCommandListResponse;
@class CMsgGCGetCommandListResponse_Builder;
@class CMsgGCGetCommandList_Builder;
@class CMsgGCGetEmailTemplate;
@class CMsgGCGetEmailTemplateResponse;
@class CMsgGCGetEmailTemplateResponse_Builder;
@class CMsgGCGetEmailTemplate_Builder;
@class CMsgGCGetPersonaNames;
@class CMsgGCGetPersonaNames_Builder;
@class CMsgGCGetPersonaNames_Response;
@class CMsgGCGetPersonaNames_Response_Builder;
@class CMsgGCGetPersonaNames_Response_PersonaName;
@class CMsgGCGetPersonaNames_Response_PersonaName_Builder;
@class CMsgGCMatchDetailsRequest;
@class CMsgGCMatchDetailsRequest_Builder;
@class CMsgGCMatchDetailsResponse;
@class CMsgGCMatchDetailsResponse_Builder;
@class CMsgGCMsgMasterSetDirectory;
@class CMsgGCMsgMasterSetDirectory_Builder;
@class CMsgGCMsgMasterSetDirectory_Response;
@class CMsgGCMsgMasterSetDirectory_Response_Builder;
@class CMsgGCMsgMasterSetDirectory_SubGC;
@class CMsgGCMsgMasterSetDirectory_SubGC_Builder;
@class CMsgGCToRelayConnect;
@class CMsgGCToRelayConnectResponse;
@class CMsgGCToRelayConnectResponse_Builder;
@class CMsgGCToRelayConnect_Builder;
@class CMsgGameChatLog;
@class CMsgGameChatLog_Builder;
@class CMsgGameChatLog_CChatLine;
@class CMsgGameChatLog_CChatLine_Builder;
@class CMsgGameMatchSignOut;
@class CMsgGameMatchSignOut_Builder;
@class CMsgGameMatchSignOut_CTeam;
@class CMsgGameMatchSignOut_CTeam_Builder;
@class CMsgGameMatchSignOut_CTeam_CPlayer;
@class CMsgGameMatchSignOut_CTeam_CPlayer_Builder;
@class CMsgGameMatchSignoutResponse;
@class CMsgGameMatchSignoutResponse_Builder;
@class CMsgGameServerGetLoadGame;
@class CMsgGameServerGetLoadGameResult;
@class CMsgGameServerGetLoadGameResult_Builder;
@class CMsgGameServerGetLoadGame_Builder;
@class CMsgGameServerInfo;
@class CMsgGameServerInfo_Builder;
@class CMsgGameServerSaveGameResult;
@class CMsgGameServerSaveGameResult_Builder;
@class CMsgGameServerUploadSaveGame;
@class CMsgGameServerUploadSaveGame_Builder;
@class CMsgHttpRequest;
@class CMsgHttpRequest_Builder;
@class CMsgHttpRequest_QueryParam;
@class CMsgHttpRequest_QueryParam_Builder;
@class CMsgHttpRequest_RequestHeader;
@class CMsgHttpRequest_RequestHeader_Builder;
@class CMsgHttpResponse;
@class CMsgHttpResponse_Builder;
@class CMsgHttpResponse_ResponseHeader;
@class CMsgHttpResponse_ResponseHeader_Builder;
@class CMsgInitialQuestionnaireResponse;
@class CMsgInitialQuestionnaireResponse_Builder;
@class CMsgInterGCProfile;
@class CMsgInterGCProfile_Builder;
@class CMsgInterGCSurgeTest;
@class CMsgInterGCSurgeTest_Builder;
@class CMsgLeaverDetected;
@class CMsgLeaverDetectedResponse;
@class CMsgLeaverDetectedResponse_Builder;
@class CMsgLeaverDetected_Builder;
@class CMsgMatchVoteResponse;
@class CMsgMatchVoteResponse_Builder;
@class CMsgMatchmakingSearchCountRequest;
@class CMsgMatchmakingSearchCountRequest_Builder;
@class CMsgMatchmakingSearchCountResponse;
@class CMsgMatchmakingSearchCountResponse_Builder;
@class CMsgNotifyWatchdog;
@class CMsgNotifyWatchdog_Builder;
@class CMsgPackageLicense;
@class CMsgPackageLicense_Builder;
@class CMsgPracticeLobbyCreate;
@class CMsgPracticeLobbyCreate_Builder;
@class CMsgPracticeLobbyJoin;
@class CMsgPracticeLobbyJoinBroadcastChannel;
@class CMsgPracticeLobbyJoinBroadcastChannel_Builder;
@class CMsgPracticeLobbyJoinResponse;
@class CMsgPracticeLobbyJoinResponse_Builder;
@class CMsgPracticeLobbyJoin_Builder;
@class CMsgPracticeLobbyKick;
@class CMsgPracticeLobbyKick_Builder;
@class CMsgPracticeLobbyLaunch;
@class CMsgPracticeLobbyLaunch_Builder;
@class CMsgPracticeLobbyLeave;
@class CMsgPracticeLobbyLeave_Builder;
@class CMsgPracticeLobbyList;
@class CMsgPracticeLobbyListResponse;
@class CMsgPracticeLobbyListResponseEntry;
@class CMsgPracticeLobbyListResponseEntry_Builder;
@class CMsgPracticeLobbyListResponseEntry_CLobbyMember;
@class CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder;
@class CMsgPracticeLobbyListResponse_Builder;
@class CMsgPracticeLobbyList_Builder;
@class CMsgPracticeLobbySetDetails;
@class CMsgPracticeLobbySetDetails_Builder;
@class CMsgPracticeLobbySetTeamSlot;
@class CMsgPracticeLobbySetTeamSlot_Builder;
@class CMsgReadyUp;
@class CMsgReadyUpStatus;
@class CMsgReadyUpStatus_Builder;
@class CMsgReadyUp_Builder;
@class CMsgRemoveFromUnpickedHeroList;
@class CMsgRemoveFromUnpickedHeroList_Builder;
@class CMsgRequestInternationalTicket;
@class CMsgRequestInternationalTicket_Builder;
@class CMsgRequestLeagueInfo;
@class CMsgRequestLeagueInfo_Builder;
@class CMsgResponseLeagueInfo;
@class CMsgResponseLeagueInfo_Builder;
@class CMsgResponseTeamFanfare;
@class CMsgResponseTeamFanfare_Builder;
@class CMsgRetrieveMatchVote;
@class CMsgRetrieveMatchVote_Builder;
@class CMsgSendTrackedEvents;
@class CMsgSendTrackedEvents_Builder;
@class CMsgSetAvatar;
@class CMsgSetAvatar_Builder;
@class CMsgSetShowcaseHero;
@class CMsgSetShowcaseHero_Builder;
@class CMsgSourceTVGamesResponse;
@class CMsgSourceTVGamesResponse_Builder;
@class CMsgSpawnLootGreevil;
@class CMsgSpawnLootGreevil_Builder;
@class CMsgSpectateFriendGame;
@class CMsgSpectateFriendGameResponse;
@class CMsgSpectateFriendGameResponse_Builder;
@class CMsgSpectateFriendGame_Builder;
@class CMsgSpectatorConnect;
@class CMsgSpectatorConnect_Builder;
@class CMsgSpectatorDisconnect;
@class CMsgSpectatorDisconnect_Builder;
@class CMsgStartFindingMatch;
@class CMsgStartFindingMatch_Builder;
@class CMsgStopFindingMatch;
@class CMsgStopFindingMatch_Builder;
@class CMsgTeamFanfare;
@class CMsgTeamFanfare_Builder;
@class CMsgTournamentItemEvent;
@class CMsgTournamentItemEventResponse;
@class CMsgTournamentItemEventResponse_Builder;
@class CMsgTournamentItemEvent_Builder;
@class CMsgTrackedEvent;
@class CMsgTrackedEvent_Builder;
@class CMsgTutorialLobbyCreate;
@class CMsgTutorialLobbyCreate_Builder;
@class CMsgUnpickedHeroListRequest;
@class CMsgUnpickedHeroListRequest_Builder;
@class CMsgUnpickedHeroListResponse;
@class CMsgUnpickedHeroListResponse_Builder;
@class CMsgWatchGame;
@class CMsgWatchGameResponse;
@class CMsgWatchGameResponse_Builder;
@class CMsgWatchGame_Builder;
@class CMsgWebAPIKey;
@class CMsgWebAPIKey_Builder;
@class CMsgWebAPIRequest;
@class CMsgWebAPIRequest_Builder;
@class CSODOTAGameAccountClient;
@class CSODOTAGameAccountClientInternal;
@class CSODOTAGameAccountClientInternal_Builder;
@class CSODOTAGameAccountClient_Builder;
@class CSODOTAGameHeroFavorites;
@class CSODOTAGameHeroFavorites_Builder;
@class CSODOTAGameHeroStandings;
@class CSODOTAGameHeroStandings_Builder;
@class CSODOTALobby;
@class CSODOTALobbyInternal;
@class CSODOTALobbyInternal_Builder;
@class CSODOTALobbyMemcached;
@class CSODOTALobbyMemcached_Builder;
@class CSODOTALobby_Builder;
@class CSODOTAParty;
@class CSODOTAPartyInternal;
@class CSODOTAPartyInternal_Builder;
@class CSODOTAPartyInvite;
@class CSODOTAPartyInvite_Builder;
@class CSODOTAPartyInvite_PartyMember;
@class CSODOTAPartyInvite_PartyMember_Builder;
@class CSODOTAPartyMemcached;
@class CSODOTAPartyMemcached_Builder;
@class CSODOTAParty_Builder;
@class CSourceTVGame;
@class CSourceTVGame_Builder;
@class CSourceTVGame_Player;
@class CSourceTVGame_Player_Builder;
@class CXPGainEvent;
@class CXPGainEvent_Builder;
@class PBDescriptorProto;
@class PBDescriptorProto_Builder;
@class PBDescriptorProto_ExtensionRange;
@class PBDescriptorProto_ExtensionRange_Builder;
@class PBEnumDescriptorProto;
@class PBEnumDescriptorProto_Builder;
@class PBEnumOptions;
@class PBEnumOptions_Builder;
@class PBEnumValueDescriptorProto;
@class PBEnumValueDescriptorProto_Builder;
@class PBEnumValueOptions;
@class PBEnumValueOptions_Builder;
@class PBFieldDescriptorProto;
@class PBFieldDescriptorProto_Builder;
@class PBFieldOptions;
@class PBFieldOptions_Builder;
@class PBFileDescriptorProto;
@class PBFileDescriptorProto_Builder;
@class PBFileDescriptorSet;
@class PBFileDescriptorSet_Builder;
@class PBFileOptions;
@class PBFileOptions_Builder;
@class PBMessageOptions;
@class PBMessageOptions_Builder;
@class PBMethodDescriptorProto;
@class PBMethodDescriptorProto_Builder;
@class PBMethodOptions;
@class PBMethodOptions_Builder;
@class PBServiceDescriptorProto;
@class PBServiceDescriptorProto_Builder;
@class PBServiceOptions;
@class PBServiceOptions_Builder;
@class PBSourceCodeInfo;
@class PBSourceCodeInfo_Builder;
@class PBSourceCodeInfo_Location;
@class PBSourceCodeInfo_Location_Builder;
@class PBUninterpretedOption;
@class PBUninterpretedOption_Builder;
@class PBUninterpretedOption_NamePart;
@class PBUninterpretedOption_NamePart_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  EDOTAGCMsgk_EMsgGCDOTABase = 7000,
  EDOTAGCMsgk_EMsgGCGeneralResponse = 7001,
  EDOTAGCMsgk_EMsgGCGameMatchSignOut = 7004,
  EDOTAGCMsgk_EMsgGCGameMatchSignOutResponse = 7005,
  EDOTAGCMsgk_EMsgGCJoinChatChannel = 7009,
  EDOTAGCMsgk_EMsgGCJoinChatChannelResponse = 7010,
  EDOTAGCMsgk_EMsgGCLeaveChatChannel = 7011,
  EDOTAGCMsgk_EMsgGCOtherJoinedChannel = 7013,
  EDOTAGCMsgk_EMsgGCOtherLeftChannel = 7014,
  EDOTAGCMsgk_EMsgGCRequestMatchHistoryList = 7016,
  EDOTAGCMsgk_EMsgGCMatchHistoryList = 7017,
  EDOTAGCMsgk_EMsgGCGetNews = 7024,
  EDOTAGCMsgk_EMsgGCNewsResponse = 7025,
  EDOTAGCMsgk_EMsgGCStatus = 7026,
  EDOTAGCMsgk_EMsgGCGetRecentMatches = 7027,
  EDOTAGCMsgk_EMsgGCRecentMatchesResponse = 7028,
  EDOTAGCMsgk_EMsgGCFindSourceTVGames = 7031,
  EDOTAGCMsgk_EMsgGCSourceTVGamesResponse = 7032,
  EDOTAGCMsgk_EMsgGCStartFindingMatch = 7033,
  EDOTAGCMsgk_EMsgGCConnectedPlayers = 7034,
  EDOTAGCMsgk_EMsgGCAbandonCurrentGame = 7035,
  EDOTAGCMsgk_EMsgGCStopFindingMatch = 7036,
  EDOTAGCMsgk_EMsgForceSOCacheResend = 7037,
  EDOTAGCMsgk_EMsgGCPracticeLobbyCreate = 7038,
  EDOTAGCMsgk_EMsgGCPracticeLobbyLeave = 7040,
  EDOTAGCMsgk_EMsgGCPracticeLobbyLaunch = 7041,
  EDOTAGCMsgk_EMsgGCPracticeLobbyList = 7042,
  EDOTAGCMsgk_EMsgGCPracticeLobbyListResponse = 7043,
  EDOTAGCMsgk_EMsgGCPracticeLobbyJoin = 7044,
  EDOTAGCMsgk_EMsgGCSetAvatar = 7045,
  EDOTAGCMsgk_EMsgGCPracticeLobbySetDetails = 7046,
  EDOTAGCMsgk_EMsgGCPracticeLobbySetTeamSlot = 7047,
  EDOTAGCMsgk_EMsgGCTutorialLobbyCreate = 7048,
  EDOTAGCMsgk_EMsgGCInitialQuestionnaireResponse = 7049,
  EDOTAGCMsgk_EMsgGCGCTrackedEvent = 7050,
  EDOTAGCMsgk_EMsgGCTournamentRequest = 7051,
  EDOTAGCMsgk_EMsgGCTournamentResponse = 7052,
  EDOTAGCMsgk_EMsgGCBetaParticiaptionRequest = 7053,
  EDOTAGCMsgk_EMsgGCBetaParticiaptionResponse = 7054,
  EDOTAGCMsgk_EMsgGCPracticeLobbyResponse = 7055,
  EDOTAGCMsgk_EMsgGCBroadcastNotification = 7056,
  EDOTAGCMsgk_EMsgGCLiveScoreboardUpdate = 7057,
  EDOTAGCMsgk_EMsgGCRequestDefaultChatChannel = 7058,
  EDOTAGCMsgk_EMsgGCRequestDefaultChatChannelResponse = 7059,
  EDOTAGCMsgk_EMsgGCRequestChatChannelList = 7060,
  EDOTAGCMsgk_EMsgGCRequestChatChannelListResponse = 7061,
  EDOTAGCMsgk_EMsgGCRequestMatches = 7064,
  EDOTAGCMsgk_EMsgGCRequestMatchesResponse = 7065,
  EDOTAGCMsgk_EMsgGCMatchmakingSearchCountRequest = 7066,
  EDOTAGCMsgk_EMsgGCMatchmakingSearchCountResponse = 7067,
  EDOTAGCMsgk_EMsgGCRequestPlayerResources = 7068,
  EDOTAGCMsgk_EMsgGCRequestPlayerResourcesResponse = 7069,
  EDOTAGCMsgk_EMsgGCReadyUp = 7070,
  EDOTAGCMsgk_EMsgGCKickedFromMatchmakingQueue = 7071,
  EDOTAGCMsgk_EMsgGCLeaverDetected = 7072,
  EDOTAGCMsgk_EMsgGCSpectateFriendGame = 7073,
  EDOTAGCMsgk_EMsgGCSpectateFriendGameResponse = 7074,
  EDOTAGCMsgk_EMsgGCPlayerReports = 7075,
  EDOTAGCMsgk_EMsgGCReportsRemainingRequest = 7076,
  EDOTAGCMsgk_EMsgGCReportsRemainingResponse = 7077,
  EDOTAGCMsgk_EMsgGCSubmitPlayerReport = 7078,
  EDOTAGCMsgk_EMsgGCSubmitPlayerReportResponse = 7079,
  EDOTAGCMsgk_EMsgGCGameChatLog = 7080,
  EDOTAGCMsgk_EMsgGCPracticeLobbyKick = 7081,
  EDOTAGCMsgk_EMsgGCReportCountsRequest = 7082,
  EDOTAGCMsgk_EMsgGCReportCountsResponse = 7083,
  EDOTAGCMsgk_EMsgGCRequestSaveGames = 7084,
  EDOTAGCMsgk_EMsgGCRequestSaveGamesServer = 7085,
  EDOTAGCMsgk_EMsgGCRequestSaveGamesResponse = 7086,
  EDOTAGCMsgk_EMsgGCLeaverDetectedResponse = 7087,
  EDOTAGCMsgk_EMsgGCPlayerFailedToConnect = 7088,
  EDOTAGCMsgk_EMsgGCGCToRelayConnect = 7089,
  EDOTAGCMsgk_EMsgGCGCToRelayConnectresponse = 7090,
  EDOTAGCMsgk_EMsgGCWatchGame = 7091,
  EDOTAGCMsgk_EMsgGCWatchGameResponse = 7092,
  EDOTAGCMsgk_EMsgGCBanStatusRequest = 7093,
  EDOTAGCMsgk_EMsgGCBanStatusResponse = 7094,
  EDOTAGCMsgk_EMsgGCMatchDetailsRequest = 7095,
  EDOTAGCMsgk_EMsgGCMatchDetailsResponse = 7096,
  EDOTAGCMsgk_EMsgGCCancelWatchGame = 7097,
  EDOTAGCMsgk_EMsgGCProfileRequest = 7098,
  EDOTAGCMsgk_EMsgGCProfileResponse = 7099,
  EDOTAGCMsgk_EMsgGCPopup = 7102,
  EDOTAGCMsgk_EMsgGCDOTANotifySuccessfulReport = 7103,
  EDOTAGCMsgk_EMsgGCDOTAClearNotifySuccessfulReport = 7104,
  EDOTAGCMsgk_EMsgGCUnpickedHeroListRequest = 7105,
  EDOTAGCMsgk_EMsgGCUnpickedHeroListResponse = 7106,
  EDOTAGCMsgk_EMsgGCRemoveFromUnpickedHeroList = 7107,
  EDOTAGCMsgk_EMsgGCGenericResult = 7108,
  EDOTAGCMsgk_EMsgGCMatchGroupWaitTimesRequest = 7109,
  EDOTAGCMsgk_EMsgGCMatchGroupWaitTimesResponse = 7110,
  EDOTAGCMsgk_EMsgGCFriendPracticeLobbyListRequest = 7111,
  EDOTAGCMsgk_EMsgGCFriendPracticeLobbyListResponse = 7112,
  EDOTAGCMsgk_EMsgGCPracticeLobbyJoinResponse = 7113,
  EDOTAGCMsgk_EMsgClientEconNotification_Job = 7114,
  EDOTAGCMsgk_EMsgGCCreateTeam = 7115,
  EDOTAGCMsgk_EMsgGCCreateTeamResponse = 7116,
  EDOTAGCMsgk_EMsgGCDisbandTeam = 7117,
  EDOTAGCMsgk_EMsgGCDisbandTeamResponse = 7118,
  EDOTAGCMsgk_EMsgGCRequestTeamData = 7119,
  EDOTAGCMsgk_EMsgGCRequestTeamDataResponse = 7120,
  EDOTAGCMsgk_EMsgGCTeamData = 7121,
  EDOTAGCMsgk_EMsgGCInitiateTeamInvite = 7122,
  EDOTAGCMsgk_EMsgGCInitiateTeamInviteResponse = 7123,
  EDOTAGCMsgk_EMsgGCTeamInvite = 7124,
  EDOTAGCMsgk_EMsgGCTeamInviteReply = 7125,
  EDOTAGCMsgk_EMsgGCTeamInviteReplyResponse = 7126,
  EDOTAGCMsgk_EMsgGCTeamInviteComplete = 7127,
  EDOTAGCMsgk_EMsgGCKickTeamMember = 7128,
  EDOTAGCMsgk_EMsgGCKickTeamMemberResponse = 7129,
  EDOTAGCMsgk_EMsgGCLeaveTeam = 7130,
  EDOTAGCMsgk_EMsgGCLeaveTeamResponse = 7131,
  EDOTAGCMsgk_EMsgGCSuggestTeamMatchmaking = 7132,
  EDOTAGCMsgk_EMsgGCPlayerHeroesFavoritesAdd = 7133,
  EDOTAGCMsgk_EMsgGCPlayerHeroesFavoritesRemove = 7134,
  EDOTAGCMsgk_EMsgGCPlayerHeroesRecentRequest = 7135,
  EDOTAGCMsgk_EMsgGCPlayerHeroesRecentResponse = 7136,
  EDOTAGCMsgk_EMsgGCEditTeamLogo = 7139,
  EDOTAGCMsgk_EMsgGCEditTeamLogoResponse = 7140,
  EDOTAGCMsgk_EMsgGCSetShowcaseHero = 7141,
  EDOTAGCMsgk_EMsgGCApplyTeamToPracticeLobby = 7142,
  EDOTAGCMsgk_EMsgGCRequestInternatinalTicketEmail = 7143,
  EDOTAGCMsgk_EMsgGCTransferTeamAdmin = 7144,
  EDOTAGCMsgk_EMsgGCClearTournamentGame = 7145,
  EDOTAGCMsgk_EMsgGCChatMessage = 7146,
  EDOTAGCMsgk_EMsgRequestLeagueInfo = 7147,
  EDOTAGCMsgk_EMsgResponseLeagueInfo = 7148,
  EDOTAGCMsgk_EMsgGCPracticeLobbyJoinBroadcastChannel = 7149,
  EDOTAGCMsgk_EMsgGC_TournamentItemEvent = 7150,
  EDOTAGCMsgk_EMsgGC_TournamentItemEventResponse = 7151,
  EDOTAGCMsgk_EMsgCastMatchVote = 7152,
  EDOTAGCMsgk_EMsgCastMatchVoteResponse = 7153,
  EDOTAGCMsgk_EMsgRetrieveMatchVote = 7154,
  EDOTAGCMsgk_EMsgRetrieveMatchVoteResponse = 7155,
  EDOTAGCMsgk_EMsgTeamFanfare = 7156,
  EDOTAGCMsgk_EMsgResponseTeamFanfare = 7157,
  EDOTAGCMsgk_EMsgGC_GameServerUploadSaveGame = 7158,
  EDOTAGCMsgk_EMsgGC_GameServerSaveGameResult = 7159,
  EDOTAGCMsgk_EMsgGC_GameServerGetLoadGame = 7160,
  EDOTAGCMsgk_EMsgGC_GameServerGetLoadGameResult = 7161,
  EDOTAGCMsgk_EMsgCheckSpectatorOnly = 7162,
  EDOTAGCMsgk_EMsgCheckSpectatorOnlyResponse = 7163,
  EDOTAGCMsgk_EMsgGCTeamProfileRequest = 7164,
  EDOTAGCMsgk_EMsgGCTeamProfileResponse = 7165,
  EDOTAGCMsgk_EMsgGCEditTeamDetails = 7166,
  EDOTAGCMsgk_EMsgGCEditTeamDetailsResponse = 7167,
  EDOTAGCMsgk_EMsgGCProTeamListRequest = 7168,
  EDOTAGCMsgk_EMsgGCProTeamListResponse = 7169,
  EDOTAGCMsgk_EMsgGCReadyUpStatus = 7170,
  EDOTAGCMsgk_EMsgGCHallOfFame = 7171,
  EDOTAGCMsgk_EMsgGCHallOfFameRequest = 7172,
  EDOTAGCMsgk_EMsgGCHallOfFameResponse = 7173,
  EDOTAGCMsgk_EMsgGCGenerateDiretidePrizeList = 7174,
  EDOTAGCMsgk_EMsgGCDiretidePrizeResponse = 7175,
  EDOTAGCMsgk_EMsgGCRewardDiretidePrizes = 7176,
  EDOTAGCMsgk_EMsgGCDiretidePrizesRewardedResponse = 7177,
  EDOTAGCMsgk_EMsgGCHalloweenHighScoreRequest = 7178,
  EDOTAGCMsgk_EMsgGCHalloweenHighScoreResponse = 7179,
  EDOTAGCMsgk_EMsgGCGenerateDiretidePrizeListResponse = 7180,
  EDOTAGCMsgk_EMsgGCNotifyResetKeybindings = 7181,
  EDOTAGCMsgk_EMsgGCStorePromoPagesRequest = 7182,
  EDOTAGCMsgk_EMsgGCStorePromoPagesResponse = 7183,
  EDOTAGCMsgk_EMsgGCSpawnLootGreevil = 7184,
  EDOTAGCMsgk_EMsgGCDismissLootGreevil = 7185,
  EDOTAGCMsgk_EMsgGCToGCMatchCompleted = 7186,
  EDOTAGCMsgk_EMsgGCDev_GrantWarKill = 8001,
} EDOTAGCMsg;

BOOL EDOTAGCMsgIsValidValue(EDOTAGCMsg value);

typedef enum {
  DOTA_GameModeDOTA_GAMEMODE_NONE = 0,
  DOTA_GameModeDOTA_GAMEMODE_AP = 1,
  DOTA_GameModeDOTA_GAMEMODE_CM = 2,
  DOTA_GameModeDOTA_GAMEMODE_RD = 3,
  DOTA_GameModeDOTA_GAMEMODE_SD = 4,
  DOTA_GameModeDOTA_GAMEMODE_AR = 5,
  DOTA_GameModeDOTA_GAMEMODE_INTRO = 6,
  DOTA_GameModeDOTA_GAMEMODE_HW = 7,
  DOTA_GameModeDOTA_GAMEMODE_REVERSE_CM = 8,
  DOTA_GameModeDOTA_GAMEMODE_XMAS = 9,
  DOTA_GameModeDOTA_GAMEMODE_TUTORIAL = 10,
} DOTA_GameMode;

BOOL DOTA_GameModeIsValidValue(DOTA_GameMode value);

typedef enum {
  DOTA_GameStateDOTA_GAMERULES_STATE_INIT = 0,
  DOTA_GameStateDOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD = 1,
  DOTA_GameStateDOTA_GAMERULES_STATE_HERO_SELECTION = 2,
  DOTA_GameStateDOTA_GAMERULES_STATE_STRATEGY_TIME = 3,
  DOTA_GameStateDOTA_GAMERULES_STATE_PRE_GAME = 4,
  DOTA_GameStateDOTA_GAMERULES_STATE_GAME_IN_PROGRESS = 5,
  DOTA_GameStateDOTA_GAMERULES_STATE_POST_GAME = 6,
  DOTA_GameStateDOTA_GAMERULES_STATE_DISCONNECT = 7,
  DOTA_GameStateDOTA_GAMERULES_STATE_LAST = 8,
} DOTA_GameState;

BOOL DOTA_GameStateIsValidValue(DOTA_GameState value);

typedef enum {
  DOTA_GC_TEAMDOTA_GC_TEAM_GOOD_GUYS = 0,
  DOTA_GC_TEAMDOTA_GC_TEAM_BAD_GUYS = 1,
  DOTA_GC_TEAMDOTA_GC_TEAM_BROADCASTER = 2,
  DOTA_GC_TEAMDOTA_GC_TEAM_SPECTATOR = 3,
  DOTA_GC_TEAMDOTA_GC_TEAM_PLAYER_POOL = 4,
  DOTA_GC_TEAMDOTA_GC_TEAM_NOTEAM = 5,
} DOTA_GC_TEAM;

BOOL DOTA_GC_TEAMIsValidValue(DOTA_GC_TEAM value);

typedef enum {
  DOTA_CM_PICKDOTA_CM_RANDOM = 0,
  DOTA_CM_PICKDOTA_CM_GOOD_GUYS = 1,
  DOTA_CM_PICKDOTA_CM_BAD_GUYS = 2,
} DOTA_CM_PICK;

BOOL DOTA_CM_PICKIsValidValue(DOTA_CM_PICK value);

typedef enum {
  DOTALeaverStatus_tDOTA_LEAVER_NONE = 0,
  DOTALeaverStatus_tDOTA_LEAVER_DISCONNECTED = 1,
  DOTALeaverStatus_tDOTA_LEAVER_DISCONNECTED_TOO_LONG = 2,
  DOTALeaverStatus_tDOTA_LEAVER_ABANDONED = 3,
  DOTALeaverStatus_tDOTA_LEAVER_AFK = 4,
  DOTALeaverStatus_tDOTA_LEAVER_NEVER_CONNECTED = 5,
  DOTALeaverStatus_tDOTA_LEAVER_NEVER_CONNECTED_TOO_LONG = 6,
} DOTALeaverStatus_t;

BOOL DOTALeaverStatus_tIsValidValue(DOTALeaverStatus_t value);

typedef enum {
  DOTALobbyReadyStateDOTALobbyReadyState_UNDECLARED = 0,
  DOTALobbyReadyStateDOTALobbyReadyState_ACCEPTED = 1,
  DOTALobbyReadyStateDOTALobbyReadyState_DECLINED = 2,
} DOTALobbyReadyState;

BOOL DOTALobbyReadyStateIsValidValue(DOTALobbyReadyState value);

typedef enum {
  DOTAGameVersionGAME_VERSION_CURRENT = 0,
  DOTAGameVersionGAME_VERSION_STABLE = 1,
} DOTAGameVersion;

BOOL DOTAGameVersionIsValidValue(DOTAGameVersion value);

typedef enum {
  DOTAJoinLobbyResultDOTA_JOIN_RESULT_SUCCESS = 0,
  DOTAJoinLobbyResultDOTA_JOIN_RESULT_ALREADY_IN_GAME = 1,
  DOTAJoinLobbyResultDOTA_JOIN_RESULT_INVALID_LOBBY = 2,
  DOTAJoinLobbyResultDOTA_JOIN_RESULT_INCORRECT_PASSWORD = 3,
  DOTAJoinLobbyResultDOTA_JOIN_RESULT_ACCESS_DENIED = 4,
  DOTAJoinLobbyResultDOTA_JOIN_RESULT_GENERIC_ERROR = 5,
  DOTAJoinLobbyResultDOTA_JOIN_RESULT_INCORRECT_VERSION = 6,
  DOTAJoinLobbyResultDOTA_JOIN_RESULT_IN_TEAM_PARTY = 7,
} DOTAJoinLobbyResult;

BOOL DOTAJoinLobbyResultIsValidValue(DOTAJoinLobbyResult value);

typedef enum {
  DOTAMatchVoteDOTAMatchVote_INVALID = 0,
  DOTAMatchVoteDOTAMatchVote_POSITIVE = 1,
  DOTAMatchVoteDOTAMatchVote_NEGATIVE = 2,
} DOTAMatchVote;

BOOL DOTAMatchVoteIsValidValue(DOTAMatchVote value);

typedef enum {
  DOTAChatChannelType_tDOTAChannelType_Regional = 0,
  DOTAChatChannelType_tDOTAChannelType_Custom = 1,
  DOTAChatChannelType_tDOTAChannelType_Party = 2,
  DOTAChatChannelType_tDOTAChannelType_Lobby = 3,
  DOTAChatChannelType_tDOTAChannelType_Team = 4,
} DOTAChatChannelType_t;

BOOL DOTAChatChannelType_tIsValidValue(DOTAChatChannelType_t value);

typedef enum {
  DOTA_TournamentEventsTE_FIRST_BLOOD = 0,
  DOTA_TournamentEventsTE_GAME_END = 1,
  DOTA_TournamentEventsTE_MULTI_KILL = 2,
  DOTA_TournamentEventsTE_HERO_DENY = 3,
  DOTA_TournamentEventsTE_AEGIS_DENY = 4,
  DOTA_TournamentEventsTE_AEGIS_STOLEN = 5,
} DOTA_TournamentEvents;

BOOL DOTA_TournamentEventsIsValidValue(DOTA_TournamentEvents value);

typedef enum {
  CSODOTAParty_StateUI = 0,
  CSODOTAParty_StateFINDING_MATCH = 1,
  CSODOTAParty_StateIN_MATCH = 2,
} CSODOTAParty_State;

BOOL CSODOTAParty_StateIsValidValue(CSODOTAParty_State value);

typedef enum {
  CSODOTALobby_StateUI = 0,
  CSODOTALobby_StateREADYUP = 4,
  CSODOTALobby_StateSERVERSETUP = 1,
  CSODOTALobby_StateRUN = 2,
  CSODOTALobby_StatePOSTGAME = 3,
  CSODOTALobby_StateNOTREADY = 5,
  CSODOTALobby_StateSERVERASSIGN = 6,
} CSODOTALobby_State;

BOOL CSODOTALobby_StateIsValidValue(CSODOTALobby_State value);

typedef enum {
  CSODOTALobby_LobbyTypeINVALID = -1,
  CSODOTALobby_LobbyTypeMATCH = 0,
  CSODOTALobby_LobbyTypePRACTICE = 1,
  CSODOTALobby_LobbyTypeTOURNAMENT = 2,
  CSODOTALobby_LobbyTypeTUTORIAL = 3,
  CSODOTALobby_LobbyTypeCOOP_BOT_MATCH = 4,
  CSODOTALobby_LobbyTypeTEAM_MATCH = 5,
} CSODOTALobby_LobbyType;

BOOL CSODOTALobby_LobbyTypeIsValidValue(CSODOTALobby_LobbyType value);

typedef enum {
  CMsgGameServerInfo_ServerTypeUNSPECIFIED = 0,
  CMsgGameServerInfo_ServerTypeGAME = 1,
  CMsgGameServerInfo_ServerTypePROXY = 2,
} CMsgGameServerInfo_ServerType;

BOOL CMsgGameServerInfo_ServerTypeIsValidValue(CMsgGameServerInfo_ServerType value);

typedef enum {
  CMsgDOTARequestMatches_SkillLevelAny = 0,
  CMsgDOTARequestMatches_SkillLevelNormal = 1,
  CMsgDOTARequestMatches_SkillLevelHigh = 2,
  CMsgDOTARequestMatches_SkillLevelVeryHigh = 3,
} CMsgDOTARequestMatches_SkillLevel;

BOOL CMsgDOTARequestMatches_SkillLevelIsValidValue(CMsgDOTARequestMatches_SkillLevel value);

typedef enum {
  CMsgDOTAPopup_PopupIDKICKED_FROM_LOBBY = 0,
  CMsgDOTAPopup_PopupIDKICKED_FROM_PARTY = 1,
  CMsgDOTAPopup_PopupIDKICKED_FROM_TEAM = 2,
  CMsgDOTAPopup_PopupIDTEAM_WAS_DISBANDED = 3,
  CMsgDOTAPopup_PopupIDTEAM_MATCHMAKE_ALREADY_MATCH = 4,
  CMsgDOTAPopup_PopupIDTEAM_MATCHMAKE_ALREADY_FINDING = 5,
  CMsgDOTAPopup_PopupIDTEAM_MATCHMAKE_FULL = 6,
  CMsgDOTAPopup_PopupIDTEAM_MATCHMAKE_FAIL_ADD = 7,
  CMsgDOTAPopup_PopupIDTEAM_MATCHMAKE_FAIL_ADD_CURRENT = 8,
  CMsgDOTAPopup_PopupIDTEAM_MATCHMAKE_FAILED_TEAM_MEMBER = 9,
  CMsgDOTAPopup_PopupIDTEAM_MATCHMAKE_ALREADY_GAME = 10,
  CMsgDOTAPopup_PopupIDTEAM_MATCHMAKE_FAIL_GET_PARTY = 11,
  CMsgDOTAPopup_PopupIDMATCHMAKING_DISABLED = 12,
  CMsgDOTAPopup_PopupIDINVITE_DENIED = 13,
  CMsgDOTAPopup_PopupIDPARTY_FULL = 14,
} CMsgDOTAPopup_PopupID;

BOOL CMsgDOTAPopup_PopupIDIsValidValue(CMsgDOTAPopup_PopupID value);

typedef enum {
  CMsgDOTACreateTeamResponse_ResultINVALID = -1,
  CMsgDOTACreateTeamResponse_ResultSUCCESS = 0,
  CMsgDOTACreateTeamResponse_ResultNAME_EMPTY = 1,
  CMsgDOTACreateTeamResponse_ResultNAME_BAD_CHARACTERS = 2,
  CMsgDOTACreateTeamResponse_ResultNAME_TAKEN = 3,
  CMsgDOTACreateTeamResponse_ResultNAME_TOO_LONG = 4,
  CMsgDOTACreateTeamResponse_ResultTAG_EMPTY = 5,
  CMsgDOTACreateTeamResponse_ResultTAG_BAD_CHARACTERS = 6,
  CMsgDOTACreateTeamResponse_ResultTAG_TAKEN = 7,
  CMsgDOTACreateTeamResponse_ResultTAG_TOO_LONG = 8,
  CMsgDOTACreateTeamResponse_ResultCREATOR_BUSY = 9,
  CMsgDOTACreateTeamResponse_ResultUNSPECIFIED_ERROR = 10,
  CMsgDOTACreateTeamResponse_ResultCREATOR_TEAM_LIMIT_REACHED = 11,
  CMsgDOTACreateTeamResponse_ResultNO_LOGO = 12,
  CMsgDOTACreateTeamResponse_ResultCREATOR_TEAM_CREATION_COOLDOWN = 13,
} CMsgDOTACreateTeamResponse_Result;

BOOL CMsgDOTACreateTeamResponse_ResultIsValidValue(CMsgDOTACreateTeamResponse_Result value);

typedef enum {
  CMsgDOTAEditTeamLogoResponse_ResultINVALID = -1,
  CMsgDOTAEditTeamLogoResponse_ResultSUCCESS = 0,
  CMsgDOTAEditTeamLogoResponse_ResultCREATOR_BUSY = 9,
  CMsgDOTAEditTeamLogoResponse_ResultUNSPECIFIED_ERROR = 10,
  CMsgDOTAEditTeamLogoResponse_ResultNO_LOGO = 12,
} CMsgDOTAEditTeamLogoResponse_Result;

BOOL CMsgDOTAEditTeamLogoResponse_ResultIsValidValue(CMsgDOTAEditTeamLogoResponse_Result value);

typedef enum {
  CMsgDOTAEditTeamDetailsResponse_ResultINVALID = -1,
  CMsgDOTAEditTeamDetailsResponse_ResultSUCCESS = 0,
  CMsgDOTAEditTeamDetailsResponse_ResultCREATOR_BUSY = 9,
  CMsgDOTAEditTeamDetailsResponse_ResultUNSPECIFIED_ERROR = 10,
} CMsgDOTAEditTeamDetailsResponse_Result;

BOOL CMsgDOTAEditTeamDetailsResponse_ResultIsValidValue(CMsgDOTAEditTeamDetailsResponse_Result value);

typedef enum {
  CMsgDOTADisbandTeamResponse_ResultSUCCESS = 0,
  CMsgDOTADisbandTeamResponse_ResultFAILURE = 1,
} CMsgDOTADisbandTeamResponse_Result;

BOOL CMsgDOTADisbandTeamResponse_ResultIsValidValue(CMsgDOTADisbandTeamResponse_Result value);

typedef enum {
  CMsgDOTARequestTeamDataResponse_ResultSUCCESS = 0,
  CMsgDOTARequestTeamDataResponse_ResultFAILURE = 1,
} CMsgDOTARequestTeamDataResponse_Result;

BOOL CMsgDOTARequestTeamDataResponse_ResultIsValidValue(CMsgDOTARequestTeamDataResponse_Result value);

typedef enum {
  CMsgDOTAInitiateTeamInviteResponse_ResultSUCCESS = 0,
  CMsgDOTAInitiateTeamInviteResponse_ResultMEMBER_LIMIT = 1,
  CMsgDOTAInitiateTeamInviteResponse_ResultINVITEE_NOT_AVAILABLE = 2,
  CMsgDOTAInitiateTeamInviteResponse_ResultINVITEE_BUSY = 3,
  CMsgDOTAInitiateTeamInviteResponse_ResultINVITEE_ALREADY_ON_A_TEAM = 4,
  CMsgDOTAInitiateTeamInviteResponse_ResultUNSPECIFIED_ERROR = 5,
} CMsgDOTAInitiateTeamInviteResponse_Result;

BOOL CMsgDOTAInitiateTeamInviteResponse_ResultIsValidValue(CMsgDOTAInitiateTeamInviteResponse_Result value);

typedef enum {
  CMsgDOTATeamInviteReply_ReplyJOIN = 0,
  CMsgDOTATeamInviteReply_ReplyREJECT = 1,
  CMsgDOTATeamInviteReply_ReplyTIMEOUT = 2,
} CMsgDOTATeamInviteReply_Reply;

BOOL CMsgDOTATeamInviteReply_ReplyIsValidValue(CMsgDOTATeamInviteReply_Reply value);

typedef enum {
  CMsgDOTATeamInviteReplyResponse_ResultSUCCESS = 0,
  CMsgDOTATeamInviteReplyResponse_ResultFAILURE = 1,
} CMsgDOTATeamInviteReplyResponse_Result;

BOOL CMsgDOTATeamInviteReplyResponse_ResultIsValidValue(CMsgDOTATeamInviteReplyResponse_Result value);

typedef enum {
  CMsgDOTATeamInviteComplete_ResultJOINED = 0,
  CMsgDOTATeamInviteComplete_ResultREJECTION = 1,
  CMsgDOTATeamInviteComplete_ResultTIMEOUT = 2,
  CMsgDOTATeamInviteComplete_ResultUNSPECIFIED_ERROR = 3,
} CMsgDOTATeamInviteComplete_Result;

BOOL CMsgDOTATeamInviteComplete_ResultIsValidValue(CMsgDOTATeamInviteComplete_Result value);

typedef enum {
  CMsgDOTAKickTeamMemberResponse_ResultSUCCESS = 0,
  CMsgDOTAKickTeamMemberResponse_ResultFAILURE = 1,
} CMsgDOTAKickTeamMemberResponse_Result;

BOOL CMsgDOTAKickTeamMemberResponse_ResultIsValidValue(CMsgDOTAKickTeamMemberResponse_Result value);

typedef enum {
  CMsgDOTALeaveTeamResponse_ResultSUCCESS = 0,
  CMsgDOTALeaveTeamResponse_ResultFAILURE = 1,
} CMsgDOTALeaveTeamResponse_Result;

BOOL CMsgDOTALeaveTeamResponse_ResultIsValidValue(CMsgDOTALeaveTeamResponse_Result value);

typedef enum {
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateStatek_EDOTAUltimateStateNotLearned = 0,
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateStatek_EDOTAUltimateStateCooldown = 1,
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateStatek_EDOTAUltimateStateNeedsMana = 2,
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateStatek_EDOTAUltimateStateReady = 3,
} CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState;

BOOL CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateStateIsValidValue(CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState value);

typedef enum {
  CMsgDOTASetChatChannelVerbosity_DOTAChatChannelSuppressNotificationsFlags_tDOTAChannel_AllVerbose = 0,
  CMsgDOTASetChatChannelVerbosity_DOTAChatChannelSuppressNotificationsFlags_tDOTAChannelIgnore_OthersJoined = 1,
} CMsgDOTASetChatChannelVerbosity_DOTAChatChannelSuppressNotificationsFlags_t;

BOOL CMsgDOTASetChatChannelVerbosity_DOTAChatChannelSuppressNotificationsFlags_tIsValidValue(CMsgDOTASetChatChannelVerbosity_DOTAChatChannelSuppressNotificationsFlags_t value);

typedef enum {
  CMsgWatchGameResponse_WatchGameResultPENDING = 0,
  CMsgWatchGameResponse_WatchGameResultREADY = 1,
  CMsgWatchGameResponse_WatchGameResultGAMESERVERNOTFOUND = 2,
  CMsgWatchGameResponse_WatchGameResultUNAVAILABLE = 3,
  CMsgWatchGameResponse_WatchGameResultCANCELLED = 4,
  CMsgWatchGameResponse_WatchGameResultINCOMPATIBLEVERSION = 5,
  CMsgWatchGameResponse_WatchGameResultMISSINGLEAGUESUBSCRIPTION = 6,
  CMsgWatchGameResponse_WatchGameResultLOBBYNOTFOUND = 7,
} CMsgWatchGameResponse_WatchGameResult;

BOOL CMsgWatchGameResponse_WatchGameResultIsValidValue(CMsgWatchGameResponse_WatchGameResult value);

typedef enum {
  CMsgGameServerSaveGameResult_ResultSaveSuccessful = 0,
  CMsgGameServerSaveGameResult_ResultSessionNotFound = 1,
  CMsgGameServerSaveGameResult_ResultDatabaseError = 2,
  CMsgGameServerSaveGameResult_ResultTooBig = 3,
} CMsgGameServerSaveGameResult_Result;

BOOL CMsgGameServerSaveGameResult_ResultIsValidValue(CMsgGameServerSaveGameResult_Result value);


@interface DotaGcmessagesRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface CSODOTAGameAccountClient : PBGeneratedMessage {
@private
  BOOL hasTeamCreationDisabledUntilDate_:1;
  BOOL hasMatchDisabledCount_:1;
  BOOL hasMatchDisabledUntilDate_:1;
  BOOL hasShowcaseHeroId_:1;
  BOOL hasAccountDisabledCount_:1;
  BOOL hasAccountDisabledUntilDate_:1;
  BOOL hasNotifySuccessfulReport_:1;
  BOOL hasSuccessfulReportCount_:1;
  BOOL hasForgiving_:1;
  BOOL hasFriendly_:1;
  BOOL hasLeadership_:1;
  BOOL hasTeaching_:1;
  BOOL hasCompletedGameStreak_:1;
  BOOL hasLeaverPenaltyCount_:1;
  BOOL hasLastAbandonedGameDate_:1;
  BOOL hasPreventVoiceUntilDate_:1;
  BOOL hasPreventTextChatUntilDate_:1;
  BOOL hasPreventMatchUntilDate_:1;
  BOOL hasLeaverCount_:1;
  BOOL hasInitialSkill_:1;
  BOOL hasLevel_:1;
  BOOL hasXp_:1;
  BOOL hasAvatar_:1;
  BOOL hasLosses_:1;
  BOOL hasWins_:1;
  BOOL hasAccountId_:1;
  uint32_t teamCreationDisabledUntilDate;
  uint32_t matchDisabledCount;
  uint32_t matchDisabledUntilDate;
  uint32_t showcaseHeroId;
  uint32_t accountDisabledCount;
  uint32_t accountDisabledUntilDate;
  uint32_t notifySuccessfulReport;
  uint32_t successfulReportCount;
  uint32_t forgiving;
  uint32_t friendly;
  uint32_t leadership;
  uint32_t teaching;
  uint32_t completedGameStreak;
  uint32_t leaverPenaltyCount;
  uint32_t lastAbandonedGameDate;
  uint32_t preventVoiceUntilDate;
  uint32_t preventTextChatUntilDate;
  uint32_t preventMatchUntilDate;
  uint32_t leaverCount;
  uint32_t initialSkill;
  uint32_t level;
  uint32_t xp;
  uint32_t avatar;
  uint32_t losses;
  uint32_t wins;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
- (BOOL) hasWins;
- (BOOL) hasLosses;
- (BOOL) hasAvatar;
- (BOOL) hasXp;
- (BOOL) hasLevel;
- (BOOL) hasInitialSkill;
- (BOOL) hasLeaverCount;
- (BOOL) hasPreventMatchUntilDate;
- (BOOL) hasPreventTextChatUntilDate;
- (BOOL) hasPreventVoiceUntilDate;
- (BOOL) hasLastAbandonedGameDate;
- (BOOL) hasLeaverPenaltyCount;
- (BOOL) hasCompletedGameStreak;
- (BOOL) hasTeaching;
- (BOOL) hasLeadership;
- (BOOL) hasFriendly;
- (BOOL) hasForgiving;
- (BOOL) hasSuccessfulReportCount;
- (BOOL) hasNotifySuccessfulReport;
- (BOOL) hasAccountDisabledUntilDate;
- (BOOL) hasAccountDisabledCount;
- (BOOL) hasShowcaseHeroId;
- (BOOL) hasMatchDisabledUntilDate;
- (BOOL) hasMatchDisabledCount;
- (BOOL) hasTeamCreationDisabledUntilDate;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t wins;
@property (readonly) uint32_t losses;
@property (readonly) uint32_t avatar;
@property (readonly) uint32_t xp;
@property (readonly) uint32_t level;
@property (readonly) uint32_t initialSkill;
@property (readonly) uint32_t leaverCount;
@property (readonly) uint32_t preventMatchUntilDate;
@property (readonly) uint32_t preventTextChatUntilDate;
@property (readonly) uint32_t preventVoiceUntilDate;
@property (readonly) uint32_t lastAbandonedGameDate;
@property (readonly) uint32_t leaverPenaltyCount;
@property (readonly) uint32_t completedGameStreak;
@property (readonly) uint32_t teaching;
@property (readonly) uint32_t leadership;
@property (readonly) uint32_t friendly;
@property (readonly) uint32_t forgiving;
@property (readonly) uint32_t successfulReportCount;
@property (readonly) uint32_t notifySuccessfulReport;
@property (readonly) uint32_t accountDisabledUntilDate;
@property (readonly) uint32_t accountDisabledCount;
@property (readonly) uint32_t showcaseHeroId;
@property (readonly) uint32_t matchDisabledUntilDate;
@property (readonly) uint32_t matchDisabledCount;
@property (readonly) uint32_t teamCreationDisabledUntilDate;

+ (CSODOTAGameAccountClient*) defaultInstance;
- (CSODOTAGameAccountClient*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTAGameAccountClient_Builder*) builder;
+ (CSODOTAGameAccountClient_Builder*) builder;
+ (CSODOTAGameAccountClient_Builder*) builderWithPrototype:(CSODOTAGameAccountClient*) prototype;
- (CSODOTAGameAccountClient_Builder*) toBuilder;

+ (CSODOTAGameAccountClient*) parseFromData:(NSData*) data;
+ (CSODOTAGameAccountClient*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAGameAccountClient*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTAGameAccountClient*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAGameAccountClient*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTAGameAccountClient*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTAGameAccountClient_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTAGameAccountClient* _builderResult;
}

- (CSODOTAGameAccountClient*) defaultInstance;

- (CSODOTAGameAccountClient_Builder*) clear;
- (CSODOTAGameAccountClient_Builder*) clone;

- (CSODOTAGameAccountClient*) build;
- (CSODOTAGameAccountClient*) buildPartial;

- (CSODOTAGameAccountClient_Builder*) mergeFrom:(CSODOTAGameAccountClient*) other;
- (CSODOTAGameAccountClient_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTAGameAccountClient_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CSODOTAGameAccountClient_Builder*) setAccountId:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearAccountId;

- (BOOL) hasWins;
- (uint32_t) wins;
- (CSODOTAGameAccountClient_Builder*) setWins:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearWins;

- (BOOL) hasLosses;
- (uint32_t) losses;
- (CSODOTAGameAccountClient_Builder*) setLosses:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearLosses;

- (BOOL) hasAvatar;
- (uint32_t) avatar;
- (CSODOTAGameAccountClient_Builder*) setAvatar:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearAvatar;

- (BOOL) hasXp;
- (uint32_t) xp;
- (CSODOTAGameAccountClient_Builder*) setXp:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearXp;

- (BOOL) hasLevel;
- (uint32_t) level;
- (CSODOTAGameAccountClient_Builder*) setLevel:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearLevel;

- (BOOL) hasInitialSkill;
- (uint32_t) initialSkill;
- (CSODOTAGameAccountClient_Builder*) setInitialSkill:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearInitialSkill;

- (BOOL) hasLeaverCount;
- (uint32_t) leaverCount;
- (CSODOTAGameAccountClient_Builder*) setLeaverCount:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearLeaverCount;

- (BOOL) hasPreventMatchUntilDate;
- (uint32_t) preventMatchUntilDate;
- (CSODOTAGameAccountClient_Builder*) setPreventMatchUntilDate:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearPreventMatchUntilDate;

- (BOOL) hasPreventTextChatUntilDate;
- (uint32_t) preventTextChatUntilDate;
- (CSODOTAGameAccountClient_Builder*) setPreventTextChatUntilDate:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearPreventTextChatUntilDate;

- (BOOL) hasPreventVoiceUntilDate;
- (uint32_t) preventVoiceUntilDate;
- (CSODOTAGameAccountClient_Builder*) setPreventVoiceUntilDate:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearPreventVoiceUntilDate;

- (BOOL) hasLastAbandonedGameDate;
- (uint32_t) lastAbandonedGameDate;
- (CSODOTAGameAccountClient_Builder*) setLastAbandonedGameDate:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearLastAbandonedGameDate;

- (BOOL) hasLeaverPenaltyCount;
- (uint32_t) leaverPenaltyCount;
- (CSODOTAGameAccountClient_Builder*) setLeaverPenaltyCount:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearLeaverPenaltyCount;

- (BOOL) hasCompletedGameStreak;
- (uint32_t) completedGameStreak;
- (CSODOTAGameAccountClient_Builder*) setCompletedGameStreak:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearCompletedGameStreak;

- (BOOL) hasTeaching;
- (uint32_t) teaching;
- (CSODOTAGameAccountClient_Builder*) setTeaching:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearTeaching;

- (BOOL) hasLeadership;
- (uint32_t) leadership;
- (CSODOTAGameAccountClient_Builder*) setLeadership:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearLeadership;

- (BOOL) hasFriendly;
- (uint32_t) friendly;
- (CSODOTAGameAccountClient_Builder*) setFriendly:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearFriendly;

- (BOOL) hasForgiving;
- (uint32_t) forgiving;
- (CSODOTAGameAccountClient_Builder*) setForgiving:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearForgiving;

- (BOOL) hasSuccessfulReportCount;
- (uint32_t) successfulReportCount;
- (CSODOTAGameAccountClient_Builder*) setSuccessfulReportCount:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearSuccessfulReportCount;

- (BOOL) hasNotifySuccessfulReport;
- (uint32_t) notifySuccessfulReport;
- (CSODOTAGameAccountClient_Builder*) setNotifySuccessfulReport:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearNotifySuccessfulReport;

- (BOOL) hasAccountDisabledUntilDate;
- (uint32_t) accountDisabledUntilDate;
- (CSODOTAGameAccountClient_Builder*) setAccountDisabledUntilDate:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearAccountDisabledUntilDate;

- (BOOL) hasAccountDisabledCount;
- (uint32_t) accountDisabledCount;
- (CSODOTAGameAccountClient_Builder*) setAccountDisabledCount:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearAccountDisabledCount;

- (BOOL) hasShowcaseHeroId;
- (uint32_t) showcaseHeroId;
- (CSODOTAGameAccountClient_Builder*) setShowcaseHeroId:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearShowcaseHeroId;

- (BOOL) hasMatchDisabledUntilDate;
- (uint32_t) matchDisabledUntilDate;
- (CSODOTAGameAccountClient_Builder*) setMatchDisabledUntilDate:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearMatchDisabledUntilDate;

- (BOOL) hasMatchDisabledCount;
- (uint32_t) matchDisabledCount;
- (CSODOTAGameAccountClient_Builder*) setMatchDisabledCount:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearMatchDisabledCount;

- (BOOL) hasTeamCreationDisabledUntilDate;
- (uint32_t) teamCreationDisabledUntilDate;
- (CSODOTAGameAccountClient_Builder*) setTeamCreationDisabledUntilDate:(uint32_t) value;
- (CSODOTAGameAccountClient_Builder*) clearTeamCreationDisabledUntilDate;
@end

@interface CSODOTAGameAccountClientInternal : PBGeneratedMessage {
@private
  BOOL hasWinLossStreak_:1;
  BOOL hasRank_:1;
  BOOL hasRankUncertainty_:1;
  BOOL hasFeedingCount_:1;
  BOOL hasVoiceReports_:1;
  BOOL hasTextReports_:1;
  BOOL hasAbilityReports_:1;
  BOOL hasFeedingReports_:1;
  BOOL hasAutomaticReportPenalty_:1;
  BOOL hasGamesSinceReportPenalty_:1;
  BOOL hasReportPenaltyCount_:1;
  BOOL hasPendingDetectedReports_:1;
  BOOL hasPendingInGameReports_:1;
  BOOL hasPendingOutOfGameReports_:1;
  BOOL hasAutomatedPenaltyDate_:1;
  int32_t winLossStreak;
  uint32_t rank;
  uint32_t rankUncertainty;
  uint32_t feedingCount;
  uint32_t voiceReports;
  uint32_t textReports;
  uint32_t abilityReports;
  uint32_t feedingReports;
  uint32_t automaticReportPenalty;
  uint32_t gamesSinceReportPenalty;
  uint32_t reportPenaltyCount;
  uint32_t pendingDetectedReports;
  uint32_t pendingInGameReports;
  uint32_t pendingOutOfGameReports;
  uint32_t automatedPenaltyDate;
}
- (BOOL) hasRank;
- (BOOL) hasRankUncertainty;
- (BOOL) hasWinLossStreak;
- (BOOL) hasFeedingCount;
- (BOOL) hasVoiceReports;
- (BOOL) hasTextReports;
- (BOOL) hasAbilityReports;
- (BOOL) hasFeedingReports;
- (BOOL) hasAutomaticReportPenalty;
- (BOOL) hasGamesSinceReportPenalty;
- (BOOL) hasReportPenaltyCount;
- (BOOL) hasPendingDetectedReports;
- (BOOL) hasPendingInGameReports;
- (BOOL) hasPendingOutOfGameReports;
- (BOOL) hasAutomatedPenaltyDate;
@property (readonly) uint32_t rank;
@property (readonly) uint32_t rankUncertainty;
@property (readonly) int32_t winLossStreak;
@property (readonly) uint32_t feedingCount;
@property (readonly) uint32_t voiceReports;
@property (readonly) uint32_t textReports;
@property (readonly) uint32_t abilityReports;
@property (readonly) uint32_t feedingReports;
@property (readonly) uint32_t automaticReportPenalty;
@property (readonly) uint32_t gamesSinceReportPenalty;
@property (readonly) uint32_t reportPenaltyCount;
@property (readonly) uint32_t pendingDetectedReports;
@property (readonly) uint32_t pendingInGameReports;
@property (readonly) uint32_t pendingOutOfGameReports;
@property (readonly) uint32_t automatedPenaltyDate;

+ (CSODOTAGameAccountClientInternal*) defaultInstance;
- (CSODOTAGameAccountClientInternal*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTAGameAccountClientInternal_Builder*) builder;
+ (CSODOTAGameAccountClientInternal_Builder*) builder;
+ (CSODOTAGameAccountClientInternal_Builder*) builderWithPrototype:(CSODOTAGameAccountClientInternal*) prototype;
- (CSODOTAGameAccountClientInternal_Builder*) toBuilder;

+ (CSODOTAGameAccountClientInternal*) parseFromData:(NSData*) data;
+ (CSODOTAGameAccountClientInternal*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAGameAccountClientInternal*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTAGameAccountClientInternal*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAGameAccountClientInternal*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTAGameAccountClientInternal*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTAGameAccountClientInternal_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTAGameAccountClientInternal* _builderResult;
}

- (CSODOTAGameAccountClientInternal*) defaultInstance;

- (CSODOTAGameAccountClientInternal_Builder*) clear;
- (CSODOTAGameAccountClientInternal_Builder*) clone;

- (CSODOTAGameAccountClientInternal*) build;
- (CSODOTAGameAccountClientInternal*) buildPartial;

- (CSODOTAGameAccountClientInternal_Builder*) mergeFrom:(CSODOTAGameAccountClientInternal*) other;
- (CSODOTAGameAccountClientInternal_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTAGameAccountClientInternal_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRank;
- (uint32_t) rank;
- (CSODOTAGameAccountClientInternal_Builder*) setRank:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearRank;

- (BOOL) hasRankUncertainty;
- (uint32_t) rankUncertainty;
- (CSODOTAGameAccountClientInternal_Builder*) setRankUncertainty:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearRankUncertainty;

- (BOOL) hasWinLossStreak;
- (int32_t) winLossStreak;
- (CSODOTAGameAccountClientInternal_Builder*) setWinLossStreak:(int32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearWinLossStreak;

- (BOOL) hasFeedingCount;
- (uint32_t) feedingCount;
- (CSODOTAGameAccountClientInternal_Builder*) setFeedingCount:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearFeedingCount;

- (BOOL) hasVoiceReports;
- (uint32_t) voiceReports;
- (CSODOTAGameAccountClientInternal_Builder*) setVoiceReports:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearVoiceReports;

- (BOOL) hasTextReports;
- (uint32_t) textReports;
- (CSODOTAGameAccountClientInternal_Builder*) setTextReports:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearTextReports;

- (BOOL) hasAbilityReports;
- (uint32_t) abilityReports;
- (CSODOTAGameAccountClientInternal_Builder*) setAbilityReports:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearAbilityReports;

- (BOOL) hasFeedingReports;
- (uint32_t) feedingReports;
- (CSODOTAGameAccountClientInternal_Builder*) setFeedingReports:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearFeedingReports;

- (BOOL) hasAutomaticReportPenalty;
- (uint32_t) automaticReportPenalty;
- (CSODOTAGameAccountClientInternal_Builder*) setAutomaticReportPenalty:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearAutomaticReportPenalty;

- (BOOL) hasGamesSinceReportPenalty;
- (uint32_t) gamesSinceReportPenalty;
- (CSODOTAGameAccountClientInternal_Builder*) setGamesSinceReportPenalty:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearGamesSinceReportPenalty;

- (BOOL) hasReportPenaltyCount;
- (uint32_t) reportPenaltyCount;
- (CSODOTAGameAccountClientInternal_Builder*) setReportPenaltyCount:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearReportPenaltyCount;

- (BOOL) hasPendingDetectedReports;
- (uint32_t) pendingDetectedReports;
- (CSODOTAGameAccountClientInternal_Builder*) setPendingDetectedReports:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearPendingDetectedReports;

- (BOOL) hasPendingInGameReports;
- (uint32_t) pendingInGameReports;
- (CSODOTAGameAccountClientInternal_Builder*) setPendingInGameReports:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearPendingInGameReports;

- (BOOL) hasPendingOutOfGameReports;
- (uint32_t) pendingOutOfGameReports;
- (CSODOTAGameAccountClientInternal_Builder*) setPendingOutOfGameReports:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearPendingOutOfGameReports;

- (BOOL) hasAutomatedPenaltyDate;
- (uint32_t) automatedPenaltyDate;
- (CSODOTAGameAccountClientInternal_Builder*) setAutomatedPenaltyDate:(uint32_t) value;
- (CSODOTAGameAccountClientInternal_Builder*) clearAutomatedPenaltyDate;
@end

@interface CSODOTAGameHeroStandings : PBGeneratedMessage {
@private
  BOOL hasHeroPerformance_:1;
  BOOL hasHeroVariance_:1;
  BOOL hasAccountId_:1;
  BOOL hasHeroId_:1;
  BOOL hasWins_:1;
  BOOL hasLosses_:1;
  Float32 heroPerformance;
  Float32 heroVariance;
  uint32_t accountId;
  uint32_t heroId;
  uint32_t wins;
  uint32_t losses;
}
- (BOOL) hasAccountId;
- (BOOL) hasHeroId;
- (BOOL) hasWins;
- (BOOL) hasLosses;
- (BOOL) hasHeroPerformance;
- (BOOL) hasHeroVariance;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t heroId;
@property (readonly) uint32_t wins;
@property (readonly) uint32_t losses;
@property (readonly) Float32 heroPerformance;
@property (readonly) Float32 heroVariance;

+ (CSODOTAGameHeroStandings*) defaultInstance;
- (CSODOTAGameHeroStandings*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTAGameHeroStandings_Builder*) builder;
+ (CSODOTAGameHeroStandings_Builder*) builder;
+ (CSODOTAGameHeroStandings_Builder*) builderWithPrototype:(CSODOTAGameHeroStandings*) prototype;
- (CSODOTAGameHeroStandings_Builder*) toBuilder;

+ (CSODOTAGameHeroStandings*) parseFromData:(NSData*) data;
+ (CSODOTAGameHeroStandings*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAGameHeroStandings*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTAGameHeroStandings*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAGameHeroStandings*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTAGameHeroStandings*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTAGameHeroStandings_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTAGameHeroStandings* _builderResult;
}

- (CSODOTAGameHeroStandings*) defaultInstance;

- (CSODOTAGameHeroStandings_Builder*) clear;
- (CSODOTAGameHeroStandings_Builder*) clone;

- (CSODOTAGameHeroStandings*) build;
- (CSODOTAGameHeroStandings*) buildPartial;

- (CSODOTAGameHeroStandings_Builder*) mergeFrom:(CSODOTAGameHeroStandings*) other;
- (CSODOTAGameHeroStandings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTAGameHeroStandings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CSODOTAGameHeroStandings_Builder*) setAccountId:(uint32_t) value;
- (CSODOTAGameHeroStandings_Builder*) clearAccountId;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CSODOTAGameHeroStandings_Builder*) setHeroId:(uint32_t) value;
- (CSODOTAGameHeroStandings_Builder*) clearHeroId;

- (BOOL) hasWins;
- (uint32_t) wins;
- (CSODOTAGameHeroStandings_Builder*) setWins:(uint32_t) value;
- (CSODOTAGameHeroStandings_Builder*) clearWins;

- (BOOL) hasLosses;
- (uint32_t) losses;
- (CSODOTAGameHeroStandings_Builder*) setLosses:(uint32_t) value;
- (CSODOTAGameHeroStandings_Builder*) clearLosses;

- (BOOL) hasHeroPerformance;
- (Float32) heroPerformance;
- (CSODOTAGameHeroStandings_Builder*) setHeroPerformance:(Float32) value;
- (CSODOTAGameHeroStandings_Builder*) clearHeroPerformance;

- (BOOL) hasHeroVariance;
- (Float32) heroVariance;
- (CSODOTAGameHeroStandings_Builder*) setHeroVariance:(Float32) value;
- (CSODOTAGameHeroStandings_Builder*) clearHeroVariance;
@end

@interface CSODOTAParty : PBGeneratedMessage {
@private
  BOOL hasPartyId_:1;
  BOOL hasLeaderId_:1;
  BOOL hasGameModes_:1;
  BOOL hasStartedMatchmakingTime_:1;
  BOOL hasMatchgroups_:1;
  BOOL hasPreventMatchUntilDate_:1;
  BOOL hasPreventMatchAccountId_:1;
  BOOL hasTeamId_:1;
  BOOL hasMatchDisabledUntilDate_:1;
  BOOL hasMatchDisabledAccountId_:1;
  BOOL hasMatchmakingMaxRangeMinutes_:1;
  BOOL hasstate_:1;
  BOOL hasmatch_type_:1;
  BOOL hasbot_difficulty_:1;
  uint64_t partyId;
  uint64_t leaderId;
  uint32_t gameModes;
  uint32_t startedMatchmakingTime;
  uint32_t matchgroups;
  uint32_t preventMatchUntilDate;
  uint32_t preventMatchAccountId;
  uint32_t teamId;
  uint32_t matchDisabledUntilDate;
  uint32_t matchDisabledAccountId;
  uint32_t matchmakingMaxRangeMinutes;
  CSODOTAParty_State state;
  MatchType match_type;
  DOTABotDifficulty bot_difficulty;
  PBAppendableArray * memberIdsArray;
  PBAppendableArray * pendingInvitesArray;
}
- (BOOL) hasPartyId;
- (BOOL) hasLeaderId;
- (BOOL) hasGameModes;
- (BOOL) hasstate;
- (BOOL) hasStartedMatchmakingTime;
- (BOOL) hasMatchgroups;
- (BOOL) hasPreventMatchUntilDate;
- (BOOL) hasPreventMatchAccountId;
- (BOOL) hasmatch_type;
- (BOOL) hasbot_difficulty;
- (BOOL) hasTeamId;
- (BOOL) hasMatchDisabledUntilDate;
- (BOOL) hasMatchDisabledAccountId;
- (BOOL) hasMatchmakingMaxRangeMinutes;
@property (readonly) uint64_t partyId;
@property (readonly) uint64_t leaderId;
@property (readonly, retain) PBArray * memberIds;
@property (readonly) uint32_t gameModes;
@property (readonly, retain) PBArray * pendingInvites;
@property (readonly) CSODOTAParty_State state;
@property (readonly) uint32_t startedMatchmakingTime;
@property (readonly) uint32_t matchgroups;
@property (readonly) uint32_t preventMatchUntilDate;
@property (readonly) uint32_t preventMatchAccountId;
@property (readonly) MatchType match_type;
@property (readonly) DOTABotDifficulty bot_difficulty;
@property (readonly) uint32_t teamId;
@property (readonly) uint32_t matchDisabledUntilDate;
@property (readonly) uint32_t matchDisabledAccountId;
@property (readonly) uint32_t matchmakingMaxRangeMinutes;
- (uint64_t)memberIdsAtIndex:(NSUInteger)index;
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index;

+ (CSODOTAParty*) defaultInstance;
- (CSODOTAParty*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTAParty_Builder*) builder;
+ (CSODOTAParty_Builder*) builder;
+ (CSODOTAParty_Builder*) builderWithPrototype:(CSODOTAParty*) prototype;
- (CSODOTAParty_Builder*) toBuilder;

+ (CSODOTAParty*) parseFromData:(NSData*) data;
+ (CSODOTAParty*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAParty*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTAParty*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAParty*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTAParty*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTAParty_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTAParty* _builderResult;
}

- (CSODOTAParty*) defaultInstance;

- (CSODOTAParty_Builder*) clear;
- (CSODOTAParty_Builder*) clone;

- (CSODOTAParty*) build;
- (CSODOTAParty*) buildPartial;

- (CSODOTAParty_Builder*) mergeFrom:(CSODOTAParty*) other;
- (CSODOTAParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTAParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPartyId;
- (uint64_t) partyId;
- (CSODOTAParty_Builder*) setPartyId:(uint64_t) value;
- (CSODOTAParty_Builder*) clearPartyId;

- (BOOL) hasLeaderId;
- (uint64_t) leaderId;
- (CSODOTAParty_Builder*) setLeaderId:(uint64_t) value;
- (CSODOTAParty_Builder*) clearLeaderId;

- (PBAppendableArray *)memberIds;
- (uint64_t)memberIdsAtIndex:(NSUInteger)index;
- (CSODOTAParty_Builder *)addMemberIds:(uint64_t)value;
- (CSODOTAParty_Builder *)setMemberIdsArray:(NSArray *)array;
- (CSODOTAParty_Builder *)setMemberIdsValues:(const uint64_t *)values count:(NSUInteger)count;
- (CSODOTAParty_Builder *)clearMemberIds;

- (BOOL) hasGameModes;
- (uint32_t) gameModes;
- (CSODOTAParty_Builder*) setGameModes:(uint32_t) value;
- (CSODOTAParty_Builder*) clearGameModes;

- (PBAppendableArray *)pendingInvites;
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index;
- (CSODOTAParty_Builder *)addPendingInvites:(uint64_t)value;
- (CSODOTAParty_Builder *)setPendingInvitesArray:(NSArray *)array;
- (CSODOTAParty_Builder *)setPendingInvitesValues:(const uint64_t *)values count:(NSUInteger)count;
- (CSODOTAParty_Builder *)clearPendingInvites;

- (BOOL) hasstate;
- (CSODOTAParty_State) state;
- (CSODOTAParty_Builder*) setstate:(CSODOTAParty_State) value;
- (CSODOTAParty_Builder*) clearstate;

- (BOOL) hasStartedMatchmakingTime;
- (uint32_t) startedMatchmakingTime;
- (CSODOTAParty_Builder*) setStartedMatchmakingTime:(uint32_t) value;
- (CSODOTAParty_Builder*) clearStartedMatchmakingTime;

- (BOOL) hasMatchgroups;
- (uint32_t) matchgroups;
- (CSODOTAParty_Builder*) setMatchgroups:(uint32_t) value;
- (CSODOTAParty_Builder*) clearMatchgroups;

- (BOOL) hasPreventMatchUntilDate;
- (uint32_t) preventMatchUntilDate;
- (CSODOTAParty_Builder*) setPreventMatchUntilDate:(uint32_t) value;
- (CSODOTAParty_Builder*) clearPreventMatchUntilDate;

- (BOOL) hasPreventMatchAccountId;
- (uint32_t) preventMatchAccountId;
- (CSODOTAParty_Builder*) setPreventMatchAccountId:(uint32_t) value;
- (CSODOTAParty_Builder*) clearPreventMatchAccountId;

- (BOOL) hasmatch_type;
- (MatchType) match_type;
- (CSODOTAParty_Builder*) setmatch_type:(MatchType) value;
- (CSODOTAParty_Builder*) clearmatch_type;

- (BOOL) hasbot_difficulty;
- (DOTABotDifficulty) bot_difficulty;
- (CSODOTAParty_Builder*) setbot_difficulty:(DOTABotDifficulty) value;
- (CSODOTAParty_Builder*) clearbot_difficulty;

- (BOOL) hasTeamId;
- (uint32_t) teamId;
- (CSODOTAParty_Builder*) setTeamId:(uint32_t) value;
- (CSODOTAParty_Builder*) clearTeamId;

- (BOOL) hasMatchDisabledUntilDate;
- (uint32_t) matchDisabledUntilDate;
- (CSODOTAParty_Builder*) setMatchDisabledUntilDate:(uint32_t) value;
- (CSODOTAParty_Builder*) clearMatchDisabledUntilDate;

- (BOOL) hasMatchDisabledAccountId;
- (uint32_t) matchDisabledAccountId;
- (CSODOTAParty_Builder*) setMatchDisabledAccountId:(uint32_t) value;
- (CSODOTAParty_Builder*) clearMatchDisabledAccountId;

- (BOOL) hasMatchmakingMaxRangeMinutes;
- (uint32_t) matchmakingMaxRangeMinutes;
- (CSODOTAParty_Builder*) setMatchmakingMaxRangeMinutes:(uint32_t) value;
- (CSODOTAParty_Builder*) clearMatchmakingMaxRangeMinutes;
@end

@interface CSODOTAPartyInternal : PBGeneratedMessage {
@private
  BOOL hasSearchKey_:1;
  NSString* searchKey;
}
- (BOOL) hasSearchKey;
@property (readonly, retain) NSString* searchKey;

+ (CSODOTAPartyInternal*) defaultInstance;
- (CSODOTAPartyInternal*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTAPartyInternal_Builder*) builder;
+ (CSODOTAPartyInternal_Builder*) builder;
+ (CSODOTAPartyInternal_Builder*) builderWithPrototype:(CSODOTAPartyInternal*) prototype;
- (CSODOTAPartyInternal_Builder*) toBuilder;

+ (CSODOTAPartyInternal*) parseFromData:(NSData*) data;
+ (CSODOTAPartyInternal*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAPartyInternal*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTAPartyInternal*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAPartyInternal*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTAPartyInternal*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTAPartyInternal_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTAPartyInternal* _builderResult;
}

- (CSODOTAPartyInternal*) defaultInstance;

- (CSODOTAPartyInternal_Builder*) clear;
- (CSODOTAPartyInternal_Builder*) clone;

- (CSODOTAPartyInternal*) build;
- (CSODOTAPartyInternal*) buildPartial;

- (CSODOTAPartyInternal_Builder*) mergeFrom:(CSODOTAPartyInternal*) other;
- (CSODOTAPartyInternal_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTAPartyInternal_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSearchKey;
- (NSString*) searchKey;
- (CSODOTAPartyInternal_Builder*) setSearchKey:(NSString*) value;
- (CSODOTAPartyInternal_Builder*) clearSearchKey;
@end

@interface CSODOTAPartyMemcached : PBGeneratedMessage {
@private
  BOOL hasParty_:1;
  BOOL hasInternal_:1;
  CSODOTAParty* party;
  CSODOTAPartyInternal* internal;
}
- (BOOL) hasParty;
- (BOOL) hasInternal;
@property (readonly, retain) CSODOTAParty* party;
@property (readonly, retain) CSODOTAPartyInternal* internal;

+ (CSODOTAPartyMemcached*) defaultInstance;
- (CSODOTAPartyMemcached*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTAPartyMemcached_Builder*) builder;
+ (CSODOTAPartyMemcached_Builder*) builder;
+ (CSODOTAPartyMemcached_Builder*) builderWithPrototype:(CSODOTAPartyMemcached*) prototype;
- (CSODOTAPartyMemcached_Builder*) toBuilder;

+ (CSODOTAPartyMemcached*) parseFromData:(NSData*) data;
+ (CSODOTAPartyMemcached*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAPartyMemcached*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTAPartyMemcached*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAPartyMemcached*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTAPartyMemcached*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTAPartyMemcached_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTAPartyMemcached* _builderResult;
}

- (CSODOTAPartyMemcached*) defaultInstance;

- (CSODOTAPartyMemcached_Builder*) clear;
- (CSODOTAPartyMemcached_Builder*) clone;

- (CSODOTAPartyMemcached*) build;
- (CSODOTAPartyMemcached*) buildPartial;

- (CSODOTAPartyMemcached_Builder*) mergeFrom:(CSODOTAPartyMemcached*) other;
- (CSODOTAPartyMemcached_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTAPartyMemcached_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasParty;
- (CSODOTAParty*) party;
- (CSODOTAPartyMemcached_Builder*) setParty:(CSODOTAParty*) value;
- (CSODOTAPartyMemcached_Builder*) setPartyBuilder:(CSODOTAParty_Builder*) builderForValue;
- (CSODOTAPartyMemcached_Builder*) mergeParty:(CSODOTAParty*) value;
- (CSODOTAPartyMemcached_Builder*) clearParty;

- (BOOL) hasInternal;
- (CSODOTAPartyInternal*) internal;
- (CSODOTAPartyMemcached_Builder*) setInternal:(CSODOTAPartyInternal*) value;
- (CSODOTAPartyMemcached_Builder*) setInternalBuilder:(CSODOTAPartyInternal_Builder*) builderForValue;
- (CSODOTAPartyMemcached_Builder*) mergeInternal:(CSODOTAPartyInternal*) value;
- (CSODOTAPartyMemcached_Builder*) clearInternal;
@end

@interface CSODOTAPartyInvite : PBGeneratedMessage {
@private
  BOOL hasGroupId_:1;
  BOOL hasSenderId_:1;
  BOOL hasSenderName_:1;
  uint64_t groupId;
  uint64_t senderId;
  NSString* senderName;
  PBAppendableArray * membersArray;
}
- (BOOL) hasGroupId;
- (BOOL) hasSenderId;
- (BOOL) hasSenderName;
@property (readonly) uint64_t groupId;
@property (readonly) uint64_t senderId;
@property (readonly, retain) NSString* senderName;
@property (readonly, retain) PBArray * members;
- (CSODOTAPartyInvite_PartyMember*)membersAtIndex:(NSUInteger)index;

+ (CSODOTAPartyInvite*) defaultInstance;
- (CSODOTAPartyInvite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTAPartyInvite_Builder*) builder;
+ (CSODOTAPartyInvite_Builder*) builder;
+ (CSODOTAPartyInvite_Builder*) builderWithPrototype:(CSODOTAPartyInvite*) prototype;
- (CSODOTAPartyInvite_Builder*) toBuilder;

+ (CSODOTAPartyInvite*) parseFromData:(NSData*) data;
+ (CSODOTAPartyInvite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAPartyInvite*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTAPartyInvite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAPartyInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTAPartyInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTAPartyInvite_PartyMember : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasName_:1;
  BOOL hasAvatar_:1;
  uint64_t steamId;
  NSString* name;
  uint32_t avatar;
}
- (BOOL) hasName;
- (BOOL) hasSteamId;
- (BOOL) hasAvatar;
@property (readonly, retain) NSString* name;
@property (readonly) uint64_t steamId;
@property (readonly) uint32_t avatar;

+ (CSODOTAPartyInvite_PartyMember*) defaultInstance;
- (CSODOTAPartyInvite_PartyMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTAPartyInvite_PartyMember_Builder*) builder;
+ (CSODOTAPartyInvite_PartyMember_Builder*) builder;
+ (CSODOTAPartyInvite_PartyMember_Builder*) builderWithPrototype:(CSODOTAPartyInvite_PartyMember*) prototype;
- (CSODOTAPartyInvite_PartyMember_Builder*) toBuilder;

+ (CSODOTAPartyInvite_PartyMember*) parseFromData:(NSData*) data;
+ (CSODOTAPartyInvite_PartyMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAPartyInvite_PartyMember*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTAPartyInvite_PartyMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAPartyInvite_PartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTAPartyInvite_PartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTAPartyInvite_PartyMember_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTAPartyInvite_PartyMember* _builderResult;
}

- (CSODOTAPartyInvite_PartyMember*) defaultInstance;

- (CSODOTAPartyInvite_PartyMember_Builder*) clear;
- (CSODOTAPartyInvite_PartyMember_Builder*) clone;

- (CSODOTAPartyInvite_PartyMember*) build;
- (CSODOTAPartyInvite_PartyMember*) buildPartial;

- (CSODOTAPartyInvite_PartyMember_Builder*) mergeFrom:(CSODOTAPartyInvite_PartyMember*) other;
- (CSODOTAPartyInvite_PartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTAPartyInvite_PartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (CSODOTAPartyInvite_PartyMember_Builder*) setName:(NSString*) value;
- (CSODOTAPartyInvite_PartyMember_Builder*) clearName;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CSODOTAPartyInvite_PartyMember_Builder*) setSteamId:(uint64_t) value;
- (CSODOTAPartyInvite_PartyMember_Builder*) clearSteamId;

- (BOOL) hasAvatar;
- (uint32_t) avatar;
- (CSODOTAPartyInvite_PartyMember_Builder*) setAvatar:(uint32_t) value;
- (CSODOTAPartyInvite_PartyMember_Builder*) clearAvatar;
@end

@interface CSODOTAPartyInvite_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTAPartyInvite* _builderResult;
}

- (CSODOTAPartyInvite*) defaultInstance;

- (CSODOTAPartyInvite_Builder*) clear;
- (CSODOTAPartyInvite_Builder*) clone;

- (CSODOTAPartyInvite*) build;
- (CSODOTAPartyInvite*) buildPartial;

- (CSODOTAPartyInvite_Builder*) mergeFrom:(CSODOTAPartyInvite*) other;
- (CSODOTAPartyInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTAPartyInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGroupId;
- (uint64_t) groupId;
- (CSODOTAPartyInvite_Builder*) setGroupId:(uint64_t) value;
- (CSODOTAPartyInvite_Builder*) clearGroupId;

- (BOOL) hasSenderId;
- (uint64_t) senderId;
- (CSODOTAPartyInvite_Builder*) setSenderId:(uint64_t) value;
- (CSODOTAPartyInvite_Builder*) clearSenderId;

- (BOOL) hasSenderName;
- (NSString*) senderName;
- (CSODOTAPartyInvite_Builder*) setSenderName:(NSString*) value;
- (CSODOTAPartyInvite_Builder*) clearSenderName;

- (PBAppendableArray *)members;
- (CSODOTAPartyInvite_PartyMember*)membersAtIndex:(NSUInteger)index;
- (CSODOTAPartyInvite_Builder *)addMembers:(CSODOTAPartyInvite_PartyMember*)value;
- (CSODOTAPartyInvite_Builder *)setMembersArray:(NSArray *)array;
- (CSODOTAPartyInvite_Builder *)setMembersValues:(const CSODOTAPartyInvite_PartyMember* *)values count:(NSUInteger)count;
- (CSODOTAPartyInvite_Builder *)clearMembers;
@end

@interface CDOTALobbyMember : PBGeneratedMessage {
@private
  BOOL hasConnectedToGameServer_:1;
  BOOL hasLatitude_:1;
  BOOL hasLongitude_:1;
  BOOL hasPartyId_:1;
  BOOL hasId_:1;
  BOOL hasName_:1;
  BOOL hasMetaXpBonusRate_:1;
  BOOL hasPrizeDefIndex_:1;
  BOOL hasChannel_:1;
  BOOL hasMetaXpAwarded_:1;
  BOOL hasMetaXp_:1;
  BOOL hasMetaLevel_:1;
  BOOL hasSlot_:1;
  BOOL hasHeroId_:1;
  BOOL hasready_state_:1;
  BOOL hasleaver_status_:1;
  BOOL hasteam_:1;
  BOOL connectedToGameServer_:1;
  Float32 latitude;
  Float32 longitude;
  uint64_t partyId;
  uint64_t id;
  NSString* name;
  uint32_t metaXpBonusRate;
  uint32_t prizeDefIndex;
  uint32_t channel;
  uint32_t metaXpAwarded;
  uint32_t metaXp;
  uint32_t metaLevel;
  uint32_t slot;
  uint32_t heroId;
  DOTALobbyReadyState ready_state;
  DOTALeaverStatus_t leaver_status;
  DOTA_GC_TEAM team;
}
- (BOOL) hasId;
- (BOOL) hasHeroId;
- (BOOL) hasteam;
- (BOOL) hasConnectedToGameServer;
- (BOOL) hasName;
- (BOOL) hasSlot;
- (BOOL) hasLatitude;
- (BOOL) hasLongitude;
- (BOOL) hasready_state;
- (BOOL) hasPartyId;
- (BOOL) hasMetaLevel;
- (BOOL) hasMetaXp;
- (BOOL) hasMetaXpAwarded;
- (BOOL) hasleaver_status;
- (BOOL) hasChannel;
- (BOOL) hasPrizeDefIndex;
- (BOOL) hasMetaXpBonusRate;
@property (readonly) uint64_t id;
@property (readonly) uint32_t heroId;
@property (readonly) DOTA_GC_TEAM team;
- (BOOL) connectedToGameServer;
@property (readonly, retain) NSString* name;
@property (readonly) uint32_t slot;
@property (readonly) Float32 latitude;
@property (readonly) Float32 longitude;
@property (readonly) DOTALobbyReadyState ready_state;
@property (readonly) uint64_t partyId;
@property (readonly) uint32_t metaLevel;
@property (readonly) uint32_t metaXp;
@property (readonly) uint32_t metaXpAwarded;
@property (readonly) DOTALeaverStatus_t leaver_status;
@property (readonly) uint32_t channel;
@property (readonly) uint32_t prizeDefIndex;
@property (readonly) uint32_t metaXpBonusRate;

+ (CDOTALobbyMember*) defaultInstance;
- (CDOTALobbyMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CDOTALobbyMember_Builder*) builder;
+ (CDOTALobbyMember_Builder*) builder;
+ (CDOTALobbyMember_Builder*) builderWithPrototype:(CDOTALobbyMember*) prototype;
- (CDOTALobbyMember_Builder*) toBuilder;

+ (CDOTALobbyMember*) parseFromData:(NSData*) data;
+ (CDOTALobbyMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CDOTALobbyMember*) parseFromInputStream:(NSInputStream*) input;
+ (CDOTALobbyMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CDOTALobbyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CDOTALobbyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CDOTALobbyMember_Builder : PBGeneratedMessage_Builder {
@private
  CDOTALobbyMember* _builderResult;
}

- (CDOTALobbyMember*) defaultInstance;

- (CDOTALobbyMember_Builder*) clear;
- (CDOTALobbyMember_Builder*) clone;

- (CDOTALobbyMember*) build;
- (CDOTALobbyMember*) buildPartial;

- (CDOTALobbyMember_Builder*) mergeFrom:(CDOTALobbyMember*) other;
- (CDOTALobbyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CDOTALobbyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (uint64_t) id;
- (CDOTALobbyMember_Builder*) setId:(uint64_t) value;
- (CDOTALobbyMember_Builder*) clearId;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CDOTALobbyMember_Builder*) setHeroId:(uint32_t) value;
- (CDOTALobbyMember_Builder*) clearHeroId;

- (BOOL) hasteam;
- (DOTA_GC_TEAM) team;
- (CDOTALobbyMember_Builder*) setteam:(DOTA_GC_TEAM) value;
- (CDOTALobbyMember_Builder*) clearteam;

- (BOOL) hasConnectedToGameServer;
- (BOOL) connectedToGameServer;
- (CDOTALobbyMember_Builder*) setConnectedToGameServer:(BOOL) value;
- (CDOTALobbyMember_Builder*) clearConnectedToGameServer;

- (BOOL) hasName;
- (NSString*) name;
- (CDOTALobbyMember_Builder*) setName:(NSString*) value;
- (CDOTALobbyMember_Builder*) clearName;

- (BOOL) hasSlot;
- (uint32_t) slot;
- (CDOTALobbyMember_Builder*) setSlot:(uint32_t) value;
- (CDOTALobbyMember_Builder*) clearSlot;

- (BOOL) hasLatitude;
- (Float32) latitude;
- (CDOTALobbyMember_Builder*) setLatitude:(Float32) value;
- (CDOTALobbyMember_Builder*) clearLatitude;

- (BOOL) hasLongitude;
- (Float32) longitude;
- (CDOTALobbyMember_Builder*) setLongitude:(Float32) value;
- (CDOTALobbyMember_Builder*) clearLongitude;

- (BOOL) hasready_state;
- (DOTALobbyReadyState) ready_state;
- (CDOTALobbyMember_Builder*) setready_state:(DOTALobbyReadyState) value;
- (CDOTALobbyMember_Builder*) clearready_state;

- (BOOL) hasPartyId;
- (uint64_t) partyId;
- (CDOTALobbyMember_Builder*) setPartyId:(uint64_t) value;
- (CDOTALobbyMember_Builder*) clearPartyId;

- (BOOL) hasMetaLevel;
- (uint32_t) metaLevel;
- (CDOTALobbyMember_Builder*) setMetaLevel:(uint32_t) value;
- (CDOTALobbyMember_Builder*) clearMetaLevel;

- (BOOL) hasMetaXp;
- (uint32_t) metaXp;
- (CDOTALobbyMember_Builder*) setMetaXp:(uint32_t) value;
- (CDOTALobbyMember_Builder*) clearMetaXp;

- (BOOL) hasMetaXpAwarded;
- (uint32_t) metaXpAwarded;
- (CDOTALobbyMember_Builder*) setMetaXpAwarded:(uint32_t) value;
- (CDOTALobbyMember_Builder*) clearMetaXpAwarded;

- (BOOL) hasleaver_status;
- (DOTALeaverStatus_t) leaver_status;
- (CDOTALobbyMember_Builder*) setleaver_status:(DOTALeaverStatus_t) value;
- (CDOTALobbyMember_Builder*) clearleaver_status;

- (BOOL) hasChannel;
- (uint32_t) channel;
- (CDOTALobbyMember_Builder*) setChannel:(uint32_t) value;
- (CDOTALobbyMember_Builder*) clearChannel;

- (BOOL) hasPrizeDefIndex;
- (uint32_t) prizeDefIndex;
- (CDOTALobbyMember_Builder*) setPrizeDefIndex:(uint32_t) value;
- (CDOTALobbyMember_Builder*) clearPrizeDefIndex;

- (BOOL) hasMetaXpBonusRate;
- (uint32_t) metaXpBonusRate;
- (CDOTALobbyMember_Builder*) setMetaXpBonusRate:(uint32_t) value;
- (CDOTALobbyMember_Builder*) clearMetaXpBonusRate;
@end

@interface CLobbyTeamDetails : PBGeneratedMessage {
@private
  BOOL hasCompleteTeam_:1;
  BOOL hasTeamLogo_:1;
  BOOL hasTeamBaseLogo_:1;
  BOOL hasTeamBannerLogo_:1;
  BOOL hasTeamName_:1;
  BOOL hasTeamTag_:1;
  BOOL hasTeamId_:1;
  BOOL completeTeam_:1;
  uint64_t teamLogo;
  uint64_t teamBaseLogo;
  uint64_t teamBannerLogo;
  NSString* teamName;
  NSString* teamTag;
  uint32_t teamId;
}
- (BOOL) hasTeamName;
- (BOOL) hasTeamTag;
- (BOOL) hasTeamId;
- (BOOL) hasTeamLogo;
- (BOOL) hasTeamBaseLogo;
- (BOOL) hasTeamBannerLogo;
- (BOOL) hasCompleteTeam;
@property (readonly, retain) NSString* teamName;
@property (readonly, retain) NSString* teamTag;
@property (readonly) uint32_t teamId;
@property (readonly) uint64_t teamLogo;
@property (readonly) uint64_t teamBaseLogo;
@property (readonly) uint64_t teamBannerLogo;
- (BOOL) completeTeam;

+ (CLobbyTeamDetails*) defaultInstance;
- (CLobbyTeamDetails*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CLobbyTeamDetails_Builder*) builder;
+ (CLobbyTeamDetails_Builder*) builder;
+ (CLobbyTeamDetails_Builder*) builderWithPrototype:(CLobbyTeamDetails*) prototype;
- (CLobbyTeamDetails_Builder*) toBuilder;

+ (CLobbyTeamDetails*) parseFromData:(NSData*) data;
+ (CLobbyTeamDetails*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLobbyTeamDetails*) parseFromInputStream:(NSInputStream*) input;
+ (CLobbyTeamDetails*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLobbyTeamDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CLobbyTeamDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CLobbyTeamDetails_Builder : PBGeneratedMessage_Builder {
@private
  CLobbyTeamDetails* _builderResult;
}

- (CLobbyTeamDetails*) defaultInstance;

- (CLobbyTeamDetails_Builder*) clear;
- (CLobbyTeamDetails_Builder*) clone;

- (CLobbyTeamDetails*) build;
- (CLobbyTeamDetails*) buildPartial;

- (CLobbyTeamDetails_Builder*) mergeFrom:(CLobbyTeamDetails*) other;
- (CLobbyTeamDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CLobbyTeamDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTeamName;
- (NSString*) teamName;
- (CLobbyTeamDetails_Builder*) setTeamName:(NSString*) value;
- (CLobbyTeamDetails_Builder*) clearTeamName;

- (BOOL) hasTeamTag;
- (NSString*) teamTag;
- (CLobbyTeamDetails_Builder*) setTeamTag:(NSString*) value;
- (CLobbyTeamDetails_Builder*) clearTeamTag;

- (BOOL) hasTeamId;
- (uint32_t) teamId;
- (CLobbyTeamDetails_Builder*) setTeamId:(uint32_t) value;
- (CLobbyTeamDetails_Builder*) clearTeamId;

- (BOOL) hasTeamLogo;
- (uint64_t) teamLogo;
- (CLobbyTeamDetails_Builder*) setTeamLogo:(uint64_t) value;
- (CLobbyTeamDetails_Builder*) clearTeamLogo;

- (BOOL) hasTeamBaseLogo;
- (uint64_t) teamBaseLogo;
- (CLobbyTeamDetails_Builder*) setTeamBaseLogo:(uint64_t) value;
- (CLobbyTeamDetails_Builder*) clearTeamBaseLogo;

- (BOOL) hasTeamBannerLogo;
- (uint64_t) teamBannerLogo;
- (CLobbyTeamDetails_Builder*) setTeamBannerLogo:(uint64_t) value;
- (CLobbyTeamDetails_Builder*) clearTeamBannerLogo;

- (BOOL) hasCompleteTeam;
- (BOOL) completeTeam;
- (CLobbyTeamDetails_Builder*) setCompleteTeam:(BOOL) value;
- (CLobbyTeamDetails_Builder*) clearCompleteTeam;
@end

@interface CLobbyPendingPlayerReport : PBGeneratedMessage {
@private
  BOOL hasDate_:1;
  BOOL hasAccountId_:1;
  uint32_t date;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
- (BOOL) hasDate;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t date;

+ (CLobbyPendingPlayerReport*) defaultInstance;
- (CLobbyPendingPlayerReport*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CLobbyPendingPlayerReport_Builder*) builder;
+ (CLobbyPendingPlayerReport_Builder*) builder;
+ (CLobbyPendingPlayerReport_Builder*) builderWithPrototype:(CLobbyPendingPlayerReport*) prototype;
- (CLobbyPendingPlayerReport_Builder*) toBuilder;

+ (CLobbyPendingPlayerReport*) parseFromData:(NSData*) data;
+ (CLobbyPendingPlayerReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLobbyPendingPlayerReport*) parseFromInputStream:(NSInputStream*) input;
+ (CLobbyPendingPlayerReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLobbyPendingPlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CLobbyPendingPlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CLobbyPendingPlayerReport_Builder : PBGeneratedMessage_Builder {
@private
  CLobbyPendingPlayerReport* _builderResult;
}

- (CLobbyPendingPlayerReport*) defaultInstance;

- (CLobbyPendingPlayerReport_Builder*) clear;
- (CLobbyPendingPlayerReport_Builder*) clone;

- (CLobbyPendingPlayerReport*) build;
- (CLobbyPendingPlayerReport*) buildPartial;

- (CLobbyPendingPlayerReport_Builder*) mergeFrom:(CLobbyPendingPlayerReport*) other;
- (CLobbyPendingPlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CLobbyPendingPlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CLobbyPendingPlayerReport_Builder*) setAccountId:(uint32_t) value;
- (CLobbyPendingPlayerReport_Builder*) clearAccountId;

- (BOOL) hasDate;
- (uint32_t) date;
- (CLobbyPendingPlayerReport_Builder*) setDate:(uint32_t) value;
- (CLobbyPendingPlayerReport_Builder*) clearDate;
@end

@interface CLobbyTimedRewardDetails : PBGeneratedMessage {
@private
  BOOL hasIsSupplyCrate_:1;
  BOOL hasIsTimedDrop_:1;
  BOOL hasItemId_:1;
  BOOL hasItemDefIndex_:1;
  BOOL hasAccountId_:1;
  BOOL isSupplyCrate_:1;
  BOOL isTimedDrop_:1;
  uint64_t itemId;
  uint32_t itemDefIndex;
  uint32_t accountId;
}
- (BOOL) hasItemId;
- (BOOL) hasItemDefIndex;
- (BOOL) hasIsSupplyCrate;
- (BOOL) hasIsTimedDrop;
- (BOOL) hasAccountId;
@property (readonly) uint64_t itemId;
@property (readonly) uint32_t itemDefIndex;
- (BOOL) isSupplyCrate;
- (BOOL) isTimedDrop;
@property (readonly) uint32_t accountId;

+ (CLobbyTimedRewardDetails*) defaultInstance;
- (CLobbyTimedRewardDetails*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CLobbyTimedRewardDetails_Builder*) builder;
+ (CLobbyTimedRewardDetails_Builder*) builder;
+ (CLobbyTimedRewardDetails_Builder*) builderWithPrototype:(CLobbyTimedRewardDetails*) prototype;
- (CLobbyTimedRewardDetails_Builder*) toBuilder;

+ (CLobbyTimedRewardDetails*) parseFromData:(NSData*) data;
+ (CLobbyTimedRewardDetails*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLobbyTimedRewardDetails*) parseFromInputStream:(NSInputStream*) input;
+ (CLobbyTimedRewardDetails*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLobbyTimedRewardDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CLobbyTimedRewardDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CLobbyTimedRewardDetails_Builder : PBGeneratedMessage_Builder {
@private
  CLobbyTimedRewardDetails* _builderResult;
}

- (CLobbyTimedRewardDetails*) defaultInstance;

- (CLobbyTimedRewardDetails_Builder*) clear;
- (CLobbyTimedRewardDetails_Builder*) clone;

- (CLobbyTimedRewardDetails*) build;
- (CLobbyTimedRewardDetails*) buildPartial;

- (CLobbyTimedRewardDetails_Builder*) mergeFrom:(CLobbyTimedRewardDetails*) other;
- (CLobbyTimedRewardDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CLobbyTimedRewardDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItemId;
- (uint64_t) itemId;
- (CLobbyTimedRewardDetails_Builder*) setItemId:(uint64_t) value;
- (CLobbyTimedRewardDetails_Builder*) clearItemId;

- (BOOL) hasItemDefIndex;
- (uint32_t) itemDefIndex;
- (CLobbyTimedRewardDetails_Builder*) setItemDefIndex:(uint32_t) value;
- (CLobbyTimedRewardDetails_Builder*) clearItemDefIndex;

- (BOOL) hasIsSupplyCrate;
- (BOOL) isSupplyCrate;
- (CLobbyTimedRewardDetails_Builder*) setIsSupplyCrate:(BOOL) value;
- (CLobbyTimedRewardDetails_Builder*) clearIsSupplyCrate;

- (BOOL) hasIsTimedDrop;
- (BOOL) isTimedDrop;
- (CLobbyTimedRewardDetails_Builder*) setIsTimedDrop:(BOOL) value;
- (CLobbyTimedRewardDetails_Builder*) clearIsTimedDrop;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CLobbyTimedRewardDetails_Builder*) setAccountId:(uint32_t) value;
- (CLobbyTimedRewardDetails_Builder*) clearAccountId;
@end

@interface CSODOTALobby : PBGeneratedMessage {
@private
  BOOL hasLeaverDetected_:1;
  BOOL hasAllowSpectating_:1;
  BOOL hasIntroMode_:1;
  BOOL hasFillWithBots_:1;
  BOOL hasAllowCheats_:1;
  BOOL hasDropRateBonus_:1;
  BOOL hasLobbyId_:1;
  BOOL hasLeaderId_:1;
  BOOL hasServerId_:1;
  BOOL hasPassKey_:1;
  BOOL hasGameName_:1;
  BOOL hasConnect_:1;
  BOOL hasLoadGameId_:1;
  BOOL hasLootGenerated_:1;
  BOOL hasPenaltyLevelDire_:1;
  BOOL hasPenaltyLevelRadiant_:1;
  BOOL hasLeagueid_:1;
  BOOL hasSeriesType_:1;
  BOOL hasRadiantSeriesWins_:1;
  BOOL hasLootAwarded_:1;
  BOOL hasMatchId_:1;
  BOOL hasDireSeriesWins_:1;
  BOOL hasGameMode_:1;
  BOOL hasTutorialLesson_:1;
  BOOL hasTournamentId_:1;
  BOOL hasTournamentGameId_:1;
  BOOL hasServerRegion_:1;
  BOOL hasNumSpectators_:1;
  BOOL hasTowerState_:1;
  BOOL hasMatchgroup_:1;
  BOOL hasbot_difficulty_:1;
  BOOL hasgame_version_:1;
  BOOL hasgame_state_:1;
  BOOL hascm_pick_:1;
  BOOL haslobby_type_:1;
  BOOL hasstate_:1;
  BOOL leaverDetected_:1;
  BOOL allowSpectating_:1;
  BOOL introMode_:1;
  BOOL fillWithBots_:1;
  BOOL allowCheats_:1;
  Float32 dropRateBonus;
  uint64_t lobbyId;
  uint64_t leaderId;
  uint64_t serverId;
  NSString* passKey;
  NSString* gameName;
  NSString* connect;
  uint32_t loadGameId;
  uint32_t lootGenerated;
  uint32_t penaltyLevelDire;
  uint32_t penaltyLevelRadiant;
  uint32_t leagueid;
  uint32_t seriesType;
  uint32_t radiantSeriesWins;
  uint32_t lootAwarded;
  uint32_t matchId;
  uint32_t direSeriesWins;
  uint32_t gameMode;
  uint32_t tutorialLesson;
  uint32_t tournamentId;
  uint32_t tournamentGameId;
  uint32_t serverRegion;
  uint32_t numSpectators;
  uint32_t towerState;
  uint32_t matchgroup;
  DOTABotDifficulty bot_difficulty;
  DOTAGameVersion game_version;
  DOTA_GameState game_state;
  DOTA_CM_PICK cm_pick;
  CSODOTALobby_LobbyType lobby_type;
  CSODOTALobby_State state;
  PBAppendableArray * pendingInvitesArray;
  PBAppendableArray * membersArray;
  PBAppendableArray * leftMembersArray;
  PBAppendableArray * teamDetailsArray;
  PBAppendableArray * timedRewardDetailsArray;
  PBAppendableArray * botSlotDifficultyArray;
}
- (BOOL) hasLobbyId;
- (BOOL) hasLeaderId;
- (BOOL) hasServerId;
- (BOOL) hasGameMode;
- (BOOL) hasstate;
- (BOOL) hasConnect;
- (BOOL) haslobby_type;
- (BOOL) hasAllowCheats;
- (BOOL) hasFillWithBots;
- (BOOL) hasIntroMode;
- (BOOL) hasGameName;
- (BOOL) hasTutorialLesson;
- (BOOL) hasTournamentId;
- (BOOL) hasTournamentGameId;
- (BOOL) hasServerRegion;
- (BOOL) hasgame_state;
- (BOOL) hasNumSpectators;
- (BOOL) hasTowerState;
- (BOOL) hasMatchgroup;
- (BOOL) hasLeaverDetected;
- (BOOL) hascm_pick;
- (BOOL) hasMatchId;
- (BOOL) hasAllowSpectating;
- (BOOL) hasbot_difficulty;
- (BOOL) hasgame_version;
- (BOOL) hasPassKey;
- (BOOL) hasDropRateBonus;
- (BOOL) hasLeagueid;
- (BOOL) hasPenaltyLevelRadiant;
- (BOOL) hasPenaltyLevelDire;
- (BOOL) hasLoadGameId;
- (BOOL) hasSeriesType;
- (BOOL) hasRadiantSeriesWins;
- (BOOL) hasDireSeriesWins;
- (BOOL) hasLootGenerated;
- (BOOL) hasLootAwarded;
@property (readonly) uint64_t lobbyId;
@property (readonly, retain) PBArray * members;
@property (readonly, retain) PBArray * leftMembers;
@property (readonly) uint64_t leaderId;
@property (readonly) uint64_t serverId;
@property (readonly) uint32_t gameMode;
@property (readonly, retain) PBArray * pendingInvites;
@property (readonly) CSODOTALobby_State state;
@property (readonly, retain) NSString* connect;
@property (readonly) CSODOTALobby_LobbyType lobby_type;
- (BOOL) allowCheats;
- (BOOL) fillWithBots;
- (BOOL) introMode;
@property (readonly, retain) NSString* gameName;
@property (readonly, retain) PBArray * teamDetails;
@property (readonly) uint32_t tutorialLesson;
@property (readonly) uint32_t tournamentId;
@property (readonly) uint32_t tournamentGameId;
@property (readonly) uint32_t serverRegion;
@property (readonly) DOTA_GameState game_state;
@property (readonly) uint32_t numSpectators;
@property (readonly) uint32_t towerState;
@property (readonly) uint32_t matchgroup;
- (BOOL) leaverDetected;
@property (readonly) DOTA_CM_PICK cm_pick;
@property (readonly) uint32_t matchId;
- (BOOL) allowSpectating;
@property (readonly) DOTABotDifficulty bot_difficulty;
@property (readonly) DOTAGameVersion game_version;
@property (readonly, retain) PBArray * timedRewardDetails;
@property (readonly, retain) NSString* passKey;
@property (readonly) Float32 dropRateBonus;
@property (readonly, retain) PBArray * bot_slot_difficulty;
@property (readonly) uint32_t leagueid;
@property (readonly) uint32_t penaltyLevelRadiant;
@property (readonly) uint32_t penaltyLevelDire;
@property (readonly) uint32_t loadGameId;
@property (readonly) uint32_t seriesType;
@property (readonly) uint32_t radiantSeriesWins;
@property (readonly) uint32_t direSeriesWins;
@property (readonly) uint32_t lootGenerated;
@property (readonly) uint32_t lootAwarded;
- (CDOTALobbyMember*)membersAtIndex:(NSUInteger)index;
- (CDOTALobbyMember*)leftMembersAtIndex:(NSUInteger)index;
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index;
- (CLobbyTeamDetails*)teamDetailsAtIndex:(NSUInteger)index;
- (CLobbyTimedRewardDetails*)timedRewardDetailsAtIndex:(NSUInteger)index;
- (DOTABotDifficulty)bot_slot_difficultyAtIndex:(NSUInteger)index;

+ (CSODOTALobby*) defaultInstance;
- (CSODOTALobby*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTALobby_Builder*) builder;
+ (CSODOTALobby_Builder*) builder;
+ (CSODOTALobby_Builder*) builderWithPrototype:(CSODOTALobby*) prototype;
- (CSODOTALobby_Builder*) toBuilder;

+ (CSODOTALobby*) parseFromData:(NSData*) data;
+ (CSODOTALobby*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTALobby*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTALobby*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTALobby*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTALobby*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTALobby_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTALobby* _builderResult;
}

- (CSODOTALobby*) defaultInstance;

- (CSODOTALobby_Builder*) clear;
- (CSODOTALobby_Builder*) clone;

- (CSODOTALobby*) build;
- (CSODOTALobby*) buildPartial;

- (CSODOTALobby_Builder*) mergeFrom:(CSODOTALobby*) other;
- (CSODOTALobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTALobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CSODOTALobby_Builder*) setLobbyId:(uint64_t) value;
- (CSODOTALobby_Builder*) clearLobbyId;

- (PBAppendableArray *)members;
- (CDOTALobbyMember*)membersAtIndex:(NSUInteger)index;
- (CSODOTALobby_Builder *)addMembers:(CDOTALobbyMember*)value;
- (CSODOTALobby_Builder *)setMembersArray:(NSArray *)array;
- (CSODOTALobby_Builder *)setMembersValues:(const CDOTALobbyMember* *)values count:(NSUInteger)count;
- (CSODOTALobby_Builder *)clearMembers;

- (PBAppendableArray *)leftMembers;
- (CDOTALobbyMember*)leftMembersAtIndex:(NSUInteger)index;
- (CSODOTALobby_Builder *)addLeftMembers:(CDOTALobbyMember*)value;
- (CSODOTALobby_Builder *)setLeftMembersArray:(NSArray *)array;
- (CSODOTALobby_Builder *)setLeftMembersValues:(const CDOTALobbyMember* *)values count:(NSUInteger)count;
- (CSODOTALobby_Builder *)clearLeftMembers;

- (BOOL) hasLeaderId;
- (uint64_t) leaderId;
- (CSODOTALobby_Builder*) setLeaderId:(uint64_t) value;
- (CSODOTALobby_Builder*) clearLeaderId;

- (BOOL) hasServerId;
- (uint64_t) serverId;
- (CSODOTALobby_Builder*) setServerId:(uint64_t) value;
- (CSODOTALobby_Builder*) clearServerId;

- (BOOL) hasGameMode;
- (uint32_t) gameMode;
- (CSODOTALobby_Builder*) setGameMode:(uint32_t) value;
- (CSODOTALobby_Builder*) clearGameMode;

- (PBAppendableArray *)pendingInvites;
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index;
- (CSODOTALobby_Builder *)addPendingInvites:(uint64_t)value;
- (CSODOTALobby_Builder *)setPendingInvitesArray:(NSArray *)array;
- (CSODOTALobby_Builder *)setPendingInvitesValues:(const uint64_t *)values count:(NSUInteger)count;
- (CSODOTALobby_Builder *)clearPendingInvites;

- (BOOL) hasstate;
- (CSODOTALobby_State) state;
- (CSODOTALobby_Builder*) setstate:(CSODOTALobby_State) value;
- (CSODOTALobby_Builder*) clearstate;

- (BOOL) hasConnect;
- (NSString*) connect;
- (CSODOTALobby_Builder*) setConnect:(NSString*) value;
- (CSODOTALobby_Builder*) clearConnect;

- (BOOL) haslobby_type;
- (CSODOTALobby_LobbyType) lobby_type;
- (CSODOTALobby_Builder*) setlobby_type:(CSODOTALobby_LobbyType) value;
- (CSODOTALobby_Builder*) clearlobby_type;

- (BOOL) hasAllowCheats;
- (BOOL) allowCheats;
- (CSODOTALobby_Builder*) setAllowCheats:(BOOL) value;
- (CSODOTALobby_Builder*) clearAllowCheats;

- (BOOL) hasFillWithBots;
- (BOOL) fillWithBots;
- (CSODOTALobby_Builder*) setFillWithBots:(BOOL) value;
- (CSODOTALobby_Builder*) clearFillWithBots;

- (BOOL) hasIntroMode;
- (BOOL) introMode;
- (CSODOTALobby_Builder*) setIntroMode:(BOOL) value;
- (CSODOTALobby_Builder*) clearIntroMode;

- (BOOL) hasGameName;
- (NSString*) gameName;
- (CSODOTALobby_Builder*) setGameName:(NSString*) value;
- (CSODOTALobby_Builder*) clearGameName;

- (PBAppendableArray *)teamDetails;
- (CLobbyTeamDetails*)teamDetailsAtIndex:(NSUInteger)index;
- (CSODOTALobby_Builder *)addTeamDetails:(CLobbyTeamDetails*)value;
- (CSODOTALobby_Builder *)setTeamDetailsArray:(NSArray *)array;
- (CSODOTALobby_Builder *)setTeamDetailsValues:(const CLobbyTeamDetails* *)values count:(NSUInteger)count;
- (CSODOTALobby_Builder *)clearTeamDetails;

- (BOOL) hasTutorialLesson;
- (uint32_t) tutorialLesson;
- (CSODOTALobby_Builder*) setTutorialLesson:(uint32_t) value;
- (CSODOTALobby_Builder*) clearTutorialLesson;

- (BOOL) hasTournamentId;
- (uint32_t) tournamentId;
- (CSODOTALobby_Builder*) setTournamentId:(uint32_t) value;
- (CSODOTALobby_Builder*) clearTournamentId;

- (BOOL) hasTournamentGameId;
- (uint32_t) tournamentGameId;
- (CSODOTALobby_Builder*) setTournamentGameId:(uint32_t) value;
- (CSODOTALobby_Builder*) clearTournamentGameId;

- (BOOL) hasServerRegion;
- (uint32_t) serverRegion;
- (CSODOTALobby_Builder*) setServerRegion:(uint32_t) value;
- (CSODOTALobby_Builder*) clearServerRegion;

- (BOOL) hasgame_state;
- (DOTA_GameState) game_state;
- (CSODOTALobby_Builder*) setgame_state:(DOTA_GameState) value;
- (CSODOTALobby_Builder*) cleargame_state;

- (BOOL) hasNumSpectators;
- (uint32_t) numSpectators;
- (CSODOTALobby_Builder*) setNumSpectators:(uint32_t) value;
- (CSODOTALobby_Builder*) clearNumSpectators;

- (BOOL) hasTowerState;
- (uint32_t) towerState;
- (CSODOTALobby_Builder*) setTowerState:(uint32_t) value;
- (CSODOTALobby_Builder*) clearTowerState;

- (BOOL) hasMatchgroup;
- (uint32_t) matchgroup;
- (CSODOTALobby_Builder*) setMatchgroup:(uint32_t) value;
- (CSODOTALobby_Builder*) clearMatchgroup;

- (BOOL) hasLeaverDetected;
- (BOOL) leaverDetected;
- (CSODOTALobby_Builder*) setLeaverDetected:(BOOL) value;
- (CSODOTALobby_Builder*) clearLeaverDetected;

- (BOOL) hascm_pick;
- (DOTA_CM_PICK) cm_pick;
- (CSODOTALobby_Builder*) setcm_pick:(DOTA_CM_PICK) value;
- (CSODOTALobby_Builder*) clearcm_pick;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CSODOTALobby_Builder*) setMatchId:(uint32_t) value;
- (CSODOTALobby_Builder*) clearMatchId;

- (BOOL) hasAllowSpectating;
- (BOOL) allowSpectating;
- (CSODOTALobby_Builder*) setAllowSpectating:(BOOL) value;
- (CSODOTALobby_Builder*) clearAllowSpectating;

- (BOOL) hasbot_difficulty;
- (DOTABotDifficulty) bot_difficulty;
- (CSODOTALobby_Builder*) setbot_difficulty:(DOTABotDifficulty) value;
- (CSODOTALobby_Builder*) clearbot_difficulty;

- (BOOL) hasgame_version;
- (DOTAGameVersion) game_version;
- (CSODOTALobby_Builder*) setgame_version:(DOTAGameVersion) value;
- (CSODOTALobby_Builder*) cleargame_version;

- (PBAppendableArray *)timedRewardDetails;
- (CLobbyTimedRewardDetails*)timedRewardDetailsAtIndex:(NSUInteger)index;
- (CSODOTALobby_Builder *)addTimedRewardDetails:(CLobbyTimedRewardDetails*)value;
- (CSODOTALobby_Builder *)setTimedRewardDetailsArray:(NSArray *)array;
- (CSODOTALobby_Builder *)setTimedRewardDetailsValues:(const CLobbyTimedRewardDetails* *)values count:(NSUInteger)count;
- (CSODOTALobby_Builder *)clearTimedRewardDetails;

- (BOOL) hasPassKey;
- (NSString*) passKey;
- (CSODOTALobby_Builder*) setPassKey:(NSString*) value;
- (CSODOTALobby_Builder*) clearPassKey;

- (BOOL) hasDropRateBonus;
- (Float32) dropRateBonus;
- (CSODOTALobby_Builder*) setDropRateBonus:(Float32) value;
- (CSODOTALobby_Builder*) clearDropRateBonus;

- (PBAppendableArray *)bot_slot_difficulty;
- (DOTABotDifficulty)bot_slot_difficultyAtIndex:(NSUInteger)index;
- (CSODOTALobby_Builder *)addbot_slot_difficulty:(DOTABotDifficulty)value;
- (CSODOTALobby_Builder *)setbot_slot_difficultyArray:(NSArray *)array;
- (CSODOTALobby_Builder *)setbot_slot_difficultyValues:(const DOTABotDifficulty *)values count:(NSUInteger)count;
- (CSODOTALobby_Builder *)clearbot_slot_difficulty;

- (BOOL) hasLeagueid;
- (uint32_t) leagueid;
- (CSODOTALobby_Builder*) setLeagueid:(uint32_t) value;
- (CSODOTALobby_Builder*) clearLeagueid;

- (BOOL) hasPenaltyLevelRadiant;
- (uint32_t) penaltyLevelRadiant;
- (CSODOTALobby_Builder*) setPenaltyLevelRadiant:(uint32_t) value;
- (CSODOTALobby_Builder*) clearPenaltyLevelRadiant;

- (BOOL) hasPenaltyLevelDire;
- (uint32_t) penaltyLevelDire;
- (CSODOTALobby_Builder*) setPenaltyLevelDire:(uint32_t) value;
- (CSODOTALobby_Builder*) clearPenaltyLevelDire;

- (BOOL) hasLoadGameId;
- (uint32_t) loadGameId;
- (CSODOTALobby_Builder*) setLoadGameId:(uint32_t) value;
- (CSODOTALobby_Builder*) clearLoadGameId;

- (BOOL) hasSeriesType;
- (uint32_t) seriesType;
- (CSODOTALobby_Builder*) setSeriesType:(uint32_t) value;
- (CSODOTALobby_Builder*) clearSeriesType;

- (BOOL) hasRadiantSeriesWins;
- (uint32_t) radiantSeriesWins;
- (CSODOTALobby_Builder*) setRadiantSeriesWins:(uint32_t) value;
- (CSODOTALobby_Builder*) clearRadiantSeriesWins;

- (BOOL) hasDireSeriesWins;
- (uint32_t) direSeriesWins;
- (CSODOTALobby_Builder*) setDireSeriesWins:(uint32_t) value;
- (CSODOTALobby_Builder*) clearDireSeriesWins;

- (BOOL) hasLootGenerated;
- (uint32_t) lootGenerated;
- (CSODOTALobby_Builder*) setLootGenerated:(uint32_t) value;
- (CSODOTALobby_Builder*) clearLootGenerated;

- (BOOL) hasLootAwarded;
- (uint32_t) lootAwarded;
- (CSODOTALobby_Builder*) setLootAwarded:(uint32_t) value;
- (CSODOTALobby_Builder*) clearLootAwarded;
@end

@interface CSODOTALobbyInternal : PBGeneratedMessage {
@private
  BOOL hasDisableRadiantAutomaticTeamDetection_:1;
  BOOL hasDisableDireAutomaticTeamDetection_:1;
  BOOL hasSubmittedMatchHistory_:1;
  BOOL hasReplaySalt_:1;
  BOOL hasSearchKey_:1;
  BOOL hasAverageRank_:1;
  BOOL hasFinalMatchDuration_:1;
  BOOL disableRadiantAutomaticTeamDetection_:1;
  BOOL disableDireAutomaticTeamDetection_:1;
  BOOL submittedMatchHistory_:1;
  uint32_t replaySalt;
  NSString* searchKey;
  uint32_t averageRank;
  uint32_t finalMatchDuration;
  PBAppendableArray * pendingPlayerReportsArray;
}
- (BOOL) hasSearchKey;
- (BOOL) hasAverageRank;
- (BOOL) hasReplaySalt;
- (BOOL) hasDisableRadiantAutomaticTeamDetection;
- (BOOL) hasDisableDireAutomaticTeamDetection;
- (BOOL) hasFinalMatchDuration;
- (BOOL) hasSubmittedMatchHistory;
@property (readonly, retain) NSString* searchKey;
@property (readonly, retain) PBArray * pendingPlayerReports;
@property (readonly) uint32_t averageRank;
@property (readonly) uint32_t replaySalt;
- (BOOL) disableRadiantAutomaticTeamDetection;
- (BOOL) disableDireAutomaticTeamDetection;
@property (readonly) uint32_t finalMatchDuration;
- (BOOL) submittedMatchHistory;
- (CLobbyPendingPlayerReport*)pendingPlayerReportsAtIndex:(NSUInteger)index;

+ (CSODOTALobbyInternal*) defaultInstance;
- (CSODOTALobbyInternal*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTALobbyInternal_Builder*) builder;
+ (CSODOTALobbyInternal_Builder*) builder;
+ (CSODOTALobbyInternal_Builder*) builderWithPrototype:(CSODOTALobbyInternal*) prototype;
- (CSODOTALobbyInternal_Builder*) toBuilder;

+ (CSODOTALobbyInternal*) parseFromData:(NSData*) data;
+ (CSODOTALobbyInternal*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTALobbyInternal*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTALobbyInternal*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTALobbyInternal*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTALobbyInternal*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTALobbyInternal_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTALobbyInternal* _builderResult;
}

- (CSODOTALobbyInternal*) defaultInstance;

- (CSODOTALobbyInternal_Builder*) clear;
- (CSODOTALobbyInternal_Builder*) clone;

- (CSODOTALobbyInternal*) build;
- (CSODOTALobbyInternal*) buildPartial;

- (CSODOTALobbyInternal_Builder*) mergeFrom:(CSODOTALobbyInternal*) other;
- (CSODOTALobbyInternal_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTALobbyInternal_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSearchKey;
- (NSString*) searchKey;
- (CSODOTALobbyInternal_Builder*) setSearchKey:(NSString*) value;
- (CSODOTALobbyInternal_Builder*) clearSearchKey;

- (PBAppendableArray *)pendingPlayerReports;
- (CLobbyPendingPlayerReport*)pendingPlayerReportsAtIndex:(NSUInteger)index;
- (CSODOTALobbyInternal_Builder *)addPendingPlayerReports:(CLobbyPendingPlayerReport*)value;
- (CSODOTALobbyInternal_Builder *)setPendingPlayerReportsArray:(NSArray *)array;
- (CSODOTALobbyInternal_Builder *)setPendingPlayerReportsValues:(const CLobbyPendingPlayerReport* *)values count:(NSUInteger)count;
- (CSODOTALobbyInternal_Builder *)clearPendingPlayerReports;

- (BOOL) hasAverageRank;
- (uint32_t) averageRank;
- (CSODOTALobbyInternal_Builder*) setAverageRank:(uint32_t) value;
- (CSODOTALobbyInternal_Builder*) clearAverageRank;

- (BOOL) hasReplaySalt;
- (uint32_t) replaySalt;
- (CSODOTALobbyInternal_Builder*) setReplaySalt:(uint32_t) value;
- (CSODOTALobbyInternal_Builder*) clearReplaySalt;

- (BOOL) hasDisableRadiantAutomaticTeamDetection;
- (BOOL) disableRadiantAutomaticTeamDetection;
- (CSODOTALobbyInternal_Builder*) setDisableRadiantAutomaticTeamDetection:(BOOL) value;
- (CSODOTALobbyInternal_Builder*) clearDisableRadiantAutomaticTeamDetection;

- (BOOL) hasDisableDireAutomaticTeamDetection;
- (BOOL) disableDireAutomaticTeamDetection;
- (CSODOTALobbyInternal_Builder*) setDisableDireAutomaticTeamDetection:(BOOL) value;
- (CSODOTALobbyInternal_Builder*) clearDisableDireAutomaticTeamDetection;

- (BOOL) hasFinalMatchDuration;
- (uint32_t) finalMatchDuration;
- (CSODOTALobbyInternal_Builder*) setFinalMatchDuration:(uint32_t) value;
- (CSODOTALobbyInternal_Builder*) clearFinalMatchDuration;

- (BOOL) hasSubmittedMatchHistory;
- (BOOL) submittedMatchHistory;
- (CSODOTALobbyInternal_Builder*) setSubmittedMatchHistory:(BOOL) value;
- (CSODOTALobbyInternal_Builder*) clearSubmittedMatchHistory;
@end

@interface CSODOTALobbyMemcached : PBGeneratedMessage {
@private
  BOOL hasLobby_:1;
  BOOL hasInternal_:1;
  CSODOTALobby* lobby;
  CSODOTALobbyInternal* internal;
}
- (BOOL) hasLobby;
- (BOOL) hasInternal;
@property (readonly, retain) CSODOTALobby* lobby;
@property (readonly, retain) CSODOTALobbyInternal* internal;

+ (CSODOTALobbyMemcached*) defaultInstance;
- (CSODOTALobbyMemcached*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTALobbyMemcached_Builder*) builder;
+ (CSODOTALobbyMemcached_Builder*) builder;
+ (CSODOTALobbyMemcached_Builder*) builderWithPrototype:(CSODOTALobbyMemcached*) prototype;
- (CSODOTALobbyMemcached_Builder*) toBuilder;

+ (CSODOTALobbyMemcached*) parseFromData:(NSData*) data;
+ (CSODOTALobbyMemcached*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTALobbyMemcached*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTALobbyMemcached*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTALobbyMemcached*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTALobbyMemcached*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTALobbyMemcached_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTALobbyMemcached* _builderResult;
}

- (CSODOTALobbyMemcached*) defaultInstance;

- (CSODOTALobbyMemcached_Builder*) clear;
- (CSODOTALobbyMemcached_Builder*) clone;

- (CSODOTALobbyMemcached*) build;
- (CSODOTALobbyMemcached*) buildPartial;

- (CSODOTALobbyMemcached_Builder*) mergeFrom:(CSODOTALobbyMemcached*) other;
- (CSODOTALobbyMemcached_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTALobbyMemcached_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLobby;
- (CSODOTALobby*) lobby;
- (CSODOTALobbyMemcached_Builder*) setLobby:(CSODOTALobby*) value;
- (CSODOTALobbyMemcached_Builder*) setLobbyBuilder:(CSODOTALobby_Builder*) builderForValue;
- (CSODOTALobbyMemcached_Builder*) mergeLobby:(CSODOTALobby*) value;
- (CSODOTALobbyMemcached_Builder*) clearLobby;

- (BOOL) hasInternal;
- (CSODOTALobbyInternal*) internal;
- (CSODOTALobbyMemcached_Builder*) setInternal:(CSODOTALobbyInternal*) value;
- (CSODOTALobbyMemcached_Builder*) setInternalBuilder:(CSODOTALobbyInternal_Builder*) builderForValue;
- (CSODOTALobbyMemcached_Builder*) mergeInternal:(CSODOTALobbyInternal*) value;
- (CSODOTALobbyMemcached_Builder*) clearInternal;
@end

@interface CMsgConnectedPlayers : PBGeneratedMessage {
@private
  BOOL hasNumSpectators_:1;
  BOOL hasTowerState_:1;
  BOOL hasgame_state_:1;
  uint32_t numSpectators;
  uint32_t towerState;
  DOTA_GameState game_state;
  PBAppendableArray * playersArray;
}
- (BOOL) hasgame_state;
- (BOOL) hasNumSpectators;
- (BOOL) hasTowerState;
@property (readonly, retain) PBArray * players;
@property (readonly) DOTA_GameState game_state;
@property (readonly) uint32_t numSpectators;
@property (readonly) uint32_t towerState;
- (CMsgConnectedPlayers_Player*)playersAtIndex:(NSUInteger)index;

+ (CMsgConnectedPlayers*) defaultInstance;
- (CMsgConnectedPlayers*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgConnectedPlayers_Builder*) builder;
+ (CMsgConnectedPlayers_Builder*) builder;
+ (CMsgConnectedPlayers_Builder*) builderWithPrototype:(CMsgConnectedPlayers*) prototype;
- (CMsgConnectedPlayers_Builder*) toBuilder;

+ (CMsgConnectedPlayers*) parseFromData:(NSData*) data;
+ (CMsgConnectedPlayers*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgConnectedPlayers*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgConnectedPlayers*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgConnectedPlayers*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgConnectedPlayers*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgConnectedPlayers_Player : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasHeroId_:1;
  uint64_t steamId;
  uint32_t heroId;
}
- (BOOL) hasSteamId;
- (BOOL) hasHeroId;
@property (readonly) uint64_t steamId;
@property (readonly) uint32_t heroId;

+ (CMsgConnectedPlayers_Player*) defaultInstance;
- (CMsgConnectedPlayers_Player*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgConnectedPlayers_Player_Builder*) builder;
+ (CMsgConnectedPlayers_Player_Builder*) builder;
+ (CMsgConnectedPlayers_Player_Builder*) builderWithPrototype:(CMsgConnectedPlayers_Player*) prototype;
- (CMsgConnectedPlayers_Player_Builder*) toBuilder;

+ (CMsgConnectedPlayers_Player*) parseFromData:(NSData*) data;
+ (CMsgConnectedPlayers_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgConnectedPlayers_Player*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgConnectedPlayers_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgConnectedPlayers_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgConnectedPlayers_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgConnectedPlayers_Player_Builder : PBGeneratedMessage_Builder {
@private
  CMsgConnectedPlayers_Player* _builderResult;
}

- (CMsgConnectedPlayers_Player*) defaultInstance;

- (CMsgConnectedPlayers_Player_Builder*) clear;
- (CMsgConnectedPlayers_Player_Builder*) clone;

- (CMsgConnectedPlayers_Player*) build;
- (CMsgConnectedPlayers_Player*) buildPartial;

- (CMsgConnectedPlayers_Player_Builder*) mergeFrom:(CMsgConnectedPlayers_Player*) other;
- (CMsgConnectedPlayers_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgConnectedPlayers_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgConnectedPlayers_Player_Builder*) setSteamId:(uint64_t) value;
- (CMsgConnectedPlayers_Player_Builder*) clearSteamId;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgConnectedPlayers_Player_Builder*) setHeroId:(uint32_t) value;
- (CMsgConnectedPlayers_Player_Builder*) clearHeroId;
@end

@interface CMsgConnectedPlayers_Builder : PBGeneratedMessage_Builder {
@private
  CMsgConnectedPlayers* _builderResult;
}

- (CMsgConnectedPlayers*) defaultInstance;

- (CMsgConnectedPlayers_Builder*) clear;
- (CMsgConnectedPlayers_Builder*) clone;

- (CMsgConnectedPlayers*) build;
- (CMsgConnectedPlayers*) buildPartial;

- (CMsgConnectedPlayers_Builder*) mergeFrom:(CMsgConnectedPlayers*) other;
- (CMsgConnectedPlayers_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgConnectedPlayers_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)players;
- (CMsgConnectedPlayers_Player*)playersAtIndex:(NSUInteger)index;
- (CMsgConnectedPlayers_Builder *)addPlayers:(CMsgConnectedPlayers_Player*)value;
- (CMsgConnectedPlayers_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgConnectedPlayers_Builder *)setPlayersValues:(const CMsgConnectedPlayers_Player* *)values count:(NSUInteger)count;
- (CMsgConnectedPlayers_Builder *)clearPlayers;

- (BOOL) hasgame_state;
- (DOTA_GameState) game_state;
- (CMsgConnectedPlayers_Builder*) setgame_state:(DOTA_GameState) value;
- (CMsgConnectedPlayers_Builder*) cleargame_state;

- (BOOL) hasNumSpectators;
- (uint32_t) numSpectators;
- (CMsgConnectedPlayers_Builder*) setNumSpectators:(uint32_t) value;
- (CMsgConnectedPlayers_Builder*) clearNumSpectators;

- (BOOL) hasTowerState;
- (uint32_t) towerState;
- (CMsgConnectedPlayers_Builder*) setTowerState:(uint32_t) value;
- (CMsgConnectedPlayers_Builder*) clearTowerState;
@end

@interface CMsgStartFindingMatch : PBGeneratedMessage {
@private
  BOOL hasKey_:1;
  BOOL hasMatchgroups_:1;
  BOOL hasClientVersion_:1;
  BOOL hasGameModes_:1;
  BOOL hasbot_difficulty_:1;
  BOOL hasmatch_type_:1;
  NSString* key;
  uint32_t matchgroups;
  uint32_t clientVersion;
  uint32_t gameModes;
  DOTABotDifficulty bot_difficulty;
  MatchType match_type;
}
- (BOOL) hasKey;
- (BOOL) hasMatchgroups;
- (BOOL) hasClientVersion;
- (BOOL) hasGameModes;
- (BOOL) hasbot_difficulty;
- (BOOL) hasmatch_type;
@property (readonly, retain) NSString* key;
@property (readonly) uint32_t matchgroups;
@property (readonly) uint32_t clientVersion;
@property (readonly) uint32_t gameModes;
@property (readonly) DOTABotDifficulty bot_difficulty;
@property (readonly) MatchType match_type;

+ (CMsgStartFindingMatch*) defaultInstance;
- (CMsgStartFindingMatch*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgStartFindingMatch_Builder*) builder;
+ (CMsgStartFindingMatch_Builder*) builder;
+ (CMsgStartFindingMatch_Builder*) builderWithPrototype:(CMsgStartFindingMatch*) prototype;
- (CMsgStartFindingMatch_Builder*) toBuilder;

+ (CMsgStartFindingMatch*) parseFromData:(NSData*) data;
+ (CMsgStartFindingMatch*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgStartFindingMatch*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgStartFindingMatch*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgStartFindingMatch*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgStartFindingMatch*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgStartFindingMatch_Builder : PBGeneratedMessage_Builder {
@private
  CMsgStartFindingMatch* _builderResult;
}

- (CMsgStartFindingMatch*) defaultInstance;

- (CMsgStartFindingMatch_Builder*) clear;
- (CMsgStartFindingMatch_Builder*) clone;

- (CMsgStartFindingMatch*) build;
- (CMsgStartFindingMatch*) buildPartial;

- (CMsgStartFindingMatch_Builder*) mergeFrom:(CMsgStartFindingMatch*) other;
- (CMsgStartFindingMatch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgStartFindingMatch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKey;
- (NSString*) key;
- (CMsgStartFindingMatch_Builder*) setKey:(NSString*) value;
- (CMsgStartFindingMatch_Builder*) clearKey;

- (BOOL) hasMatchgroups;
- (uint32_t) matchgroups;
- (CMsgStartFindingMatch_Builder*) setMatchgroups:(uint32_t) value;
- (CMsgStartFindingMatch_Builder*) clearMatchgroups;

- (BOOL) hasClientVersion;
- (uint32_t) clientVersion;
- (CMsgStartFindingMatch_Builder*) setClientVersion:(uint32_t) value;
- (CMsgStartFindingMatch_Builder*) clearClientVersion;

- (BOOL) hasGameModes;
- (uint32_t) gameModes;
- (CMsgStartFindingMatch_Builder*) setGameModes:(uint32_t) value;
- (CMsgStartFindingMatch_Builder*) clearGameModes;

- (BOOL) hasbot_difficulty;
- (DOTABotDifficulty) bot_difficulty;
- (CMsgStartFindingMatch_Builder*) setbot_difficulty:(DOTABotDifficulty) value;
- (CMsgStartFindingMatch_Builder*) clearbot_difficulty;

- (BOOL) hasmatch_type;
- (MatchType) match_type;
- (CMsgStartFindingMatch_Builder*) setmatch_type:(MatchType) value;
- (CMsgStartFindingMatch_Builder*) clearmatch_type;
@end

@interface CMsgStopFindingMatch : PBGeneratedMessage {
@private
}

+ (CMsgStopFindingMatch*) defaultInstance;
- (CMsgStopFindingMatch*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgStopFindingMatch_Builder*) builder;
+ (CMsgStopFindingMatch_Builder*) builder;
+ (CMsgStopFindingMatch_Builder*) builderWithPrototype:(CMsgStopFindingMatch*) prototype;
- (CMsgStopFindingMatch_Builder*) toBuilder;

+ (CMsgStopFindingMatch*) parseFromData:(NSData*) data;
+ (CMsgStopFindingMatch*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgStopFindingMatch*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgStopFindingMatch*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgStopFindingMatch*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgStopFindingMatch*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgStopFindingMatch_Builder : PBGeneratedMessage_Builder {
@private
  CMsgStopFindingMatch* _builderResult;
}

- (CMsgStopFindingMatch*) defaultInstance;

- (CMsgStopFindingMatch_Builder*) clear;
- (CMsgStopFindingMatch_Builder*) clone;

- (CMsgStopFindingMatch*) build;
- (CMsgStopFindingMatch*) buildPartial;

- (CMsgStopFindingMatch_Builder*) mergeFrom:(CMsgStopFindingMatch*) other;
- (CMsgStopFindingMatch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgStopFindingMatch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgReadyUp : PBGeneratedMessage {
@private
  BOOL hasstate_:1;
  DOTALobbyReadyState state;
}
- (BOOL) hasstate;
@property (readonly) DOTALobbyReadyState state;

+ (CMsgReadyUp*) defaultInstance;
- (CMsgReadyUp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgReadyUp_Builder*) builder;
+ (CMsgReadyUp_Builder*) builder;
+ (CMsgReadyUp_Builder*) builderWithPrototype:(CMsgReadyUp*) prototype;
- (CMsgReadyUp_Builder*) toBuilder;

+ (CMsgReadyUp*) parseFromData:(NSData*) data;
+ (CMsgReadyUp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReadyUp*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgReadyUp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReadyUp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgReadyUp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgReadyUp_Builder : PBGeneratedMessage_Builder {
@private
  CMsgReadyUp* _builderResult;
}

- (CMsgReadyUp*) defaultInstance;

- (CMsgReadyUp_Builder*) clear;
- (CMsgReadyUp_Builder*) clone;

- (CMsgReadyUp*) build;
- (CMsgReadyUp*) buildPartial;

- (CMsgReadyUp_Builder*) mergeFrom:(CMsgReadyUp*) other;
- (CMsgReadyUp_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgReadyUp_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasstate;
- (DOTALobbyReadyState) state;
- (CMsgReadyUp_Builder*) setstate:(DOTALobbyReadyState) value;
- (CMsgReadyUp_Builder*) clearstate;
@end

@interface CMsgReadyUpStatus : PBGeneratedMessage {
@private
  BOOL hasLobbyId_:1;
  uint64_t lobbyId;
  PBAppendableArray * acceptedIdsArray;
  PBAppendableArray * declinedIdsArray;
}
- (BOOL) hasLobbyId;
@property (readonly) uint64_t lobbyId;
@property (readonly, retain) PBArray * acceptedIds;
@property (readonly, retain) PBArray * declinedIds;
- (uint32_t)acceptedIdsAtIndex:(NSUInteger)index;
- (uint32_t)declinedIdsAtIndex:(NSUInteger)index;

+ (CMsgReadyUpStatus*) defaultInstance;
- (CMsgReadyUpStatus*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgReadyUpStatus_Builder*) builder;
+ (CMsgReadyUpStatus_Builder*) builder;
+ (CMsgReadyUpStatus_Builder*) builderWithPrototype:(CMsgReadyUpStatus*) prototype;
- (CMsgReadyUpStatus_Builder*) toBuilder;

+ (CMsgReadyUpStatus*) parseFromData:(NSData*) data;
+ (CMsgReadyUpStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReadyUpStatus*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgReadyUpStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReadyUpStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgReadyUpStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgReadyUpStatus_Builder : PBGeneratedMessage_Builder {
@private
  CMsgReadyUpStatus* _builderResult;
}

- (CMsgReadyUpStatus*) defaultInstance;

- (CMsgReadyUpStatus_Builder*) clear;
- (CMsgReadyUpStatus_Builder*) clone;

- (CMsgReadyUpStatus*) build;
- (CMsgReadyUpStatus*) buildPartial;

- (CMsgReadyUpStatus_Builder*) mergeFrom:(CMsgReadyUpStatus*) other;
- (CMsgReadyUpStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgReadyUpStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgReadyUpStatus_Builder*) setLobbyId:(uint64_t) value;
- (CMsgReadyUpStatus_Builder*) clearLobbyId;

- (PBAppendableArray *)acceptedIds;
- (uint32_t)acceptedIdsAtIndex:(NSUInteger)index;
- (CMsgReadyUpStatus_Builder *)addAcceptedIds:(uint32_t)value;
- (CMsgReadyUpStatus_Builder *)setAcceptedIdsArray:(NSArray *)array;
- (CMsgReadyUpStatus_Builder *)setAcceptedIdsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgReadyUpStatus_Builder *)clearAcceptedIds;

- (PBAppendableArray *)declinedIds;
- (uint32_t)declinedIdsAtIndex:(NSUInteger)index;
- (CMsgReadyUpStatus_Builder *)addDeclinedIds:(uint32_t)value;
- (CMsgReadyUpStatus_Builder *)setDeclinedIdsArray:(NSArray *)array;
- (CMsgReadyUpStatus_Builder *)setDeclinedIdsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgReadyUpStatus_Builder *)clearDeclinedIds;
@end

@interface CMsgSpawnLootGreevil : PBGeneratedMessage {
@private
}

+ (CMsgSpawnLootGreevil*) defaultInstance;
- (CMsgSpawnLootGreevil*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSpawnLootGreevil_Builder*) builder;
+ (CMsgSpawnLootGreevil_Builder*) builder;
+ (CMsgSpawnLootGreevil_Builder*) builderWithPrototype:(CMsgSpawnLootGreevil*) prototype;
- (CMsgSpawnLootGreevil_Builder*) toBuilder;

+ (CMsgSpawnLootGreevil*) parseFromData:(NSData*) data;
+ (CMsgSpawnLootGreevil*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpawnLootGreevil*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSpawnLootGreevil*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpawnLootGreevil*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSpawnLootGreevil*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSpawnLootGreevil_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSpawnLootGreevil* _builderResult;
}

- (CMsgSpawnLootGreevil*) defaultInstance;

- (CMsgSpawnLootGreevil_Builder*) clear;
- (CMsgSpawnLootGreevil_Builder*) clone;

- (CMsgSpawnLootGreevil*) build;
- (CMsgSpawnLootGreevil*) buildPartial;

- (CMsgSpawnLootGreevil_Builder*) mergeFrom:(CMsgSpawnLootGreevil*) other;
- (CMsgSpawnLootGreevil_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSpawnLootGreevil_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDismissLootGreevil : PBGeneratedMessage {
@private
  BOOL hasKilled_:1;
  BOOL hasLobbyId_:1;
  BOOL killed_:1;
  uint64_t lobbyId;
}
- (BOOL) hasLobbyId;
- (BOOL) hasKilled;
@property (readonly) uint64_t lobbyId;
- (BOOL) killed;

+ (CMsgDismissLootGreevil*) defaultInstance;
- (CMsgDismissLootGreevil*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDismissLootGreevil_Builder*) builder;
+ (CMsgDismissLootGreevil_Builder*) builder;
+ (CMsgDismissLootGreevil_Builder*) builderWithPrototype:(CMsgDismissLootGreevil*) prototype;
- (CMsgDismissLootGreevil_Builder*) toBuilder;

+ (CMsgDismissLootGreevil*) parseFromData:(NSData*) data;
+ (CMsgDismissLootGreevil*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDismissLootGreevil*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDismissLootGreevil*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDismissLootGreevil*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDismissLootGreevil*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDismissLootGreevil_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDismissLootGreevil* _builderResult;
}

- (CMsgDismissLootGreevil*) defaultInstance;

- (CMsgDismissLootGreevil_Builder*) clear;
- (CMsgDismissLootGreevil_Builder*) clone;

- (CMsgDismissLootGreevil*) build;
- (CMsgDismissLootGreevil*) buildPartial;

- (CMsgDismissLootGreevil_Builder*) mergeFrom:(CMsgDismissLootGreevil*) other;
- (CMsgDismissLootGreevil_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDismissLootGreevil_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgDismissLootGreevil_Builder*) setLobbyId:(uint64_t) value;
- (CMsgDismissLootGreevil_Builder*) clearLobbyId;

- (BOOL) hasKilled;
- (BOOL) killed;
- (CMsgDismissLootGreevil_Builder*) setKilled:(BOOL) value;
- (CMsgDismissLootGreevil_Builder*) clearKilled;
@end

@interface CMsgMatchmakingSearchCountRequest : PBGeneratedMessage {
@private
}

+ (CMsgMatchmakingSearchCountRequest*) defaultInstance;
- (CMsgMatchmakingSearchCountRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMatchmakingSearchCountRequest_Builder*) builder;
+ (CMsgMatchmakingSearchCountRequest_Builder*) builder;
+ (CMsgMatchmakingSearchCountRequest_Builder*) builderWithPrototype:(CMsgMatchmakingSearchCountRequest*) prototype;
- (CMsgMatchmakingSearchCountRequest_Builder*) toBuilder;

+ (CMsgMatchmakingSearchCountRequest*) parseFromData:(NSData*) data;
+ (CMsgMatchmakingSearchCountRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingSearchCountRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMatchmakingSearchCountRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingSearchCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMatchmakingSearchCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMatchmakingSearchCountRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMatchmakingSearchCountRequest* _builderResult;
}

- (CMsgMatchmakingSearchCountRequest*) defaultInstance;

- (CMsgMatchmakingSearchCountRequest_Builder*) clear;
- (CMsgMatchmakingSearchCountRequest_Builder*) clone;

- (CMsgMatchmakingSearchCountRequest*) build;
- (CMsgMatchmakingSearchCountRequest*) buildPartial;

- (CMsgMatchmakingSearchCountRequest_Builder*) mergeFrom:(CMsgMatchmakingSearchCountRequest*) other;
- (CMsgMatchmakingSearchCountRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMatchmakingSearchCountRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMatchmakingSearchCountResponse : PBGeneratedMessage {
@private
  PBAppendableArray * searchingPlayersByGroupArray;
}
@property (readonly, retain) PBArray * searchingPlayersByGroup;
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index;

+ (CMsgMatchmakingSearchCountResponse*) defaultInstance;
- (CMsgMatchmakingSearchCountResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMatchmakingSearchCountResponse_Builder*) builder;
+ (CMsgMatchmakingSearchCountResponse_Builder*) builder;
+ (CMsgMatchmakingSearchCountResponse_Builder*) builderWithPrototype:(CMsgMatchmakingSearchCountResponse*) prototype;
- (CMsgMatchmakingSearchCountResponse_Builder*) toBuilder;

+ (CMsgMatchmakingSearchCountResponse*) parseFromData:(NSData*) data;
+ (CMsgMatchmakingSearchCountResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingSearchCountResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMatchmakingSearchCountResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingSearchCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMatchmakingSearchCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMatchmakingSearchCountResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMatchmakingSearchCountResponse* _builderResult;
}

- (CMsgMatchmakingSearchCountResponse*) defaultInstance;

- (CMsgMatchmakingSearchCountResponse_Builder*) clear;
- (CMsgMatchmakingSearchCountResponse_Builder*) clone;

- (CMsgMatchmakingSearchCountResponse*) build;
- (CMsgMatchmakingSearchCountResponse*) buildPartial;

- (CMsgMatchmakingSearchCountResponse_Builder*) mergeFrom:(CMsgMatchmakingSearchCountResponse*) other;
- (CMsgMatchmakingSearchCountResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMatchmakingSearchCountResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)searchingPlayersByGroup;
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index;
- (CMsgMatchmakingSearchCountResponse_Builder *)addSearchingPlayersByGroup:(uint32_t)value;
- (CMsgMatchmakingSearchCountResponse_Builder *)setSearchingPlayersByGroupArray:(NSArray *)array;
- (CMsgMatchmakingSearchCountResponse_Builder *)setSearchingPlayersByGroupValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgMatchmakingSearchCountResponse_Builder *)clearSearchingPlayersByGroup;
@end

@interface CSourceTVGame : PBGeneratedMessage {
@private
  BOOL hasTvBroadcastTime_:1;
  BOOL hasGameTime_:1;
  BOOL hasServerSteamid_:1;
  BOOL hasGameName_:1;
  BOOL hasSourceTvPublicAddr_:1;
  BOOL hasSourceTvPrivateAddr_:1;
  BOOL hasSourceTvPort_:1;
  BOOL hasNumSpectators_:1;
  BOOL hasTournamentId_:1;
  BOOL hasTournamentGameId_:1;
  BOOL hasTowerState_:1;
  BOOL hasLeagueid_:1;
  Float32 tvBroadcastTime;
  Float32 gameTime;
  uint64_t serverSteamid;
  NSString* gameName;
  uint32_t sourceTvPublicAddr;
  uint32_t sourceTvPrivateAddr;
  uint32_t sourceTvPort;
  uint32_t numSpectators;
  uint32_t tournamentId;
  uint32_t tournamentGameId;
  uint32_t towerState;
  uint32_t leagueid;
  PBAppendableArray * goodPlayersArray;
  PBAppendableArray * badPlayersArray;
  PBAppendableArray * otherPlayersArray;
  PBAppendableArray * teamDetailsArray;
}
- (BOOL) hasSourceTvPublicAddr;
- (BOOL) hasSourceTvPrivateAddr;
- (BOOL) hasSourceTvPort;
- (BOOL) hasGameName;
- (BOOL) hasNumSpectators;
- (BOOL) hasTournamentId;
- (BOOL) hasTournamentGameId;
- (BOOL) hasTowerState;
- (BOOL) hasTvBroadcastTime;
- (BOOL) hasGameTime;
- (BOOL) hasServerSteamid;
- (BOOL) hasLeagueid;
@property (readonly) uint32_t sourceTvPublicAddr;
@property (readonly) uint32_t sourceTvPrivateAddr;
@property (readonly) uint32_t sourceTvPort;
@property (readonly, retain) PBArray * goodPlayers;
@property (readonly, retain) PBArray * badPlayers;
@property (readonly, retain) PBArray * otherPlayers;
@property (readonly, retain) NSString* gameName;
@property (readonly, retain) PBArray * teamDetails;
@property (readonly) uint32_t numSpectators;
@property (readonly) uint32_t tournamentId;
@property (readonly) uint32_t tournamentGameId;
@property (readonly) uint32_t towerState;
@property (readonly) Float32 tvBroadcastTime;
@property (readonly) Float32 gameTime;
@property (readonly) uint64_t serverSteamid;
@property (readonly) uint32_t leagueid;
- (CSourceTVGame_Player*)goodPlayersAtIndex:(NSUInteger)index;
- (CSourceTVGame_Player*)badPlayersAtIndex:(NSUInteger)index;
- (CSourceTVGame_Player*)otherPlayersAtIndex:(NSUInteger)index;
- (CLobbyTeamDetails*)teamDetailsAtIndex:(NSUInteger)index;

+ (CSourceTVGame*) defaultInstance;
- (CSourceTVGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSourceTVGame_Builder*) builder;
+ (CSourceTVGame_Builder*) builder;
+ (CSourceTVGame_Builder*) builderWithPrototype:(CSourceTVGame*) prototype;
- (CSourceTVGame_Builder*) toBuilder;

+ (CSourceTVGame*) parseFromData:(NSData*) data;
+ (CSourceTVGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSourceTVGame*) parseFromInputStream:(NSInputStream*) input;
+ (CSourceTVGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSourceTVGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSourceTVGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSourceTVGame_Player : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasName_:1;
  BOOL hasHeroId_:1;
  uint64_t steamId;
  NSString* name;
  uint32_t heroId;
}
- (BOOL) hasSteamId;
- (BOOL) hasName;
- (BOOL) hasHeroId;
@property (readonly) uint64_t steamId;
@property (readonly, retain) NSString* name;
@property (readonly) uint32_t heroId;

+ (CSourceTVGame_Player*) defaultInstance;
- (CSourceTVGame_Player*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSourceTVGame_Player_Builder*) builder;
+ (CSourceTVGame_Player_Builder*) builder;
+ (CSourceTVGame_Player_Builder*) builderWithPrototype:(CSourceTVGame_Player*) prototype;
- (CSourceTVGame_Player_Builder*) toBuilder;

+ (CSourceTVGame_Player*) parseFromData:(NSData*) data;
+ (CSourceTVGame_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSourceTVGame_Player*) parseFromInputStream:(NSInputStream*) input;
+ (CSourceTVGame_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSourceTVGame_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSourceTVGame_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSourceTVGame_Player_Builder : PBGeneratedMessage_Builder {
@private
  CSourceTVGame_Player* _builderResult;
}

- (CSourceTVGame_Player*) defaultInstance;

- (CSourceTVGame_Player_Builder*) clear;
- (CSourceTVGame_Player_Builder*) clone;

- (CSourceTVGame_Player*) build;
- (CSourceTVGame_Player*) buildPartial;

- (CSourceTVGame_Player_Builder*) mergeFrom:(CSourceTVGame_Player*) other;
- (CSourceTVGame_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSourceTVGame_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CSourceTVGame_Player_Builder*) setSteamId:(uint64_t) value;
- (CSourceTVGame_Player_Builder*) clearSteamId;

- (BOOL) hasName;
- (NSString*) name;
- (CSourceTVGame_Player_Builder*) setName:(NSString*) value;
- (CSourceTVGame_Player_Builder*) clearName;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CSourceTVGame_Player_Builder*) setHeroId:(uint32_t) value;
- (CSourceTVGame_Player_Builder*) clearHeroId;
@end

@interface CSourceTVGame_Builder : PBGeneratedMessage_Builder {
@private
  CSourceTVGame* _builderResult;
}

- (CSourceTVGame*) defaultInstance;

- (CSourceTVGame_Builder*) clear;
- (CSourceTVGame_Builder*) clone;

- (CSourceTVGame*) build;
- (CSourceTVGame*) buildPartial;

- (CSourceTVGame_Builder*) mergeFrom:(CSourceTVGame*) other;
- (CSourceTVGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSourceTVGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSourceTvPublicAddr;
- (uint32_t) sourceTvPublicAddr;
- (CSourceTVGame_Builder*) setSourceTvPublicAddr:(uint32_t) value;
- (CSourceTVGame_Builder*) clearSourceTvPublicAddr;

- (BOOL) hasSourceTvPrivateAddr;
- (uint32_t) sourceTvPrivateAddr;
- (CSourceTVGame_Builder*) setSourceTvPrivateAddr:(uint32_t) value;
- (CSourceTVGame_Builder*) clearSourceTvPrivateAddr;

- (BOOL) hasSourceTvPort;
- (uint32_t) sourceTvPort;
- (CSourceTVGame_Builder*) setSourceTvPort:(uint32_t) value;
- (CSourceTVGame_Builder*) clearSourceTvPort;

- (PBAppendableArray *)goodPlayers;
- (CSourceTVGame_Player*)goodPlayersAtIndex:(NSUInteger)index;
- (CSourceTVGame_Builder *)addGoodPlayers:(CSourceTVGame_Player*)value;
- (CSourceTVGame_Builder *)setGoodPlayersArray:(NSArray *)array;
- (CSourceTVGame_Builder *)setGoodPlayersValues:(const CSourceTVGame_Player* *)values count:(NSUInteger)count;
- (CSourceTVGame_Builder *)clearGoodPlayers;

- (PBAppendableArray *)badPlayers;
- (CSourceTVGame_Player*)badPlayersAtIndex:(NSUInteger)index;
- (CSourceTVGame_Builder *)addBadPlayers:(CSourceTVGame_Player*)value;
- (CSourceTVGame_Builder *)setBadPlayersArray:(NSArray *)array;
- (CSourceTVGame_Builder *)setBadPlayersValues:(const CSourceTVGame_Player* *)values count:(NSUInteger)count;
- (CSourceTVGame_Builder *)clearBadPlayers;

- (PBAppendableArray *)otherPlayers;
- (CSourceTVGame_Player*)otherPlayersAtIndex:(NSUInteger)index;
- (CSourceTVGame_Builder *)addOtherPlayers:(CSourceTVGame_Player*)value;
- (CSourceTVGame_Builder *)setOtherPlayersArray:(NSArray *)array;
- (CSourceTVGame_Builder *)setOtherPlayersValues:(const CSourceTVGame_Player* *)values count:(NSUInteger)count;
- (CSourceTVGame_Builder *)clearOtherPlayers;

- (BOOL) hasGameName;
- (NSString*) gameName;
- (CSourceTVGame_Builder*) setGameName:(NSString*) value;
- (CSourceTVGame_Builder*) clearGameName;

- (PBAppendableArray *)teamDetails;
- (CLobbyTeamDetails*)teamDetailsAtIndex:(NSUInteger)index;
- (CSourceTVGame_Builder *)addTeamDetails:(CLobbyTeamDetails*)value;
- (CSourceTVGame_Builder *)setTeamDetailsArray:(NSArray *)array;
- (CSourceTVGame_Builder *)setTeamDetailsValues:(const CLobbyTeamDetails* *)values count:(NSUInteger)count;
- (CSourceTVGame_Builder *)clearTeamDetails;

- (BOOL) hasNumSpectators;
- (uint32_t) numSpectators;
- (CSourceTVGame_Builder*) setNumSpectators:(uint32_t) value;
- (CSourceTVGame_Builder*) clearNumSpectators;

- (BOOL) hasTournamentId;
- (uint32_t) tournamentId;
- (CSourceTVGame_Builder*) setTournamentId:(uint32_t) value;
- (CSourceTVGame_Builder*) clearTournamentId;

- (BOOL) hasTournamentGameId;
- (uint32_t) tournamentGameId;
- (CSourceTVGame_Builder*) setTournamentGameId:(uint32_t) value;
- (CSourceTVGame_Builder*) clearTournamentGameId;

- (BOOL) hasTowerState;
- (uint32_t) towerState;
- (CSourceTVGame_Builder*) setTowerState:(uint32_t) value;
- (CSourceTVGame_Builder*) clearTowerState;

- (BOOL) hasTvBroadcastTime;
- (Float32) tvBroadcastTime;
- (CSourceTVGame_Builder*) setTvBroadcastTime:(Float32) value;
- (CSourceTVGame_Builder*) clearTvBroadcastTime;

- (BOOL) hasGameTime;
- (Float32) gameTime;
- (CSourceTVGame_Builder*) setGameTime:(Float32) value;
- (CSourceTVGame_Builder*) clearGameTime;

- (BOOL) hasServerSteamid;
- (uint64_t) serverSteamid;
- (CSourceTVGame_Builder*) setServerSteamid:(uint64_t) value;
- (CSourceTVGame_Builder*) clearServerSteamid;

- (BOOL) hasLeagueid;
- (uint32_t) leagueid;
- (CSourceTVGame_Builder*) setLeagueid:(uint32_t) value;
- (CSourceTVGame_Builder*) clearLeagueid;
@end

@interface CMsgSourceTVGamesResponse : PBGeneratedMessage {
@private
  BOOL hasNumTotalGames_:1;
  uint32_t numTotalGames;
  PBAppendableArray * gamesArray;
}
- (BOOL) hasNumTotalGames;
@property (readonly, retain) PBArray * games;
@property (readonly) uint32_t numTotalGames;
- (CSourceTVGame*)gamesAtIndex:(NSUInteger)index;

+ (CMsgSourceTVGamesResponse*) defaultInstance;
- (CMsgSourceTVGamesResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSourceTVGamesResponse_Builder*) builder;
+ (CMsgSourceTVGamesResponse_Builder*) builder;
+ (CMsgSourceTVGamesResponse_Builder*) builderWithPrototype:(CMsgSourceTVGamesResponse*) prototype;
- (CMsgSourceTVGamesResponse_Builder*) toBuilder;

+ (CMsgSourceTVGamesResponse*) parseFromData:(NSData*) data;
+ (CMsgSourceTVGamesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSourceTVGamesResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSourceTVGamesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSourceTVGamesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSourceTVGamesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSourceTVGamesResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSourceTVGamesResponse* _builderResult;
}

- (CMsgSourceTVGamesResponse*) defaultInstance;

- (CMsgSourceTVGamesResponse_Builder*) clear;
- (CMsgSourceTVGamesResponse_Builder*) clone;

- (CMsgSourceTVGamesResponse*) build;
- (CMsgSourceTVGamesResponse*) buildPartial;

- (CMsgSourceTVGamesResponse_Builder*) mergeFrom:(CMsgSourceTVGamesResponse*) other;
- (CMsgSourceTVGamesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSourceTVGamesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)games;
- (CSourceTVGame*)gamesAtIndex:(NSUInteger)index;
- (CMsgSourceTVGamesResponse_Builder *)addGames:(CSourceTVGame*)value;
- (CMsgSourceTVGamesResponse_Builder *)setGamesArray:(NSArray *)array;
- (CMsgSourceTVGamesResponse_Builder *)setGamesValues:(const CSourceTVGame* *)values count:(NSUInteger)count;
- (CMsgSourceTVGamesResponse_Builder *)clearGames;

- (BOOL) hasNumTotalGames;
- (uint32_t) numTotalGames;
- (CMsgSourceTVGamesResponse_Builder*) setNumTotalGames:(uint32_t) value;
- (CMsgSourceTVGamesResponse_Builder*) clearNumTotalGames;
@end

@interface CMsgFindSourceTVGames : PBGeneratedMessage {
@private
  BOOL hasDiretide_:1;
  BOOL hasXmas_:1;
  BOOL hasSearchKey_:1;
  BOOL hasStart_:1;
  BOOL hasNumGames_:1;
  BOOL hasLeagueid_:1;
  BOOL hasHeroid_:1;
  BOOL diretide_:1;
  BOOL xmas_:1;
  NSString* searchKey;
  uint32_t start;
  uint32_t numGames;
  uint32_t leagueid;
  uint32_t heroid;
}
- (BOOL) hasSearchKey;
- (BOOL) hasStart;
- (BOOL) hasNumGames;
- (BOOL) hasLeagueid;
- (BOOL) hasHeroid;
- (BOOL) hasDiretide;
- (BOOL) hasXmas;
@property (readonly, retain) NSString* searchKey;
@property (readonly) uint32_t start;
@property (readonly) uint32_t numGames;
@property (readonly) uint32_t leagueid;
@property (readonly) uint32_t heroid;
- (BOOL) diretide;
- (BOOL) xmas;

+ (CMsgFindSourceTVGames*) defaultInstance;
- (CMsgFindSourceTVGames*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgFindSourceTVGames_Builder*) builder;
+ (CMsgFindSourceTVGames_Builder*) builder;
+ (CMsgFindSourceTVGames_Builder*) builderWithPrototype:(CMsgFindSourceTVGames*) prototype;
- (CMsgFindSourceTVGames_Builder*) toBuilder;

+ (CMsgFindSourceTVGames*) parseFromData:(NSData*) data;
+ (CMsgFindSourceTVGames*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgFindSourceTVGames*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgFindSourceTVGames*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgFindSourceTVGames*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgFindSourceTVGames*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgFindSourceTVGames_Builder : PBGeneratedMessage_Builder {
@private
  CMsgFindSourceTVGames* _builderResult;
}

- (CMsgFindSourceTVGames*) defaultInstance;

- (CMsgFindSourceTVGames_Builder*) clear;
- (CMsgFindSourceTVGames_Builder*) clone;

- (CMsgFindSourceTVGames*) build;
- (CMsgFindSourceTVGames*) buildPartial;

- (CMsgFindSourceTVGames_Builder*) mergeFrom:(CMsgFindSourceTVGames*) other;
- (CMsgFindSourceTVGames_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgFindSourceTVGames_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSearchKey;
- (NSString*) searchKey;
- (CMsgFindSourceTVGames_Builder*) setSearchKey:(NSString*) value;
- (CMsgFindSourceTVGames_Builder*) clearSearchKey;

- (BOOL) hasStart;
- (uint32_t) start;
- (CMsgFindSourceTVGames_Builder*) setStart:(uint32_t) value;
- (CMsgFindSourceTVGames_Builder*) clearStart;

- (BOOL) hasNumGames;
- (uint32_t) numGames;
- (CMsgFindSourceTVGames_Builder*) setNumGames:(uint32_t) value;
- (CMsgFindSourceTVGames_Builder*) clearNumGames;

- (BOOL) hasLeagueid;
- (uint32_t) leagueid;
- (CMsgFindSourceTVGames_Builder*) setLeagueid:(uint32_t) value;
- (CMsgFindSourceTVGames_Builder*) clearLeagueid;

- (BOOL) hasHeroid;
- (uint32_t) heroid;
- (CMsgFindSourceTVGames_Builder*) setHeroid:(uint32_t) value;
- (CMsgFindSourceTVGames_Builder*) clearHeroid;

- (BOOL) hasDiretide;
- (BOOL) diretide;
- (CMsgFindSourceTVGames_Builder*) setDiretide:(BOOL) value;
- (CMsgFindSourceTVGames_Builder*) clearDiretide;

- (BOOL) hasXmas;
- (BOOL) xmas;
- (CMsgFindSourceTVGames_Builder*) setXmas:(BOOL) value;
- (CMsgFindSourceTVGames_Builder*) clearXmas;
@end

@interface CMsgSpectateFriendGame : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  uint64_t steamId;
}
- (BOOL) hasSteamId;
@property (readonly) uint64_t steamId;

+ (CMsgSpectateFriendGame*) defaultInstance;
- (CMsgSpectateFriendGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSpectateFriendGame_Builder*) builder;
+ (CMsgSpectateFriendGame_Builder*) builder;
+ (CMsgSpectateFriendGame_Builder*) builderWithPrototype:(CMsgSpectateFriendGame*) prototype;
- (CMsgSpectateFriendGame_Builder*) toBuilder;

+ (CMsgSpectateFriendGame*) parseFromData:(NSData*) data;
+ (CMsgSpectateFriendGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpectateFriendGame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSpectateFriendGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpectateFriendGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSpectateFriendGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSpectateFriendGame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSpectateFriendGame* _builderResult;
}

- (CMsgSpectateFriendGame*) defaultInstance;

- (CMsgSpectateFriendGame_Builder*) clear;
- (CMsgSpectateFriendGame_Builder*) clone;

- (CMsgSpectateFriendGame*) build;
- (CMsgSpectateFriendGame*) buildPartial;

- (CMsgSpectateFriendGame_Builder*) mergeFrom:(CMsgSpectateFriendGame*) other;
- (CMsgSpectateFriendGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSpectateFriendGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgSpectateFriendGame_Builder*) setSteamId:(uint64_t) value;
- (CMsgSpectateFriendGame_Builder*) clearSteamId;
@end

@interface CMsgSpectateFriendGameResponse : PBGeneratedMessage {
@private
  BOOL hasServerSteamid_:1;
  uint64_t serverSteamid;
}
- (BOOL) hasServerSteamid;
@property (readonly) uint64_t serverSteamid;

+ (CMsgSpectateFriendGameResponse*) defaultInstance;
- (CMsgSpectateFriendGameResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSpectateFriendGameResponse_Builder*) builder;
+ (CMsgSpectateFriendGameResponse_Builder*) builder;
+ (CMsgSpectateFriendGameResponse_Builder*) builderWithPrototype:(CMsgSpectateFriendGameResponse*) prototype;
- (CMsgSpectateFriendGameResponse_Builder*) toBuilder;

+ (CMsgSpectateFriendGameResponse*) parseFromData:(NSData*) data;
+ (CMsgSpectateFriendGameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpectateFriendGameResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSpectateFriendGameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpectateFriendGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSpectateFriendGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSpectateFriendGameResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSpectateFriendGameResponse* _builderResult;
}

- (CMsgSpectateFriendGameResponse*) defaultInstance;

- (CMsgSpectateFriendGameResponse_Builder*) clear;
- (CMsgSpectateFriendGameResponse_Builder*) clone;

- (CMsgSpectateFriendGameResponse*) build;
- (CMsgSpectateFriendGameResponse*) buildPartial;

- (CMsgSpectateFriendGameResponse_Builder*) mergeFrom:(CMsgSpectateFriendGameResponse*) other;
- (CMsgSpectateFriendGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSpectateFriendGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasServerSteamid;
- (uint64_t) serverSteamid;
- (CMsgSpectateFriendGameResponse_Builder*) setServerSteamid:(uint64_t) value;
- (CMsgSpectateFriendGameResponse_Builder*) clearServerSteamid;
@end

@interface CMsgAbandonCurrentGame : PBGeneratedMessage {
@private
}

+ (CMsgAbandonCurrentGame*) defaultInstance;
- (CMsgAbandonCurrentGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgAbandonCurrentGame_Builder*) builder;
+ (CMsgAbandonCurrentGame_Builder*) builder;
+ (CMsgAbandonCurrentGame_Builder*) builderWithPrototype:(CMsgAbandonCurrentGame*) prototype;
- (CMsgAbandonCurrentGame_Builder*) toBuilder;

+ (CMsgAbandonCurrentGame*) parseFromData:(NSData*) data;
+ (CMsgAbandonCurrentGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgAbandonCurrentGame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgAbandonCurrentGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgAbandonCurrentGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgAbandonCurrentGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgAbandonCurrentGame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgAbandonCurrentGame* _builderResult;
}

- (CMsgAbandonCurrentGame*) defaultInstance;

- (CMsgAbandonCurrentGame_Builder*) clear;
- (CMsgAbandonCurrentGame_Builder*) clone;

- (CMsgAbandonCurrentGame*) build;
- (CMsgAbandonCurrentGame*) buildPartial;

- (CMsgAbandonCurrentGame_Builder*) mergeFrom:(CMsgAbandonCurrentGame*) other;
- (CMsgAbandonCurrentGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgAbandonCurrentGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameServerInfo : PBGeneratedMessage {
@private
  BOOL hasServerHibernation_:1;
  BOOL hasServerGameTime_:1;
  BOOL hasServerTvBroadcastTime_:1;
  BOOL hasServerLoadavg_:1;
  BOOL hasRelayClientsConnected_:1;
  BOOL hasRelaysConnected_:1;
  BOOL hasTvSecretCode_:1;
  BOOL hasRelayedGameServerSteamId_:1;
  BOOL hasServerRelayConnectedSteamId_:1;
  BOOL hasServerPrivateIpAddr_:1;
  BOOL hasServerPublicIpAddr_:1;
  BOOL hasServerKey_:1;
  BOOL hasServerRegion_:1;
  BOOL hasRelaySlotsMax_:1;
  BOOL hasServerTvPort_:1;
  BOOL hasServerPort_:1;
  BOOL hasParentRelayCount_:1;
  BOOL hasserver_type_:1;
  BOOL serverHibernation_:1;
  Float32 serverGameTime;
  Float32 serverTvBroadcastTime;
  Float32 serverLoadavg;
  int32_t relayClientsConnected;
  int32_t relaysConnected;
  uint64_t tvSecretCode;
  uint64_t relayedGameServerSteamId;
  uint64_t serverRelayConnectedSteamId;
  uint32_t serverPrivateIpAddr;
  uint32_t serverPublicIpAddr;
  NSString* serverKey;
  uint32_t serverRegion;
  uint32_t relaySlotsMax;
  uint32_t serverTvPort;
  uint32_t serverPort;
  uint32_t parentRelayCount;
  CMsgGameServerInfo_ServerType server_type;
}
- (BOOL) hasServerPublicIpAddr;
- (BOOL) hasServerPrivateIpAddr;
- (BOOL) hasServerPort;
- (BOOL) hasServerTvPort;
- (BOOL) hasServerKey;
- (BOOL) hasServerHibernation;
- (BOOL) hasserver_type;
- (BOOL) hasServerRegion;
- (BOOL) hasServerLoadavg;
- (BOOL) hasServerTvBroadcastTime;
- (BOOL) hasServerGameTime;
- (BOOL) hasServerRelayConnectedSteamId;
- (BOOL) hasRelaySlotsMax;
- (BOOL) hasRelaysConnected;
- (BOOL) hasRelayClientsConnected;
- (BOOL) hasRelayedGameServerSteamId;
- (BOOL) hasParentRelayCount;
- (BOOL) hasTvSecretCode;
@property (readonly) uint32_t serverPublicIpAddr;
@property (readonly) uint32_t serverPrivateIpAddr;
@property (readonly) uint32_t serverPort;
@property (readonly) uint32_t serverTvPort;
@property (readonly, retain) NSString* serverKey;
- (BOOL) serverHibernation;
@property (readonly) CMsgGameServerInfo_ServerType server_type;
@property (readonly) uint32_t serverRegion;
@property (readonly) Float32 serverLoadavg;
@property (readonly) Float32 serverTvBroadcastTime;
@property (readonly) Float32 serverGameTime;
@property (readonly) uint64_t serverRelayConnectedSteamId;
@property (readonly) uint32_t relaySlotsMax;
@property (readonly) int32_t relaysConnected;
@property (readonly) int32_t relayClientsConnected;
@property (readonly) uint64_t relayedGameServerSteamId;
@property (readonly) uint32_t parentRelayCount;
@property (readonly) uint64_t tvSecretCode;

+ (CMsgGameServerInfo*) defaultInstance;
- (CMsgGameServerInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameServerInfo_Builder*) builder;
+ (CMsgGameServerInfo_Builder*) builder;
+ (CMsgGameServerInfo_Builder*) builderWithPrototype:(CMsgGameServerInfo*) prototype;
- (CMsgGameServerInfo_Builder*) toBuilder;

+ (CMsgGameServerInfo*) parseFromData:(NSData*) data;
+ (CMsgGameServerInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerInfo*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameServerInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameServerInfo_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameServerInfo* _builderResult;
}

- (CMsgGameServerInfo*) defaultInstance;

- (CMsgGameServerInfo_Builder*) clear;
- (CMsgGameServerInfo_Builder*) clone;

- (CMsgGameServerInfo*) build;
- (CMsgGameServerInfo*) buildPartial;

- (CMsgGameServerInfo_Builder*) mergeFrom:(CMsgGameServerInfo*) other;
- (CMsgGameServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasServerPublicIpAddr;
- (uint32_t) serverPublicIpAddr;
- (CMsgGameServerInfo_Builder*) setServerPublicIpAddr:(uint32_t) value;
- (CMsgGameServerInfo_Builder*) clearServerPublicIpAddr;

- (BOOL) hasServerPrivateIpAddr;
- (uint32_t) serverPrivateIpAddr;
- (CMsgGameServerInfo_Builder*) setServerPrivateIpAddr:(uint32_t) value;
- (CMsgGameServerInfo_Builder*) clearServerPrivateIpAddr;

- (BOOL) hasServerPort;
- (uint32_t) serverPort;
- (CMsgGameServerInfo_Builder*) setServerPort:(uint32_t) value;
- (CMsgGameServerInfo_Builder*) clearServerPort;

- (BOOL) hasServerTvPort;
- (uint32_t) serverTvPort;
- (CMsgGameServerInfo_Builder*) setServerTvPort:(uint32_t) value;
- (CMsgGameServerInfo_Builder*) clearServerTvPort;

- (BOOL) hasServerKey;
- (NSString*) serverKey;
- (CMsgGameServerInfo_Builder*) setServerKey:(NSString*) value;
- (CMsgGameServerInfo_Builder*) clearServerKey;

- (BOOL) hasServerHibernation;
- (BOOL) serverHibernation;
- (CMsgGameServerInfo_Builder*) setServerHibernation:(BOOL) value;
- (CMsgGameServerInfo_Builder*) clearServerHibernation;

- (BOOL) hasserver_type;
- (CMsgGameServerInfo_ServerType) server_type;
- (CMsgGameServerInfo_Builder*) setserver_type:(CMsgGameServerInfo_ServerType) value;
- (CMsgGameServerInfo_Builder*) clearserver_type;

- (BOOL) hasServerRegion;
- (uint32_t) serverRegion;
- (CMsgGameServerInfo_Builder*) setServerRegion:(uint32_t) value;
- (CMsgGameServerInfo_Builder*) clearServerRegion;

- (BOOL) hasServerLoadavg;
- (Float32) serverLoadavg;
- (CMsgGameServerInfo_Builder*) setServerLoadavg:(Float32) value;
- (CMsgGameServerInfo_Builder*) clearServerLoadavg;

- (BOOL) hasServerTvBroadcastTime;
- (Float32) serverTvBroadcastTime;
- (CMsgGameServerInfo_Builder*) setServerTvBroadcastTime:(Float32) value;
- (CMsgGameServerInfo_Builder*) clearServerTvBroadcastTime;

- (BOOL) hasServerGameTime;
- (Float32) serverGameTime;
- (CMsgGameServerInfo_Builder*) setServerGameTime:(Float32) value;
- (CMsgGameServerInfo_Builder*) clearServerGameTime;

- (BOOL) hasServerRelayConnectedSteamId;
- (uint64_t) serverRelayConnectedSteamId;
- (CMsgGameServerInfo_Builder*) setServerRelayConnectedSteamId:(uint64_t) value;
- (CMsgGameServerInfo_Builder*) clearServerRelayConnectedSteamId;

- (BOOL) hasRelaySlotsMax;
- (uint32_t) relaySlotsMax;
- (CMsgGameServerInfo_Builder*) setRelaySlotsMax:(uint32_t) value;
- (CMsgGameServerInfo_Builder*) clearRelaySlotsMax;

- (BOOL) hasRelaysConnected;
- (int32_t) relaysConnected;
- (CMsgGameServerInfo_Builder*) setRelaysConnected:(int32_t) value;
- (CMsgGameServerInfo_Builder*) clearRelaysConnected;

- (BOOL) hasRelayClientsConnected;
- (int32_t) relayClientsConnected;
- (CMsgGameServerInfo_Builder*) setRelayClientsConnected:(int32_t) value;
- (CMsgGameServerInfo_Builder*) clearRelayClientsConnected;

- (BOOL) hasRelayedGameServerSteamId;
- (uint64_t) relayedGameServerSteamId;
- (CMsgGameServerInfo_Builder*) setRelayedGameServerSteamId:(uint64_t) value;
- (CMsgGameServerInfo_Builder*) clearRelayedGameServerSteamId;

- (BOOL) hasParentRelayCount;
- (uint32_t) parentRelayCount;
- (CMsgGameServerInfo_Builder*) setParentRelayCount:(uint32_t) value;
- (CMsgGameServerInfo_Builder*) clearParentRelayCount;

- (BOOL) hasTvSecretCode;
- (uint64_t) tvSecretCode;
- (CMsgGameServerInfo_Builder*) setTvSecretCode:(uint64_t) value;
- (CMsgGameServerInfo_Builder*) clearTvSecretCode;
@end

@interface CMsgLeaverDetected : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasLeaverStatus_:1;
  uint64_t steamId;
  uint32_t leaverStatus;
}
- (BOOL) hasSteamId;
- (BOOL) hasLeaverStatus;
@property (readonly) uint64_t steamId;
@property (readonly) uint32_t leaverStatus;

+ (CMsgLeaverDetected*) defaultInstance;
- (CMsgLeaverDetected*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgLeaverDetected_Builder*) builder;
+ (CMsgLeaverDetected_Builder*) builder;
+ (CMsgLeaverDetected_Builder*) builderWithPrototype:(CMsgLeaverDetected*) prototype;
- (CMsgLeaverDetected_Builder*) toBuilder;

+ (CMsgLeaverDetected*) parseFromData:(NSData*) data;
+ (CMsgLeaverDetected*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgLeaverDetected*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgLeaverDetected*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgLeaverDetected*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgLeaverDetected*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgLeaverDetected_Builder : PBGeneratedMessage_Builder {
@private
  CMsgLeaverDetected* _builderResult;
}

- (CMsgLeaverDetected*) defaultInstance;

- (CMsgLeaverDetected_Builder*) clear;
- (CMsgLeaverDetected_Builder*) clone;

- (CMsgLeaverDetected*) build;
- (CMsgLeaverDetected*) buildPartial;

- (CMsgLeaverDetected_Builder*) mergeFrom:(CMsgLeaverDetected*) other;
- (CMsgLeaverDetected_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgLeaverDetected_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgLeaverDetected_Builder*) setSteamId:(uint64_t) value;
- (CMsgLeaverDetected_Builder*) clearSteamId;

- (BOOL) hasLeaverStatus;
- (uint32_t) leaverStatus;
- (CMsgLeaverDetected_Builder*) setLeaverStatus:(uint32_t) value;
- (CMsgLeaverDetected_Builder*) clearLeaverStatus;
@end

@interface CMsgLeaverDetectedResponse : PBGeneratedMessage {
@private
  BOOL hasResult_:1;
  uint32_t result;
}
- (BOOL) hasResult;
@property (readonly) uint32_t result;

+ (CMsgLeaverDetectedResponse*) defaultInstance;
- (CMsgLeaverDetectedResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgLeaverDetectedResponse_Builder*) builder;
+ (CMsgLeaverDetectedResponse_Builder*) builder;
+ (CMsgLeaverDetectedResponse_Builder*) builderWithPrototype:(CMsgLeaverDetectedResponse*) prototype;
- (CMsgLeaverDetectedResponse_Builder*) toBuilder;

+ (CMsgLeaverDetectedResponse*) parseFromData:(NSData*) data;
+ (CMsgLeaverDetectedResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgLeaverDetectedResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgLeaverDetectedResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgLeaverDetectedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgLeaverDetectedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgLeaverDetectedResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgLeaverDetectedResponse* _builderResult;
}

- (CMsgLeaverDetectedResponse*) defaultInstance;

- (CMsgLeaverDetectedResponse_Builder*) clear;
- (CMsgLeaverDetectedResponse_Builder*) clone;

- (CMsgLeaverDetectedResponse*) build;
- (CMsgLeaverDetectedResponse*) buildPartial;

- (CMsgLeaverDetectedResponse_Builder*) mergeFrom:(CMsgLeaverDetectedResponse*) other;
- (CMsgLeaverDetectedResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgLeaverDetectedResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResult;
- (uint32_t) result;
- (CMsgLeaverDetectedResponse_Builder*) setResult:(uint32_t) value;
- (CMsgLeaverDetectedResponse_Builder*) clearResult;
@end

@interface CMsgForceSOCacheResend : PBGeneratedMessage {
@private
}

+ (CMsgForceSOCacheResend*) defaultInstance;
- (CMsgForceSOCacheResend*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgForceSOCacheResend_Builder*) builder;
+ (CMsgForceSOCacheResend_Builder*) builder;
+ (CMsgForceSOCacheResend_Builder*) builderWithPrototype:(CMsgForceSOCacheResend*) prototype;
- (CMsgForceSOCacheResend_Builder*) toBuilder;

+ (CMsgForceSOCacheResend*) parseFromData:(NSData*) data;
+ (CMsgForceSOCacheResend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgForceSOCacheResend*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgForceSOCacheResend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgForceSOCacheResend*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgForceSOCacheResend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgForceSOCacheResend_Builder : PBGeneratedMessage_Builder {
@private
  CMsgForceSOCacheResend* _builderResult;
}

- (CMsgForceSOCacheResend*) defaultInstance;

- (CMsgForceSOCacheResend_Builder*) clear;
- (CMsgForceSOCacheResend_Builder*) clone;

- (CMsgForceSOCacheResend*) build;
- (CMsgForceSOCacheResend*) buildPartial;

- (CMsgForceSOCacheResend_Builder*) mergeFrom:(CMsgForceSOCacheResend*) other;
- (CMsgForceSOCacheResend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgForceSOCacheResend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbySetDetails : PBGeneratedMessage {
@private
  BOOL hasAllowSpectating_:1;
  BOOL hasIntroMode_:1;
  BOOL hasFillWithBots_:1;
  BOOL hasAllowCheats_:1;
  BOOL hasLobbyId_:1;
  BOOL hasGameName_:1;
  BOOL hasPassKey_:1;
  BOOL hasGameMode_:1;
  BOOL hasServerRegion_:1;
  BOOL hasLeagueid_:1;
  BOOL hasPenaltyLevelRadiant_:1;
  BOOL hasPenaltyLevelDire_:1;
  BOOL hasLoadGameId_:1;
  BOOL hasSeriesType_:1;
  BOOL hasRadiantSeriesWins_:1;
  BOOL hasDireSeriesWins_:1;
  BOOL hascm_pick_:1;
  BOOL hasbot_difficulty_:1;
  BOOL hasgame_version_:1;
  BOOL allowSpectating_:1;
  BOOL introMode_:1;
  BOOL fillWithBots_:1;
  BOOL allowCheats_:1;
  uint64_t lobbyId;
  NSString* gameName;
  NSString* passKey;
  uint32_t gameMode;
  uint32_t serverRegion;
  uint32_t leagueid;
  uint32_t penaltyLevelRadiant;
  uint32_t penaltyLevelDire;
  uint32_t loadGameId;
  uint32_t seriesType;
  uint32_t radiantSeriesWins;
  uint32_t direSeriesWins;
  DOTA_CM_PICK cm_pick;
  DOTABotDifficulty bot_difficulty;
  DOTAGameVersion game_version;
  PBAppendableArray * teamDetailsArray;
}
- (BOOL) hasLobbyId;
- (BOOL) hasGameName;
- (BOOL) hasServerRegion;
- (BOOL) hasGameMode;
- (BOOL) hascm_pick;
- (BOOL) hasbot_difficulty;
- (BOOL) hasAllowCheats;
- (BOOL) hasFillWithBots;
- (BOOL) hasIntroMode;
- (BOOL) hasAllowSpectating;
- (BOOL) hasgame_version;
- (BOOL) hasPassKey;
- (BOOL) hasLeagueid;
- (BOOL) hasPenaltyLevelRadiant;
- (BOOL) hasPenaltyLevelDire;
- (BOOL) hasLoadGameId;
- (BOOL) hasSeriesType;
- (BOOL) hasRadiantSeriesWins;
- (BOOL) hasDireSeriesWins;
@property (readonly) uint64_t lobbyId;
@property (readonly, retain) NSString* gameName;
@property (readonly, retain) PBArray * teamDetails;
@property (readonly) uint32_t serverRegion;
@property (readonly) uint32_t gameMode;
@property (readonly) DOTA_CM_PICK cm_pick;
@property (readonly) DOTABotDifficulty bot_difficulty;
- (BOOL) allowCheats;
- (BOOL) fillWithBots;
- (BOOL) introMode;
- (BOOL) allowSpectating;
@property (readonly) DOTAGameVersion game_version;
@property (readonly, retain) NSString* passKey;
@property (readonly) uint32_t leagueid;
@property (readonly) uint32_t penaltyLevelRadiant;
@property (readonly) uint32_t penaltyLevelDire;
@property (readonly) uint32_t loadGameId;
@property (readonly) uint32_t seriesType;
@property (readonly) uint32_t radiantSeriesWins;
@property (readonly) uint32_t direSeriesWins;
- (CLobbyTeamDetails*)teamDetailsAtIndex:(NSUInteger)index;

+ (CMsgPracticeLobbySetDetails*) defaultInstance;
- (CMsgPracticeLobbySetDetails*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbySetDetails_Builder*) builder;
+ (CMsgPracticeLobbySetDetails_Builder*) builder;
+ (CMsgPracticeLobbySetDetails_Builder*) builderWithPrototype:(CMsgPracticeLobbySetDetails*) prototype;
- (CMsgPracticeLobbySetDetails_Builder*) toBuilder;

+ (CMsgPracticeLobbySetDetails*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbySetDetails*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbySetDetails*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbySetDetails*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbySetDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbySetDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbySetDetails_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbySetDetails* _builderResult;
}

- (CMsgPracticeLobbySetDetails*) defaultInstance;

- (CMsgPracticeLobbySetDetails_Builder*) clear;
- (CMsgPracticeLobbySetDetails_Builder*) clone;

- (CMsgPracticeLobbySetDetails*) build;
- (CMsgPracticeLobbySetDetails*) buildPartial;

- (CMsgPracticeLobbySetDetails_Builder*) mergeFrom:(CMsgPracticeLobbySetDetails*) other;
- (CMsgPracticeLobbySetDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbySetDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgPracticeLobbySetDetails_Builder*) setLobbyId:(uint64_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearLobbyId;

- (BOOL) hasGameName;
- (NSString*) gameName;
- (CMsgPracticeLobbySetDetails_Builder*) setGameName:(NSString*) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearGameName;

- (PBAppendableArray *)teamDetails;
- (CLobbyTeamDetails*)teamDetailsAtIndex:(NSUInteger)index;
- (CMsgPracticeLobbySetDetails_Builder *)addTeamDetails:(CLobbyTeamDetails*)value;
- (CMsgPracticeLobbySetDetails_Builder *)setTeamDetailsArray:(NSArray *)array;
- (CMsgPracticeLobbySetDetails_Builder *)setTeamDetailsValues:(const CLobbyTeamDetails* *)values count:(NSUInteger)count;
- (CMsgPracticeLobbySetDetails_Builder *)clearTeamDetails;

- (BOOL) hasServerRegion;
- (uint32_t) serverRegion;
- (CMsgPracticeLobbySetDetails_Builder*) setServerRegion:(uint32_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearServerRegion;

- (BOOL) hasGameMode;
- (uint32_t) gameMode;
- (CMsgPracticeLobbySetDetails_Builder*) setGameMode:(uint32_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearGameMode;

- (BOOL) hascm_pick;
- (DOTA_CM_PICK) cm_pick;
- (CMsgPracticeLobbySetDetails_Builder*) setcm_pick:(DOTA_CM_PICK) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearcm_pick;

- (BOOL) hasbot_difficulty;
- (DOTABotDifficulty) bot_difficulty;
- (CMsgPracticeLobbySetDetails_Builder*) setbot_difficulty:(DOTABotDifficulty) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearbot_difficulty;

- (BOOL) hasAllowCheats;
- (BOOL) allowCheats;
- (CMsgPracticeLobbySetDetails_Builder*) setAllowCheats:(BOOL) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearAllowCheats;

- (BOOL) hasFillWithBots;
- (BOOL) fillWithBots;
- (CMsgPracticeLobbySetDetails_Builder*) setFillWithBots:(BOOL) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearFillWithBots;

- (BOOL) hasIntroMode;
- (BOOL) introMode;
- (CMsgPracticeLobbySetDetails_Builder*) setIntroMode:(BOOL) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearIntroMode;

- (BOOL) hasAllowSpectating;
- (BOOL) allowSpectating;
- (CMsgPracticeLobbySetDetails_Builder*) setAllowSpectating:(BOOL) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearAllowSpectating;

- (BOOL) hasgame_version;
- (DOTAGameVersion) game_version;
- (CMsgPracticeLobbySetDetails_Builder*) setgame_version:(DOTAGameVersion) value;
- (CMsgPracticeLobbySetDetails_Builder*) cleargame_version;

- (BOOL) hasPassKey;
- (NSString*) passKey;
- (CMsgPracticeLobbySetDetails_Builder*) setPassKey:(NSString*) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearPassKey;

- (BOOL) hasLeagueid;
- (uint32_t) leagueid;
- (CMsgPracticeLobbySetDetails_Builder*) setLeagueid:(uint32_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearLeagueid;

- (BOOL) hasPenaltyLevelRadiant;
- (uint32_t) penaltyLevelRadiant;
- (CMsgPracticeLobbySetDetails_Builder*) setPenaltyLevelRadiant:(uint32_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearPenaltyLevelRadiant;

- (BOOL) hasPenaltyLevelDire;
- (uint32_t) penaltyLevelDire;
- (CMsgPracticeLobbySetDetails_Builder*) setPenaltyLevelDire:(uint32_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearPenaltyLevelDire;

- (BOOL) hasLoadGameId;
- (uint32_t) loadGameId;
- (CMsgPracticeLobbySetDetails_Builder*) setLoadGameId:(uint32_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearLoadGameId;

- (BOOL) hasSeriesType;
- (uint32_t) seriesType;
- (CMsgPracticeLobbySetDetails_Builder*) setSeriesType:(uint32_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearSeriesType;

- (BOOL) hasRadiantSeriesWins;
- (uint32_t) radiantSeriesWins;
- (CMsgPracticeLobbySetDetails_Builder*) setRadiantSeriesWins:(uint32_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearRadiantSeriesWins;

- (BOOL) hasDireSeriesWins;
- (uint32_t) direSeriesWins;
- (CMsgPracticeLobbySetDetails_Builder*) setDireSeriesWins:(uint32_t) value;
- (CMsgPracticeLobbySetDetails_Builder*) clearDireSeriesWins;
@end

@interface CMsgPracticeLobbyCreate : PBGeneratedMessage {
@private
  BOOL hasTournamentGame_:1;
  BOOL hasSearchKey_:1;
  BOOL hasPassKey_:1;
  BOOL hasLobbyDetails_:1;
  BOOL hasTournamentGameId_:1;
  BOOL hasTournamentId_:1;
  BOOL hasClientVersion_:1;
  BOOL tournamentGame_:1;
  NSString* searchKey;
  NSString* passKey;
  CMsgPracticeLobbySetDetails* lobbyDetails;
  uint32_t tournamentGameId;
  uint32_t tournamentId;
  uint32_t clientVersion;
}
- (BOOL) hasSearchKey;
- (BOOL) hasTournamentGame;
- (BOOL) hasTournamentGameId;
- (BOOL) hasTournamentId;
- (BOOL) hasPassKey;
- (BOOL) hasClientVersion;
- (BOOL) hasLobbyDetails;
@property (readonly, retain) NSString* searchKey;
- (BOOL) tournamentGame;
@property (readonly) uint32_t tournamentGameId;
@property (readonly) uint32_t tournamentId;
@property (readonly, retain) NSString* passKey;
@property (readonly) uint32_t clientVersion;
@property (readonly, retain) CMsgPracticeLobbySetDetails* lobbyDetails;

+ (CMsgPracticeLobbyCreate*) defaultInstance;
- (CMsgPracticeLobbyCreate*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyCreate_Builder*) builder;
+ (CMsgPracticeLobbyCreate_Builder*) builder;
+ (CMsgPracticeLobbyCreate_Builder*) builderWithPrototype:(CMsgPracticeLobbyCreate*) prototype;
- (CMsgPracticeLobbyCreate_Builder*) toBuilder;

+ (CMsgPracticeLobbyCreate*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyCreate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyCreate*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyCreate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyCreate*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyCreate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyCreate_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyCreate* _builderResult;
}

- (CMsgPracticeLobbyCreate*) defaultInstance;

- (CMsgPracticeLobbyCreate_Builder*) clear;
- (CMsgPracticeLobbyCreate_Builder*) clone;

- (CMsgPracticeLobbyCreate*) build;
- (CMsgPracticeLobbyCreate*) buildPartial;

- (CMsgPracticeLobbyCreate_Builder*) mergeFrom:(CMsgPracticeLobbyCreate*) other;
- (CMsgPracticeLobbyCreate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyCreate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSearchKey;
- (NSString*) searchKey;
- (CMsgPracticeLobbyCreate_Builder*) setSearchKey:(NSString*) value;
- (CMsgPracticeLobbyCreate_Builder*) clearSearchKey;

- (BOOL) hasTournamentGame;
- (BOOL) tournamentGame;
- (CMsgPracticeLobbyCreate_Builder*) setTournamentGame:(BOOL) value;
- (CMsgPracticeLobbyCreate_Builder*) clearTournamentGame;

- (BOOL) hasTournamentGameId;
- (uint32_t) tournamentGameId;
- (CMsgPracticeLobbyCreate_Builder*) setTournamentGameId:(uint32_t) value;
- (CMsgPracticeLobbyCreate_Builder*) clearTournamentGameId;

- (BOOL) hasTournamentId;
- (uint32_t) tournamentId;
- (CMsgPracticeLobbyCreate_Builder*) setTournamentId:(uint32_t) value;
- (CMsgPracticeLobbyCreate_Builder*) clearTournamentId;

- (BOOL) hasPassKey;
- (NSString*) passKey;
- (CMsgPracticeLobbyCreate_Builder*) setPassKey:(NSString*) value;
- (CMsgPracticeLobbyCreate_Builder*) clearPassKey;

- (BOOL) hasClientVersion;
- (uint32_t) clientVersion;
- (CMsgPracticeLobbyCreate_Builder*) setClientVersion:(uint32_t) value;
- (CMsgPracticeLobbyCreate_Builder*) clearClientVersion;

- (BOOL) hasLobbyDetails;
- (CMsgPracticeLobbySetDetails*) lobbyDetails;
- (CMsgPracticeLobbyCreate_Builder*) setLobbyDetails:(CMsgPracticeLobbySetDetails*) value;
- (CMsgPracticeLobbyCreate_Builder*) setLobbyDetailsBuilder:(CMsgPracticeLobbySetDetails_Builder*) builderForValue;
- (CMsgPracticeLobbyCreate_Builder*) mergeLobbyDetails:(CMsgPracticeLobbySetDetails*) value;
- (CMsgPracticeLobbyCreate_Builder*) clearLobbyDetails;
@end

@interface CMsgPracticeLobbySetTeamSlot : PBGeneratedMessage {
@private
  BOOL hasSlot_:1;
  BOOL hasteam_:1;
  BOOL hasbot_difficulty_:1;
  uint32_t slot;
  DOTA_GC_TEAM team;
  DOTABotDifficulty bot_difficulty;
}
- (BOOL) hasteam;
- (BOOL) hasSlot;
- (BOOL) hasbot_difficulty;
@property (readonly) DOTA_GC_TEAM team;
@property (readonly) uint32_t slot;
@property (readonly) DOTABotDifficulty bot_difficulty;

+ (CMsgPracticeLobbySetTeamSlot*) defaultInstance;
- (CMsgPracticeLobbySetTeamSlot*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbySetTeamSlot_Builder*) builder;
+ (CMsgPracticeLobbySetTeamSlot_Builder*) builder;
+ (CMsgPracticeLobbySetTeamSlot_Builder*) builderWithPrototype:(CMsgPracticeLobbySetTeamSlot*) prototype;
- (CMsgPracticeLobbySetTeamSlot_Builder*) toBuilder;

+ (CMsgPracticeLobbySetTeamSlot*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbySetTeamSlot*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbySetTeamSlot*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbySetTeamSlot*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbySetTeamSlot*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbySetTeamSlot*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbySetTeamSlot_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbySetTeamSlot* _builderResult;
}

- (CMsgPracticeLobbySetTeamSlot*) defaultInstance;

- (CMsgPracticeLobbySetTeamSlot_Builder*) clear;
- (CMsgPracticeLobbySetTeamSlot_Builder*) clone;

- (CMsgPracticeLobbySetTeamSlot*) build;
- (CMsgPracticeLobbySetTeamSlot*) buildPartial;

- (CMsgPracticeLobbySetTeamSlot_Builder*) mergeFrom:(CMsgPracticeLobbySetTeamSlot*) other;
- (CMsgPracticeLobbySetTeamSlot_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbySetTeamSlot_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasteam;
- (DOTA_GC_TEAM) team;
- (CMsgPracticeLobbySetTeamSlot_Builder*) setteam:(DOTA_GC_TEAM) value;
- (CMsgPracticeLobbySetTeamSlot_Builder*) clearteam;

- (BOOL) hasSlot;
- (uint32_t) slot;
- (CMsgPracticeLobbySetTeamSlot_Builder*) setSlot:(uint32_t) value;
- (CMsgPracticeLobbySetTeamSlot_Builder*) clearSlot;

- (BOOL) hasbot_difficulty;
- (DOTABotDifficulty) bot_difficulty;
- (CMsgPracticeLobbySetTeamSlot_Builder*) setbot_difficulty:(DOTABotDifficulty) value;
- (CMsgPracticeLobbySetTeamSlot_Builder*) clearbot_difficulty;
@end

@interface CMsgPracticeLobbyJoinBroadcastChannel : PBGeneratedMessage {
@private
  BOOL hasChannel_:1;
  uint32_t channel;
}
- (BOOL) hasChannel;
@property (readonly) uint32_t channel;

+ (CMsgPracticeLobbyJoinBroadcastChannel*) defaultInstance;
- (CMsgPracticeLobbyJoinBroadcastChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) builder;
+ (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) builder;
+ (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) builderWithPrototype:(CMsgPracticeLobbyJoinBroadcastChannel*) prototype;
- (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) toBuilder;

+ (CMsgPracticeLobbyJoinBroadcastChannel*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyJoinBroadcastChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyJoinBroadcastChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyJoinBroadcastChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyJoinBroadcastChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyJoinBroadcastChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyJoinBroadcastChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyJoinBroadcastChannel* _builderResult;
}

- (CMsgPracticeLobbyJoinBroadcastChannel*) defaultInstance;

- (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) clear;
- (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) clone;

- (CMsgPracticeLobbyJoinBroadcastChannel*) build;
- (CMsgPracticeLobbyJoinBroadcastChannel*) buildPartial;

- (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) mergeFrom:(CMsgPracticeLobbyJoinBroadcastChannel*) other;
- (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannel;
- (uint32_t) channel;
- (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) setChannel:(uint32_t) value;
- (CMsgPracticeLobbyJoinBroadcastChannel_Builder*) clearChannel;
@end

@interface CMsgPracticeLobbyKick : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
@property (readonly) uint32_t accountId;

+ (CMsgPracticeLobbyKick*) defaultInstance;
- (CMsgPracticeLobbyKick*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyKick_Builder*) builder;
+ (CMsgPracticeLobbyKick_Builder*) builder;
+ (CMsgPracticeLobbyKick_Builder*) builderWithPrototype:(CMsgPracticeLobbyKick*) prototype;
- (CMsgPracticeLobbyKick_Builder*) toBuilder;

+ (CMsgPracticeLobbyKick*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyKick*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyKick*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyKick*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyKick*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyKick*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyKick_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyKick* _builderResult;
}

- (CMsgPracticeLobbyKick*) defaultInstance;

- (CMsgPracticeLobbyKick_Builder*) clear;
- (CMsgPracticeLobbyKick_Builder*) clone;

- (CMsgPracticeLobbyKick*) build;
- (CMsgPracticeLobbyKick*) buildPartial;

- (CMsgPracticeLobbyKick_Builder*) mergeFrom:(CMsgPracticeLobbyKick*) other;
- (CMsgPracticeLobbyKick_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyKick_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgPracticeLobbyKick_Builder*) setAccountId:(uint32_t) value;
- (CMsgPracticeLobbyKick_Builder*) clearAccountId;
@end

@interface CMsgPracticeLobbyLeave : PBGeneratedMessage {
@private
}

+ (CMsgPracticeLobbyLeave*) defaultInstance;
- (CMsgPracticeLobbyLeave*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyLeave_Builder*) builder;
+ (CMsgPracticeLobbyLeave_Builder*) builder;
+ (CMsgPracticeLobbyLeave_Builder*) builderWithPrototype:(CMsgPracticeLobbyLeave*) prototype;
- (CMsgPracticeLobbyLeave_Builder*) toBuilder;

+ (CMsgPracticeLobbyLeave*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyLeave*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyLeave*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyLeave*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyLeave*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyLeave*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyLeave_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyLeave* _builderResult;
}

- (CMsgPracticeLobbyLeave*) defaultInstance;

- (CMsgPracticeLobbyLeave_Builder*) clear;
- (CMsgPracticeLobbyLeave_Builder*) clone;

- (CMsgPracticeLobbyLeave*) build;
- (CMsgPracticeLobbyLeave*) buildPartial;

- (CMsgPracticeLobbyLeave_Builder*) mergeFrom:(CMsgPracticeLobbyLeave*) other;
- (CMsgPracticeLobbyLeave_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyLeave_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyLaunch : PBGeneratedMessage {
@private
  BOOL hasClientVersion_:1;
  uint32_t clientVersion;
}
- (BOOL) hasClientVersion;
@property (readonly) uint32_t clientVersion;

+ (CMsgPracticeLobbyLaunch*) defaultInstance;
- (CMsgPracticeLobbyLaunch*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyLaunch_Builder*) builder;
+ (CMsgPracticeLobbyLaunch_Builder*) builder;
+ (CMsgPracticeLobbyLaunch_Builder*) builderWithPrototype:(CMsgPracticeLobbyLaunch*) prototype;
- (CMsgPracticeLobbyLaunch_Builder*) toBuilder;

+ (CMsgPracticeLobbyLaunch*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyLaunch*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyLaunch*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyLaunch*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyLaunch*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyLaunch*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyLaunch_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyLaunch* _builderResult;
}

- (CMsgPracticeLobbyLaunch*) defaultInstance;

- (CMsgPracticeLobbyLaunch_Builder*) clear;
- (CMsgPracticeLobbyLaunch_Builder*) clone;

- (CMsgPracticeLobbyLaunch*) build;
- (CMsgPracticeLobbyLaunch*) buildPartial;

- (CMsgPracticeLobbyLaunch_Builder*) mergeFrom:(CMsgPracticeLobbyLaunch*) other;
- (CMsgPracticeLobbyLaunch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyLaunch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClientVersion;
- (uint32_t) clientVersion;
- (CMsgPracticeLobbyLaunch_Builder*) setClientVersion:(uint32_t) value;
- (CMsgPracticeLobbyLaunch_Builder*) clearClientVersion;
@end

@interface CMsgApplyTeamToPracticeLobby : PBGeneratedMessage {
@private
}

+ (CMsgApplyTeamToPracticeLobby*) defaultInstance;
- (CMsgApplyTeamToPracticeLobby*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgApplyTeamToPracticeLobby_Builder*) builder;
+ (CMsgApplyTeamToPracticeLobby_Builder*) builder;
+ (CMsgApplyTeamToPracticeLobby_Builder*) builderWithPrototype:(CMsgApplyTeamToPracticeLobby*) prototype;
- (CMsgApplyTeamToPracticeLobby_Builder*) toBuilder;

+ (CMsgApplyTeamToPracticeLobby*) parseFromData:(NSData*) data;
+ (CMsgApplyTeamToPracticeLobby*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgApplyTeamToPracticeLobby*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgApplyTeamToPracticeLobby*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgApplyTeamToPracticeLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgApplyTeamToPracticeLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgApplyTeamToPracticeLobby_Builder : PBGeneratedMessage_Builder {
@private
  CMsgApplyTeamToPracticeLobby* _builderResult;
}

- (CMsgApplyTeamToPracticeLobby*) defaultInstance;

- (CMsgApplyTeamToPracticeLobby_Builder*) clear;
- (CMsgApplyTeamToPracticeLobby_Builder*) clone;

- (CMsgApplyTeamToPracticeLobby*) build;
- (CMsgApplyTeamToPracticeLobby*) buildPartial;

- (CMsgApplyTeamToPracticeLobby_Builder*) mergeFrom:(CMsgApplyTeamToPracticeLobby*) other;
- (CMsgApplyTeamToPracticeLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgApplyTeamToPracticeLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyList : PBGeneratedMessage {
@private
  BOOL hasTournamentGames_:1;
  BOOL hasPassKey_:1;
  BOOL tournamentGames_:1;
  NSString* passKey;
}
- (BOOL) hasTournamentGames;
- (BOOL) hasPassKey;
- (BOOL) tournamentGames;
@property (readonly, retain) NSString* passKey;

+ (CMsgPracticeLobbyList*) defaultInstance;
- (CMsgPracticeLobbyList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyList_Builder*) builder;
+ (CMsgPracticeLobbyList_Builder*) builder;
+ (CMsgPracticeLobbyList_Builder*) builderWithPrototype:(CMsgPracticeLobbyList*) prototype;
- (CMsgPracticeLobbyList_Builder*) toBuilder;

+ (CMsgPracticeLobbyList*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyList*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyList_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyList* _builderResult;
}

- (CMsgPracticeLobbyList*) defaultInstance;

- (CMsgPracticeLobbyList_Builder*) clear;
- (CMsgPracticeLobbyList_Builder*) clone;

- (CMsgPracticeLobbyList*) build;
- (CMsgPracticeLobbyList*) buildPartial;

- (CMsgPracticeLobbyList_Builder*) mergeFrom:(CMsgPracticeLobbyList*) other;
- (CMsgPracticeLobbyList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTournamentGames;
- (BOOL) tournamentGames;
- (CMsgPracticeLobbyList_Builder*) setTournamentGames:(BOOL) value;
- (CMsgPracticeLobbyList_Builder*) clearTournamentGames;

- (BOOL) hasPassKey;
- (NSString*) passKey;
- (CMsgPracticeLobbyList_Builder*) setPassKey:(NSString*) value;
- (CMsgPracticeLobbyList_Builder*) clearPassKey;
@end

@interface CMsgPracticeLobbyListResponseEntry : PBGeneratedMessage {
@private
  BOOL hasRequiresPassKey_:1;
  BOOL hasId_:1;
  BOOL hasTournamentId_:1;
  BOOL hasTournamentGameId_:1;
  BOOL hasLeaderAccountId_:1;
  BOOL requiresPassKey_:1;
  uint64_t id;
  uint32_t tournamentId;
  uint32_t tournamentGameId;
  uint32_t leaderAccountId;
  PBAppendableArray * membersArray;
}
- (BOOL) hasId;
- (BOOL) hasTournamentId;
- (BOOL) hasTournamentGameId;
- (BOOL) hasRequiresPassKey;
- (BOOL) hasLeaderAccountId;
@property (readonly) uint64_t id;
@property (readonly) uint32_t tournamentId;
@property (readonly) uint32_t tournamentGameId;
@property (readonly, retain) PBArray * members;
- (BOOL) requiresPassKey;
@property (readonly) uint32_t leaderAccountId;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember*)membersAtIndex:(NSUInteger)index;

+ (CMsgPracticeLobbyListResponseEntry*) defaultInstance;
- (CMsgPracticeLobbyListResponseEntry*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyListResponseEntry_Builder*) builder;
+ (CMsgPracticeLobbyListResponseEntry_Builder*) builder;
+ (CMsgPracticeLobbyListResponseEntry_Builder*) builderWithPrototype:(CMsgPracticeLobbyListResponseEntry*) prototype;
- (CMsgPracticeLobbyListResponseEntry_Builder*) toBuilder;

+ (CMsgPracticeLobbyListResponseEntry*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyListResponseEntry*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyListResponseEntry*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyListResponseEntry*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyListResponseEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyListResponseEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyListResponseEntry_CLobbyMember : PBGeneratedMessage {
@private
  BOOL hasPlayerName_:1;
  BOOL hasAccountId_:1;
  NSString* playerName;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
- (BOOL) hasPlayerName;
@property (readonly) uint32_t accountId;
@property (readonly, retain) NSString* playerName;

+ (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) defaultInstance;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) builder;
+ (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) builder;
+ (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) builderWithPrototype:(CMsgPracticeLobbyListResponseEntry_CLobbyMember*) prototype;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) toBuilder;

+ (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyListResponseEntry_CLobbyMember* _builderResult;
}

- (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) defaultInstance;

- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) clear;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) clone;

- (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) build;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember*) buildPartial;

- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) mergeFrom:(CMsgPracticeLobbyListResponseEntry_CLobbyMember*) other;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) setAccountId:(uint32_t) value;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) clearAccountId;

- (BOOL) hasPlayerName;
- (NSString*) playerName;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) setPlayerName:(NSString*) value;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember_Builder*) clearPlayerName;
@end

@interface CMsgPracticeLobbyListResponseEntry_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyListResponseEntry* _builderResult;
}

- (CMsgPracticeLobbyListResponseEntry*) defaultInstance;

- (CMsgPracticeLobbyListResponseEntry_Builder*) clear;
- (CMsgPracticeLobbyListResponseEntry_Builder*) clone;

- (CMsgPracticeLobbyListResponseEntry*) build;
- (CMsgPracticeLobbyListResponseEntry*) buildPartial;

- (CMsgPracticeLobbyListResponseEntry_Builder*) mergeFrom:(CMsgPracticeLobbyListResponseEntry*) other;
- (CMsgPracticeLobbyListResponseEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyListResponseEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (uint64_t) id;
- (CMsgPracticeLobbyListResponseEntry_Builder*) setId:(uint64_t) value;
- (CMsgPracticeLobbyListResponseEntry_Builder*) clearId;

- (BOOL) hasTournamentId;
- (uint32_t) tournamentId;
- (CMsgPracticeLobbyListResponseEntry_Builder*) setTournamentId:(uint32_t) value;
- (CMsgPracticeLobbyListResponseEntry_Builder*) clearTournamentId;

- (BOOL) hasTournamentGameId;
- (uint32_t) tournamentGameId;
- (CMsgPracticeLobbyListResponseEntry_Builder*) setTournamentGameId:(uint32_t) value;
- (CMsgPracticeLobbyListResponseEntry_Builder*) clearTournamentGameId;

- (PBAppendableArray *)members;
- (CMsgPracticeLobbyListResponseEntry_CLobbyMember*)membersAtIndex:(NSUInteger)index;
- (CMsgPracticeLobbyListResponseEntry_Builder *)addMembers:(CMsgPracticeLobbyListResponseEntry_CLobbyMember*)value;
- (CMsgPracticeLobbyListResponseEntry_Builder *)setMembersArray:(NSArray *)array;
- (CMsgPracticeLobbyListResponseEntry_Builder *)setMembersValues:(const CMsgPracticeLobbyListResponseEntry_CLobbyMember* *)values count:(NSUInteger)count;
- (CMsgPracticeLobbyListResponseEntry_Builder *)clearMembers;

- (BOOL) hasRequiresPassKey;
- (BOOL) requiresPassKey;
- (CMsgPracticeLobbyListResponseEntry_Builder*) setRequiresPassKey:(BOOL) value;
- (CMsgPracticeLobbyListResponseEntry_Builder*) clearRequiresPassKey;

- (BOOL) hasLeaderAccountId;
- (uint32_t) leaderAccountId;
- (CMsgPracticeLobbyListResponseEntry_Builder*) setLeaderAccountId:(uint32_t) value;
- (CMsgPracticeLobbyListResponseEntry_Builder*) clearLeaderAccountId;
@end

@interface CMsgPracticeLobbyListResponse : PBGeneratedMessage {
@private
  BOOL hasTournamentGames_:1;
  BOOL tournamentGames_:1;
  PBAppendableArray * lobbiesArray;
}
- (BOOL) hasTournamentGames;
- (BOOL) tournamentGames;
@property (readonly, retain) PBArray * lobbies;
- (CMsgPracticeLobbyListResponseEntry*)lobbiesAtIndex:(NSUInteger)index;

+ (CMsgPracticeLobbyListResponse*) defaultInstance;
- (CMsgPracticeLobbyListResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyListResponse_Builder*) builder;
+ (CMsgPracticeLobbyListResponse_Builder*) builder;
+ (CMsgPracticeLobbyListResponse_Builder*) builderWithPrototype:(CMsgPracticeLobbyListResponse*) prototype;
- (CMsgPracticeLobbyListResponse_Builder*) toBuilder;

+ (CMsgPracticeLobbyListResponse*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyListResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyListResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyListResponse* _builderResult;
}

- (CMsgPracticeLobbyListResponse*) defaultInstance;

- (CMsgPracticeLobbyListResponse_Builder*) clear;
- (CMsgPracticeLobbyListResponse_Builder*) clone;

- (CMsgPracticeLobbyListResponse*) build;
- (CMsgPracticeLobbyListResponse*) buildPartial;

- (CMsgPracticeLobbyListResponse_Builder*) mergeFrom:(CMsgPracticeLobbyListResponse*) other;
- (CMsgPracticeLobbyListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTournamentGames;
- (BOOL) tournamentGames;
- (CMsgPracticeLobbyListResponse_Builder*) setTournamentGames:(BOOL) value;
- (CMsgPracticeLobbyListResponse_Builder*) clearTournamentGames;

- (PBAppendableArray *)lobbies;
- (CMsgPracticeLobbyListResponseEntry*)lobbiesAtIndex:(NSUInteger)index;
- (CMsgPracticeLobbyListResponse_Builder *)addLobbies:(CMsgPracticeLobbyListResponseEntry*)value;
- (CMsgPracticeLobbyListResponse_Builder *)setLobbiesArray:(NSArray *)array;
- (CMsgPracticeLobbyListResponse_Builder *)setLobbiesValues:(const CMsgPracticeLobbyListResponseEntry* *)values count:(NSUInteger)count;
- (CMsgPracticeLobbyListResponse_Builder *)clearLobbies;
@end

@interface CMsgPracticeLobbyJoin : PBGeneratedMessage {
@private
  BOOL hasLobbyId_:1;
  BOOL hasPassKey_:1;
  BOOL hasClientVersion_:1;
  uint64_t lobbyId;
  NSString* passKey;
  uint32_t clientVersion;
}
- (BOOL) hasLobbyId;
- (BOOL) hasClientVersion;
- (BOOL) hasPassKey;
@property (readonly) uint64_t lobbyId;
@property (readonly) uint32_t clientVersion;
@property (readonly, retain) NSString* passKey;

+ (CMsgPracticeLobbyJoin*) defaultInstance;
- (CMsgPracticeLobbyJoin*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyJoin_Builder*) builder;
+ (CMsgPracticeLobbyJoin_Builder*) builder;
+ (CMsgPracticeLobbyJoin_Builder*) builderWithPrototype:(CMsgPracticeLobbyJoin*) prototype;
- (CMsgPracticeLobbyJoin_Builder*) toBuilder;

+ (CMsgPracticeLobbyJoin*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyJoin*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyJoin*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyJoin*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyJoin*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyJoin*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyJoin_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyJoin* _builderResult;
}

- (CMsgPracticeLobbyJoin*) defaultInstance;

- (CMsgPracticeLobbyJoin_Builder*) clear;
- (CMsgPracticeLobbyJoin_Builder*) clone;

- (CMsgPracticeLobbyJoin*) build;
- (CMsgPracticeLobbyJoin*) buildPartial;

- (CMsgPracticeLobbyJoin_Builder*) mergeFrom:(CMsgPracticeLobbyJoin*) other;
- (CMsgPracticeLobbyJoin_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyJoin_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgPracticeLobbyJoin_Builder*) setLobbyId:(uint64_t) value;
- (CMsgPracticeLobbyJoin_Builder*) clearLobbyId;

- (BOOL) hasClientVersion;
- (uint32_t) clientVersion;
- (CMsgPracticeLobbyJoin_Builder*) setClientVersion:(uint32_t) value;
- (CMsgPracticeLobbyJoin_Builder*) clearClientVersion;

- (BOOL) hasPassKey;
- (NSString*) passKey;
- (CMsgPracticeLobbyJoin_Builder*) setPassKey:(NSString*) value;
- (CMsgPracticeLobbyJoin_Builder*) clearPassKey;
@end

@interface CMsgPracticeLobbyJoinResponse : PBGeneratedMessage {
@private
  BOOL hasresult_:1;
  DOTAJoinLobbyResult result;
}
- (BOOL) hasresult;
@property (readonly) DOTAJoinLobbyResult result;

+ (CMsgPracticeLobbyJoinResponse*) defaultInstance;
- (CMsgPracticeLobbyJoinResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgPracticeLobbyJoinResponse_Builder*) builder;
+ (CMsgPracticeLobbyJoinResponse_Builder*) builder;
+ (CMsgPracticeLobbyJoinResponse_Builder*) builderWithPrototype:(CMsgPracticeLobbyJoinResponse*) prototype;
- (CMsgPracticeLobbyJoinResponse_Builder*) toBuilder;

+ (CMsgPracticeLobbyJoinResponse*) parseFromData:(NSData*) data;
+ (CMsgPracticeLobbyJoinResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyJoinResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgPracticeLobbyJoinResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgPracticeLobbyJoinResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgPracticeLobbyJoinResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgPracticeLobbyJoinResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgPracticeLobbyJoinResponse* _builderResult;
}

- (CMsgPracticeLobbyJoinResponse*) defaultInstance;

- (CMsgPracticeLobbyJoinResponse_Builder*) clear;
- (CMsgPracticeLobbyJoinResponse_Builder*) clone;

- (CMsgPracticeLobbyJoinResponse*) build;
- (CMsgPracticeLobbyJoinResponse*) buildPartial;

- (CMsgPracticeLobbyJoinResponse_Builder*) mergeFrom:(CMsgPracticeLobbyJoinResponse*) other;
- (CMsgPracticeLobbyJoinResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgPracticeLobbyJoinResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasresult;
- (DOTAJoinLobbyResult) result;
- (CMsgPracticeLobbyJoinResponse_Builder*) setresult:(DOTAJoinLobbyResult) value;
- (CMsgPracticeLobbyJoinResponse_Builder*) clearresult;
@end

@interface CMsgFriendPracticeLobbyListRequest : PBGeneratedMessage {
@private
  PBAppendableArray * friendsArray;
}
@property (readonly, retain) PBArray * friends;
- (uint32_t)friendsAtIndex:(NSUInteger)index;

+ (CMsgFriendPracticeLobbyListRequest*) defaultInstance;
- (CMsgFriendPracticeLobbyListRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgFriendPracticeLobbyListRequest_Builder*) builder;
+ (CMsgFriendPracticeLobbyListRequest_Builder*) builder;
+ (CMsgFriendPracticeLobbyListRequest_Builder*) builderWithPrototype:(CMsgFriendPracticeLobbyListRequest*) prototype;
- (CMsgFriendPracticeLobbyListRequest_Builder*) toBuilder;

+ (CMsgFriendPracticeLobbyListRequest*) parseFromData:(NSData*) data;
+ (CMsgFriendPracticeLobbyListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgFriendPracticeLobbyListRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgFriendPracticeLobbyListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgFriendPracticeLobbyListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgFriendPracticeLobbyListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgFriendPracticeLobbyListRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgFriendPracticeLobbyListRequest* _builderResult;
}

- (CMsgFriendPracticeLobbyListRequest*) defaultInstance;

- (CMsgFriendPracticeLobbyListRequest_Builder*) clear;
- (CMsgFriendPracticeLobbyListRequest_Builder*) clone;

- (CMsgFriendPracticeLobbyListRequest*) build;
- (CMsgFriendPracticeLobbyListRequest*) buildPartial;

- (CMsgFriendPracticeLobbyListRequest_Builder*) mergeFrom:(CMsgFriendPracticeLobbyListRequest*) other;
- (CMsgFriendPracticeLobbyListRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgFriendPracticeLobbyListRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)friends;
- (uint32_t)friendsAtIndex:(NSUInteger)index;
- (CMsgFriendPracticeLobbyListRequest_Builder *)addFriends:(uint32_t)value;
- (CMsgFriendPracticeLobbyListRequest_Builder *)setFriendsArray:(NSArray *)array;
- (CMsgFriendPracticeLobbyListRequest_Builder *)setFriendsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgFriendPracticeLobbyListRequest_Builder *)clearFriends;
@end

@interface CMsgFriendPracticeLobbyListResponse : PBGeneratedMessage {
@private
  PBAppendableArray * lobbiesArray;
}
@property (readonly, retain) PBArray * lobbies;
- (CMsgPracticeLobbyListResponseEntry*)lobbiesAtIndex:(NSUInteger)index;

+ (CMsgFriendPracticeLobbyListResponse*) defaultInstance;
- (CMsgFriendPracticeLobbyListResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgFriendPracticeLobbyListResponse_Builder*) builder;
+ (CMsgFriendPracticeLobbyListResponse_Builder*) builder;
+ (CMsgFriendPracticeLobbyListResponse_Builder*) builderWithPrototype:(CMsgFriendPracticeLobbyListResponse*) prototype;
- (CMsgFriendPracticeLobbyListResponse_Builder*) toBuilder;

+ (CMsgFriendPracticeLobbyListResponse*) parseFromData:(NSData*) data;
+ (CMsgFriendPracticeLobbyListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgFriendPracticeLobbyListResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgFriendPracticeLobbyListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgFriendPracticeLobbyListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgFriendPracticeLobbyListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgFriendPracticeLobbyListResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgFriendPracticeLobbyListResponse* _builderResult;
}

- (CMsgFriendPracticeLobbyListResponse*) defaultInstance;

- (CMsgFriendPracticeLobbyListResponse_Builder*) clear;
- (CMsgFriendPracticeLobbyListResponse_Builder*) clone;

- (CMsgFriendPracticeLobbyListResponse*) build;
- (CMsgFriendPracticeLobbyListResponse*) buildPartial;

- (CMsgFriendPracticeLobbyListResponse_Builder*) mergeFrom:(CMsgFriendPracticeLobbyListResponse*) other;
- (CMsgFriendPracticeLobbyListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgFriendPracticeLobbyListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)lobbies;
- (CMsgPracticeLobbyListResponseEntry*)lobbiesAtIndex:(NSUInteger)index;
- (CMsgFriendPracticeLobbyListResponse_Builder *)addLobbies:(CMsgPracticeLobbyListResponseEntry*)value;
- (CMsgFriendPracticeLobbyListResponse_Builder *)setLobbiesArray:(NSArray *)array;
- (CMsgFriendPracticeLobbyListResponse_Builder *)setLobbiesValues:(const CMsgPracticeLobbyListResponseEntry* *)values count:(NSUInteger)count;
- (CMsgFriendPracticeLobbyListResponse_Builder *)clearLobbies;
@end

@interface CMsgSetAvatar : PBGeneratedMessage {
@private
  BOOL hasAvatar_:1;
  uint32_t avatar;
}
- (BOOL) hasAvatar;
@property (readonly) uint32_t avatar;

+ (CMsgSetAvatar*) defaultInstance;
- (CMsgSetAvatar*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSetAvatar_Builder*) builder;
+ (CMsgSetAvatar_Builder*) builder;
+ (CMsgSetAvatar_Builder*) builderWithPrototype:(CMsgSetAvatar*) prototype;
- (CMsgSetAvatar_Builder*) toBuilder;

+ (CMsgSetAvatar*) parseFromData:(NSData*) data;
+ (CMsgSetAvatar*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSetAvatar*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSetAvatar*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSetAvatar*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSetAvatar*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSetAvatar_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSetAvatar* _builderResult;
}

- (CMsgSetAvatar*) defaultInstance;

- (CMsgSetAvatar_Builder*) clear;
- (CMsgSetAvatar_Builder*) clone;

- (CMsgSetAvatar*) build;
- (CMsgSetAvatar*) buildPartial;

- (CMsgSetAvatar_Builder*) mergeFrom:(CMsgSetAvatar*) other;
- (CMsgSetAvatar_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSetAvatar_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAvatar;
- (uint32_t) avatar;
- (CMsgSetAvatar_Builder*) setAvatar:(uint32_t) value;
- (CMsgSetAvatar_Builder*) clearAvatar;
@end

@interface CMsgRequestInternationalTicket : PBGeneratedMessage {
@private
}

+ (CMsgRequestInternationalTicket*) defaultInstance;
- (CMsgRequestInternationalTicket*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgRequestInternationalTicket_Builder*) builder;
+ (CMsgRequestInternationalTicket_Builder*) builder;
+ (CMsgRequestInternationalTicket_Builder*) builderWithPrototype:(CMsgRequestInternationalTicket*) prototype;
- (CMsgRequestInternationalTicket_Builder*) toBuilder;

+ (CMsgRequestInternationalTicket*) parseFromData:(NSData*) data;
+ (CMsgRequestInternationalTicket*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRequestInternationalTicket*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgRequestInternationalTicket*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRequestInternationalTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgRequestInternationalTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgRequestInternationalTicket_Builder : PBGeneratedMessage_Builder {
@private
  CMsgRequestInternationalTicket* _builderResult;
}

- (CMsgRequestInternationalTicket*) defaultInstance;

- (CMsgRequestInternationalTicket_Builder*) clear;
- (CMsgRequestInternationalTicket_Builder*) clone;

- (CMsgRequestInternationalTicket*) build;
- (CMsgRequestInternationalTicket*) buildPartial;

- (CMsgRequestInternationalTicket_Builder*) mergeFrom:(CMsgRequestInternationalTicket*) other;
- (CMsgRequestInternationalTicket_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgRequestInternationalTicket_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTrackedEvent : PBGeneratedMessage {
@private
  BOOL hasSubmitterId_:1;
  BOOL hasTimeSubmitted_:1;
  BOOL hasEventId_:1;
  BOOL hasEventType_:1;
  uint64_t submitterId;
  uint64_t timeSubmitted;
  uint32_t eventId;
  uint32_t eventType;
  PBAppendableArray * varsDoubleArray;
  PBAppendableArray * varsFloatArray;
  PBAppendableArray * varsInt64Array;
  PBAppendableArray * varsUint64Array;
  PBAppendableArray * varsInt32Array;
  PBAppendableArray * varsUint32Array;
}
- (BOOL) hasSubmitterId;
- (BOOL) hasEventId;
- (BOOL) hasTimeSubmitted;
- (BOOL) hasEventType;
@property (readonly) uint64_t submitterId;
@property (readonly) uint32_t eventId;
@property (readonly) uint64_t timeSubmitted;
@property (readonly) uint32_t eventType;
@property (readonly, retain) PBArray * varsUint32;
@property (readonly, retain) PBArray * varsUint64;
@property (readonly, retain) PBArray * varsInt32;
@property (readonly, retain) PBArray * varsInt64;
@property (readonly, retain) PBArray * varsFloat;
@property (readonly, retain) PBArray * varsDouble;
- (uint32_t)varsUint32AtIndex:(NSUInteger)index;
- (uint64_t)varsUint64AtIndex:(NSUInteger)index;
- (int32_t)varsInt32AtIndex:(NSUInteger)index;
- (int64_t)varsInt64AtIndex:(NSUInteger)index;
- (Float32)varsFloatAtIndex:(NSUInteger)index;
- (Float64)varsDoubleAtIndex:(NSUInteger)index;

+ (CMsgTrackedEvent*) defaultInstance;
- (CMsgTrackedEvent*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTrackedEvent_Builder*) builder;
+ (CMsgTrackedEvent_Builder*) builder;
+ (CMsgTrackedEvent_Builder*) builderWithPrototype:(CMsgTrackedEvent*) prototype;
- (CMsgTrackedEvent_Builder*) toBuilder;

+ (CMsgTrackedEvent*) parseFromData:(NSData*) data;
+ (CMsgTrackedEvent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTrackedEvent*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTrackedEvent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTrackedEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTrackedEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTrackedEvent_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTrackedEvent* _builderResult;
}

- (CMsgTrackedEvent*) defaultInstance;

- (CMsgTrackedEvent_Builder*) clear;
- (CMsgTrackedEvent_Builder*) clone;

- (CMsgTrackedEvent*) build;
- (CMsgTrackedEvent*) buildPartial;

- (CMsgTrackedEvent_Builder*) mergeFrom:(CMsgTrackedEvent*) other;
- (CMsgTrackedEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTrackedEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSubmitterId;
- (uint64_t) submitterId;
- (CMsgTrackedEvent_Builder*) setSubmitterId:(uint64_t) value;
- (CMsgTrackedEvent_Builder*) clearSubmitterId;

- (BOOL) hasEventId;
- (uint32_t) eventId;
- (CMsgTrackedEvent_Builder*) setEventId:(uint32_t) value;
- (CMsgTrackedEvent_Builder*) clearEventId;

- (BOOL) hasTimeSubmitted;
- (uint64_t) timeSubmitted;
- (CMsgTrackedEvent_Builder*) setTimeSubmitted:(uint64_t) value;
- (CMsgTrackedEvent_Builder*) clearTimeSubmitted;

- (BOOL) hasEventType;
- (uint32_t) eventType;
- (CMsgTrackedEvent_Builder*) setEventType:(uint32_t) value;
- (CMsgTrackedEvent_Builder*) clearEventType;

- (PBAppendableArray *)varsUint32;
- (uint32_t)varsUint32AtIndex:(NSUInteger)index;
- (CMsgTrackedEvent_Builder *)addVarsUint32:(uint32_t)value;
- (CMsgTrackedEvent_Builder *)setVarsUint32Array:(NSArray *)array;
- (CMsgTrackedEvent_Builder *)setVarsUint32Values:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgTrackedEvent_Builder *)clearVarsUint32;

- (PBAppendableArray *)varsUint64;
- (uint64_t)varsUint64AtIndex:(NSUInteger)index;
- (CMsgTrackedEvent_Builder *)addVarsUint64:(uint64_t)value;
- (CMsgTrackedEvent_Builder *)setVarsUint64Array:(NSArray *)array;
- (CMsgTrackedEvent_Builder *)setVarsUint64Values:(const uint64_t *)values count:(NSUInteger)count;
- (CMsgTrackedEvent_Builder *)clearVarsUint64;

- (PBAppendableArray *)varsInt32;
- (int32_t)varsInt32AtIndex:(NSUInteger)index;
- (CMsgTrackedEvent_Builder *)addVarsInt32:(int32_t)value;
- (CMsgTrackedEvent_Builder *)setVarsInt32Array:(NSArray *)array;
- (CMsgTrackedEvent_Builder *)setVarsInt32Values:(const int32_t *)values count:(NSUInteger)count;
- (CMsgTrackedEvent_Builder *)clearVarsInt32;

- (PBAppendableArray *)varsInt64;
- (int64_t)varsInt64AtIndex:(NSUInteger)index;
- (CMsgTrackedEvent_Builder *)addVarsInt64:(int64_t)value;
- (CMsgTrackedEvent_Builder *)setVarsInt64Array:(NSArray *)array;
- (CMsgTrackedEvent_Builder *)setVarsInt64Values:(const int64_t *)values count:(NSUInteger)count;
- (CMsgTrackedEvent_Builder *)clearVarsInt64;

- (PBAppendableArray *)varsFloat;
- (Float32)varsFloatAtIndex:(NSUInteger)index;
- (CMsgTrackedEvent_Builder *)addVarsFloat:(Float32)value;
- (CMsgTrackedEvent_Builder *)setVarsFloatArray:(NSArray *)array;
- (CMsgTrackedEvent_Builder *)setVarsFloatValues:(const Float32 *)values count:(NSUInteger)count;
- (CMsgTrackedEvent_Builder *)clearVarsFloat;

- (PBAppendableArray *)varsDouble;
- (Float64)varsDoubleAtIndex:(NSUInteger)index;
- (CMsgTrackedEvent_Builder *)addVarsDouble:(Float64)value;
- (CMsgTrackedEvent_Builder *)setVarsDoubleArray:(NSArray *)array;
- (CMsgTrackedEvent_Builder *)setVarsDoubleValues:(const Float64 *)values count:(NSUInteger)count;
- (CMsgTrackedEvent_Builder *)clearVarsDouble;
@end

@interface CMsgSendTrackedEvents : PBGeneratedMessage {
@private
  PBAppendableArray * eventsArray;
}
@property (readonly, retain) PBArray * events;
- (CMsgTrackedEvent*)eventsAtIndex:(NSUInteger)index;

+ (CMsgSendTrackedEvents*) defaultInstance;
- (CMsgSendTrackedEvents*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSendTrackedEvents_Builder*) builder;
+ (CMsgSendTrackedEvents_Builder*) builder;
+ (CMsgSendTrackedEvents_Builder*) builderWithPrototype:(CMsgSendTrackedEvents*) prototype;
- (CMsgSendTrackedEvents_Builder*) toBuilder;

+ (CMsgSendTrackedEvents*) parseFromData:(NSData*) data;
+ (CMsgSendTrackedEvents*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSendTrackedEvents*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSendTrackedEvents*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSendTrackedEvents*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSendTrackedEvents*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSendTrackedEvents_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSendTrackedEvents* _builderResult;
}

- (CMsgSendTrackedEvents*) defaultInstance;

- (CMsgSendTrackedEvents_Builder*) clear;
- (CMsgSendTrackedEvents_Builder*) clone;

- (CMsgSendTrackedEvents*) build;
- (CMsgSendTrackedEvents*) buildPartial;

- (CMsgSendTrackedEvents_Builder*) mergeFrom:(CMsgSendTrackedEvents*) other;
- (CMsgSendTrackedEvents_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSendTrackedEvents_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)events;
- (CMsgTrackedEvent*)eventsAtIndex:(NSUInteger)index;
- (CMsgSendTrackedEvents_Builder *)addEvents:(CMsgTrackedEvent*)value;
- (CMsgSendTrackedEvents_Builder *)setEventsArray:(NSArray *)array;
- (CMsgSendTrackedEvents_Builder *)setEventsValues:(const CMsgTrackedEvent* *)values count:(NSUInteger)count;
- (CMsgSendTrackedEvents_Builder *)clearEvents;
@end

@interface CMsgGameMatchSignOut : PBGeneratedMessage {
@private
  BOOL hasGoodGuysWin_:1;
  BOOL hasGameBalance_:1;
  BOOL hasDate_:1;
  BOOL hasComputerName_:1;
  BOOL hasServerAddr_:1;
  BOOL hasMatchId_:1;
  BOOL hasDuration_:1;
  BOOL hasCluster_:1;
  BOOL hasFirstBloodTime_:1;
  BOOL hasEventScore_:1;
  BOOL goodGuysWin_:1;
  Float32 gameBalance;
  uint32_t date;
  NSString* computerName;
  NSString* serverAddr;
  uint32_t matchId;
  uint32_t duration;
  uint32_t cluster;
  uint32_t firstBloodTime;
  uint32_t eventScore;
  PBAppendableArray * teamsArray;
  PBAppendableArray * numPlayersArray;
  PBAppendableArray * towerStatusArray;
  PBAppendableArray * barracksStatusArray;
}
- (BOOL) hasMatchId;
- (BOOL) hasDuration;
- (BOOL) hasGoodGuysWin;
- (BOOL) hasDate;
- (BOOL) hasComputerName;
- (BOOL) hasCluster;
- (BOOL) hasServerAddr;
- (BOOL) hasFirstBloodTime;
- (BOOL) hasGameBalance;
- (BOOL) hasEventScore;
@property (readonly) uint32_t matchId;
@property (readonly) uint32_t duration;
- (BOOL) goodGuysWin;
@property (readonly) uint32_t date;
@property (readonly, retain) PBArray * numPlayers;
@property (readonly, retain) PBArray * teams;
@property (readonly, retain) NSString* computerName;
@property (readonly, retain) PBArray * towerStatus;
@property (readonly, retain) PBArray * barracksStatus;
@property (readonly) uint32_t cluster;
@property (readonly, retain) NSString* serverAddr;
@property (readonly) uint32_t firstBloodTime;
@property (readonly) Float32 gameBalance;
@property (readonly) uint32_t eventScore;
- (uint32_t)numPlayersAtIndex:(NSUInteger)index;
- (CMsgGameMatchSignOut_CTeam*)teamsAtIndex:(NSUInteger)index;
- (uint32_t)towerStatusAtIndex:(NSUInteger)index;
- (uint32_t)barracksStatusAtIndex:(NSUInteger)index;

+ (CMsgGameMatchSignOut*) defaultInstance;
- (CMsgGameMatchSignOut*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameMatchSignOut_Builder*) builder;
+ (CMsgGameMatchSignOut_Builder*) builder;
+ (CMsgGameMatchSignOut_Builder*) builderWithPrototype:(CMsgGameMatchSignOut*) prototype;
- (CMsgGameMatchSignOut_Builder*) toBuilder;

+ (CMsgGameMatchSignOut*) parseFromData:(NSData*) data;
+ (CMsgGameMatchSignOut*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignOut*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameMatchSignOut*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignOut*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameMatchSignOut*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameMatchSignOut_CTeam : PBGeneratedMessage {
@private
  PBAppendableArray * playersArray;
}
@property (readonly, retain) PBArray * players;
- (CMsgGameMatchSignOut_CTeam_CPlayer*)playersAtIndex:(NSUInteger)index;

+ (CMsgGameMatchSignOut_CTeam*) defaultInstance;
- (CMsgGameMatchSignOut_CTeam*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameMatchSignOut_CTeam_Builder*) builder;
+ (CMsgGameMatchSignOut_CTeam_Builder*) builder;
+ (CMsgGameMatchSignOut_CTeam_Builder*) builderWithPrototype:(CMsgGameMatchSignOut_CTeam*) prototype;
- (CMsgGameMatchSignOut_CTeam_Builder*) toBuilder;

+ (CMsgGameMatchSignOut_CTeam*) parseFromData:(NSData*) data;
+ (CMsgGameMatchSignOut_CTeam*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignOut_CTeam*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameMatchSignOut_CTeam*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignOut_CTeam*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameMatchSignOut_CTeam*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameMatchSignOut_CTeam_CPlayer : PBGeneratedMessage {
@private
  BOOL hasScaledAssists_:1;
  BOOL hasScaledDeaths_:1;
  BOOL hasScaledKills_:1;
  BOOL hasPartyId_:1;
  BOOL hasAccountId_:1;
  BOOL hasMisses_:1;
  BOOL hasClaimedMisses_:1;
  BOOL hasClaimedDenies_:1;
  BOOL hasSupportGold_:1;
  BOOL hasClaimedFarmGold_:1;
  BOOL hasSupportAbilityValue_:1;
  BOOL hasTimeLastSeen_:1;
  BOOL hasHeroHealing_:1;
  BOOL hasTowerDamage_:1;
  BOOL hasHeroDamage_:1;
  BOOL hasLevel_:1;
  BOOL hasGoldSpent_:1;
  BOOL hasXpPerMinute_:1;
  BOOL hasGoldPerMin_:1;
  BOOL hasDenies_:1;
  BOOL hasLastHits_:1;
  BOOL hasLeaverStatus_:1;
  BOOL hasAssists_:1;
  BOOL hasDeaths_:1;
  BOOL hasKills_:1;
  BOOL hasGold_:1;
  BOOL hasHeroId_:1;
  BOOL hasFakeClientId_:1;
  Float32 scaledAssists;
  Float32 scaledDeaths;
  Float32 scaledKills;
  uint64_t partyId;
  uint64_t accountId;
  uint32_t misses;
  uint32_t claimedMisses;
  uint32_t claimedDenies;
  uint32_t supportGold;
  uint32_t claimedFarmGold;
  uint32_t supportAbilityValue;
  uint32_t timeLastSeen;
  uint32_t heroHealing;
  uint32_t towerDamage;
  uint32_t heroDamage;
  uint32_t level;
  uint32_t goldSpent;
  uint32_t xpPerMinute;
  uint32_t goldPerMin;
  uint32_t denies;
  uint32_t lastHits;
  uint32_t leaverStatus;
  uint32_t assists;
  uint32_t deaths;
  uint32_t kills;
  uint32_t gold;
  uint32_t heroId;
  uint32_t fakeClientId;
  PBAppendableArray * itemsArray;
}
- (BOOL) hasAccountId;
- (BOOL) hasFakeClientId;
- (BOOL) hasHeroId;
- (BOOL) hasGold;
- (BOOL) hasKills;
- (BOOL) hasDeaths;
- (BOOL) hasAssists;
- (BOOL) hasLeaverStatus;
- (BOOL) hasLastHits;
- (BOOL) hasDenies;
- (BOOL) hasGoldPerMin;
- (BOOL) hasXpPerMinute;
- (BOOL) hasGoldSpent;
- (BOOL) hasLevel;
- (BOOL) hasHeroDamage;
- (BOOL) hasTowerDamage;
- (BOOL) hasHeroHealing;
- (BOOL) hasTimeLastSeen;
- (BOOL) hasSupportAbilityValue;
- (BOOL) hasPartyId;
- (BOOL) hasScaledKills;
- (BOOL) hasScaledDeaths;
- (BOOL) hasScaledAssists;
- (BOOL) hasClaimedFarmGold;
- (BOOL) hasSupportGold;
- (BOOL) hasClaimedDenies;
- (BOOL) hasClaimedMisses;
- (BOOL) hasMisses;
@property (readonly) uint64_t accountId;
@property (readonly) uint32_t fakeClientId;
@property (readonly) uint32_t heroId;
@property (readonly, retain) PBArray * items;
@property (readonly) uint32_t gold;
@property (readonly) uint32_t kills;
@property (readonly) uint32_t deaths;
@property (readonly) uint32_t assists;
@property (readonly) uint32_t leaverStatus;
@property (readonly) uint32_t lastHits;
@property (readonly) uint32_t denies;
@property (readonly) uint32_t goldPerMin;
@property (readonly) uint32_t xpPerMinute;
@property (readonly) uint32_t goldSpent;
@property (readonly) uint32_t level;
@property (readonly) uint32_t heroDamage;
@property (readonly) uint32_t towerDamage;
@property (readonly) uint32_t heroHealing;
@property (readonly) uint32_t timeLastSeen;
@property (readonly) uint32_t supportAbilityValue;
@property (readonly) uint64_t partyId;
@property (readonly) Float32 scaledKills;
@property (readonly) Float32 scaledDeaths;
@property (readonly) Float32 scaledAssists;
@property (readonly) uint32_t claimedFarmGold;
@property (readonly) uint32_t supportGold;
@property (readonly) uint32_t claimedDenies;
@property (readonly) uint32_t claimedMisses;
@property (readonly) uint32_t misses;
- (uint32_t)itemsAtIndex:(NSUInteger)index;

+ (CMsgGameMatchSignOut_CTeam_CPlayer*) defaultInstance;
- (CMsgGameMatchSignOut_CTeam_CPlayer*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) builder;
+ (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) builder;
+ (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) builderWithPrototype:(CMsgGameMatchSignOut_CTeam_CPlayer*) prototype;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) toBuilder;

+ (CMsgGameMatchSignOut_CTeam_CPlayer*) parseFromData:(NSData*) data;
+ (CMsgGameMatchSignOut_CTeam_CPlayer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignOut_CTeam_CPlayer*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameMatchSignOut_CTeam_CPlayer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignOut_CTeam_CPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameMatchSignOut_CTeam_CPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameMatchSignOut_CTeam_CPlayer_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameMatchSignOut_CTeam_CPlayer* _builderResult;
}

- (CMsgGameMatchSignOut_CTeam_CPlayer*) defaultInstance;

- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clear;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clone;

- (CMsgGameMatchSignOut_CTeam_CPlayer*) build;
- (CMsgGameMatchSignOut_CTeam_CPlayer*) buildPartial;

- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) mergeFrom:(CMsgGameMatchSignOut_CTeam_CPlayer*) other;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint64_t) accountId;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setAccountId:(uint64_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearAccountId;

- (BOOL) hasFakeClientId;
- (uint32_t) fakeClientId;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setFakeClientId:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearFakeClientId;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setHeroId:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearHeroId;

- (PBAppendableArray *)items;
- (uint32_t)itemsAtIndex:(NSUInteger)index;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder *)addItems:(uint32_t)value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder *)setItemsArray:(NSArray *)array;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder *)setItemsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder *)clearItems;

- (BOOL) hasGold;
- (uint32_t) gold;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setGold:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearGold;

- (BOOL) hasKills;
- (uint32_t) kills;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setKills:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearKills;

- (BOOL) hasDeaths;
- (uint32_t) deaths;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setDeaths:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearDeaths;

- (BOOL) hasAssists;
- (uint32_t) assists;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setAssists:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearAssists;

- (BOOL) hasLeaverStatus;
- (uint32_t) leaverStatus;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setLeaverStatus:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearLeaverStatus;

- (BOOL) hasLastHits;
- (uint32_t) lastHits;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setLastHits:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearLastHits;

- (BOOL) hasDenies;
- (uint32_t) denies;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setDenies:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearDenies;

- (BOOL) hasGoldPerMin;
- (uint32_t) goldPerMin;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setGoldPerMin:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearGoldPerMin;

- (BOOL) hasXpPerMinute;
- (uint32_t) xpPerMinute;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setXpPerMinute:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearXpPerMinute;

- (BOOL) hasGoldSpent;
- (uint32_t) goldSpent;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setGoldSpent:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearGoldSpent;

- (BOOL) hasLevel;
- (uint32_t) level;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setLevel:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearLevel;

- (BOOL) hasHeroDamage;
- (uint32_t) heroDamage;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setHeroDamage:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearHeroDamage;

- (BOOL) hasTowerDamage;
- (uint32_t) towerDamage;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setTowerDamage:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearTowerDamage;

- (BOOL) hasHeroHealing;
- (uint32_t) heroHealing;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setHeroHealing:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearHeroHealing;

- (BOOL) hasTimeLastSeen;
- (uint32_t) timeLastSeen;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setTimeLastSeen:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearTimeLastSeen;

- (BOOL) hasSupportAbilityValue;
- (uint32_t) supportAbilityValue;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setSupportAbilityValue:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearSupportAbilityValue;

- (BOOL) hasPartyId;
- (uint64_t) partyId;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setPartyId:(uint64_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearPartyId;

- (BOOL) hasScaledKills;
- (Float32) scaledKills;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setScaledKills:(Float32) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearScaledKills;

- (BOOL) hasScaledDeaths;
- (Float32) scaledDeaths;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setScaledDeaths:(Float32) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearScaledDeaths;

- (BOOL) hasScaledAssists;
- (Float32) scaledAssists;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setScaledAssists:(Float32) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearScaledAssists;

- (BOOL) hasClaimedFarmGold;
- (uint32_t) claimedFarmGold;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setClaimedFarmGold:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearClaimedFarmGold;

- (BOOL) hasSupportGold;
- (uint32_t) supportGold;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setSupportGold:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearSupportGold;

- (BOOL) hasClaimedDenies;
- (uint32_t) claimedDenies;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setClaimedDenies:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearClaimedDenies;

- (BOOL) hasClaimedMisses;
- (uint32_t) claimedMisses;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setClaimedMisses:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearClaimedMisses;

- (BOOL) hasMisses;
- (uint32_t) misses;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) setMisses:(uint32_t) value;
- (CMsgGameMatchSignOut_CTeam_CPlayer_Builder*) clearMisses;
@end

@interface CMsgGameMatchSignOut_CTeam_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameMatchSignOut_CTeam* _builderResult;
}

- (CMsgGameMatchSignOut_CTeam*) defaultInstance;

- (CMsgGameMatchSignOut_CTeam_Builder*) clear;
- (CMsgGameMatchSignOut_CTeam_Builder*) clone;

- (CMsgGameMatchSignOut_CTeam*) build;
- (CMsgGameMatchSignOut_CTeam*) buildPartial;

- (CMsgGameMatchSignOut_CTeam_Builder*) mergeFrom:(CMsgGameMatchSignOut_CTeam*) other;
- (CMsgGameMatchSignOut_CTeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameMatchSignOut_CTeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)players;
- (CMsgGameMatchSignOut_CTeam_CPlayer*)playersAtIndex:(NSUInteger)index;
- (CMsgGameMatchSignOut_CTeam_Builder *)addPlayers:(CMsgGameMatchSignOut_CTeam_CPlayer*)value;
- (CMsgGameMatchSignOut_CTeam_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgGameMatchSignOut_CTeam_Builder *)setPlayersValues:(const CMsgGameMatchSignOut_CTeam_CPlayer* *)values count:(NSUInteger)count;
- (CMsgGameMatchSignOut_CTeam_Builder *)clearPlayers;
@end

@interface CMsgGameMatchSignOut_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameMatchSignOut* _builderResult;
}

- (CMsgGameMatchSignOut*) defaultInstance;

- (CMsgGameMatchSignOut_Builder*) clear;
- (CMsgGameMatchSignOut_Builder*) clone;

- (CMsgGameMatchSignOut*) build;
- (CMsgGameMatchSignOut*) buildPartial;

- (CMsgGameMatchSignOut_Builder*) mergeFrom:(CMsgGameMatchSignOut*) other;
- (CMsgGameMatchSignOut_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameMatchSignOut_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgGameMatchSignOut_Builder*) setMatchId:(uint32_t) value;
- (CMsgGameMatchSignOut_Builder*) clearMatchId;

- (BOOL) hasDuration;
- (uint32_t) duration;
- (CMsgGameMatchSignOut_Builder*) setDuration:(uint32_t) value;
- (CMsgGameMatchSignOut_Builder*) clearDuration;

- (BOOL) hasGoodGuysWin;
- (BOOL) goodGuysWin;
- (CMsgGameMatchSignOut_Builder*) setGoodGuysWin:(BOOL) value;
- (CMsgGameMatchSignOut_Builder*) clearGoodGuysWin;

- (BOOL) hasDate;
- (uint32_t) date;
- (CMsgGameMatchSignOut_Builder*) setDate:(uint32_t) value;
- (CMsgGameMatchSignOut_Builder*) clearDate;

- (PBAppendableArray *)numPlayers;
- (uint32_t)numPlayersAtIndex:(NSUInteger)index;
- (CMsgGameMatchSignOut_Builder *)addNumPlayers:(uint32_t)value;
- (CMsgGameMatchSignOut_Builder *)setNumPlayersArray:(NSArray *)array;
- (CMsgGameMatchSignOut_Builder *)setNumPlayersValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgGameMatchSignOut_Builder *)clearNumPlayers;

- (PBAppendableArray *)teams;
- (CMsgGameMatchSignOut_CTeam*)teamsAtIndex:(NSUInteger)index;
- (CMsgGameMatchSignOut_Builder *)addTeams:(CMsgGameMatchSignOut_CTeam*)value;
- (CMsgGameMatchSignOut_Builder *)setTeamsArray:(NSArray *)array;
- (CMsgGameMatchSignOut_Builder *)setTeamsValues:(const CMsgGameMatchSignOut_CTeam* *)values count:(NSUInteger)count;
- (CMsgGameMatchSignOut_Builder *)clearTeams;

- (BOOL) hasComputerName;
- (NSString*) computerName;
- (CMsgGameMatchSignOut_Builder*) setComputerName:(NSString*) value;
- (CMsgGameMatchSignOut_Builder*) clearComputerName;

- (PBAppendableArray *)towerStatus;
- (uint32_t)towerStatusAtIndex:(NSUInteger)index;
- (CMsgGameMatchSignOut_Builder *)addTowerStatus:(uint32_t)value;
- (CMsgGameMatchSignOut_Builder *)setTowerStatusArray:(NSArray *)array;
- (CMsgGameMatchSignOut_Builder *)setTowerStatusValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgGameMatchSignOut_Builder *)clearTowerStatus;

- (PBAppendableArray *)barracksStatus;
- (uint32_t)barracksStatusAtIndex:(NSUInteger)index;
- (CMsgGameMatchSignOut_Builder *)addBarracksStatus:(uint32_t)value;
- (CMsgGameMatchSignOut_Builder *)setBarracksStatusArray:(NSArray *)array;
- (CMsgGameMatchSignOut_Builder *)setBarracksStatusValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgGameMatchSignOut_Builder *)clearBarracksStatus;

- (BOOL) hasCluster;
- (uint32_t) cluster;
- (CMsgGameMatchSignOut_Builder*) setCluster:(uint32_t) value;
- (CMsgGameMatchSignOut_Builder*) clearCluster;

- (BOOL) hasServerAddr;
- (NSString*) serverAddr;
- (CMsgGameMatchSignOut_Builder*) setServerAddr:(NSString*) value;
- (CMsgGameMatchSignOut_Builder*) clearServerAddr;

- (BOOL) hasFirstBloodTime;
- (uint32_t) firstBloodTime;
- (CMsgGameMatchSignOut_Builder*) setFirstBloodTime:(uint32_t) value;
- (CMsgGameMatchSignOut_Builder*) clearFirstBloodTime;

- (BOOL) hasGameBalance;
- (Float32) gameBalance;
- (CMsgGameMatchSignOut_Builder*) setGameBalance:(Float32) value;
- (CMsgGameMatchSignOut_Builder*) clearGameBalance;

- (BOOL) hasEventScore;
- (uint32_t) eventScore;
- (CMsgGameMatchSignOut_Builder*) setEventScore:(uint32_t) value;
- (CMsgGameMatchSignOut_Builder*) clearEventScore;
@end

@interface CMsgGameMatchSignoutResponse : PBGeneratedMessage {
@private
  BOOL hasReplaySalt_:1;
  BOOL hasMatchId_:1;
  BOOL hasLeagueid_:1;
  uint32_t replaySalt;
  uint32_t matchId;
  uint32_t leagueid;
  PBAppendableArray * timedRewardDetailsArray;
  PBAppendableArray * xpRewardDetailsArray;
}
- (BOOL) hasMatchId;
- (BOOL) hasReplaySalt;
- (BOOL) hasLeagueid;
@property (readonly) uint32_t matchId;
@property (readonly) uint32_t replaySalt;
@property (readonly, retain) PBArray * timedRewardDetails;
@property (readonly, retain) PBArray * xpRewardDetails;
@property (readonly) uint32_t leagueid;
- (CLobbyTimedRewardDetails*)timedRewardDetailsAtIndex:(NSUInteger)index;
- (CDOTALobbyMember*)xpRewardDetailsAtIndex:(NSUInteger)index;

+ (CMsgGameMatchSignoutResponse*) defaultInstance;
- (CMsgGameMatchSignoutResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameMatchSignoutResponse_Builder*) builder;
+ (CMsgGameMatchSignoutResponse_Builder*) builder;
+ (CMsgGameMatchSignoutResponse_Builder*) builderWithPrototype:(CMsgGameMatchSignoutResponse*) prototype;
- (CMsgGameMatchSignoutResponse_Builder*) toBuilder;

+ (CMsgGameMatchSignoutResponse*) parseFromData:(NSData*) data;
+ (CMsgGameMatchSignoutResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignoutResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameMatchSignoutResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignoutResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameMatchSignoutResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameMatchSignoutResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameMatchSignoutResponse* _builderResult;
}

- (CMsgGameMatchSignoutResponse*) defaultInstance;

- (CMsgGameMatchSignoutResponse_Builder*) clear;
- (CMsgGameMatchSignoutResponse_Builder*) clone;

- (CMsgGameMatchSignoutResponse*) build;
- (CMsgGameMatchSignoutResponse*) buildPartial;

- (CMsgGameMatchSignoutResponse_Builder*) mergeFrom:(CMsgGameMatchSignoutResponse*) other;
- (CMsgGameMatchSignoutResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameMatchSignoutResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgGameMatchSignoutResponse_Builder*) setMatchId:(uint32_t) value;
- (CMsgGameMatchSignoutResponse_Builder*) clearMatchId;

- (BOOL) hasReplaySalt;
- (uint32_t) replaySalt;
- (CMsgGameMatchSignoutResponse_Builder*) setReplaySalt:(uint32_t) value;
- (CMsgGameMatchSignoutResponse_Builder*) clearReplaySalt;

- (PBAppendableArray *)timedRewardDetails;
- (CLobbyTimedRewardDetails*)timedRewardDetailsAtIndex:(NSUInteger)index;
- (CMsgGameMatchSignoutResponse_Builder *)addTimedRewardDetails:(CLobbyTimedRewardDetails*)value;
- (CMsgGameMatchSignoutResponse_Builder *)setTimedRewardDetailsArray:(NSArray *)array;
- (CMsgGameMatchSignoutResponse_Builder *)setTimedRewardDetailsValues:(const CLobbyTimedRewardDetails* *)values count:(NSUInteger)count;
- (CMsgGameMatchSignoutResponse_Builder *)clearTimedRewardDetails;

- (PBAppendableArray *)xpRewardDetails;
- (CDOTALobbyMember*)xpRewardDetailsAtIndex:(NSUInteger)index;
- (CMsgGameMatchSignoutResponse_Builder *)addXpRewardDetails:(CDOTALobbyMember*)value;
- (CMsgGameMatchSignoutResponse_Builder *)setXpRewardDetailsArray:(NSArray *)array;
- (CMsgGameMatchSignoutResponse_Builder *)setXpRewardDetailsValues:(const CDOTALobbyMember* *)values count:(NSUInteger)count;
- (CMsgGameMatchSignoutResponse_Builder *)clearXpRewardDetails;

- (BOOL) hasLeagueid;
- (uint32_t) leagueid;
- (CMsgGameMatchSignoutResponse_Builder*) setLeagueid:(uint32_t) value;
- (CMsgGameMatchSignoutResponse_Builder*) clearLeagueid;
@end

@interface CMsgGameChatLog : PBGeneratedMessage {
@private
  BOOL hasMatchId_:1;
  uint32_t matchId;
  PBAppendableArray * linesArray;
}
- (BOOL) hasMatchId;
@property (readonly) uint32_t matchId;
@property (readonly, retain) PBArray * lines;
- (CMsgGameChatLog_CChatLine*)linesAtIndex:(NSUInteger)index;

+ (CMsgGameChatLog*) defaultInstance;
- (CMsgGameChatLog*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameChatLog_Builder*) builder;
+ (CMsgGameChatLog_Builder*) builder;
+ (CMsgGameChatLog_Builder*) builderWithPrototype:(CMsgGameChatLog*) prototype;
- (CMsgGameChatLog_Builder*) toBuilder;

+ (CMsgGameChatLog*) parseFromData:(NSData*) data;
+ (CMsgGameChatLog*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameChatLog*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameChatLog*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameChatLog*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameChatLog*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameChatLog_CChatLine : PBGeneratedMessage {
@private
  BOOL hasText_:1;
  BOOL hasAccountId_:1;
  BOOL hasTeamOnly_:1;
  BOOL hasGameTime_:1;
  NSString* text;
  uint32_t accountId;
  uint32_t teamOnly;
  uint32_t gameTime;
}
- (BOOL) hasAccountId;
- (BOOL) hasTeamOnly;
- (BOOL) hasText;
- (BOOL) hasGameTime;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t teamOnly;
@property (readonly, retain) NSString* text;
@property (readonly) uint32_t gameTime;

+ (CMsgGameChatLog_CChatLine*) defaultInstance;
- (CMsgGameChatLog_CChatLine*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameChatLog_CChatLine_Builder*) builder;
+ (CMsgGameChatLog_CChatLine_Builder*) builder;
+ (CMsgGameChatLog_CChatLine_Builder*) builderWithPrototype:(CMsgGameChatLog_CChatLine*) prototype;
- (CMsgGameChatLog_CChatLine_Builder*) toBuilder;

+ (CMsgGameChatLog_CChatLine*) parseFromData:(NSData*) data;
+ (CMsgGameChatLog_CChatLine*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameChatLog_CChatLine*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameChatLog_CChatLine*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameChatLog_CChatLine*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameChatLog_CChatLine*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameChatLog_CChatLine_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameChatLog_CChatLine* _builderResult;
}

- (CMsgGameChatLog_CChatLine*) defaultInstance;

- (CMsgGameChatLog_CChatLine_Builder*) clear;
- (CMsgGameChatLog_CChatLine_Builder*) clone;

- (CMsgGameChatLog_CChatLine*) build;
- (CMsgGameChatLog_CChatLine*) buildPartial;

- (CMsgGameChatLog_CChatLine_Builder*) mergeFrom:(CMsgGameChatLog_CChatLine*) other;
- (CMsgGameChatLog_CChatLine_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameChatLog_CChatLine_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgGameChatLog_CChatLine_Builder*) setAccountId:(uint32_t) value;
- (CMsgGameChatLog_CChatLine_Builder*) clearAccountId;

- (BOOL) hasTeamOnly;
- (uint32_t) teamOnly;
- (CMsgGameChatLog_CChatLine_Builder*) setTeamOnly:(uint32_t) value;
- (CMsgGameChatLog_CChatLine_Builder*) clearTeamOnly;

- (BOOL) hasText;
- (NSString*) text;
- (CMsgGameChatLog_CChatLine_Builder*) setText:(NSString*) value;
- (CMsgGameChatLog_CChatLine_Builder*) clearText;

- (BOOL) hasGameTime;
- (uint32_t) gameTime;
- (CMsgGameChatLog_CChatLine_Builder*) setGameTime:(uint32_t) value;
- (CMsgGameChatLog_CChatLine_Builder*) clearGameTime;
@end

@interface CMsgGameChatLog_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameChatLog* _builderResult;
}

- (CMsgGameChatLog*) defaultInstance;

- (CMsgGameChatLog_Builder*) clear;
- (CMsgGameChatLog_Builder*) clone;

- (CMsgGameChatLog*) build;
- (CMsgGameChatLog*) buildPartial;

- (CMsgGameChatLog_Builder*) mergeFrom:(CMsgGameChatLog*) other;
- (CMsgGameChatLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameChatLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgGameChatLog_Builder*) setMatchId:(uint32_t) value;
- (CMsgGameChatLog_Builder*) clearMatchId;

- (PBAppendableArray *)lines;
- (CMsgGameChatLog_CChatLine*)linesAtIndex:(NSUInteger)index;
- (CMsgGameChatLog_Builder *)addLines:(CMsgGameChatLog_CChatLine*)value;
- (CMsgGameChatLog_Builder *)setLinesArray:(NSArray *)array;
- (CMsgGameChatLog_Builder *)setLinesValues:(const CMsgGameChatLog_CChatLine* *)values count:(NSUInteger)count;
- (CMsgGameChatLog_Builder *)clearLines;
@end

@interface CMsgTutorialLobbyCreate : PBGeneratedMessage {
@private
  BOOL hasSearchKey_:1;
  BOOL hasTutorialLesson_:1;
  BOOL hasClientVersion_:1;
  NSString* searchKey;
  uint32_t tutorialLesson;
  uint32_t clientVersion;
}
- (BOOL) hasSearchKey;
- (BOOL) hasTutorialLesson;
- (BOOL) hasClientVersion;
@property (readonly, retain) NSString* searchKey;
@property (readonly) uint32_t tutorialLesson;
@property (readonly) uint32_t clientVersion;

+ (CMsgTutorialLobbyCreate*) defaultInstance;
- (CMsgTutorialLobbyCreate*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTutorialLobbyCreate_Builder*) builder;
+ (CMsgTutorialLobbyCreate_Builder*) builder;
+ (CMsgTutorialLobbyCreate_Builder*) builderWithPrototype:(CMsgTutorialLobbyCreate*) prototype;
- (CMsgTutorialLobbyCreate_Builder*) toBuilder;

+ (CMsgTutorialLobbyCreate*) parseFromData:(NSData*) data;
+ (CMsgTutorialLobbyCreate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTutorialLobbyCreate*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTutorialLobbyCreate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTutorialLobbyCreate*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTutorialLobbyCreate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTutorialLobbyCreate_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTutorialLobbyCreate* _builderResult;
}

- (CMsgTutorialLobbyCreate*) defaultInstance;

- (CMsgTutorialLobbyCreate_Builder*) clear;
- (CMsgTutorialLobbyCreate_Builder*) clone;

- (CMsgTutorialLobbyCreate*) build;
- (CMsgTutorialLobbyCreate*) buildPartial;

- (CMsgTutorialLobbyCreate_Builder*) mergeFrom:(CMsgTutorialLobbyCreate*) other;
- (CMsgTutorialLobbyCreate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTutorialLobbyCreate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSearchKey;
- (NSString*) searchKey;
- (CMsgTutorialLobbyCreate_Builder*) setSearchKey:(NSString*) value;
- (CMsgTutorialLobbyCreate_Builder*) clearSearchKey;

- (BOOL) hasTutorialLesson;
- (uint32_t) tutorialLesson;
- (CMsgTutorialLobbyCreate_Builder*) setTutorialLesson:(uint32_t) value;
- (CMsgTutorialLobbyCreate_Builder*) clearTutorialLesson;

- (BOOL) hasClientVersion;
- (uint32_t) clientVersion;
- (CMsgTutorialLobbyCreate_Builder*) setClientVersion:(uint32_t) value;
- (CMsgTutorialLobbyCreate_Builder*) clearClientVersion;
@end

@interface CMsgInitialQuestionnaireResponse : PBGeneratedMessage {
@private
  BOOL hasInitialSkill_:1;
  uint32_t initialSkill;
}
- (BOOL) hasInitialSkill;
@property (readonly) uint32_t initialSkill;

+ (CMsgInitialQuestionnaireResponse*) defaultInstance;
- (CMsgInitialQuestionnaireResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgInitialQuestionnaireResponse_Builder*) builder;
+ (CMsgInitialQuestionnaireResponse_Builder*) builder;
+ (CMsgInitialQuestionnaireResponse_Builder*) builderWithPrototype:(CMsgInitialQuestionnaireResponse*) prototype;
- (CMsgInitialQuestionnaireResponse_Builder*) toBuilder;

+ (CMsgInitialQuestionnaireResponse*) parseFromData:(NSData*) data;
+ (CMsgInitialQuestionnaireResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgInitialQuestionnaireResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgInitialQuestionnaireResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgInitialQuestionnaireResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgInitialQuestionnaireResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgInitialQuestionnaireResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgInitialQuestionnaireResponse* _builderResult;
}

- (CMsgInitialQuestionnaireResponse*) defaultInstance;

- (CMsgInitialQuestionnaireResponse_Builder*) clear;
- (CMsgInitialQuestionnaireResponse_Builder*) clone;

- (CMsgInitialQuestionnaireResponse*) build;
- (CMsgInitialQuestionnaireResponse*) buildPartial;

- (CMsgInitialQuestionnaireResponse_Builder*) mergeFrom:(CMsgInitialQuestionnaireResponse*) other;
- (CMsgInitialQuestionnaireResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgInitialQuestionnaireResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasInitialSkill;
- (uint32_t) initialSkill;
- (CMsgInitialQuestionnaireResponse_Builder*) setInitialSkill:(uint32_t) value;
- (CMsgInitialQuestionnaireResponse_Builder*) clearInitialSkill;
@end

@interface CMsgInterGCSurgeTest : PBGeneratedMessage {
@private
}

+ (CMsgInterGCSurgeTest*) defaultInstance;
- (CMsgInterGCSurgeTest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgInterGCSurgeTest_Builder*) builder;
+ (CMsgInterGCSurgeTest_Builder*) builder;
+ (CMsgInterGCSurgeTest_Builder*) builderWithPrototype:(CMsgInterGCSurgeTest*) prototype;
- (CMsgInterGCSurgeTest_Builder*) toBuilder;

+ (CMsgInterGCSurgeTest*) parseFromData:(NSData*) data;
+ (CMsgInterGCSurgeTest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgInterGCSurgeTest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgInterGCSurgeTest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgInterGCSurgeTest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgInterGCSurgeTest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgInterGCSurgeTest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgInterGCSurgeTest* _builderResult;
}

- (CMsgInterGCSurgeTest*) defaultInstance;

- (CMsgInterGCSurgeTest_Builder*) clear;
- (CMsgInterGCSurgeTest_Builder*) clone;

- (CMsgInterGCSurgeTest*) build;
- (CMsgInterGCSurgeTest*) buildPartial;

- (CMsgInterGCSurgeTest_Builder*) mergeFrom:(CMsgInterGCSurgeTest*) other;
- (CMsgInterGCSurgeTest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgInterGCSurgeTest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgInterGCProfile : PBGeneratedMessage {
@private
  BOOL hasStart_:1;
  BOOL start_:1;
}
- (BOOL) hasStart;
- (BOOL) start;

+ (CMsgInterGCProfile*) defaultInstance;
- (CMsgInterGCProfile*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgInterGCProfile_Builder*) builder;
+ (CMsgInterGCProfile_Builder*) builder;
+ (CMsgInterGCProfile_Builder*) builderWithPrototype:(CMsgInterGCProfile*) prototype;
- (CMsgInterGCProfile_Builder*) toBuilder;

+ (CMsgInterGCProfile*) parseFromData:(NSData*) data;
+ (CMsgInterGCProfile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgInterGCProfile*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgInterGCProfile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgInterGCProfile*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgInterGCProfile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgInterGCProfile_Builder : PBGeneratedMessage_Builder {
@private
  CMsgInterGCProfile* _builderResult;
}

- (CMsgInterGCProfile*) defaultInstance;

- (CMsgInterGCProfile_Builder*) clear;
- (CMsgInterGCProfile_Builder*) clone;

- (CMsgInterGCProfile*) build;
- (CMsgInterGCProfile*) buildPartial;

- (CMsgInterGCProfile_Builder*) mergeFrom:(CMsgInterGCProfile*) other;
- (CMsgInterGCProfile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgInterGCProfile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStart;
- (BOOL) start;
- (CMsgInterGCProfile_Builder*) setStart:(BOOL) value;
- (CMsgInterGCProfile_Builder*) clearStart;
@end

@interface CMsgDOTATournament : PBGeneratedMessage {
@private
  BOOL hasGid_:1;
  uint64_t gid;
  PBAppendableArray * teamsArray;
  PBAppendableArray * gamesArray;
}
- (BOOL) hasGid;
@property (readonly, retain) PBArray * teams;
@property (readonly, retain) PBArray * games;
@property (readonly) uint64_t gid;
- (CMsgDOTATournament_Team*)teamsAtIndex:(NSUInteger)index;
- (CMsgDOTATournament_Game*)gamesAtIndex:(NSUInteger)index;

+ (CMsgDOTATournament*) defaultInstance;
- (CMsgDOTATournament*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATournament_Builder*) builder;
+ (CMsgDOTATournament_Builder*) builder;
+ (CMsgDOTATournament_Builder*) builderWithPrototype:(CMsgDOTATournament*) prototype;
- (CMsgDOTATournament_Builder*) toBuilder;

+ (CMsgDOTATournament*) parseFromData:(NSData*) data;
+ (CMsgDOTATournament*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournament*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATournament*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournament*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATournament*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATournament_Team : PBGeneratedMessage {
@private
  BOOL hasTeamLogo_:1;
  BOOL hasTeamName_:1;
  BOOL hasTeamAbbrev_:1;
  BOOL hasTeamId_:1;
  BOOL hasSeed_:1;
  uint64_t teamLogo;
  NSString* teamName;
  NSString* teamAbbrev;
  uint32_t teamId;
  uint32_t seed;
  PBAppendableArray * playersArray;
}
- (BOOL) hasTeamId;
- (BOOL) hasTeamName;
- (BOOL) hasTeamAbbrev;
- (BOOL) hasSeed;
- (BOOL) hasTeamLogo;
@property (readonly) uint32_t teamId;
@property (readonly, retain) NSString* teamName;
@property (readonly, retain) NSString* teamAbbrev;
@property (readonly, retain) PBArray * players;
@property (readonly) uint32_t seed;
@property (readonly) uint64_t teamLogo;
- (uint32_t)playersAtIndex:(NSUInteger)index;

+ (CMsgDOTATournament_Team*) defaultInstance;
- (CMsgDOTATournament_Team*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATournament_Team_Builder*) builder;
+ (CMsgDOTATournament_Team_Builder*) builder;
+ (CMsgDOTATournament_Team_Builder*) builderWithPrototype:(CMsgDOTATournament_Team*) prototype;
- (CMsgDOTATournament_Team_Builder*) toBuilder;

+ (CMsgDOTATournament_Team*) parseFromData:(NSData*) data;
+ (CMsgDOTATournament_Team*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournament_Team*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATournament_Team*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournament_Team*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATournament_Team*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATournament_Team_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATournament_Team* _builderResult;
}

- (CMsgDOTATournament_Team*) defaultInstance;

- (CMsgDOTATournament_Team_Builder*) clear;
- (CMsgDOTATournament_Team_Builder*) clone;

- (CMsgDOTATournament_Team*) build;
- (CMsgDOTATournament_Team*) buildPartial;

- (CMsgDOTATournament_Team_Builder*) mergeFrom:(CMsgDOTATournament_Team*) other;
- (CMsgDOTATournament_Team_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATournament_Team_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTeamId;
- (uint32_t) teamId;
- (CMsgDOTATournament_Team_Builder*) setTeamId:(uint32_t) value;
- (CMsgDOTATournament_Team_Builder*) clearTeamId;

- (BOOL) hasTeamName;
- (NSString*) teamName;
- (CMsgDOTATournament_Team_Builder*) setTeamName:(NSString*) value;
- (CMsgDOTATournament_Team_Builder*) clearTeamName;

- (BOOL) hasTeamAbbrev;
- (NSString*) teamAbbrev;
- (CMsgDOTATournament_Team_Builder*) setTeamAbbrev:(NSString*) value;
- (CMsgDOTATournament_Team_Builder*) clearTeamAbbrev;

- (PBAppendableArray *)players;
- (uint32_t)playersAtIndex:(NSUInteger)index;
- (CMsgDOTATournament_Team_Builder *)addPlayers:(uint32_t)value;
- (CMsgDOTATournament_Team_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgDOTATournament_Team_Builder *)setPlayersValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgDOTATournament_Team_Builder *)clearPlayers;

- (BOOL) hasSeed;
- (uint32_t) seed;
- (CMsgDOTATournament_Team_Builder*) setSeed:(uint32_t) value;
- (CMsgDOTATournament_Team_Builder*) clearSeed;

- (BOOL) hasTeamLogo;
- (uint64_t) teamLogo;
- (CMsgDOTATournament_Team_Builder*) setTeamLogo:(uint64_t) value;
- (CMsgDOTATournament_Team_Builder*) clearTeamLogo;
@end

@interface CMsgDOTATournament_Game : PBGeneratedMessage {
@private
  BOOL hasLiveStream_:1;
  BOOL hasResultsFinal_:1;
  BOOL hasLobbyId_:1;
  BOOL hasGameName_:1;
  BOOL hasMessage_:1;
  BOOL hasGameId_:1;
  BOOL hasGoodTeamId_:1;
  BOOL hasBadTeamId_:1;
  BOOL hasMatchId_:1;
  BOOL liveStream_:1;
  BOOL resultsFinal_:1;
  uint64_t lobbyId;
  NSString* gameName;
  NSString* message;
  uint32_t gameId;
  uint32_t goodTeamId;
  uint32_t badTeamId;
  uint32_t matchId;
  PBAppendableArray * replayUrlsArray;
}
- (BOOL) hasGameId;
- (BOOL) hasGoodTeamId;
- (BOOL) hasBadTeamId;
- (BOOL) hasLobbyId;
- (BOOL) hasMatchId;
- (BOOL) hasGameName;
- (BOOL) hasLiveStream;
- (BOOL) hasMessage;
- (BOOL) hasResultsFinal;
@property (readonly) uint32_t gameId;
@property (readonly) uint32_t goodTeamId;
@property (readonly) uint32_t badTeamId;
@property (readonly) uint64_t lobbyId;
@property (readonly) uint32_t matchId;
@property (readonly, retain) NSString* gameName;
- (BOOL) liveStream;
@property (readonly, retain) NSString* message;
- (BOOL) resultsFinal;
@property (readonly, retain) PBArray * replayUrls;
- (CMsgDOTATournament_Game_ReplayURL*)replayUrlsAtIndex:(NSUInteger)index;

+ (CMsgDOTATournament_Game*) defaultInstance;
- (CMsgDOTATournament_Game*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATournament_Game_Builder*) builder;
+ (CMsgDOTATournament_Game_Builder*) builder;
+ (CMsgDOTATournament_Game_Builder*) builderWithPrototype:(CMsgDOTATournament_Game*) prototype;
- (CMsgDOTATournament_Game_Builder*) toBuilder;

+ (CMsgDOTATournament_Game*) parseFromData:(NSData*) data;
+ (CMsgDOTATournament_Game*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournament_Game*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATournament_Game*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournament_Game*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATournament_Game*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATournament_Game_ReplayURL : PBGeneratedMessage {
@private
  BOOL hasUrl_:1;
  BOOL hasDescription_:1;
  BOOL hasProviderId_:1;
  BOOL hasStreamId_:1;
  NSString* url;
  NSString* description;
  uint32_t providerId;
  uint32_t streamId;
}
- (BOOL) hasProviderId;
- (BOOL) hasStreamId;
- (BOOL) hasUrl;
- (BOOL) hasDescription;
@property (readonly) uint32_t providerId;
@property (readonly) uint32_t streamId;
@property (readonly, retain) NSString* url;
@property (readonly, retain) NSString* description;

+ (CMsgDOTATournament_Game_ReplayURL*) defaultInstance;
- (CMsgDOTATournament_Game_ReplayURL*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) builder;
+ (CMsgDOTATournament_Game_ReplayURL_Builder*) builder;
+ (CMsgDOTATournament_Game_ReplayURL_Builder*) builderWithPrototype:(CMsgDOTATournament_Game_ReplayURL*) prototype;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) toBuilder;

+ (CMsgDOTATournament_Game_ReplayURL*) parseFromData:(NSData*) data;
+ (CMsgDOTATournament_Game_ReplayURL*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournament_Game_ReplayURL*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATournament_Game_ReplayURL*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournament_Game_ReplayURL*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATournament_Game_ReplayURL*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATournament_Game_ReplayURL_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATournament_Game_ReplayURL* _builderResult;
}

- (CMsgDOTATournament_Game_ReplayURL*) defaultInstance;

- (CMsgDOTATournament_Game_ReplayURL_Builder*) clear;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) clone;

- (CMsgDOTATournament_Game_ReplayURL*) build;
- (CMsgDOTATournament_Game_ReplayURL*) buildPartial;

- (CMsgDOTATournament_Game_ReplayURL_Builder*) mergeFrom:(CMsgDOTATournament_Game_ReplayURL*) other;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasProviderId;
- (uint32_t) providerId;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) setProviderId:(uint32_t) value;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) clearProviderId;

- (BOOL) hasStreamId;
- (uint32_t) streamId;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) setStreamId:(uint32_t) value;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) clearStreamId;

- (BOOL) hasUrl;
- (NSString*) url;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) setUrl:(NSString*) value;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) clearUrl;

- (BOOL) hasDescription;
- (NSString*) description;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) setDescription:(NSString*) value;
- (CMsgDOTATournament_Game_ReplayURL_Builder*) clearDescription;
@end

@interface CMsgDOTATournament_Game_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATournament_Game* _builderResult;
}

- (CMsgDOTATournament_Game*) defaultInstance;

- (CMsgDOTATournament_Game_Builder*) clear;
- (CMsgDOTATournament_Game_Builder*) clone;

- (CMsgDOTATournament_Game*) build;
- (CMsgDOTATournament_Game*) buildPartial;

- (CMsgDOTATournament_Game_Builder*) mergeFrom:(CMsgDOTATournament_Game*) other;
- (CMsgDOTATournament_Game_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATournament_Game_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameId;
- (uint32_t) gameId;
- (CMsgDOTATournament_Game_Builder*) setGameId:(uint32_t) value;
- (CMsgDOTATournament_Game_Builder*) clearGameId;

- (BOOL) hasGoodTeamId;
- (uint32_t) goodTeamId;
- (CMsgDOTATournament_Game_Builder*) setGoodTeamId:(uint32_t) value;
- (CMsgDOTATournament_Game_Builder*) clearGoodTeamId;

- (BOOL) hasBadTeamId;
- (uint32_t) badTeamId;
- (CMsgDOTATournament_Game_Builder*) setBadTeamId:(uint32_t) value;
- (CMsgDOTATournament_Game_Builder*) clearBadTeamId;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgDOTATournament_Game_Builder*) setLobbyId:(uint64_t) value;
- (CMsgDOTATournament_Game_Builder*) clearLobbyId;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgDOTATournament_Game_Builder*) setMatchId:(uint32_t) value;
- (CMsgDOTATournament_Game_Builder*) clearMatchId;

- (BOOL) hasGameName;
- (NSString*) gameName;
- (CMsgDOTATournament_Game_Builder*) setGameName:(NSString*) value;
- (CMsgDOTATournament_Game_Builder*) clearGameName;

- (BOOL) hasLiveStream;
- (BOOL) liveStream;
- (CMsgDOTATournament_Game_Builder*) setLiveStream:(BOOL) value;
- (CMsgDOTATournament_Game_Builder*) clearLiveStream;

- (BOOL) hasMessage;
- (NSString*) message;
- (CMsgDOTATournament_Game_Builder*) setMessage:(NSString*) value;
- (CMsgDOTATournament_Game_Builder*) clearMessage;

- (BOOL) hasResultsFinal;
- (BOOL) resultsFinal;
- (CMsgDOTATournament_Game_Builder*) setResultsFinal:(BOOL) value;
- (CMsgDOTATournament_Game_Builder*) clearResultsFinal;

- (PBAppendableArray *)replayUrls;
- (CMsgDOTATournament_Game_ReplayURL*)replayUrlsAtIndex:(NSUInteger)index;
- (CMsgDOTATournament_Game_Builder *)addReplayUrls:(CMsgDOTATournament_Game_ReplayURL*)value;
- (CMsgDOTATournament_Game_Builder *)setReplayUrlsArray:(NSArray *)array;
- (CMsgDOTATournament_Game_Builder *)setReplayUrlsValues:(const CMsgDOTATournament_Game_ReplayURL* *)values count:(NSUInteger)count;
- (CMsgDOTATournament_Game_Builder *)clearReplayUrls;
@end

@interface CMsgDOTATournament_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATournament* _builderResult;
}

- (CMsgDOTATournament*) defaultInstance;

- (CMsgDOTATournament_Builder*) clear;
- (CMsgDOTATournament_Builder*) clone;

- (CMsgDOTATournament*) build;
- (CMsgDOTATournament*) buildPartial;

- (CMsgDOTATournament_Builder*) mergeFrom:(CMsgDOTATournament*) other;
- (CMsgDOTATournament_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATournament_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)teams;
- (CMsgDOTATournament_Team*)teamsAtIndex:(NSUInteger)index;
- (CMsgDOTATournament_Builder *)addTeams:(CMsgDOTATournament_Team*)value;
- (CMsgDOTATournament_Builder *)setTeamsArray:(NSArray *)array;
- (CMsgDOTATournament_Builder *)setTeamsValues:(const CMsgDOTATournament_Team* *)values count:(NSUInteger)count;
- (CMsgDOTATournament_Builder *)clearTeams;

- (PBAppendableArray *)games;
- (CMsgDOTATournament_Game*)gamesAtIndex:(NSUInteger)index;
- (CMsgDOTATournament_Builder *)addGames:(CMsgDOTATournament_Game*)value;
- (CMsgDOTATournament_Builder *)setGamesArray:(NSArray *)array;
- (CMsgDOTATournament_Builder *)setGamesValues:(const CMsgDOTATournament_Game* *)values count:(NSUInteger)count;
- (CMsgDOTATournament_Builder *)clearGames;

- (BOOL) hasGid;
- (uint64_t) gid;
- (CMsgDOTATournament_Builder*) setGid:(uint64_t) value;
- (CMsgDOTATournament_Builder*) clearGid;
@end

@interface CMsgDOTATournamentRequest : PBGeneratedMessage {
@private
  BOOL hasClientTournamentGid_:1;
  BOOL hasTournamentId_:1;
  uint64_t clientTournamentGid;
  uint32_t tournamentId;
}
- (BOOL) hasTournamentId;
- (BOOL) hasClientTournamentGid;
@property (readonly) uint32_t tournamentId;
@property (readonly) uint64_t clientTournamentGid;

+ (CMsgDOTATournamentRequest*) defaultInstance;
- (CMsgDOTATournamentRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATournamentRequest_Builder*) builder;
+ (CMsgDOTATournamentRequest_Builder*) builder;
+ (CMsgDOTATournamentRequest_Builder*) builderWithPrototype:(CMsgDOTATournamentRequest*) prototype;
- (CMsgDOTATournamentRequest_Builder*) toBuilder;

+ (CMsgDOTATournamentRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTATournamentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournamentRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATournamentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournamentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATournamentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATournamentRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATournamentRequest* _builderResult;
}

- (CMsgDOTATournamentRequest*) defaultInstance;

- (CMsgDOTATournamentRequest_Builder*) clear;
- (CMsgDOTATournamentRequest_Builder*) clone;

- (CMsgDOTATournamentRequest*) build;
- (CMsgDOTATournamentRequest*) buildPartial;

- (CMsgDOTATournamentRequest_Builder*) mergeFrom:(CMsgDOTATournamentRequest*) other;
- (CMsgDOTATournamentRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATournamentRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTournamentId;
- (uint32_t) tournamentId;
- (CMsgDOTATournamentRequest_Builder*) setTournamentId:(uint32_t) value;
- (CMsgDOTATournamentRequest_Builder*) clearTournamentId;

- (BOOL) hasClientTournamentGid;
- (uint64_t) clientTournamentGid;
- (CMsgDOTATournamentRequest_Builder*) setClientTournamentGid:(uint64_t) value;
- (CMsgDOTATournamentRequest_Builder*) clearClientTournamentGid;
@end

@interface CMsgDOTATournamentResponse : PBGeneratedMessage {
@private
  BOOL hasTournament_:1;
  BOOL hasResult_:1;
  CMsgDOTATournament* tournament;
  uint32_t result;
}
- (BOOL) hasResult;
- (BOOL) hasTournament;
@property (readonly) uint32_t result;
@property (readonly, retain) CMsgDOTATournament* tournament;

+ (CMsgDOTATournamentResponse*) defaultInstance;
- (CMsgDOTATournamentResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATournamentResponse_Builder*) builder;
+ (CMsgDOTATournamentResponse_Builder*) builder;
+ (CMsgDOTATournamentResponse_Builder*) builderWithPrototype:(CMsgDOTATournamentResponse*) prototype;
- (CMsgDOTATournamentResponse_Builder*) toBuilder;

+ (CMsgDOTATournamentResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTATournamentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournamentResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATournamentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATournamentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATournamentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATournamentResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATournamentResponse* _builderResult;
}

- (CMsgDOTATournamentResponse*) defaultInstance;

- (CMsgDOTATournamentResponse_Builder*) clear;
- (CMsgDOTATournamentResponse_Builder*) clone;

- (CMsgDOTATournamentResponse*) build;
- (CMsgDOTATournamentResponse*) buildPartial;

- (CMsgDOTATournamentResponse_Builder*) mergeFrom:(CMsgDOTATournamentResponse*) other;
- (CMsgDOTATournamentResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATournamentResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResult;
- (uint32_t) result;
- (CMsgDOTATournamentResponse_Builder*) setResult:(uint32_t) value;
- (CMsgDOTATournamentResponse_Builder*) clearResult;

- (BOOL) hasTournament;
- (CMsgDOTATournament*) tournament;
- (CMsgDOTATournamentResponse_Builder*) setTournament:(CMsgDOTATournament*) value;
- (CMsgDOTATournamentResponse_Builder*) setTournamentBuilder:(CMsgDOTATournament_Builder*) builderForValue;
- (CMsgDOTATournamentResponse_Builder*) mergeTournament:(CMsgDOTATournament*) value;
- (CMsgDOTATournamentResponse_Builder*) clearTournament;
@end

@interface CMsgDOTAClearTournamentGame : PBGeneratedMessage {
@private
  BOOL hasTournamentId_:1;
  BOOL hasGameId_:1;
  uint32_t tournamentId;
  uint32_t gameId;
}
- (BOOL) hasTournamentId;
- (BOOL) hasGameId;
@property (readonly) uint32_t tournamentId;
@property (readonly) uint32_t gameId;

+ (CMsgDOTAClearTournamentGame*) defaultInstance;
- (CMsgDOTAClearTournamentGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAClearTournamentGame_Builder*) builder;
+ (CMsgDOTAClearTournamentGame_Builder*) builder;
+ (CMsgDOTAClearTournamentGame_Builder*) builderWithPrototype:(CMsgDOTAClearTournamentGame*) prototype;
- (CMsgDOTAClearTournamentGame_Builder*) toBuilder;

+ (CMsgDOTAClearTournamentGame*) parseFromData:(NSData*) data;
+ (CMsgDOTAClearTournamentGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAClearTournamentGame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAClearTournamentGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAClearTournamentGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAClearTournamentGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAClearTournamentGame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAClearTournamentGame* _builderResult;
}

- (CMsgDOTAClearTournamentGame*) defaultInstance;

- (CMsgDOTAClearTournamentGame_Builder*) clear;
- (CMsgDOTAClearTournamentGame_Builder*) clone;

- (CMsgDOTAClearTournamentGame*) build;
- (CMsgDOTAClearTournamentGame*) buildPartial;

- (CMsgDOTAClearTournamentGame_Builder*) mergeFrom:(CMsgDOTAClearTournamentGame*) other;
- (CMsgDOTAClearTournamentGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAClearTournamentGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTournamentId;
- (uint32_t) tournamentId;
- (CMsgDOTAClearTournamentGame_Builder*) setTournamentId:(uint32_t) value;
- (CMsgDOTAClearTournamentGame_Builder*) clearTournamentId;

- (BOOL) hasGameId;
- (uint32_t) gameId;
- (CMsgDOTAClearTournamentGame_Builder*) setGameId:(uint32_t) value;
- (CMsgDOTAClearTournamentGame_Builder*) clearGameId;
@end

@interface CMsgDOTAMatch : PBGeneratedMessage {
@private
  BOOL hasGoodGuysWin_:1;
  BOOL hasGameBalance_:1;
  BOOL hasDireLogo_:1;
  BOOL hasRadiantLogo_:1;
  BOOL hasStartTime_:1;
  BOOL hasReplaySalt_:1;
  BOOL hasServerIp_:1;
  BOOL hasDireName_:1;
  BOOL hasRadiantName_:1;
  BOOL hasNegativeVotes_:1;
  BOOL hasPositiveVotes_:1;
  BOOL hasDireTeamComplete_:1;
  BOOL hasRadiantTeamComplete_:1;
  BOOL hasLeagueid_:1;
  BOOL hasDireTeamId_:1;
  BOOL hasRadiantTeamId_:1;
  BOOL hasAverageSkill_:1;
  BOOL hasHumanPlayers_:1;
  BOOL hasLobbyType_:1;
  BOOL hasServerPort_:1;
  BOOL hasFirstBloodTime_:1;
  BOOL hasCluster_:1;
  BOOL hasMatchId_:1;
  BOOL hasDuration_:1;
  BOOL hasSeason_:1;
  BOOL hasgame_mode_:1;
  BOOL goodGuysWin_:1;
  Float32 gameBalance;
  uint64_t direLogo;
  uint64_t radiantLogo;
  uint32_t startTime;
  uint32_t replaySalt;
  uint32_t serverIp;
  NSString* direName;
  NSString* radiantName;
  uint32_t negativeVotes;
  uint32_t positiveVotes;
  uint32_t direTeamComplete;
  uint32_t radiantTeamComplete;
  uint32_t leagueid;
  uint32_t direTeamId;
  uint32_t radiantTeamId;
  uint32_t averageSkill;
  uint32_t humanPlayers;
  uint32_t lobbyType;
  uint32_t serverPort;
  uint32_t firstBloodTime;
  uint32_t cluster;
  uint32_t matchId;
  uint32_t duration;
  uint32_t season;
  DOTA_GameMode game_mode;
  PBAppendableArray * playersArray;
  PBAppendableArray * barracksStatusArray;
  PBAppendableArray * towerStatusArray;
}
- (BOOL) hasSeason;
- (BOOL) hasGoodGuysWin;
- (BOOL) hasDuration;
- (BOOL) hasStartTime;
- (BOOL) hasMatchId;
- (BOOL) hasCluster;
- (BOOL) hasFirstBloodTime;
- (BOOL) hasReplaySalt;
- (BOOL) hasServerIp;
- (BOOL) hasServerPort;
- (BOOL) hasLobbyType;
- (BOOL) hasHumanPlayers;
- (BOOL) hasAverageSkill;
- (BOOL) hasGameBalance;
- (BOOL) hasRadiantTeamId;
- (BOOL) hasDireTeamId;
- (BOOL) hasLeagueid;
- (BOOL) hasRadiantName;
- (BOOL) hasDireName;
- (BOOL) hasRadiantLogo;
- (BOOL) hasDireLogo;
- (BOOL) hasRadiantTeamComplete;
- (BOOL) hasDireTeamComplete;
- (BOOL) hasPositiveVotes;
- (BOOL) hasNegativeVotes;
- (BOOL) hasgame_mode;
@property (readonly) uint32_t season;
- (BOOL) goodGuysWin;
@property (readonly) uint32_t duration;
@property (readonly) uint32_t startTime;
@property (readonly, retain) PBArray * players;
@property (readonly) uint32_t matchId;
@property (readonly, retain) PBArray * towerStatus;
@property (readonly, retain) PBArray * barracksStatus;
@property (readonly) uint32_t cluster;
@property (readonly) uint32_t firstBloodTime;
@property (readonly) uint32_t replaySalt;
@property (readonly) uint32_t serverIp;
@property (readonly) uint32_t serverPort;
@property (readonly) uint32_t lobbyType;
@property (readonly) uint32_t humanPlayers;
@property (readonly) uint32_t averageSkill;
@property (readonly) Float32 gameBalance;
@property (readonly) uint32_t radiantTeamId;
@property (readonly) uint32_t direTeamId;
@property (readonly) uint32_t leagueid;
@property (readonly, retain) NSString* radiantName;
@property (readonly, retain) NSString* direName;
@property (readonly) uint64_t radiantLogo;
@property (readonly) uint64_t direLogo;
@property (readonly) uint32_t radiantTeamComplete;
@property (readonly) uint32_t direTeamComplete;
@property (readonly) uint32_t positiveVotes;
@property (readonly) uint32_t negativeVotes;
@property (readonly) DOTA_GameMode game_mode;
- (CMsgDOTAMatch_Player*)playersAtIndex:(NSUInteger)index;
- (uint32_t)towerStatusAtIndex:(NSUInteger)index;
- (uint32_t)barracksStatusAtIndex:(NSUInteger)index;

+ (CMsgDOTAMatch*) defaultInstance;
- (CMsgDOTAMatch*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAMatch_Builder*) builder;
+ (CMsgDOTAMatch_Builder*) builder;
+ (CMsgDOTAMatch_Builder*) builderWithPrototype:(CMsgDOTAMatch*) prototype;
- (CMsgDOTAMatch_Builder*) toBuilder;

+ (CMsgDOTAMatch*) parseFromData:(NSData*) data;
+ (CMsgDOTAMatch*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatch*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAMatch*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatch*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAMatch*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAMatch_Player : PBGeneratedMessage {
@private
  BOOL hasFeedingDetected_:1;
  BOOL hasScaledAssists_:1;
  BOOL hasScaledDeaths_:1;
  BOOL hasScaledKills_:1;
  BOOL hasExpectedTeamContribution_:1;
  BOOL hasScaledMetric_:1;
  BOOL hasPartyId_:1;
  BOOL hasPlayerName_:1;
  BOOL hasHeroDamage_:1;
  BOOL hasTowerDamage_:1;
  BOOL hasHeroHealing_:1;
  BOOL hasLevel_:1;
  BOOL hasTimeLastSeen_:1;
  BOOL hasSupportAbilityValue_:1;
  BOOL hasSearchRank_:1;
  BOOL hasSearchRankUncertainty_:1;
  BOOL hasRankUncertaintyChange_:1;
  BOOL hasHeroPlayCount_:1;
  BOOL hasClaimedFarmGold_:1;
  BOOL hasSupportGold_:1;
  BOOL hasClaimedDenies_:1;
  BOOL hasClaimedMisses_:1;
  BOOL hasMisses_:1;
  BOOL hasAccountId_:1;
  BOOL hasPlayerSlot_:1;
  BOOL hasHeroId_:1;
  BOOL hasItem0_:1;
  BOOL hasItem1_:1;
  BOOL hasItem2_:1;
  BOOL hasItem3_:1;
  BOOL hasItem4_:1;
  BOOL hasItem5_:1;
  BOOL hasPreviousRank_:1;
  BOOL hasRankChange_:1;
  BOOL hasKills_:1;
  BOOL hasDeaths_:1;
  BOOL hasAssists_:1;
  BOOL hasLeaverStatus_:1;
  BOOL hasGold_:1;
  BOOL hasLastHits_:1;
  BOOL hasDenies_:1;
  BOOL hasGoldPerMin_:1;
  BOOL hasXpPerMin_:1;
  BOOL hasGoldSpent_:1;
  BOOL feedingDetected_:1;
  Float32 scaledAssists;
  Float32 scaledDeaths;
  Float32 scaledKills;
  Float32 expectedTeamContribution;
  Float32 scaledMetric;
  uint64_t partyId;
  NSString* playerName;
  uint32_t heroDamage;
  uint32_t towerDamage;
  uint32_t heroHealing;
  uint32_t level;
  uint32_t timeLastSeen;
  uint32_t supportAbilityValue;
  uint32_t searchRank;
  uint32_t searchRankUncertainty;
  uint32_t rankUncertaintyChange;
  uint32_t heroPlayCount;
  uint32_t claimedFarmGold;
  uint32_t supportGold;
  uint32_t claimedDenies;
  uint32_t claimedMisses;
  uint32_t misses;
  uint32_t accountId;
  uint32_t playerSlot;
  uint32_t heroId;
  uint32_t item0;
  uint32_t item1;
  uint32_t item2;
  uint32_t item3;
  uint32_t item4;
  uint32_t item5;
  uint32_t previousRank;
  uint32_t rankChange;
  uint32_t kills;
  uint32_t deaths;
  uint32_t assists;
  uint32_t leaverStatus;
  uint32_t gold;
  uint32_t lastHits;
  uint32_t denies;
  uint32_t goldPerMin;
  uint32_t xpPerMin;
  uint32_t goldSpent;
}
- (BOOL) hasAccountId;
- (BOOL) hasPlayerSlot;
- (BOOL) hasHeroId;
- (BOOL) hasItem0;
- (BOOL) hasItem1;
- (BOOL) hasItem2;
- (BOOL) hasItem3;
- (BOOL) hasItem4;
- (BOOL) hasItem5;
- (BOOL) hasExpectedTeamContribution;
- (BOOL) hasScaledMetric;
- (BOOL) hasPreviousRank;
- (BOOL) hasRankChange;
- (BOOL) hasKills;
- (BOOL) hasDeaths;
- (BOOL) hasAssists;
- (BOOL) hasLeaverStatus;
- (BOOL) hasGold;
- (BOOL) hasLastHits;
- (BOOL) hasDenies;
- (BOOL) hasGoldPerMin;
- (BOOL) hasXpPerMin;
- (BOOL) hasGoldSpent;
- (BOOL) hasHeroDamage;
- (BOOL) hasTowerDamage;
- (BOOL) hasHeroHealing;
- (BOOL) hasLevel;
- (BOOL) hasTimeLastSeen;
- (BOOL) hasPlayerName;
- (BOOL) hasSupportAbilityValue;
- (BOOL) hasFeedingDetected;
- (BOOL) hasSearchRank;
- (BOOL) hasSearchRankUncertainty;
- (BOOL) hasRankUncertaintyChange;
- (BOOL) hasHeroPlayCount;
- (BOOL) hasPartyId;
- (BOOL) hasScaledKills;
- (BOOL) hasScaledDeaths;
- (BOOL) hasScaledAssists;
- (BOOL) hasClaimedFarmGold;
- (BOOL) hasSupportGold;
- (BOOL) hasClaimedDenies;
- (BOOL) hasClaimedMisses;
- (BOOL) hasMisses;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t playerSlot;
@property (readonly) uint32_t heroId;
@property (readonly) uint32_t item0;
@property (readonly) uint32_t item1;
@property (readonly) uint32_t item2;
@property (readonly) uint32_t item3;
@property (readonly) uint32_t item4;
@property (readonly) uint32_t item5;
@property (readonly) Float32 expectedTeamContribution;
@property (readonly) Float32 scaledMetric;
@property (readonly) uint32_t previousRank;
@property (readonly) uint32_t rankChange;
@property (readonly) uint32_t kills;
@property (readonly) uint32_t deaths;
@property (readonly) uint32_t assists;
@property (readonly) uint32_t leaverStatus;
@property (readonly) uint32_t gold;
@property (readonly) uint32_t lastHits;
@property (readonly) uint32_t denies;
@property (readonly) uint32_t goldPerMin;
@property (readonly) uint32_t xpPerMin;
@property (readonly) uint32_t goldSpent;
@property (readonly) uint32_t heroDamage;
@property (readonly) uint32_t towerDamage;
@property (readonly) uint32_t heroHealing;
@property (readonly) uint32_t level;
@property (readonly) uint32_t timeLastSeen;
@property (readonly, retain) NSString* playerName;
@property (readonly) uint32_t supportAbilityValue;
- (BOOL) feedingDetected;
@property (readonly) uint32_t searchRank;
@property (readonly) uint32_t searchRankUncertainty;
@property (readonly) uint32_t rankUncertaintyChange;
@property (readonly) uint32_t heroPlayCount;
@property (readonly) uint64_t partyId;
@property (readonly) Float32 scaledKills;
@property (readonly) Float32 scaledDeaths;
@property (readonly) Float32 scaledAssists;
@property (readonly) uint32_t claimedFarmGold;
@property (readonly) uint32_t supportGold;
@property (readonly) uint32_t claimedDenies;
@property (readonly) uint32_t claimedMisses;
@property (readonly) uint32_t misses;

+ (CMsgDOTAMatch_Player*) defaultInstance;
- (CMsgDOTAMatch_Player*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAMatch_Player_Builder*) builder;
+ (CMsgDOTAMatch_Player_Builder*) builder;
+ (CMsgDOTAMatch_Player_Builder*) builderWithPrototype:(CMsgDOTAMatch_Player*) prototype;
- (CMsgDOTAMatch_Player_Builder*) toBuilder;

+ (CMsgDOTAMatch_Player*) parseFromData:(NSData*) data;
+ (CMsgDOTAMatch_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatch_Player*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAMatch_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatch_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAMatch_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAMatch_Player_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAMatch_Player* _builderResult;
}

- (CMsgDOTAMatch_Player*) defaultInstance;

- (CMsgDOTAMatch_Player_Builder*) clear;
- (CMsgDOTAMatch_Player_Builder*) clone;

- (CMsgDOTAMatch_Player*) build;
- (CMsgDOTAMatch_Player*) buildPartial;

- (CMsgDOTAMatch_Player_Builder*) mergeFrom:(CMsgDOTAMatch_Player*) other;
- (CMsgDOTAMatch_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAMatch_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTAMatch_Player_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearAccountId;

- (BOOL) hasPlayerSlot;
- (uint32_t) playerSlot;
- (CMsgDOTAMatch_Player_Builder*) setPlayerSlot:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearPlayerSlot;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTAMatch_Player_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearHeroId;

- (BOOL) hasItem0;
- (uint32_t) item0;
- (CMsgDOTAMatch_Player_Builder*) setItem0:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearItem0;

- (BOOL) hasItem1;
- (uint32_t) item1;
- (CMsgDOTAMatch_Player_Builder*) setItem1:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearItem1;

- (BOOL) hasItem2;
- (uint32_t) item2;
- (CMsgDOTAMatch_Player_Builder*) setItem2:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearItem2;

- (BOOL) hasItem3;
- (uint32_t) item3;
- (CMsgDOTAMatch_Player_Builder*) setItem3:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearItem3;

- (BOOL) hasItem4;
- (uint32_t) item4;
- (CMsgDOTAMatch_Player_Builder*) setItem4:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearItem4;

- (BOOL) hasItem5;
- (uint32_t) item5;
- (CMsgDOTAMatch_Player_Builder*) setItem5:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearItem5;

- (BOOL) hasExpectedTeamContribution;
- (Float32) expectedTeamContribution;
- (CMsgDOTAMatch_Player_Builder*) setExpectedTeamContribution:(Float32) value;
- (CMsgDOTAMatch_Player_Builder*) clearExpectedTeamContribution;

- (BOOL) hasScaledMetric;
- (Float32) scaledMetric;
- (CMsgDOTAMatch_Player_Builder*) setScaledMetric:(Float32) value;
- (CMsgDOTAMatch_Player_Builder*) clearScaledMetric;

- (BOOL) hasPreviousRank;
- (uint32_t) previousRank;
- (CMsgDOTAMatch_Player_Builder*) setPreviousRank:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearPreviousRank;

- (BOOL) hasRankChange;
- (uint32_t) rankChange;
- (CMsgDOTAMatch_Player_Builder*) setRankChange:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearRankChange;

- (BOOL) hasKills;
- (uint32_t) kills;
- (CMsgDOTAMatch_Player_Builder*) setKills:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearKills;

- (BOOL) hasDeaths;
- (uint32_t) deaths;
- (CMsgDOTAMatch_Player_Builder*) setDeaths:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearDeaths;

- (BOOL) hasAssists;
- (uint32_t) assists;
- (CMsgDOTAMatch_Player_Builder*) setAssists:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearAssists;

- (BOOL) hasLeaverStatus;
- (uint32_t) leaverStatus;
- (CMsgDOTAMatch_Player_Builder*) setLeaverStatus:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearLeaverStatus;

- (BOOL) hasGold;
- (uint32_t) gold;
- (CMsgDOTAMatch_Player_Builder*) setGold:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearGold;

- (BOOL) hasLastHits;
- (uint32_t) lastHits;
- (CMsgDOTAMatch_Player_Builder*) setLastHits:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearLastHits;

- (BOOL) hasDenies;
- (uint32_t) denies;
- (CMsgDOTAMatch_Player_Builder*) setDenies:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearDenies;

- (BOOL) hasGoldPerMin;
- (uint32_t) goldPerMin;
- (CMsgDOTAMatch_Player_Builder*) setGoldPerMin:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearGoldPerMin;

- (BOOL) hasXpPerMin;
- (uint32_t) xpPerMin;
- (CMsgDOTAMatch_Player_Builder*) setXpPerMin:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearXpPerMin;

- (BOOL) hasGoldSpent;
- (uint32_t) goldSpent;
- (CMsgDOTAMatch_Player_Builder*) setGoldSpent:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearGoldSpent;

- (BOOL) hasHeroDamage;
- (uint32_t) heroDamage;
- (CMsgDOTAMatch_Player_Builder*) setHeroDamage:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearHeroDamage;

- (BOOL) hasTowerDamage;
- (uint32_t) towerDamage;
- (CMsgDOTAMatch_Player_Builder*) setTowerDamage:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearTowerDamage;

- (BOOL) hasHeroHealing;
- (uint32_t) heroHealing;
- (CMsgDOTAMatch_Player_Builder*) setHeroHealing:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearHeroHealing;

- (BOOL) hasLevel;
- (uint32_t) level;
- (CMsgDOTAMatch_Player_Builder*) setLevel:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearLevel;

- (BOOL) hasTimeLastSeen;
- (uint32_t) timeLastSeen;
- (CMsgDOTAMatch_Player_Builder*) setTimeLastSeen:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearTimeLastSeen;

- (BOOL) hasPlayerName;
- (NSString*) playerName;
- (CMsgDOTAMatch_Player_Builder*) setPlayerName:(NSString*) value;
- (CMsgDOTAMatch_Player_Builder*) clearPlayerName;

- (BOOL) hasSupportAbilityValue;
- (uint32_t) supportAbilityValue;
- (CMsgDOTAMatch_Player_Builder*) setSupportAbilityValue:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearSupportAbilityValue;

- (BOOL) hasFeedingDetected;
- (BOOL) feedingDetected;
- (CMsgDOTAMatch_Player_Builder*) setFeedingDetected:(BOOL) value;
- (CMsgDOTAMatch_Player_Builder*) clearFeedingDetected;

- (BOOL) hasSearchRank;
- (uint32_t) searchRank;
- (CMsgDOTAMatch_Player_Builder*) setSearchRank:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearSearchRank;

- (BOOL) hasSearchRankUncertainty;
- (uint32_t) searchRankUncertainty;
- (CMsgDOTAMatch_Player_Builder*) setSearchRankUncertainty:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearSearchRankUncertainty;

- (BOOL) hasRankUncertaintyChange;
- (uint32_t) rankUncertaintyChange;
- (CMsgDOTAMatch_Player_Builder*) setRankUncertaintyChange:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearRankUncertaintyChange;

- (BOOL) hasHeroPlayCount;
- (uint32_t) heroPlayCount;
- (CMsgDOTAMatch_Player_Builder*) setHeroPlayCount:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearHeroPlayCount;

- (BOOL) hasPartyId;
- (uint64_t) partyId;
- (CMsgDOTAMatch_Player_Builder*) setPartyId:(uint64_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearPartyId;

- (BOOL) hasScaledKills;
- (Float32) scaledKills;
- (CMsgDOTAMatch_Player_Builder*) setScaledKills:(Float32) value;
- (CMsgDOTAMatch_Player_Builder*) clearScaledKills;

- (BOOL) hasScaledDeaths;
- (Float32) scaledDeaths;
- (CMsgDOTAMatch_Player_Builder*) setScaledDeaths:(Float32) value;
- (CMsgDOTAMatch_Player_Builder*) clearScaledDeaths;

- (BOOL) hasScaledAssists;
- (Float32) scaledAssists;
- (CMsgDOTAMatch_Player_Builder*) setScaledAssists:(Float32) value;
- (CMsgDOTAMatch_Player_Builder*) clearScaledAssists;

- (BOOL) hasClaimedFarmGold;
- (uint32_t) claimedFarmGold;
- (CMsgDOTAMatch_Player_Builder*) setClaimedFarmGold:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearClaimedFarmGold;

- (BOOL) hasSupportGold;
- (uint32_t) supportGold;
- (CMsgDOTAMatch_Player_Builder*) setSupportGold:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearSupportGold;

- (BOOL) hasClaimedDenies;
- (uint32_t) claimedDenies;
- (CMsgDOTAMatch_Player_Builder*) setClaimedDenies:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearClaimedDenies;

- (BOOL) hasClaimedMisses;
- (uint32_t) claimedMisses;
- (CMsgDOTAMatch_Player_Builder*) setClaimedMisses:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearClaimedMisses;

- (BOOL) hasMisses;
- (uint32_t) misses;
- (CMsgDOTAMatch_Player_Builder*) setMisses:(uint32_t) value;
- (CMsgDOTAMatch_Player_Builder*) clearMisses;
@end

@interface CMsgDOTAMatch_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAMatch* _builderResult;
}

- (CMsgDOTAMatch*) defaultInstance;

- (CMsgDOTAMatch_Builder*) clear;
- (CMsgDOTAMatch_Builder*) clone;

- (CMsgDOTAMatch*) build;
- (CMsgDOTAMatch*) buildPartial;

- (CMsgDOTAMatch_Builder*) mergeFrom:(CMsgDOTAMatch*) other;
- (CMsgDOTAMatch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAMatch_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSeason;
- (uint32_t) season;
- (CMsgDOTAMatch_Builder*) setSeason:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearSeason;

- (BOOL) hasGoodGuysWin;
- (BOOL) goodGuysWin;
- (CMsgDOTAMatch_Builder*) setGoodGuysWin:(BOOL) value;
- (CMsgDOTAMatch_Builder*) clearGoodGuysWin;

- (BOOL) hasDuration;
- (uint32_t) duration;
- (CMsgDOTAMatch_Builder*) setDuration:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearDuration;

- (BOOL) hasStartTime;
- (uint32_t) startTime;
- (CMsgDOTAMatch_Builder*) setStartTime:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearStartTime;

- (PBAppendableArray *)players;
- (CMsgDOTAMatch_Player*)playersAtIndex:(NSUInteger)index;
- (CMsgDOTAMatch_Builder *)addPlayers:(CMsgDOTAMatch_Player*)value;
- (CMsgDOTAMatch_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgDOTAMatch_Builder *)setPlayersValues:(const CMsgDOTAMatch_Player* *)values count:(NSUInteger)count;
- (CMsgDOTAMatch_Builder *)clearPlayers;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgDOTAMatch_Builder*) setMatchId:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearMatchId;

- (PBAppendableArray *)towerStatus;
- (uint32_t)towerStatusAtIndex:(NSUInteger)index;
- (CMsgDOTAMatch_Builder *)addTowerStatus:(uint32_t)value;
- (CMsgDOTAMatch_Builder *)setTowerStatusArray:(NSArray *)array;
- (CMsgDOTAMatch_Builder *)setTowerStatusValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgDOTAMatch_Builder *)clearTowerStatus;

- (PBAppendableArray *)barracksStatus;
- (uint32_t)barracksStatusAtIndex:(NSUInteger)index;
- (CMsgDOTAMatch_Builder *)addBarracksStatus:(uint32_t)value;
- (CMsgDOTAMatch_Builder *)setBarracksStatusArray:(NSArray *)array;
- (CMsgDOTAMatch_Builder *)setBarracksStatusValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgDOTAMatch_Builder *)clearBarracksStatus;

- (BOOL) hasCluster;
- (uint32_t) cluster;
- (CMsgDOTAMatch_Builder*) setCluster:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearCluster;

- (BOOL) hasFirstBloodTime;
- (uint32_t) firstBloodTime;
- (CMsgDOTAMatch_Builder*) setFirstBloodTime:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearFirstBloodTime;

- (BOOL) hasReplaySalt;
- (uint32_t) replaySalt;
- (CMsgDOTAMatch_Builder*) setReplaySalt:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearReplaySalt;

- (BOOL) hasServerIp;
- (uint32_t) serverIp;
- (CMsgDOTAMatch_Builder*) setServerIp:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearServerIp;

- (BOOL) hasServerPort;
- (uint32_t) serverPort;
- (CMsgDOTAMatch_Builder*) setServerPort:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearServerPort;

- (BOOL) hasLobbyType;
- (uint32_t) lobbyType;
- (CMsgDOTAMatch_Builder*) setLobbyType:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearLobbyType;

- (BOOL) hasHumanPlayers;
- (uint32_t) humanPlayers;
- (CMsgDOTAMatch_Builder*) setHumanPlayers:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearHumanPlayers;

- (BOOL) hasAverageSkill;
- (uint32_t) averageSkill;
- (CMsgDOTAMatch_Builder*) setAverageSkill:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearAverageSkill;

- (BOOL) hasGameBalance;
- (Float32) gameBalance;
- (CMsgDOTAMatch_Builder*) setGameBalance:(Float32) value;
- (CMsgDOTAMatch_Builder*) clearGameBalance;

- (BOOL) hasRadiantTeamId;
- (uint32_t) radiantTeamId;
- (CMsgDOTAMatch_Builder*) setRadiantTeamId:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearRadiantTeamId;

- (BOOL) hasDireTeamId;
- (uint32_t) direTeamId;
- (CMsgDOTAMatch_Builder*) setDireTeamId:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearDireTeamId;

- (BOOL) hasLeagueid;
- (uint32_t) leagueid;
- (CMsgDOTAMatch_Builder*) setLeagueid:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearLeagueid;

- (BOOL) hasRadiantName;
- (NSString*) radiantName;
- (CMsgDOTAMatch_Builder*) setRadiantName:(NSString*) value;
- (CMsgDOTAMatch_Builder*) clearRadiantName;

- (BOOL) hasDireName;
- (NSString*) direName;
- (CMsgDOTAMatch_Builder*) setDireName:(NSString*) value;
- (CMsgDOTAMatch_Builder*) clearDireName;

- (BOOL) hasRadiantLogo;
- (uint64_t) radiantLogo;
- (CMsgDOTAMatch_Builder*) setRadiantLogo:(uint64_t) value;
- (CMsgDOTAMatch_Builder*) clearRadiantLogo;

- (BOOL) hasDireLogo;
- (uint64_t) direLogo;
- (CMsgDOTAMatch_Builder*) setDireLogo:(uint64_t) value;
- (CMsgDOTAMatch_Builder*) clearDireLogo;

- (BOOL) hasRadiantTeamComplete;
- (uint32_t) radiantTeamComplete;
- (CMsgDOTAMatch_Builder*) setRadiantTeamComplete:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearRadiantTeamComplete;

- (BOOL) hasDireTeamComplete;
- (uint32_t) direTeamComplete;
- (CMsgDOTAMatch_Builder*) setDireTeamComplete:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearDireTeamComplete;

- (BOOL) hasPositiveVotes;
- (uint32_t) positiveVotes;
- (CMsgDOTAMatch_Builder*) setPositiveVotes:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearPositiveVotes;

- (BOOL) hasNegativeVotes;
- (uint32_t) negativeVotes;
- (CMsgDOTAMatch_Builder*) setNegativeVotes:(uint32_t) value;
- (CMsgDOTAMatch_Builder*) clearNegativeVotes;

- (BOOL) hasgame_mode;
- (DOTA_GameMode) game_mode;
- (CMsgDOTAMatch_Builder*) setgame_mode:(DOTA_GameMode) value;
- (CMsgDOTAMatch_Builder*) cleargame_mode;
@end

@interface CMsgDOTAPlayerMatchHistory : PBGeneratedMessage {
@private
  PBAppendableArray * matchIdsArray;
}
@property (readonly, retain) PBArray * matchIds;
- (uint32_t)matchIdsAtIndex:(NSUInteger)index;

+ (CMsgDOTAPlayerMatchHistory*) defaultInstance;
- (CMsgDOTAPlayerMatchHistory*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAPlayerMatchHistory_Builder*) builder;
+ (CMsgDOTAPlayerMatchHistory_Builder*) builder;
+ (CMsgDOTAPlayerMatchHistory_Builder*) builderWithPrototype:(CMsgDOTAPlayerMatchHistory*) prototype;
- (CMsgDOTAPlayerMatchHistory_Builder*) toBuilder;

+ (CMsgDOTAPlayerMatchHistory*) parseFromData:(NSData*) data;
+ (CMsgDOTAPlayerMatchHistory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerMatchHistory*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAPlayerMatchHistory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerMatchHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAPlayerMatchHistory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAPlayerMatchHistory_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAPlayerMatchHistory* _builderResult;
}

- (CMsgDOTAPlayerMatchHistory*) defaultInstance;

- (CMsgDOTAPlayerMatchHistory_Builder*) clear;
- (CMsgDOTAPlayerMatchHistory_Builder*) clone;

- (CMsgDOTAPlayerMatchHistory*) build;
- (CMsgDOTAPlayerMatchHistory*) buildPartial;

- (CMsgDOTAPlayerMatchHistory_Builder*) mergeFrom:(CMsgDOTAPlayerMatchHistory*) other;
- (CMsgDOTAPlayerMatchHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAPlayerMatchHistory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)matchIds;
- (uint32_t)matchIdsAtIndex:(NSUInteger)index;
- (CMsgDOTAPlayerMatchHistory_Builder *)addMatchIds:(uint32_t)value;
- (CMsgDOTAPlayerMatchHistory_Builder *)setMatchIdsArray:(NSArray *)array;
- (CMsgDOTAPlayerMatchHistory_Builder *)setMatchIdsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgDOTAPlayerMatchHistory_Builder *)clearMatchIds;
@end

@interface CMsgDOTAMatchHistoryFilter : PBGeneratedMessage {
@private
  BOOL hasNewestMatchIdAtLastQuery_:1;
  BOOL hasTimeLastQuery_:1;
  uint32_t newestMatchIdAtLastQuery;
  uint32_t timeLastQuery;
  PBAppendableArray * matchIdsArray;
}
- (BOOL) hasNewestMatchIdAtLastQuery;
- (BOOL) hasTimeLastQuery;
@property (readonly, retain) PBArray * matchIds;
@property (readonly) uint32_t newestMatchIdAtLastQuery;
@property (readonly) uint32_t timeLastQuery;
- (uint32_t)matchIdsAtIndex:(NSUInteger)index;

+ (CMsgDOTAMatchHistoryFilter*) defaultInstance;
- (CMsgDOTAMatchHistoryFilter*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAMatchHistoryFilter_Builder*) builder;
+ (CMsgDOTAMatchHistoryFilter_Builder*) builder;
+ (CMsgDOTAMatchHistoryFilter_Builder*) builderWithPrototype:(CMsgDOTAMatchHistoryFilter*) prototype;
- (CMsgDOTAMatchHistoryFilter_Builder*) toBuilder;

+ (CMsgDOTAMatchHistoryFilter*) parseFromData:(NSData*) data;
+ (CMsgDOTAMatchHistoryFilter*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchHistoryFilter*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAMatchHistoryFilter*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchHistoryFilter*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAMatchHistoryFilter*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAMatchHistoryFilter_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAMatchHistoryFilter* _builderResult;
}

- (CMsgDOTAMatchHistoryFilter*) defaultInstance;

- (CMsgDOTAMatchHistoryFilter_Builder*) clear;
- (CMsgDOTAMatchHistoryFilter_Builder*) clone;

- (CMsgDOTAMatchHistoryFilter*) build;
- (CMsgDOTAMatchHistoryFilter*) buildPartial;

- (CMsgDOTAMatchHistoryFilter_Builder*) mergeFrom:(CMsgDOTAMatchHistoryFilter*) other;
- (CMsgDOTAMatchHistoryFilter_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAMatchHistoryFilter_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)matchIds;
- (uint32_t)matchIdsAtIndex:(NSUInteger)index;
- (CMsgDOTAMatchHistoryFilter_Builder *)addMatchIds:(uint32_t)value;
- (CMsgDOTAMatchHistoryFilter_Builder *)setMatchIdsArray:(NSArray *)array;
- (CMsgDOTAMatchHistoryFilter_Builder *)setMatchIdsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgDOTAMatchHistoryFilter_Builder *)clearMatchIds;

- (BOOL) hasNewestMatchIdAtLastQuery;
- (uint32_t) newestMatchIdAtLastQuery;
- (CMsgDOTAMatchHistoryFilter_Builder*) setNewestMatchIdAtLastQuery:(uint32_t) value;
- (CMsgDOTAMatchHistoryFilter_Builder*) clearNewestMatchIdAtLastQuery;

- (BOOL) hasTimeLastQuery;
- (uint32_t) timeLastQuery;
- (CMsgDOTAMatchHistoryFilter_Builder*) setTimeLastQuery:(uint32_t) value;
- (CMsgDOTAMatchHistoryFilter_Builder*) clearTimeLastQuery;
@end

@interface CMsgDOTARequestMatches : PBGeneratedMessage {
@private
  BOOL hasFriendsOnly_:1;
  BOOL hasRecentlyPlayedOnly_:1;
  BOOL hasTournamentGamesOnly_:1;
  BOOL hasDateMin_:1;
  BOOL hasDateMax_:1;
  BOOL hasMinPlayers_:1;
  BOOL hasPlayerName_:1;
  BOOL hasHeroId_:1;
  BOOL hasGameMode_:1;
  BOOL hasMatchesRequested_:1;
  BOOL hasStartAtMatchId_:1;
  BOOL hasRequestId_:1;
  BOOL hasAccountId_:1;
  BOOL hasLeagueId_:1;
  BOOL hasskill_:1;
  BOOL friendsOnly_:1;
  BOOL recentlyPlayedOnly_:1;
  BOOL tournamentGamesOnly_:1;
  uint32_t dateMin;
  uint32_t dateMax;
  uint32_t minPlayers;
  NSString* playerName;
  uint32_t heroId;
  uint32_t gameMode;
  uint32_t matchesRequested;
  uint32_t startAtMatchId;
  uint32_t requestId;
  uint32_t accountId;
  uint32_t leagueId;
  CMsgDOTARequestMatches_SkillLevel skill;
}
- (BOOL) hasPlayerName;
- (BOOL) hasHeroId;
- (BOOL) hasGameMode;
- (BOOL) hasDateMin;
- (BOOL) hasDateMax;
- (BOOL) hasFriendsOnly;
- (BOOL) hasRecentlyPlayedOnly;
- (BOOL) hasMatchesRequested;
- (BOOL) hasStartAtMatchId;
- (BOOL) hasMinPlayers;
- (BOOL) hasRequestId;
- (BOOL) hasTournamentGamesOnly;
- (BOOL) hasAccountId;
- (BOOL) hasLeagueId;
- (BOOL) hasskill;
@property (readonly, retain) NSString* playerName;
@property (readonly) uint32_t heroId;
@property (readonly) uint32_t gameMode;
@property (readonly) uint32_t dateMin;
@property (readonly) uint32_t dateMax;
- (BOOL) friendsOnly;
- (BOOL) recentlyPlayedOnly;
@property (readonly) uint32_t matchesRequested;
@property (readonly) uint32_t startAtMatchId;
@property (readonly) uint32_t minPlayers;
@property (readonly) uint32_t requestId;
- (BOOL) tournamentGamesOnly;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t leagueId;
@property (readonly) CMsgDOTARequestMatches_SkillLevel skill;

+ (CMsgDOTARequestMatches*) defaultInstance;
- (CMsgDOTARequestMatches*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestMatches_Builder*) builder;
+ (CMsgDOTARequestMatches_Builder*) builder;
+ (CMsgDOTARequestMatches_Builder*) builderWithPrototype:(CMsgDOTARequestMatches*) prototype;
- (CMsgDOTARequestMatches_Builder*) toBuilder;

+ (CMsgDOTARequestMatches*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestMatches*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestMatches*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestMatches*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestMatches*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestMatches*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestMatches_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestMatches* _builderResult;
}

- (CMsgDOTARequestMatches*) defaultInstance;

- (CMsgDOTARequestMatches_Builder*) clear;
- (CMsgDOTARequestMatches_Builder*) clone;

- (CMsgDOTARequestMatches*) build;
- (CMsgDOTARequestMatches*) buildPartial;

- (CMsgDOTARequestMatches_Builder*) mergeFrom:(CMsgDOTARequestMatches*) other;
- (CMsgDOTARequestMatches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestMatches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPlayerName;
- (NSString*) playerName;
- (CMsgDOTARequestMatches_Builder*) setPlayerName:(NSString*) value;
- (CMsgDOTARequestMatches_Builder*) clearPlayerName;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTARequestMatches_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearHeroId;

- (BOOL) hasGameMode;
- (uint32_t) gameMode;
- (CMsgDOTARequestMatches_Builder*) setGameMode:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearGameMode;

- (BOOL) hasDateMin;
- (uint32_t) dateMin;
- (CMsgDOTARequestMatches_Builder*) setDateMin:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearDateMin;

- (BOOL) hasDateMax;
- (uint32_t) dateMax;
- (CMsgDOTARequestMatches_Builder*) setDateMax:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearDateMax;

- (BOOL) hasFriendsOnly;
- (BOOL) friendsOnly;
- (CMsgDOTARequestMatches_Builder*) setFriendsOnly:(BOOL) value;
- (CMsgDOTARequestMatches_Builder*) clearFriendsOnly;

- (BOOL) hasRecentlyPlayedOnly;
- (BOOL) recentlyPlayedOnly;
- (CMsgDOTARequestMatches_Builder*) setRecentlyPlayedOnly:(BOOL) value;
- (CMsgDOTARequestMatches_Builder*) clearRecentlyPlayedOnly;

- (BOOL) hasMatchesRequested;
- (uint32_t) matchesRequested;
- (CMsgDOTARequestMatches_Builder*) setMatchesRequested:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearMatchesRequested;

- (BOOL) hasStartAtMatchId;
- (uint32_t) startAtMatchId;
- (CMsgDOTARequestMatches_Builder*) setStartAtMatchId:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearStartAtMatchId;

- (BOOL) hasMinPlayers;
- (uint32_t) minPlayers;
- (CMsgDOTARequestMatches_Builder*) setMinPlayers:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearMinPlayers;

- (BOOL) hasRequestId;
- (uint32_t) requestId;
- (CMsgDOTARequestMatches_Builder*) setRequestId:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearRequestId;

- (BOOL) hasTournamentGamesOnly;
- (BOOL) tournamentGamesOnly;
- (CMsgDOTARequestMatches_Builder*) setTournamentGamesOnly:(BOOL) value;
- (CMsgDOTARequestMatches_Builder*) clearTournamentGamesOnly;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTARequestMatches_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearAccountId;

- (BOOL) hasLeagueId;
- (uint32_t) leagueId;
- (CMsgDOTARequestMatches_Builder*) setLeagueId:(uint32_t) value;
- (CMsgDOTARequestMatches_Builder*) clearLeagueId;

- (BOOL) hasskill;
- (CMsgDOTARequestMatches_SkillLevel) skill;
- (CMsgDOTARequestMatches_Builder*) setskill:(CMsgDOTARequestMatches_SkillLevel) value;
- (CMsgDOTARequestMatches_Builder*) clearskill;
@end

@interface CMsgDOTARequestMatchesResponse : PBGeneratedMessage {
@private
  BOOL hasRequestId_:1;
  BOOL hasTotalResults_:1;
  BOOL hasResultsRemaining_:1;
  uint32_t requestId;
  uint32_t totalResults;
  uint32_t resultsRemaining;
  PBAppendableArray * matchesArray;
}
- (BOOL) hasRequestId;
- (BOOL) hasTotalResults;
- (BOOL) hasResultsRemaining;
@property (readonly, retain) PBArray * matches;
@property (readonly) uint32_t requestId;
@property (readonly) uint32_t totalResults;
@property (readonly) uint32_t resultsRemaining;
- (CMsgDOTAMatch*)matchesAtIndex:(NSUInteger)index;

+ (CMsgDOTARequestMatchesResponse*) defaultInstance;
- (CMsgDOTARequestMatchesResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestMatchesResponse_Builder*) builder;
+ (CMsgDOTARequestMatchesResponse_Builder*) builder;
+ (CMsgDOTARequestMatchesResponse_Builder*) builderWithPrototype:(CMsgDOTARequestMatchesResponse*) prototype;
- (CMsgDOTARequestMatchesResponse_Builder*) toBuilder;

+ (CMsgDOTARequestMatchesResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestMatchesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestMatchesResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestMatchesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestMatchesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestMatchesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestMatchesResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestMatchesResponse* _builderResult;
}

- (CMsgDOTARequestMatchesResponse*) defaultInstance;

- (CMsgDOTARequestMatchesResponse_Builder*) clear;
- (CMsgDOTARequestMatchesResponse_Builder*) clone;

- (CMsgDOTARequestMatchesResponse*) build;
- (CMsgDOTARequestMatchesResponse*) buildPartial;

- (CMsgDOTARequestMatchesResponse_Builder*) mergeFrom:(CMsgDOTARequestMatchesResponse*) other;
- (CMsgDOTARequestMatchesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestMatchesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)matches;
- (CMsgDOTAMatch*)matchesAtIndex:(NSUInteger)index;
- (CMsgDOTARequestMatchesResponse_Builder *)addMatches:(CMsgDOTAMatch*)value;
- (CMsgDOTARequestMatchesResponse_Builder *)setMatchesArray:(NSArray *)array;
- (CMsgDOTARequestMatchesResponse_Builder *)setMatchesValues:(const CMsgDOTAMatch* *)values count:(NSUInteger)count;
- (CMsgDOTARequestMatchesResponse_Builder *)clearMatches;

- (BOOL) hasRequestId;
- (uint32_t) requestId;
- (CMsgDOTARequestMatchesResponse_Builder*) setRequestId:(uint32_t) value;
- (CMsgDOTARequestMatchesResponse_Builder*) clearRequestId;

- (BOOL) hasTotalResults;
- (uint32_t) totalResults;
- (CMsgDOTARequestMatchesResponse_Builder*) setTotalResults:(uint32_t) value;
- (CMsgDOTARequestMatchesResponse_Builder*) clearTotalResults;

- (BOOL) hasResultsRemaining;
- (uint32_t) resultsRemaining;
- (CMsgDOTARequestMatchesResponse_Builder*) setResultsRemaining:(uint32_t) value;
- (CMsgDOTARequestMatchesResponse_Builder*) clearResultsRemaining;
@end

@interface CMsgDOTAPopup : PBGeneratedMessage {
@private
  BOOL hasCustomText_:1;
  BOOL hasid_:1;
  NSString* customText;
  CMsgDOTAPopup_PopupID id;
}
- (BOOL) hasid;
- (BOOL) hasCustomText;
@property (readonly) CMsgDOTAPopup_PopupID id;
@property (readonly, retain) NSString* customText;

+ (CMsgDOTAPopup*) defaultInstance;
- (CMsgDOTAPopup*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAPopup_Builder*) builder;
+ (CMsgDOTAPopup_Builder*) builder;
+ (CMsgDOTAPopup_Builder*) builderWithPrototype:(CMsgDOTAPopup*) prototype;
- (CMsgDOTAPopup_Builder*) toBuilder;

+ (CMsgDOTAPopup*) parseFromData:(NSData*) data;
+ (CMsgDOTAPopup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPopup*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAPopup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPopup*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAPopup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAPopup_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAPopup* _builderResult;
}

- (CMsgDOTAPopup*) defaultInstance;

- (CMsgDOTAPopup_Builder*) clear;
- (CMsgDOTAPopup_Builder*) clone;

- (CMsgDOTAPopup*) build;
- (CMsgDOTAPopup*) buildPartial;

- (CMsgDOTAPopup_Builder*) mergeFrom:(CMsgDOTAPopup*) other;
- (CMsgDOTAPopup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAPopup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasid;
- (CMsgDOTAPopup_PopupID) id;
- (CMsgDOTAPopup_Builder*) setid:(CMsgDOTAPopup_PopupID) value;
- (CMsgDOTAPopup_Builder*) clearid;

- (BOOL) hasCustomText;
- (NSString*) customText;
- (CMsgDOTAPopup_Builder*) setCustomText:(NSString*) value;
- (CMsgDOTAPopup_Builder*) clearCustomText;
@end

@interface CMsgDOTATeamMemberSDO : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  BOOL hasTeamId_:1;
  uint32_t accountId;
  uint32_t teamId;
}
- (BOOL) hasAccountId;
- (BOOL) hasTeamId;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t teamId;

+ (CMsgDOTATeamMemberSDO*) defaultInstance;
- (CMsgDOTATeamMemberSDO*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeamMemberSDO_Builder*) builder;
+ (CMsgDOTATeamMemberSDO_Builder*) builder;
+ (CMsgDOTATeamMemberSDO_Builder*) builderWithPrototype:(CMsgDOTATeamMemberSDO*) prototype;
- (CMsgDOTATeamMemberSDO_Builder*) toBuilder;

+ (CMsgDOTATeamMemberSDO*) parseFromData:(NSData*) data;
+ (CMsgDOTATeamMemberSDO*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamMemberSDO*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeamMemberSDO*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamMemberSDO*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeamMemberSDO*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeamMemberSDO_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeamMemberSDO* _builderResult;
}

- (CMsgDOTATeamMemberSDO*) defaultInstance;

- (CMsgDOTATeamMemberSDO_Builder*) clear;
- (CMsgDOTATeamMemberSDO_Builder*) clone;

- (CMsgDOTATeamMemberSDO*) build;
- (CMsgDOTATeamMemberSDO*) buildPartial;

- (CMsgDOTATeamMemberSDO_Builder*) mergeFrom:(CMsgDOTATeamMemberSDO*) other;
- (CMsgDOTATeamMemberSDO_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeamMemberSDO_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTATeamMemberSDO_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTATeamMemberSDO_Builder*) clearAccountId;

- (BOOL) hasTeamId;
- (uint32_t) teamId;
- (CMsgDOTATeamMemberSDO_Builder*) setTeamId:(uint32_t) value;
- (CMsgDOTATeamMemberSDO_Builder*) clearTeamId;
@end

@interface CMsgDOTATeamMember : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  BOOL hasTeamId_:1;
  BOOL hasPermissions_:1;
  BOOL hasTimeJoined_:1;
  uint32_t accountId;
  uint32_t teamId;
  uint32_t permissions;
  uint32_t timeJoined;
}
- (BOOL) hasAccountId;
- (BOOL) hasTeamId;
- (BOOL) hasPermissions;
- (BOOL) hasTimeJoined;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t teamId;
@property (readonly) uint32_t permissions;
@property (readonly) uint32_t timeJoined;

+ (CMsgDOTATeamMember*) defaultInstance;
- (CMsgDOTATeamMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeamMember_Builder*) builder;
+ (CMsgDOTATeamMember_Builder*) builder;
+ (CMsgDOTATeamMember_Builder*) builderWithPrototype:(CMsgDOTATeamMember*) prototype;
- (CMsgDOTATeamMember_Builder*) toBuilder;

+ (CMsgDOTATeamMember*) parseFromData:(NSData*) data;
+ (CMsgDOTATeamMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamMember*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeamMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeamMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeamMember_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeamMember* _builderResult;
}

- (CMsgDOTATeamMember*) defaultInstance;

- (CMsgDOTATeamMember_Builder*) clear;
- (CMsgDOTATeamMember_Builder*) clone;

- (CMsgDOTATeamMember*) build;
- (CMsgDOTATeamMember*) buildPartial;

- (CMsgDOTATeamMember_Builder*) mergeFrom:(CMsgDOTATeamMember*) other;
- (CMsgDOTATeamMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeamMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTATeamMember_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTATeamMember_Builder*) clearAccountId;

- (BOOL) hasTeamId;
- (uint32_t) teamId;
- (CMsgDOTATeamMember_Builder*) setTeamId:(uint32_t) value;
- (CMsgDOTATeamMember_Builder*) clearTeamId;

- (BOOL) hasPermissions;
- (uint32_t) permissions;
- (CMsgDOTATeamMember_Builder*) setPermissions:(uint32_t) value;
- (CMsgDOTATeamMember_Builder*) clearPermissions;

- (BOOL) hasTimeJoined;
- (uint32_t) timeJoined;
- (CMsgDOTATeamMember_Builder*) setTimeJoined:(uint32_t) value;
- (CMsgDOTATeamMember_Builder*) clearTimeJoined;
@end

@interface CMsgDOTATeam : PBGeneratedMessage {
@private
  BOOL hasDisbanded_:1;
  BOOL hasSponsorLogo_:1;
  BOOL hasBannerLogo_:1;
  BOOL hasBaseLogo_:1;
  BOOL hasLogo_:1;
  BOOL hasName_:1;
  BOOL hasTag_:1;
  BOOL hasUrl_:1;
  BOOL hasCountryCode_:1;
  BOOL hasGamesplayed_:1;
  BOOL hasFullgamesplayed_:1;
  BOOL hasRank_:1;
  BOOL hasLosses_:1;
  BOOL hasWins_:1;
  BOOL hasTimeCreated_:1;
  BOOL hasAdminId_:1;
  BOOL hasTeamId_:1;
  BOOL disbanded_:1;
  uint64_t sponsorLogo;
  uint64_t bannerLogo;
  uint64_t baseLogo;
  uint64_t logo;
  NSString* name;
  NSString* tag;
  NSString* url;
  NSString* countryCode;
  uint32_t gamesplayed;
  uint32_t fullgamesplayed;
  uint32_t rank;
  uint32_t losses;
  uint32_t wins;
  uint32_t timeCreated;
  uint32_t adminId;
  uint32_t teamId;
  PBAppendableArray * membersArray;
  PBAppendableArray * leaguesArray;
}
- (BOOL) hasTeamId;
- (BOOL) hasName;
- (BOOL) hasTag;
- (BOOL) hasAdminId;
- (BOOL) hasTimeCreated;
- (BOOL) hasDisbanded;
- (BOOL) hasWins;
- (BOOL) hasLosses;
- (BOOL) hasRank;
- (BOOL) hasLogo;
- (BOOL) hasBaseLogo;
- (BOOL) hasBannerLogo;
- (BOOL) hasSponsorLogo;
- (BOOL) hasCountryCode;
- (BOOL) hasUrl;
- (BOOL) hasFullgamesplayed;
- (BOOL) hasGamesplayed;
@property (readonly, retain) PBArray * members;
@property (readonly) uint32_t teamId;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* tag;
@property (readonly) uint32_t adminId;
@property (readonly) uint32_t timeCreated;
- (BOOL) disbanded;
@property (readonly) uint32_t wins;
@property (readonly) uint32_t losses;
@property (readonly) uint32_t rank;
@property (readonly) uint64_t logo;
@property (readonly) uint64_t baseLogo;
@property (readonly) uint64_t bannerLogo;
@property (readonly) uint64_t sponsorLogo;
@property (readonly, retain) NSString* countryCode;
@property (readonly, retain) NSString* url;
@property (readonly) uint32_t fullgamesplayed;
@property (readonly, retain) PBArray * leagues;
@property (readonly) uint32_t gamesplayed;
- (CMsgDOTATeamMember*)membersAtIndex:(NSUInteger)index;
- (uint32_t)leaguesAtIndex:(NSUInteger)index;

+ (CMsgDOTATeam*) defaultInstance;
- (CMsgDOTATeam*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeam_Builder*) builder;
+ (CMsgDOTATeam_Builder*) builder;
+ (CMsgDOTATeam_Builder*) builderWithPrototype:(CMsgDOTATeam*) prototype;
- (CMsgDOTATeam_Builder*) toBuilder;

+ (CMsgDOTATeam*) parseFromData:(NSData*) data;
+ (CMsgDOTATeam*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeam*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeam*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeam*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeam*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeam_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeam* _builderResult;
}

- (CMsgDOTATeam*) defaultInstance;

- (CMsgDOTATeam_Builder*) clear;
- (CMsgDOTATeam_Builder*) clone;

- (CMsgDOTATeam*) build;
- (CMsgDOTATeam*) buildPartial;

- (CMsgDOTATeam_Builder*) mergeFrom:(CMsgDOTATeam*) other;
- (CMsgDOTATeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)members;
- (CMsgDOTATeamMember*)membersAtIndex:(NSUInteger)index;
- (CMsgDOTATeam_Builder *)addMembers:(CMsgDOTATeamMember*)value;
- (CMsgDOTATeam_Builder *)setMembersArray:(NSArray *)array;
- (CMsgDOTATeam_Builder *)setMembersValues:(const CMsgDOTATeamMember* *)values count:(NSUInteger)count;
- (CMsgDOTATeam_Builder *)clearMembers;

- (BOOL) hasTeamId;
- (uint32_t) teamId;
- (CMsgDOTATeam_Builder*) setTeamId:(uint32_t) value;
- (CMsgDOTATeam_Builder*) clearTeamId;

- (BOOL) hasName;
- (NSString*) name;
- (CMsgDOTATeam_Builder*) setName:(NSString*) value;
- (CMsgDOTATeam_Builder*) clearName;

- (BOOL) hasTag;
- (NSString*) tag;
- (CMsgDOTATeam_Builder*) setTag:(NSString*) value;
- (CMsgDOTATeam_Builder*) clearTag;

- (BOOL) hasAdminId;
- (uint32_t) adminId;
- (CMsgDOTATeam_Builder*) setAdminId:(uint32_t) value;
- (CMsgDOTATeam_Builder*) clearAdminId;

- (BOOL) hasTimeCreated;
- (uint32_t) timeCreated;
- (CMsgDOTATeam_Builder*) setTimeCreated:(uint32_t) value;
- (CMsgDOTATeam_Builder*) clearTimeCreated;

- (BOOL) hasDisbanded;
- (BOOL) disbanded;
- (CMsgDOTATeam_Builder*) setDisbanded:(BOOL) value;
- (CMsgDOTATeam_Builder*) clearDisbanded;

- (BOOL) hasWins;
- (uint32_t) wins;
- (CMsgDOTATeam_Builder*) setWins:(uint32_t) value;
- (CMsgDOTATeam_Builder*) clearWins;

- (BOOL) hasLosses;
- (uint32_t) losses;
- (CMsgDOTATeam_Builder*) setLosses:(uint32_t) value;
- (CMsgDOTATeam_Builder*) clearLosses;

- (BOOL) hasRank;
- (uint32_t) rank;
- (CMsgDOTATeam_Builder*) setRank:(uint32_t) value;
- (CMsgDOTATeam_Builder*) clearRank;

- (BOOL) hasLogo;
- (uint64_t) logo;
- (CMsgDOTATeam_Builder*) setLogo:(uint64_t) value;
- (CMsgDOTATeam_Builder*) clearLogo;

- (BOOL) hasBaseLogo;
- (uint64_t) baseLogo;
- (CMsgDOTATeam_Builder*) setBaseLogo:(uint64_t) value;
- (CMsgDOTATeam_Builder*) clearBaseLogo;

- (BOOL) hasBannerLogo;
- (uint64_t) bannerLogo;
- (CMsgDOTATeam_Builder*) setBannerLogo:(uint64_t) value;
- (CMsgDOTATeam_Builder*) clearBannerLogo;

- (BOOL) hasSponsorLogo;
- (uint64_t) sponsorLogo;
- (CMsgDOTATeam_Builder*) setSponsorLogo:(uint64_t) value;
- (CMsgDOTATeam_Builder*) clearSponsorLogo;

- (BOOL) hasCountryCode;
- (NSString*) countryCode;
- (CMsgDOTATeam_Builder*) setCountryCode:(NSString*) value;
- (CMsgDOTATeam_Builder*) clearCountryCode;

- (BOOL) hasUrl;
- (NSString*) url;
- (CMsgDOTATeam_Builder*) setUrl:(NSString*) value;
- (CMsgDOTATeam_Builder*) clearUrl;

- (BOOL) hasFullgamesplayed;
- (uint32_t) fullgamesplayed;
- (CMsgDOTATeam_Builder*) setFullgamesplayed:(uint32_t) value;
- (CMsgDOTATeam_Builder*) clearFullgamesplayed;

- (PBAppendableArray *)leagues;
- (uint32_t)leaguesAtIndex:(NSUInteger)index;
- (CMsgDOTATeam_Builder *)addLeagues:(uint32_t)value;
- (CMsgDOTATeam_Builder *)setLeaguesArray:(NSArray *)array;
- (CMsgDOTATeam_Builder *)setLeaguesValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgDOTATeam_Builder *)clearLeagues;

- (BOOL) hasGamesplayed;
- (uint32_t) gamesplayed;
- (CMsgDOTATeam_Builder*) setGamesplayed:(uint32_t) value;
- (CMsgDOTATeam_Builder*) clearGamesplayed;
@end

@interface CMsgDOTACreateTeam : PBGeneratedMessage {
@private
  BOOL hasLogo_:1;
  BOOL hasBaseLogo_:1;
  BOOL hasBannerLogo_:1;
  BOOL hasSponsorLogo_:1;
  BOOL hasName_:1;
  BOOL hasTag_:1;
  BOOL hasCountryCode_:1;
  BOOL hasUrl_:1;
  uint64_t logo;
  uint64_t baseLogo;
  uint64_t bannerLogo;
  uint64_t sponsorLogo;
  NSString* name;
  NSString* tag;
  NSString* countryCode;
  NSString* url;
}
- (BOOL) hasName;
- (BOOL) hasTag;
- (BOOL) hasLogo;
- (BOOL) hasBaseLogo;
- (BOOL) hasBannerLogo;
- (BOOL) hasSponsorLogo;
- (BOOL) hasCountryCode;
- (BOOL) hasUrl;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* tag;
@property (readonly) uint64_t logo;
@property (readonly) uint64_t baseLogo;
@property (readonly) uint64_t bannerLogo;
@property (readonly) uint64_t sponsorLogo;
@property (readonly, retain) NSString* countryCode;
@property (readonly, retain) NSString* url;

+ (CMsgDOTACreateTeam*) defaultInstance;
- (CMsgDOTACreateTeam*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTACreateTeam_Builder*) builder;
+ (CMsgDOTACreateTeam_Builder*) builder;
+ (CMsgDOTACreateTeam_Builder*) builderWithPrototype:(CMsgDOTACreateTeam*) prototype;
- (CMsgDOTACreateTeam_Builder*) toBuilder;

+ (CMsgDOTACreateTeam*) parseFromData:(NSData*) data;
+ (CMsgDOTACreateTeam*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTACreateTeam*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTACreateTeam*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTACreateTeam*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTACreateTeam*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTACreateTeam_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTACreateTeam* _builderResult;
}

- (CMsgDOTACreateTeam*) defaultInstance;

- (CMsgDOTACreateTeam_Builder*) clear;
- (CMsgDOTACreateTeam_Builder*) clone;

- (CMsgDOTACreateTeam*) build;
- (CMsgDOTACreateTeam*) buildPartial;

- (CMsgDOTACreateTeam_Builder*) mergeFrom:(CMsgDOTACreateTeam*) other;
- (CMsgDOTACreateTeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTACreateTeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (CMsgDOTACreateTeam_Builder*) setName:(NSString*) value;
- (CMsgDOTACreateTeam_Builder*) clearName;

- (BOOL) hasTag;
- (NSString*) tag;
- (CMsgDOTACreateTeam_Builder*) setTag:(NSString*) value;
- (CMsgDOTACreateTeam_Builder*) clearTag;

- (BOOL) hasLogo;
- (uint64_t) logo;
- (CMsgDOTACreateTeam_Builder*) setLogo:(uint64_t) value;
- (CMsgDOTACreateTeam_Builder*) clearLogo;

- (BOOL) hasBaseLogo;
- (uint64_t) baseLogo;
- (CMsgDOTACreateTeam_Builder*) setBaseLogo:(uint64_t) value;
- (CMsgDOTACreateTeam_Builder*) clearBaseLogo;

- (BOOL) hasBannerLogo;
- (uint64_t) bannerLogo;
- (CMsgDOTACreateTeam_Builder*) setBannerLogo:(uint64_t) value;
- (CMsgDOTACreateTeam_Builder*) clearBannerLogo;

- (BOOL) hasSponsorLogo;
- (uint64_t) sponsorLogo;
- (CMsgDOTACreateTeam_Builder*) setSponsorLogo:(uint64_t) value;
- (CMsgDOTACreateTeam_Builder*) clearSponsorLogo;

- (BOOL) hasCountryCode;
- (NSString*) countryCode;
- (CMsgDOTACreateTeam_Builder*) setCountryCode:(NSString*) value;
- (CMsgDOTACreateTeam_Builder*) clearCountryCode;

- (BOOL) hasUrl;
- (NSString*) url;
- (CMsgDOTACreateTeam_Builder*) setUrl:(NSString*) value;
- (CMsgDOTACreateTeam_Builder*) clearUrl;
@end

@interface CMsgDOTACreateTeamResponse : PBGeneratedMessage {
@private
  PBAppendableArray * resultsArray;
}
@property (readonly, retain) PBArray * results;
- (CMsgDOTACreateTeamResponse_Result)resultsAtIndex:(NSUInteger)index;

+ (CMsgDOTACreateTeamResponse*) defaultInstance;
- (CMsgDOTACreateTeamResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTACreateTeamResponse_Builder*) builder;
+ (CMsgDOTACreateTeamResponse_Builder*) builder;
+ (CMsgDOTACreateTeamResponse_Builder*) builderWithPrototype:(CMsgDOTACreateTeamResponse*) prototype;
- (CMsgDOTACreateTeamResponse_Builder*) toBuilder;

+ (CMsgDOTACreateTeamResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTACreateTeamResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTACreateTeamResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTACreateTeamResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTACreateTeamResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTACreateTeamResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTACreateTeamResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTACreateTeamResponse* _builderResult;
}

- (CMsgDOTACreateTeamResponse*) defaultInstance;

- (CMsgDOTACreateTeamResponse_Builder*) clear;
- (CMsgDOTACreateTeamResponse_Builder*) clone;

- (CMsgDOTACreateTeamResponse*) build;
- (CMsgDOTACreateTeamResponse*) buildPartial;

- (CMsgDOTACreateTeamResponse_Builder*) mergeFrom:(CMsgDOTACreateTeamResponse*) other;
- (CMsgDOTACreateTeamResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTACreateTeamResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)results;
- (CMsgDOTACreateTeamResponse_Result)resultsAtIndex:(NSUInteger)index;
- (CMsgDOTACreateTeamResponse_Builder *)addresults:(CMsgDOTACreateTeamResponse_Result)value;
- (CMsgDOTACreateTeamResponse_Builder *)setresultsArray:(NSArray *)array;
- (CMsgDOTACreateTeamResponse_Builder *)setresultsValues:(const CMsgDOTACreateTeamResponse_Result *)values count:(NSUInteger)count;
- (CMsgDOTACreateTeamResponse_Builder *)clearresults;
@end

@interface CMsgDOTAEditTeamLogo : PBGeneratedMessage {
@private
  BOOL hasLogo_:1;
  BOOL hasBaseLogo_:1;
  BOOL hasBannerLogo_:1;
  BOOL hasSponsorLogo_:1;
  uint64_t logo;
  uint64_t baseLogo;
  uint64_t bannerLogo;
  uint64_t sponsorLogo;
}
- (BOOL) hasLogo;
- (BOOL) hasBaseLogo;
- (BOOL) hasBannerLogo;
- (BOOL) hasSponsorLogo;
@property (readonly) uint64_t logo;
@property (readonly) uint64_t baseLogo;
@property (readonly) uint64_t bannerLogo;
@property (readonly) uint64_t sponsorLogo;

+ (CMsgDOTAEditTeamLogo*) defaultInstance;
- (CMsgDOTAEditTeamLogo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAEditTeamLogo_Builder*) builder;
+ (CMsgDOTAEditTeamLogo_Builder*) builder;
+ (CMsgDOTAEditTeamLogo_Builder*) builderWithPrototype:(CMsgDOTAEditTeamLogo*) prototype;
- (CMsgDOTAEditTeamLogo_Builder*) toBuilder;

+ (CMsgDOTAEditTeamLogo*) parseFromData:(NSData*) data;
+ (CMsgDOTAEditTeamLogo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAEditTeamLogo*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAEditTeamLogo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAEditTeamLogo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAEditTeamLogo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAEditTeamLogo_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAEditTeamLogo* _builderResult;
}

- (CMsgDOTAEditTeamLogo*) defaultInstance;

- (CMsgDOTAEditTeamLogo_Builder*) clear;
- (CMsgDOTAEditTeamLogo_Builder*) clone;

- (CMsgDOTAEditTeamLogo*) build;
- (CMsgDOTAEditTeamLogo*) buildPartial;

- (CMsgDOTAEditTeamLogo_Builder*) mergeFrom:(CMsgDOTAEditTeamLogo*) other;
- (CMsgDOTAEditTeamLogo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAEditTeamLogo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLogo;
- (uint64_t) logo;
- (CMsgDOTAEditTeamLogo_Builder*) setLogo:(uint64_t) value;
- (CMsgDOTAEditTeamLogo_Builder*) clearLogo;

- (BOOL) hasBaseLogo;
- (uint64_t) baseLogo;
- (CMsgDOTAEditTeamLogo_Builder*) setBaseLogo:(uint64_t) value;
- (CMsgDOTAEditTeamLogo_Builder*) clearBaseLogo;

- (BOOL) hasBannerLogo;
- (uint64_t) bannerLogo;
- (CMsgDOTAEditTeamLogo_Builder*) setBannerLogo:(uint64_t) value;
- (CMsgDOTAEditTeamLogo_Builder*) clearBannerLogo;

- (BOOL) hasSponsorLogo;
- (uint64_t) sponsorLogo;
- (CMsgDOTAEditTeamLogo_Builder*) setSponsorLogo:(uint64_t) value;
- (CMsgDOTAEditTeamLogo_Builder*) clearSponsorLogo;
@end

@interface CMsgDOTAEditTeamLogoResponse : PBGeneratedMessage {
@private
  PBAppendableArray * resultsArray;
}
@property (readonly, retain) PBArray * results;
- (CMsgDOTAEditTeamLogoResponse_Result)resultsAtIndex:(NSUInteger)index;

+ (CMsgDOTAEditTeamLogoResponse*) defaultInstance;
- (CMsgDOTAEditTeamLogoResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAEditTeamLogoResponse_Builder*) builder;
+ (CMsgDOTAEditTeamLogoResponse_Builder*) builder;
+ (CMsgDOTAEditTeamLogoResponse_Builder*) builderWithPrototype:(CMsgDOTAEditTeamLogoResponse*) prototype;
- (CMsgDOTAEditTeamLogoResponse_Builder*) toBuilder;

+ (CMsgDOTAEditTeamLogoResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAEditTeamLogoResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAEditTeamLogoResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAEditTeamLogoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAEditTeamLogoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAEditTeamLogoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAEditTeamLogoResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAEditTeamLogoResponse* _builderResult;
}

- (CMsgDOTAEditTeamLogoResponse*) defaultInstance;

- (CMsgDOTAEditTeamLogoResponse_Builder*) clear;
- (CMsgDOTAEditTeamLogoResponse_Builder*) clone;

- (CMsgDOTAEditTeamLogoResponse*) build;
- (CMsgDOTAEditTeamLogoResponse*) buildPartial;

- (CMsgDOTAEditTeamLogoResponse_Builder*) mergeFrom:(CMsgDOTAEditTeamLogoResponse*) other;
- (CMsgDOTAEditTeamLogoResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAEditTeamLogoResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)results;
- (CMsgDOTAEditTeamLogoResponse_Result)resultsAtIndex:(NSUInteger)index;
- (CMsgDOTAEditTeamLogoResponse_Builder *)addresults:(CMsgDOTAEditTeamLogoResponse_Result)value;
- (CMsgDOTAEditTeamLogoResponse_Builder *)setresultsArray:(NSArray *)array;
- (CMsgDOTAEditTeamLogoResponse_Builder *)setresultsValues:(const CMsgDOTAEditTeamLogoResponse_Result *)values count:(NSUInteger)count;
- (CMsgDOTAEditTeamLogoResponse_Builder *)clearresults;
@end

@interface CMsgDOTAEditTeamDetails : PBGeneratedMessage {
@private
  BOOL hasCountryCode_:1;
  BOOL hasUrl_:1;
  NSString* countryCode;
  NSString* url;
}
- (BOOL) hasCountryCode;
- (BOOL) hasUrl;
@property (readonly, retain) NSString* countryCode;
@property (readonly, retain) NSString* url;

+ (CMsgDOTAEditTeamDetails*) defaultInstance;
- (CMsgDOTAEditTeamDetails*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAEditTeamDetails_Builder*) builder;
+ (CMsgDOTAEditTeamDetails_Builder*) builder;
+ (CMsgDOTAEditTeamDetails_Builder*) builderWithPrototype:(CMsgDOTAEditTeamDetails*) prototype;
- (CMsgDOTAEditTeamDetails_Builder*) toBuilder;

+ (CMsgDOTAEditTeamDetails*) parseFromData:(NSData*) data;
+ (CMsgDOTAEditTeamDetails*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAEditTeamDetails*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAEditTeamDetails*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAEditTeamDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAEditTeamDetails*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAEditTeamDetails_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAEditTeamDetails* _builderResult;
}

- (CMsgDOTAEditTeamDetails*) defaultInstance;

- (CMsgDOTAEditTeamDetails_Builder*) clear;
- (CMsgDOTAEditTeamDetails_Builder*) clone;

- (CMsgDOTAEditTeamDetails*) build;
- (CMsgDOTAEditTeamDetails*) buildPartial;

- (CMsgDOTAEditTeamDetails_Builder*) mergeFrom:(CMsgDOTAEditTeamDetails*) other;
- (CMsgDOTAEditTeamDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAEditTeamDetails_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCountryCode;
- (NSString*) countryCode;
- (CMsgDOTAEditTeamDetails_Builder*) setCountryCode:(NSString*) value;
- (CMsgDOTAEditTeamDetails_Builder*) clearCountryCode;

- (BOOL) hasUrl;
- (NSString*) url;
- (CMsgDOTAEditTeamDetails_Builder*) setUrl:(NSString*) value;
- (CMsgDOTAEditTeamDetails_Builder*) clearUrl;
@end

@interface CMsgDOTAEditTeamDetailsResponse : PBGeneratedMessage {
@private
  PBAppendableArray * resultsArray;
}
@property (readonly, retain) PBArray * results;
- (CMsgDOTAEditTeamDetailsResponse_Result)resultsAtIndex:(NSUInteger)index;

+ (CMsgDOTAEditTeamDetailsResponse*) defaultInstance;
- (CMsgDOTAEditTeamDetailsResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAEditTeamDetailsResponse_Builder*) builder;
+ (CMsgDOTAEditTeamDetailsResponse_Builder*) builder;
+ (CMsgDOTAEditTeamDetailsResponse_Builder*) builderWithPrototype:(CMsgDOTAEditTeamDetailsResponse*) prototype;
- (CMsgDOTAEditTeamDetailsResponse_Builder*) toBuilder;

+ (CMsgDOTAEditTeamDetailsResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAEditTeamDetailsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAEditTeamDetailsResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAEditTeamDetailsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAEditTeamDetailsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAEditTeamDetailsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAEditTeamDetailsResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAEditTeamDetailsResponse* _builderResult;
}

- (CMsgDOTAEditTeamDetailsResponse*) defaultInstance;

- (CMsgDOTAEditTeamDetailsResponse_Builder*) clear;
- (CMsgDOTAEditTeamDetailsResponse_Builder*) clone;

- (CMsgDOTAEditTeamDetailsResponse*) build;
- (CMsgDOTAEditTeamDetailsResponse*) buildPartial;

- (CMsgDOTAEditTeamDetailsResponse_Builder*) mergeFrom:(CMsgDOTAEditTeamDetailsResponse*) other;
- (CMsgDOTAEditTeamDetailsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAEditTeamDetailsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)results;
- (CMsgDOTAEditTeamDetailsResponse_Result)resultsAtIndex:(NSUInteger)index;
- (CMsgDOTAEditTeamDetailsResponse_Builder *)addresults:(CMsgDOTAEditTeamDetailsResponse_Result)value;
- (CMsgDOTAEditTeamDetailsResponse_Builder *)setresultsArray:(NSArray *)array;
- (CMsgDOTAEditTeamDetailsResponse_Builder *)setresultsValues:(const CMsgDOTAEditTeamDetailsResponse_Result *)values count:(NSUInteger)count;
- (CMsgDOTAEditTeamDetailsResponse_Builder *)clearresults;
@end

@interface CMsgDOTADisbandTeam : PBGeneratedMessage {
@private
}

+ (CMsgDOTADisbandTeam*) defaultInstance;
- (CMsgDOTADisbandTeam*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTADisbandTeam_Builder*) builder;
+ (CMsgDOTADisbandTeam_Builder*) builder;
+ (CMsgDOTADisbandTeam_Builder*) builderWithPrototype:(CMsgDOTADisbandTeam*) prototype;
- (CMsgDOTADisbandTeam_Builder*) toBuilder;

+ (CMsgDOTADisbandTeam*) parseFromData:(NSData*) data;
+ (CMsgDOTADisbandTeam*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADisbandTeam*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTADisbandTeam*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADisbandTeam*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTADisbandTeam*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTADisbandTeam_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTADisbandTeam* _builderResult;
}

- (CMsgDOTADisbandTeam*) defaultInstance;

- (CMsgDOTADisbandTeam_Builder*) clear;
- (CMsgDOTADisbandTeam_Builder*) clone;

- (CMsgDOTADisbandTeam*) build;
- (CMsgDOTADisbandTeam*) buildPartial;

- (CMsgDOTADisbandTeam_Builder*) mergeFrom:(CMsgDOTADisbandTeam*) other;
- (CMsgDOTADisbandTeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTADisbandTeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTADisbandTeamResponse : PBGeneratedMessage {
@private
  BOOL hasTeamName_:1;
  BOOL hasresult_:1;
  NSString* teamName;
  CMsgDOTADisbandTeamResponse_Result result;
}
- (BOOL) hasresult;
- (BOOL) hasTeamName;
@property (readonly) CMsgDOTADisbandTeamResponse_Result result;
@property (readonly, retain) NSString* teamName;

+ (CMsgDOTADisbandTeamResponse*) defaultInstance;
- (CMsgDOTADisbandTeamResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTADisbandTeamResponse_Builder*) builder;
+ (CMsgDOTADisbandTeamResponse_Builder*) builder;
+ (CMsgDOTADisbandTeamResponse_Builder*) builderWithPrototype:(CMsgDOTADisbandTeamResponse*) prototype;
- (CMsgDOTADisbandTeamResponse_Builder*) toBuilder;

+ (CMsgDOTADisbandTeamResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTADisbandTeamResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADisbandTeamResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTADisbandTeamResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADisbandTeamResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTADisbandTeamResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTADisbandTeamResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTADisbandTeamResponse* _builderResult;
}

- (CMsgDOTADisbandTeamResponse*) defaultInstance;

- (CMsgDOTADisbandTeamResponse_Builder*) clear;
- (CMsgDOTADisbandTeamResponse_Builder*) clone;

- (CMsgDOTADisbandTeamResponse*) build;
- (CMsgDOTADisbandTeamResponse*) buildPartial;

- (CMsgDOTADisbandTeamResponse_Builder*) mergeFrom:(CMsgDOTADisbandTeamResponse*) other;
- (CMsgDOTADisbandTeamResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTADisbandTeamResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasresult;
- (CMsgDOTADisbandTeamResponse_Result) result;
- (CMsgDOTADisbandTeamResponse_Builder*) setresult:(CMsgDOTADisbandTeamResponse_Result) value;
- (CMsgDOTADisbandTeamResponse_Builder*) clearresult;

- (BOOL) hasTeamName;
- (NSString*) teamName;
- (CMsgDOTADisbandTeamResponse_Builder*) setTeamName:(NSString*) value;
- (CMsgDOTADisbandTeamResponse_Builder*) clearTeamName;
@end

@interface CMsgDOTARequestTeamData : PBGeneratedMessage {
@private
}

+ (CMsgDOTARequestTeamData*) defaultInstance;
- (CMsgDOTARequestTeamData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestTeamData_Builder*) builder;
+ (CMsgDOTARequestTeamData_Builder*) builder;
+ (CMsgDOTARequestTeamData_Builder*) builderWithPrototype:(CMsgDOTARequestTeamData*) prototype;
- (CMsgDOTARequestTeamData_Builder*) toBuilder;

+ (CMsgDOTARequestTeamData*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestTeamData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestTeamData*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestTeamData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestTeamData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestTeamData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestTeamData_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestTeamData* _builderResult;
}

- (CMsgDOTARequestTeamData*) defaultInstance;

- (CMsgDOTARequestTeamData_Builder*) clear;
- (CMsgDOTARequestTeamData_Builder*) clone;

- (CMsgDOTARequestTeamData*) build;
- (CMsgDOTARequestTeamData*) buildPartial;

- (CMsgDOTARequestTeamData_Builder*) mergeFrom:(CMsgDOTARequestTeamData*) other;
- (CMsgDOTARequestTeamData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestTeamData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestTeamDataResponse : PBGeneratedMessage {
@private
  BOOL hasData_:1;
  BOOL hasresult_:1;
  CMsgDOTATeamData* data;
  CMsgDOTARequestTeamDataResponse_Result result;
}
- (BOOL) hasresult;
- (BOOL) hasData;
@property (readonly) CMsgDOTARequestTeamDataResponse_Result result;
@property (readonly, retain) CMsgDOTATeamData* data;

+ (CMsgDOTARequestTeamDataResponse*) defaultInstance;
- (CMsgDOTARequestTeamDataResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestTeamDataResponse_Builder*) builder;
+ (CMsgDOTARequestTeamDataResponse_Builder*) builder;
+ (CMsgDOTARequestTeamDataResponse_Builder*) builderWithPrototype:(CMsgDOTARequestTeamDataResponse*) prototype;
- (CMsgDOTARequestTeamDataResponse_Builder*) toBuilder;

+ (CMsgDOTARequestTeamDataResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestTeamDataResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestTeamDataResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestTeamDataResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestTeamDataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestTeamDataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestTeamDataResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestTeamDataResponse* _builderResult;
}

- (CMsgDOTARequestTeamDataResponse*) defaultInstance;

- (CMsgDOTARequestTeamDataResponse_Builder*) clear;
- (CMsgDOTARequestTeamDataResponse_Builder*) clone;

- (CMsgDOTARequestTeamDataResponse*) build;
- (CMsgDOTARequestTeamDataResponse*) buildPartial;

- (CMsgDOTARequestTeamDataResponse_Builder*) mergeFrom:(CMsgDOTARequestTeamDataResponse*) other;
- (CMsgDOTARequestTeamDataResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestTeamDataResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasresult;
- (CMsgDOTARequestTeamDataResponse_Result) result;
- (CMsgDOTARequestTeamDataResponse_Builder*) setresult:(CMsgDOTARequestTeamDataResponse_Result) value;
- (CMsgDOTARequestTeamDataResponse_Builder*) clearresult;

- (BOOL) hasData;
- (CMsgDOTATeamData*) data;
- (CMsgDOTARequestTeamDataResponse_Builder*) setData:(CMsgDOTATeamData*) value;
- (CMsgDOTARequestTeamDataResponse_Builder*) setDataBuilder:(CMsgDOTATeamData_Builder*) builderForValue;
- (CMsgDOTARequestTeamDataResponse_Builder*) mergeData:(CMsgDOTATeamData*) value;
- (CMsgDOTARequestTeamDataResponse_Builder*) clearData;
@end

@interface CMsgDOTATeamData : PBGeneratedMessage {
@private
  BOOL hasOnTeam_:1;
  BOOL hasTeam_:1;
  BOOL onTeam_:1;
  CMsgDOTATeam* team;
}
- (BOOL) hasOnTeam;
- (BOOL) hasTeam;
- (BOOL) onTeam;
@property (readonly, retain) CMsgDOTATeam* team;

+ (CMsgDOTATeamData*) defaultInstance;
- (CMsgDOTATeamData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeamData_Builder*) builder;
+ (CMsgDOTATeamData_Builder*) builder;
+ (CMsgDOTATeamData_Builder*) builderWithPrototype:(CMsgDOTATeamData*) prototype;
- (CMsgDOTATeamData_Builder*) toBuilder;

+ (CMsgDOTATeamData*) parseFromData:(NSData*) data;
+ (CMsgDOTATeamData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamData*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeamData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeamData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeamData_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeamData* _builderResult;
}

- (CMsgDOTATeamData*) defaultInstance;

- (CMsgDOTATeamData_Builder*) clear;
- (CMsgDOTATeamData_Builder*) clone;

- (CMsgDOTATeamData*) build;
- (CMsgDOTATeamData*) buildPartial;

- (CMsgDOTATeamData_Builder*) mergeFrom:(CMsgDOTATeamData*) other;
- (CMsgDOTATeamData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeamData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOnTeam;
- (BOOL) onTeam;
- (CMsgDOTATeamData_Builder*) setOnTeam:(BOOL) value;
- (CMsgDOTATeamData_Builder*) clearOnTeam;

- (BOOL) hasTeam;
- (CMsgDOTATeam*) team;
- (CMsgDOTATeamData_Builder*) setTeam:(CMsgDOTATeam*) value;
- (CMsgDOTATeamData_Builder*) setTeamBuilder:(CMsgDOTATeam_Builder*) builderForValue;
- (CMsgDOTATeamData_Builder*) mergeTeam:(CMsgDOTATeam*) value;
- (CMsgDOTATeamData_Builder*) clearTeam;
@end

@interface CMsgDOTATeamProfileRequest : PBGeneratedMessage {
@private
  BOOL hasTeamId_:1;
  uint32_t teamId;
}
- (BOOL) hasTeamId;
@property (readonly) uint32_t teamId;

+ (CMsgDOTATeamProfileRequest*) defaultInstance;
- (CMsgDOTATeamProfileRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeamProfileRequest_Builder*) builder;
+ (CMsgDOTATeamProfileRequest_Builder*) builder;
+ (CMsgDOTATeamProfileRequest_Builder*) builderWithPrototype:(CMsgDOTATeamProfileRequest*) prototype;
- (CMsgDOTATeamProfileRequest_Builder*) toBuilder;

+ (CMsgDOTATeamProfileRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTATeamProfileRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamProfileRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeamProfileRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeamProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeamProfileRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeamProfileRequest* _builderResult;
}

- (CMsgDOTATeamProfileRequest*) defaultInstance;

- (CMsgDOTATeamProfileRequest_Builder*) clear;
- (CMsgDOTATeamProfileRequest_Builder*) clone;

- (CMsgDOTATeamProfileRequest*) build;
- (CMsgDOTATeamProfileRequest*) buildPartial;

- (CMsgDOTATeamProfileRequest_Builder*) mergeFrom:(CMsgDOTATeamProfileRequest*) other;
- (CMsgDOTATeamProfileRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeamProfileRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTeamId;
- (uint32_t) teamId;
- (CMsgDOTATeamProfileRequest_Builder*) setTeamId:(uint32_t) value;
- (CMsgDOTATeamProfileRequest_Builder*) clearTeamId;
@end

@interface CMsgDOTATeamProfileResponse : PBGeneratedMessage {
@private
  BOOL hasTeam_:1;
  BOOL hasEresult_:1;
  CMsgDOTATeam* team;
  uint32_t eresult;
}
- (BOOL) hasEresult;
- (BOOL) hasTeam;
@property (readonly) uint32_t eresult;
@property (readonly, retain) CMsgDOTATeam* team;

+ (CMsgDOTATeamProfileResponse*) defaultInstance;
- (CMsgDOTATeamProfileResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeamProfileResponse_Builder*) builder;
+ (CMsgDOTATeamProfileResponse_Builder*) builder;
+ (CMsgDOTATeamProfileResponse_Builder*) builderWithPrototype:(CMsgDOTATeamProfileResponse*) prototype;
- (CMsgDOTATeamProfileResponse_Builder*) toBuilder;

+ (CMsgDOTATeamProfileResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTATeamProfileResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamProfileResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeamProfileResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeamProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeamProfileResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeamProfileResponse* _builderResult;
}

- (CMsgDOTATeamProfileResponse*) defaultInstance;

- (CMsgDOTATeamProfileResponse_Builder*) clear;
- (CMsgDOTATeamProfileResponse_Builder*) clone;

- (CMsgDOTATeamProfileResponse*) build;
- (CMsgDOTATeamProfileResponse*) buildPartial;

- (CMsgDOTATeamProfileResponse_Builder*) mergeFrom:(CMsgDOTATeamProfileResponse*) other;
- (CMsgDOTATeamProfileResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeamProfileResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEresult;
- (uint32_t) eresult;
- (CMsgDOTATeamProfileResponse_Builder*) setEresult:(uint32_t) value;
- (CMsgDOTATeamProfileResponse_Builder*) clearEresult;

- (BOOL) hasTeam;
- (CMsgDOTATeam*) team;
- (CMsgDOTATeamProfileResponse_Builder*) setTeam:(CMsgDOTATeam*) value;
- (CMsgDOTATeamProfileResponse_Builder*) setTeamBuilder:(CMsgDOTATeam_Builder*) builderForValue;
- (CMsgDOTATeamProfileResponse_Builder*) mergeTeam:(CMsgDOTATeam*) value;
- (CMsgDOTATeamProfileResponse_Builder*) clearTeam;
@end

@interface CMsgDOTAProTeamListRequest : PBGeneratedMessage {
@private
}

+ (CMsgDOTAProTeamListRequest*) defaultInstance;
- (CMsgDOTAProTeamListRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAProTeamListRequest_Builder*) builder;
+ (CMsgDOTAProTeamListRequest_Builder*) builder;
+ (CMsgDOTAProTeamListRequest_Builder*) builderWithPrototype:(CMsgDOTAProTeamListRequest*) prototype;
- (CMsgDOTAProTeamListRequest_Builder*) toBuilder;

+ (CMsgDOTAProTeamListRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTAProTeamListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProTeamListRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAProTeamListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProTeamListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAProTeamListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProTeamListRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAProTeamListRequest* _builderResult;
}

- (CMsgDOTAProTeamListRequest*) defaultInstance;

- (CMsgDOTAProTeamListRequest_Builder*) clear;
- (CMsgDOTAProTeamListRequest_Builder*) clone;

- (CMsgDOTAProTeamListRequest*) build;
- (CMsgDOTAProTeamListRequest*) buildPartial;

- (CMsgDOTAProTeamListRequest_Builder*) mergeFrom:(CMsgDOTAProTeamListRequest*) other;
- (CMsgDOTAProTeamListRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAProTeamListRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProTeamListResponse : PBGeneratedMessage {
@private
  BOOL hasEresult_:1;
  uint32_t eresult;
  PBAppendableArray * teamsArray;
}
- (BOOL) hasEresult;
@property (readonly, retain) PBArray * teams;
@property (readonly) uint32_t eresult;
- (CMsgDOTAProTeamListResponse_TeamEntry*)teamsAtIndex:(NSUInteger)index;

+ (CMsgDOTAProTeamListResponse*) defaultInstance;
- (CMsgDOTAProTeamListResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAProTeamListResponse_Builder*) builder;
+ (CMsgDOTAProTeamListResponse_Builder*) builder;
+ (CMsgDOTAProTeamListResponse_Builder*) builderWithPrototype:(CMsgDOTAProTeamListResponse*) prototype;
- (CMsgDOTAProTeamListResponse_Builder*) toBuilder;

+ (CMsgDOTAProTeamListResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAProTeamListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProTeamListResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAProTeamListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProTeamListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAProTeamListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProTeamListResponse_TeamEntry : PBGeneratedMessage {
@private
  BOOL hasLogo_:1;
  BOOL hasTag_:1;
  BOOL hasCountryCode_:1;
  BOOL hasTeamId_:1;
  BOOL hasTimeCreated_:1;
  uint64_t logo;
  NSString* tag;
  NSString* countryCode;
  uint32_t teamId;
  uint32_t timeCreated;
}
- (BOOL) hasTeamId;
- (BOOL) hasTag;
- (BOOL) hasTimeCreated;
- (BOOL) hasLogo;
- (BOOL) hasCountryCode;
@property (readonly) uint32_t teamId;
@property (readonly, retain) NSString* tag;
@property (readonly) uint32_t timeCreated;
@property (readonly) uint64_t logo;
@property (readonly, retain) NSString* countryCode;

+ (CMsgDOTAProTeamListResponse_TeamEntry*) defaultInstance;
- (CMsgDOTAProTeamListResponse_TeamEntry*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) builder;
+ (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) builder;
+ (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) builderWithPrototype:(CMsgDOTAProTeamListResponse_TeamEntry*) prototype;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) toBuilder;

+ (CMsgDOTAProTeamListResponse_TeamEntry*) parseFromData:(NSData*) data;
+ (CMsgDOTAProTeamListResponse_TeamEntry*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProTeamListResponse_TeamEntry*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAProTeamListResponse_TeamEntry*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProTeamListResponse_TeamEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAProTeamListResponse_TeamEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProTeamListResponse_TeamEntry_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAProTeamListResponse_TeamEntry* _builderResult;
}

- (CMsgDOTAProTeamListResponse_TeamEntry*) defaultInstance;

- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) clear;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) clone;

- (CMsgDOTAProTeamListResponse_TeamEntry*) build;
- (CMsgDOTAProTeamListResponse_TeamEntry*) buildPartial;

- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) mergeFrom:(CMsgDOTAProTeamListResponse_TeamEntry*) other;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTeamId;
- (uint32_t) teamId;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) setTeamId:(uint32_t) value;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) clearTeamId;

- (BOOL) hasTag;
- (NSString*) tag;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) setTag:(NSString*) value;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) clearTag;

- (BOOL) hasTimeCreated;
- (uint32_t) timeCreated;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) setTimeCreated:(uint32_t) value;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) clearTimeCreated;

- (BOOL) hasLogo;
- (uint64_t) logo;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) setLogo:(uint64_t) value;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) clearLogo;

- (BOOL) hasCountryCode;
- (NSString*) countryCode;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) setCountryCode:(NSString*) value;
- (CMsgDOTAProTeamListResponse_TeamEntry_Builder*) clearCountryCode;
@end

@interface CMsgDOTAProTeamListResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAProTeamListResponse* _builderResult;
}

- (CMsgDOTAProTeamListResponse*) defaultInstance;

- (CMsgDOTAProTeamListResponse_Builder*) clear;
- (CMsgDOTAProTeamListResponse_Builder*) clone;

- (CMsgDOTAProTeamListResponse*) build;
- (CMsgDOTAProTeamListResponse*) buildPartial;

- (CMsgDOTAProTeamListResponse_Builder*) mergeFrom:(CMsgDOTAProTeamListResponse*) other;
- (CMsgDOTAProTeamListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAProTeamListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)teams;
- (CMsgDOTAProTeamListResponse_TeamEntry*)teamsAtIndex:(NSUInteger)index;
- (CMsgDOTAProTeamListResponse_Builder *)addTeams:(CMsgDOTAProTeamListResponse_TeamEntry*)value;
- (CMsgDOTAProTeamListResponse_Builder *)setTeamsArray:(NSArray *)array;
- (CMsgDOTAProTeamListResponse_Builder *)setTeamsValues:(const CMsgDOTAProTeamListResponse_TeamEntry* *)values count:(NSUInteger)count;
- (CMsgDOTAProTeamListResponse_Builder *)clearTeams;

- (BOOL) hasEresult;
- (uint32_t) eresult;
- (CMsgDOTAProTeamListResponse_Builder*) setEresult:(uint32_t) value;
- (CMsgDOTAProTeamListResponse_Builder*) clearEresult;
@end

@interface CMsgDOTAInitiateTeamInvite : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
@property (readonly) uint32_t accountId;

+ (CMsgDOTAInitiateTeamInvite*) defaultInstance;
- (CMsgDOTAInitiateTeamInvite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAInitiateTeamInvite_Builder*) builder;
+ (CMsgDOTAInitiateTeamInvite_Builder*) builder;
+ (CMsgDOTAInitiateTeamInvite_Builder*) builderWithPrototype:(CMsgDOTAInitiateTeamInvite*) prototype;
- (CMsgDOTAInitiateTeamInvite_Builder*) toBuilder;

+ (CMsgDOTAInitiateTeamInvite*) parseFromData:(NSData*) data;
+ (CMsgDOTAInitiateTeamInvite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAInitiateTeamInvite*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAInitiateTeamInvite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAInitiateTeamInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAInitiateTeamInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAInitiateTeamInvite_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAInitiateTeamInvite* _builderResult;
}

- (CMsgDOTAInitiateTeamInvite*) defaultInstance;

- (CMsgDOTAInitiateTeamInvite_Builder*) clear;
- (CMsgDOTAInitiateTeamInvite_Builder*) clone;

- (CMsgDOTAInitiateTeamInvite*) build;
- (CMsgDOTAInitiateTeamInvite*) buildPartial;

- (CMsgDOTAInitiateTeamInvite_Builder*) mergeFrom:(CMsgDOTAInitiateTeamInvite*) other;
- (CMsgDOTAInitiateTeamInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAInitiateTeamInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTAInitiateTeamInvite_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTAInitiateTeamInvite_Builder*) clearAccountId;
@end

@interface CMsgDOTAInitiateTeamInviteResponse : PBGeneratedMessage {
@private
  BOOL hasInviteeName_:1;
  BOOL hasresult_:1;
  NSString* inviteeName;
  CMsgDOTAInitiateTeamInviteResponse_Result result;
}
- (BOOL) hasresult;
- (BOOL) hasInviteeName;
@property (readonly) CMsgDOTAInitiateTeamInviteResponse_Result result;
@property (readonly, retain) NSString* inviteeName;

+ (CMsgDOTAInitiateTeamInviteResponse*) defaultInstance;
- (CMsgDOTAInitiateTeamInviteResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAInitiateTeamInviteResponse_Builder*) builder;
+ (CMsgDOTAInitiateTeamInviteResponse_Builder*) builder;
+ (CMsgDOTAInitiateTeamInviteResponse_Builder*) builderWithPrototype:(CMsgDOTAInitiateTeamInviteResponse*) prototype;
- (CMsgDOTAInitiateTeamInviteResponse_Builder*) toBuilder;

+ (CMsgDOTAInitiateTeamInviteResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAInitiateTeamInviteResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAInitiateTeamInviteResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAInitiateTeamInviteResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAInitiateTeamInviteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAInitiateTeamInviteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAInitiateTeamInviteResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAInitiateTeamInviteResponse* _builderResult;
}

- (CMsgDOTAInitiateTeamInviteResponse*) defaultInstance;

- (CMsgDOTAInitiateTeamInviteResponse_Builder*) clear;
- (CMsgDOTAInitiateTeamInviteResponse_Builder*) clone;

- (CMsgDOTAInitiateTeamInviteResponse*) build;
- (CMsgDOTAInitiateTeamInviteResponse*) buildPartial;

- (CMsgDOTAInitiateTeamInviteResponse_Builder*) mergeFrom:(CMsgDOTAInitiateTeamInviteResponse*) other;
- (CMsgDOTAInitiateTeamInviteResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAInitiateTeamInviteResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasresult;
- (CMsgDOTAInitiateTeamInviteResponse_Result) result;
- (CMsgDOTAInitiateTeamInviteResponse_Builder*) setresult:(CMsgDOTAInitiateTeamInviteResponse_Result) value;
- (CMsgDOTAInitiateTeamInviteResponse_Builder*) clearresult;

- (BOOL) hasInviteeName;
- (NSString*) inviteeName;
- (CMsgDOTAInitiateTeamInviteResponse_Builder*) setInviteeName:(NSString*) value;
- (CMsgDOTAInitiateTeamInviteResponse_Builder*) clearInviteeName;
@end

@interface CMsgDOTATeamInvite : PBGeneratedMessage {
@private
  BOOL hasLogo_:1;
  BOOL hasTeamName_:1;
  BOOL hasTeamTag_:1;
  BOOL hasInviterAccountId_:1;
  uint64_t logo;
  NSString* teamName;
  NSString* teamTag;
  uint32_t inviterAccountId;
}
- (BOOL) hasInviterAccountId;
- (BOOL) hasTeamName;
- (BOOL) hasTeamTag;
- (BOOL) hasLogo;
@property (readonly) uint32_t inviterAccountId;
@property (readonly, retain) NSString* teamName;
@property (readonly, retain) NSString* teamTag;
@property (readonly) uint64_t logo;

+ (CMsgDOTATeamInvite*) defaultInstance;
- (CMsgDOTATeamInvite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeamInvite_Builder*) builder;
+ (CMsgDOTATeamInvite_Builder*) builder;
+ (CMsgDOTATeamInvite_Builder*) builderWithPrototype:(CMsgDOTATeamInvite*) prototype;
- (CMsgDOTATeamInvite_Builder*) toBuilder;

+ (CMsgDOTATeamInvite*) parseFromData:(NSData*) data;
+ (CMsgDOTATeamInvite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamInvite*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeamInvite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeamInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeamInvite_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeamInvite* _builderResult;
}

- (CMsgDOTATeamInvite*) defaultInstance;

- (CMsgDOTATeamInvite_Builder*) clear;
- (CMsgDOTATeamInvite_Builder*) clone;

- (CMsgDOTATeamInvite*) build;
- (CMsgDOTATeamInvite*) buildPartial;

- (CMsgDOTATeamInvite_Builder*) mergeFrom:(CMsgDOTATeamInvite*) other;
- (CMsgDOTATeamInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeamInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasInviterAccountId;
- (uint32_t) inviterAccountId;
- (CMsgDOTATeamInvite_Builder*) setInviterAccountId:(uint32_t) value;
- (CMsgDOTATeamInvite_Builder*) clearInviterAccountId;

- (BOOL) hasTeamName;
- (NSString*) teamName;
- (CMsgDOTATeamInvite_Builder*) setTeamName:(NSString*) value;
- (CMsgDOTATeamInvite_Builder*) clearTeamName;

- (BOOL) hasTeamTag;
- (NSString*) teamTag;
- (CMsgDOTATeamInvite_Builder*) setTeamTag:(NSString*) value;
- (CMsgDOTATeamInvite_Builder*) clearTeamTag;

- (BOOL) hasLogo;
- (uint64_t) logo;
- (CMsgDOTATeamInvite_Builder*) setLogo:(uint64_t) value;
- (CMsgDOTATeamInvite_Builder*) clearLogo;
@end

@interface CMsgDOTATeamInviteReply : PBGeneratedMessage {
@private
  BOOL hasreply_:1;
  CMsgDOTATeamInviteReply_Reply reply;
}
- (BOOL) hasreply;
@property (readonly) CMsgDOTATeamInviteReply_Reply reply;

+ (CMsgDOTATeamInviteReply*) defaultInstance;
- (CMsgDOTATeamInviteReply*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeamInviteReply_Builder*) builder;
+ (CMsgDOTATeamInviteReply_Builder*) builder;
+ (CMsgDOTATeamInviteReply_Builder*) builderWithPrototype:(CMsgDOTATeamInviteReply*) prototype;
- (CMsgDOTATeamInviteReply_Builder*) toBuilder;

+ (CMsgDOTATeamInviteReply*) parseFromData:(NSData*) data;
+ (CMsgDOTATeamInviteReply*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamInviteReply*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeamInviteReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamInviteReply*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeamInviteReply*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeamInviteReply_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeamInviteReply* _builderResult;
}

- (CMsgDOTATeamInviteReply*) defaultInstance;

- (CMsgDOTATeamInviteReply_Builder*) clear;
- (CMsgDOTATeamInviteReply_Builder*) clone;

- (CMsgDOTATeamInviteReply*) build;
- (CMsgDOTATeamInviteReply*) buildPartial;

- (CMsgDOTATeamInviteReply_Builder*) mergeFrom:(CMsgDOTATeamInviteReply*) other;
- (CMsgDOTATeamInviteReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeamInviteReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasreply;
- (CMsgDOTATeamInviteReply_Reply) reply;
- (CMsgDOTATeamInviteReply_Builder*) setreply:(CMsgDOTATeamInviteReply_Reply) value;
- (CMsgDOTATeamInviteReply_Builder*) clearreply;
@end

@interface CMsgDOTATeamInviteReplyResponse : PBGeneratedMessage {
@private
  BOOL hasTeamName_:1;
  BOOL hasresult_:1;
  NSString* teamName;
  CMsgDOTATeamInviteReplyResponse_Result result;
}
- (BOOL) hasresult;
- (BOOL) hasTeamName;
@property (readonly) CMsgDOTATeamInviteReplyResponse_Result result;
@property (readonly, retain) NSString* teamName;

+ (CMsgDOTATeamInviteReplyResponse*) defaultInstance;
- (CMsgDOTATeamInviteReplyResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeamInviteReplyResponse_Builder*) builder;
+ (CMsgDOTATeamInviteReplyResponse_Builder*) builder;
+ (CMsgDOTATeamInviteReplyResponse_Builder*) builderWithPrototype:(CMsgDOTATeamInviteReplyResponse*) prototype;
- (CMsgDOTATeamInviteReplyResponse_Builder*) toBuilder;

+ (CMsgDOTATeamInviteReplyResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTATeamInviteReplyResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamInviteReplyResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeamInviteReplyResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamInviteReplyResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeamInviteReplyResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeamInviteReplyResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeamInviteReplyResponse* _builderResult;
}

- (CMsgDOTATeamInviteReplyResponse*) defaultInstance;

- (CMsgDOTATeamInviteReplyResponse_Builder*) clear;
- (CMsgDOTATeamInviteReplyResponse_Builder*) clone;

- (CMsgDOTATeamInviteReplyResponse*) build;
- (CMsgDOTATeamInviteReplyResponse*) buildPartial;

- (CMsgDOTATeamInviteReplyResponse_Builder*) mergeFrom:(CMsgDOTATeamInviteReplyResponse*) other;
- (CMsgDOTATeamInviteReplyResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeamInviteReplyResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasresult;
- (CMsgDOTATeamInviteReplyResponse_Result) result;
- (CMsgDOTATeamInviteReplyResponse_Builder*) setresult:(CMsgDOTATeamInviteReplyResponse_Result) value;
- (CMsgDOTATeamInviteReplyResponse_Builder*) clearresult;

- (BOOL) hasTeamName;
- (NSString*) teamName;
- (CMsgDOTATeamInviteReplyResponse_Builder*) setTeamName:(NSString*) value;
- (CMsgDOTATeamInviteReplyResponse_Builder*) clearTeamName;
@end

@interface CMsgDOTATeamInviteComplete : PBGeneratedMessage {
@private
  BOOL hasInviteeName_:1;
  BOOL hasresult_:1;
  NSString* inviteeName;
  CMsgDOTATeamInviteComplete_Result result;
}
- (BOOL) hasresult;
- (BOOL) hasInviteeName;
@property (readonly) CMsgDOTATeamInviteComplete_Result result;
@property (readonly, retain) NSString* inviteeName;

+ (CMsgDOTATeamInviteComplete*) defaultInstance;
- (CMsgDOTATeamInviteComplete*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATeamInviteComplete_Builder*) builder;
+ (CMsgDOTATeamInviteComplete_Builder*) builder;
+ (CMsgDOTATeamInviteComplete_Builder*) builderWithPrototype:(CMsgDOTATeamInviteComplete*) prototype;
- (CMsgDOTATeamInviteComplete_Builder*) toBuilder;

+ (CMsgDOTATeamInviteComplete*) parseFromData:(NSData*) data;
+ (CMsgDOTATeamInviteComplete*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamInviteComplete*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATeamInviteComplete*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATeamInviteComplete*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATeamInviteComplete*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATeamInviteComplete_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATeamInviteComplete* _builderResult;
}

- (CMsgDOTATeamInviteComplete*) defaultInstance;

- (CMsgDOTATeamInviteComplete_Builder*) clear;
- (CMsgDOTATeamInviteComplete_Builder*) clone;

- (CMsgDOTATeamInviteComplete*) build;
- (CMsgDOTATeamInviteComplete*) buildPartial;

- (CMsgDOTATeamInviteComplete_Builder*) mergeFrom:(CMsgDOTATeamInviteComplete*) other;
- (CMsgDOTATeamInviteComplete_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATeamInviteComplete_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasresult;
- (CMsgDOTATeamInviteComplete_Result) result;
- (CMsgDOTATeamInviteComplete_Builder*) setresult:(CMsgDOTATeamInviteComplete_Result) value;
- (CMsgDOTATeamInviteComplete_Builder*) clearresult;

- (BOOL) hasInviteeName;
- (NSString*) inviteeName;
- (CMsgDOTATeamInviteComplete_Builder*) setInviteeName:(NSString*) value;
- (CMsgDOTATeamInviteComplete_Builder*) clearInviteeName;
@end

@interface CMsgDOTAKickTeamMember : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
@property (readonly) uint32_t accountId;

+ (CMsgDOTAKickTeamMember*) defaultInstance;
- (CMsgDOTAKickTeamMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAKickTeamMember_Builder*) builder;
+ (CMsgDOTAKickTeamMember_Builder*) builder;
+ (CMsgDOTAKickTeamMember_Builder*) builderWithPrototype:(CMsgDOTAKickTeamMember*) prototype;
- (CMsgDOTAKickTeamMember_Builder*) toBuilder;

+ (CMsgDOTAKickTeamMember*) parseFromData:(NSData*) data;
+ (CMsgDOTAKickTeamMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAKickTeamMember*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAKickTeamMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAKickTeamMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAKickTeamMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAKickTeamMember_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAKickTeamMember* _builderResult;
}

- (CMsgDOTAKickTeamMember*) defaultInstance;

- (CMsgDOTAKickTeamMember_Builder*) clear;
- (CMsgDOTAKickTeamMember_Builder*) clone;

- (CMsgDOTAKickTeamMember*) build;
- (CMsgDOTAKickTeamMember*) buildPartial;

- (CMsgDOTAKickTeamMember_Builder*) mergeFrom:(CMsgDOTAKickTeamMember*) other;
- (CMsgDOTAKickTeamMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAKickTeamMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTAKickTeamMember_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTAKickTeamMember_Builder*) clearAccountId;
@end

@interface CMsgDOTAKickTeamMemberResponse : PBGeneratedMessage {
@private
  BOOL hasresult_:1;
  CMsgDOTAKickTeamMemberResponse_Result result;
}
- (BOOL) hasresult;
@property (readonly) CMsgDOTAKickTeamMemberResponse_Result result;

+ (CMsgDOTAKickTeamMemberResponse*) defaultInstance;
- (CMsgDOTAKickTeamMemberResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAKickTeamMemberResponse_Builder*) builder;
+ (CMsgDOTAKickTeamMemberResponse_Builder*) builder;
+ (CMsgDOTAKickTeamMemberResponse_Builder*) builderWithPrototype:(CMsgDOTAKickTeamMemberResponse*) prototype;
- (CMsgDOTAKickTeamMemberResponse_Builder*) toBuilder;

+ (CMsgDOTAKickTeamMemberResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAKickTeamMemberResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAKickTeamMemberResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAKickTeamMemberResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAKickTeamMemberResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAKickTeamMemberResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAKickTeamMemberResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAKickTeamMemberResponse* _builderResult;
}

- (CMsgDOTAKickTeamMemberResponse*) defaultInstance;

- (CMsgDOTAKickTeamMemberResponse_Builder*) clear;
- (CMsgDOTAKickTeamMemberResponse_Builder*) clone;

- (CMsgDOTAKickTeamMemberResponse*) build;
- (CMsgDOTAKickTeamMemberResponse*) buildPartial;

- (CMsgDOTAKickTeamMemberResponse_Builder*) mergeFrom:(CMsgDOTAKickTeamMemberResponse*) other;
- (CMsgDOTAKickTeamMemberResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAKickTeamMemberResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasresult;
- (CMsgDOTAKickTeamMemberResponse_Result) result;
- (CMsgDOTAKickTeamMemberResponse_Builder*) setresult:(CMsgDOTAKickTeamMemberResponse_Result) value;
- (CMsgDOTAKickTeamMemberResponse_Builder*) clearresult;
@end

@interface CMsgDOTATransferTeamAdmin : PBGeneratedMessage {
@private
  BOOL hasNewAdminAccountId_:1;
  uint32_t newAdminAccountId;
}
- (BOOL) hasNewAdminAccountId;
@property (readonly) uint32_t newAdminAccountId;

+ (CMsgDOTATransferTeamAdmin*) defaultInstance;
- (CMsgDOTATransferTeamAdmin*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTATransferTeamAdmin_Builder*) builder;
+ (CMsgDOTATransferTeamAdmin_Builder*) builder;
+ (CMsgDOTATransferTeamAdmin_Builder*) builderWithPrototype:(CMsgDOTATransferTeamAdmin*) prototype;
- (CMsgDOTATransferTeamAdmin_Builder*) toBuilder;

+ (CMsgDOTATransferTeamAdmin*) parseFromData:(NSData*) data;
+ (CMsgDOTATransferTeamAdmin*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATransferTeamAdmin*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTATransferTeamAdmin*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTATransferTeamAdmin*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTATransferTeamAdmin*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTATransferTeamAdmin_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTATransferTeamAdmin* _builderResult;
}

- (CMsgDOTATransferTeamAdmin*) defaultInstance;

- (CMsgDOTATransferTeamAdmin_Builder*) clear;
- (CMsgDOTATransferTeamAdmin_Builder*) clone;

- (CMsgDOTATransferTeamAdmin*) build;
- (CMsgDOTATransferTeamAdmin*) buildPartial;

- (CMsgDOTATransferTeamAdmin_Builder*) mergeFrom:(CMsgDOTATransferTeamAdmin*) other;
- (CMsgDOTATransferTeamAdmin_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTATransferTeamAdmin_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNewAdminAccountId;
- (uint32_t) newAdminAccountId;
- (CMsgDOTATransferTeamAdmin_Builder*) setNewAdminAccountId:(uint32_t) value;
- (CMsgDOTATransferTeamAdmin_Builder*) clearNewAdminAccountId;
@end

@interface CMsgDOTALeaveTeam : PBGeneratedMessage {
@private
}

+ (CMsgDOTALeaveTeam*) defaultInstance;
- (CMsgDOTALeaveTeam*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTALeaveTeam_Builder*) builder;
+ (CMsgDOTALeaveTeam_Builder*) builder;
+ (CMsgDOTALeaveTeam_Builder*) builderWithPrototype:(CMsgDOTALeaveTeam*) prototype;
- (CMsgDOTALeaveTeam_Builder*) toBuilder;

+ (CMsgDOTALeaveTeam*) parseFromData:(NSData*) data;
+ (CMsgDOTALeaveTeam*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALeaveTeam*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTALeaveTeam*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALeaveTeam*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTALeaveTeam*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTALeaveTeam_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTALeaveTeam* _builderResult;
}

- (CMsgDOTALeaveTeam*) defaultInstance;

- (CMsgDOTALeaveTeam_Builder*) clear;
- (CMsgDOTALeaveTeam_Builder*) clone;

- (CMsgDOTALeaveTeam*) build;
- (CMsgDOTALeaveTeam*) buildPartial;

- (CMsgDOTALeaveTeam_Builder*) mergeFrom:(CMsgDOTALeaveTeam*) other;
- (CMsgDOTALeaveTeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTALeaveTeam_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTALeaveTeamResponse : PBGeneratedMessage {
@private
  BOOL hasTeamName_:1;
  BOOL hasresult_:1;
  NSString* teamName;
  CMsgDOTALeaveTeamResponse_Result result;
}
- (BOOL) hasresult;
- (BOOL) hasTeamName;
@property (readonly) CMsgDOTALeaveTeamResponse_Result result;
@property (readonly, retain) NSString* teamName;

+ (CMsgDOTALeaveTeamResponse*) defaultInstance;
- (CMsgDOTALeaveTeamResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTALeaveTeamResponse_Builder*) builder;
+ (CMsgDOTALeaveTeamResponse_Builder*) builder;
+ (CMsgDOTALeaveTeamResponse_Builder*) builderWithPrototype:(CMsgDOTALeaveTeamResponse*) prototype;
- (CMsgDOTALeaveTeamResponse_Builder*) toBuilder;

+ (CMsgDOTALeaveTeamResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTALeaveTeamResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALeaveTeamResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTALeaveTeamResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALeaveTeamResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTALeaveTeamResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTALeaveTeamResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTALeaveTeamResponse* _builderResult;
}

- (CMsgDOTALeaveTeamResponse*) defaultInstance;

- (CMsgDOTALeaveTeamResponse_Builder*) clear;
- (CMsgDOTALeaveTeamResponse_Builder*) clone;

- (CMsgDOTALeaveTeamResponse*) build;
- (CMsgDOTALeaveTeamResponse*) buildPartial;

- (CMsgDOTALeaveTeamResponse_Builder*) mergeFrom:(CMsgDOTALeaveTeamResponse*) other;
- (CMsgDOTALeaveTeamResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTALeaveTeamResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasresult;
- (CMsgDOTALeaveTeamResponse_Result) result;
- (CMsgDOTALeaveTeamResponse_Builder*) setresult:(CMsgDOTALeaveTeamResponse_Result) value;
- (CMsgDOTALeaveTeamResponse_Builder*) clearresult;

- (BOOL) hasTeamName;
- (NSString*) teamName;
- (CMsgDOTALeaveTeamResponse_Builder*) setTeamName:(NSString*) value;
- (CMsgDOTALeaveTeamResponse_Builder*) clearTeamName;
@end

@interface CMsgDOTASuggestTeamMatchmaking : PBGeneratedMessage {
@private
  BOOL hasTeammateName_:1;
  NSString* teammateName;
}
- (BOOL) hasTeammateName;
@property (readonly, retain) NSString* teammateName;

+ (CMsgDOTASuggestTeamMatchmaking*) defaultInstance;
- (CMsgDOTASuggestTeamMatchmaking*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTASuggestTeamMatchmaking_Builder*) builder;
+ (CMsgDOTASuggestTeamMatchmaking_Builder*) builder;
+ (CMsgDOTASuggestTeamMatchmaking_Builder*) builderWithPrototype:(CMsgDOTASuggestTeamMatchmaking*) prototype;
- (CMsgDOTASuggestTeamMatchmaking_Builder*) toBuilder;

+ (CMsgDOTASuggestTeamMatchmaking*) parseFromData:(NSData*) data;
+ (CMsgDOTASuggestTeamMatchmaking*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASuggestTeamMatchmaking*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTASuggestTeamMatchmaking*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASuggestTeamMatchmaking*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTASuggestTeamMatchmaking*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTASuggestTeamMatchmaking_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTASuggestTeamMatchmaking* _builderResult;
}

- (CMsgDOTASuggestTeamMatchmaking*) defaultInstance;

- (CMsgDOTASuggestTeamMatchmaking_Builder*) clear;
- (CMsgDOTASuggestTeamMatchmaking_Builder*) clone;

- (CMsgDOTASuggestTeamMatchmaking*) build;
- (CMsgDOTASuggestTeamMatchmaking*) buildPartial;

- (CMsgDOTASuggestTeamMatchmaking_Builder*) mergeFrom:(CMsgDOTASuggestTeamMatchmaking*) other;
- (CMsgDOTASuggestTeamMatchmaking_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTASuggestTeamMatchmaking_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTeammateName;
- (NSString*) teammateName;
- (CMsgDOTASuggestTeamMatchmaking_Builder*) setTeammateName:(NSString*) value;
- (CMsgDOTASuggestTeamMatchmaking_Builder*) clearTeammateName;
@end

@interface CMsgDOTABetaParticipationRequest : PBGeneratedMessage {
@private
}

+ (CMsgDOTABetaParticipationRequest*) defaultInstance;
- (CMsgDOTABetaParticipationRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTABetaParticipationRequest_Builder*) builder;
+ (CMsgDOTABetaParticipationRequest_Builder*) builder;
+ (CMsgDOTABetaParticipationRequest_Builder*) builderWithPrototype:(CMsgDOTABetaParticipationRequest*) prototype;
- (CMsgDOTABetaParticipationRequest_Builder*) toBuilder;

+ (CMsgDOTABetaParticipationRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTABetaParticipationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTABetaParticipationRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTABetaParticipationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTABetaParticipationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTABetaParticipationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTABetaParticipationRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTABetaParticipationRequest* _builderResult;
}

- (CMsgDOTABetaParticipationRequest*) defaultInstance;

- (CMsgDOTABetaParticipationRequest_Builder*) clear;
- (CMsgDOTABetaParticipationRequest_Builder*) clone;

- (CMsgDOTABetaParticipationRequest*) build;
- (CMsgDOTABetaParticipationRequest*) buildPartial;

- (CMsgDOTABetaParticipationRequest_Builder*) mergeFrom:(CMsgDOTABetaParticipationRequest*) other;
- (CMsgDOTABetaParticipationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTABetaParticipationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTABetaParticipation : PBGeneratedMessage {
@private
  BOOL hasBetaJoinTime_:1;
  BOOL hasAccessRights_:1;
  uint32_t betaJoinTime;
  uint32_t accessRights;
}
- (BOOL) hasAccessRights;
- (BOOL) hasBetaJoinTime;
@property (readonly) uint32_t accessRights;
@property (readonly) uint32_t betaJoinTime;

+ (CMsgDOTABetaParticipation*) defaultInstance;
- (CMsgDOTABetaParticipation*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTABetaParticipation_Builder*) builder;
+ (CMsgDOTABetaParticipation_Builder*) builder;
+ (CMsgDOTABetaParticipation_Builder*) builderWithPrototype:(CMsgDOTABetaParticipation*) prototype;
- (CMsgDOTABetaParticipation_Builder*) toBuilder;

+ (CMsgDOTABetaParticipation*) parseFromData:(NSData*) data;
+ (CMsgDOTABetaParticipation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTABetaParticipation*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTABetaParticipation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTABetaParticipation*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTABetaParticipation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTABetaParticipation_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTABetaParticipation* _builderResult;
}

- (CMsgDOTABetaParticipation*) defaultInstance;

- (CMsgDOTABetaParticipation_Builder*) clear;
- (CMsgDOTABetaParticipation_Builder*) clone;

- (CMsgDOTABetaParticipation*) build;
- (CMsgDOTABetaParticipation*) buildPartial;

- (CMsgDOTABetaParticipation_Builder*) mergeFrom:(CMsgDOTABetaParticipation*) other;
- (CMsgDOTABetaParticipation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTABetaParticipation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccessRights;
- (uint32_t) accessRights;
- (CMsgDOTABetaParticipation_Builder*) setAccessRights:(uint32_t) value;
- (CMsgDOTABetaParticipation_Builder*) clearAccessRights;

- (BOOL) hasBetaJoinTime;
- (uint32_t) betaJoinTime;
- (CMsgDOTABetaParticipation_Builder*) setBetaJoinTime:(uint32_t) value;
- (CMsgDOTABetaParticipation_Builder*) clearBetaJoinTime;
@end

@interface CMsgDOTAGenericResult : PBGeneratedMessage {
@private
  BOOL hasEresult_:1;
  uint32_t eresult;
}
- (BOOL) hasEresult;
@property (readonly) uint32_t eresult;

+ (CMsgDOTAGenericResult*) defaultInstance;
- (CMsgDOTAGenericResult*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAGenericResult_Builder*) builder;
+ (CMsgDOTAGenericResult_Builder*) builder;
+ (CMsgDOTAGenericResult_Builder*) builderWithPrototype:(CMsgDOTAGenericResult*) prototype;
- (CMsgDOTAGenericResult_Builder*) toBuilder;

+ (CMsgDOTAGenericResult*) parseFromData:(NSData*) data;
+ (CMsgDOTAGenericResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAGenericResult*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAGenericResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAGenericResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAGenericResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAGenericResult_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAGenericResult* _builderResult;
}

- (CMsgDOTAGenericResult*) defaultInstance;

- (CMsgDOTAGenericResult_Builder*) clear;
- (CMsgDOTAGenericResult_Builder*) clone;

- (CMsgDOTAGenericResult*) build;
- (CMsgDOTAGenericResult*) buildPartial;

- (CMsgDOTAGenericResult_Builder*) mergeFrom:(CMsgDOTAGenericResult*) other;
- (CMsgDOTAGenericResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAGenericResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEresult;
- (uint32_t) eresult;
- (CMsgDOTAGenericResult_Builder*) setEresult:(uint32_t) value;
- (CMsgDOTAGenericResult_Builder*) clearEresult;
@end

@interface CMsgDOTABroadcastNotification : PBGeneratedMessage {
@private
  BOOL hasMessage_:1;
  NSString* message;
}
- (BOOL) hasMessage;
@property (readonly, retain) NSString* message;

+ (CMsgDOTABroadcastNotification*) defaultInstance;
- (CMsgDOTABroadcastNotification*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTABroadcastNotification_Builder*) builder;
+ (CMsgDOTABroadcastNotification_Builder*) builder;
+ (CMsgDOTABroadcastNotification_Builder*) builderWithPrototype:(CMsgDOTABroadcastNotification*) prototype;
- (CMsgDOTABroadcastNotification_Builder*) toBuilder;

+ (CMsgDOTABroadcastNotification*) parseFromData:(NSData*) data;
+ (CMsgDOTABroadcastNotification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTABroadcastNotification*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTABroadcastNotification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTABroadcastNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTABroadcastNotification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTABroadcastNotification_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTABroadcastNotification* _builderResult;
}

- (CMsgDOTABroadcastNotification*) defaultInstance;

- (CMsgDOTABroadcastNotification_Builder*) clear;
- (CMsgDOTABroadcastNotification_Builder*) clone;

- (CMsgDOTABroadcastNotification*) build;
- (CMsgDOTABroadcastNotification*) buildPartial;

- (CMsgDOTABroadcastNotification_Builder*) mergeFrom:(CMsgDOTABroadcastNotification*) other;
- (CMsgDOTABroadcastNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTABroadcastNotification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMessage;
- (NSString*) message;
- (CMsgDOTABroadcastNotification_Builder*) setMessage:(NSString*) value;
- (CMsgDOTABroadcastNotification_Builder*) clearMessage;
@end

@interface CMsgDOTALiveScoreboardUpdate : PBGeneratedMessage {
@private
  BOOL hasDuration_:1;
  BOOL hasHltvDelay_:1;
  BOOL hasTeamGood_:1;
  BOOL hasTeamBad_:1;
  BOOL hasTournamentId_:1;
  BOOL hasTournamentGameId_:1;
  BOOL hasRoshanRespawnTimer_:1;
  Float32 duration;
  int32_t hltvDelay;
  CMsgDOTALiveScoreboardUpdate_Team* teamGood;
  CMsgDOTALiveScoreboardUpdate_Team* teamBad;
  uint32_t tournamentId;
  uint32_t tournamentGameId;
  uint32_t roshanRespawnTimer;
}
- (BOOL) hasTournamentId;
- (BOOL) hasTournamentGameId;
- (BOOL) hasDuration;
- (BOOL) hasHltvDelay;
- (BOOL) hasTeamGood;
- (BOOL) hasTeamBad;
- (BOOL) hasRoshanRespawnTimer;
@property (readonly) uint32_t tournamentId;
@property (readonly) uint32_t tournamentGameId;
@property (readonly) Float32 duration;
@property (readonly) int32_t hltvDelay;
@property (readonly, retain) CMsgDOTALiveScoreboardUpdate_Team* teamGood;
@property (readonly, retain) CMsgDOTALiveScoreboardUpdate_Team* teamBad;
@property (readonly) uint32_t roshanRespawnTimer;

+ (CMsgDOTALiveScoreboardUpdate*) defaultInstance;
- (CMsgDOTALiveScoreboardUpdate*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTALiveScoreboardUpdate_Builder*) builder;
+ (CMsgDOTALiveScoreboardUpdate_Builder*) builder;
+ (CMsgDOTALiveScoreboardUpdate_Builder*) builderWithPrototype:(CMsgDOTALiveScoreboardUpdate*) prototype;
- (CMsgDOTALiveScoreboardUpdate_Builder*) toBuilder;

+ (CMsgDOTALiveScoreboardUpdate*) parseFromData:(NSData*) data;
+ (CMsgDOTALiveScoreboardUpdate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALiveScoreboardUpdate*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTALiveScoreboardUpdate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALiveScoreboardUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTALiveScoreboardUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTALiveScoreboardUpdate_Team : PBGeneratedMessage {
@private
  BOOL hasScore_:1;
  uint32_t score;
  PBAppendableArray * playersArray;
}
- (BOOL) hasScore;
@property (readonly, retain) PBArray * players;
@property (readonly) uint32_t score;
- (CMsgDOTALiveScoreboardUpdate_Team_Player*)playersAtIndex:(NSUInteger)index;

+ (CMsgDOTALiveScoreboardUpdate_Team*) defaultInstance;
- (CMsgDOTALiveScoreboardUpdate_Team*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder*) builder;
+ (CMsgDOTALiveScoreboardUpdate_Team_Builder*) builder;
+ (CMsgDOTALiveScoreboardUpdate_Team_Builder*) builderWithPrototype:(CMsgDOTALiveScoreboardUpdate_Team*) prototype;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder*) toBuilder;

+ (CMsgDOTALiveScoreboardUpdate_Team*) parseFromData:(NSData*) data;
+ (CMsgDOTALiveScoreboardUpdate_Team*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALiveScoreboardUpdate_Team*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTALiveScoreboardUpdate_Team*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALiveScoreboardUpdate_Team*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTALiveScoreboardUpdate_Team*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTALiveScoreboardUpdate_Team_Player : PBGeneratedMessage {
@private
  BOOL hasUltimateCooldown_:1;
  BOOL hasXpPerMin_:1;
  BOOL hasGoldPerMin_:1;
  BOOL hasPlayerName_:1;
  BOOL hasHeroName_:1;
  BOOL hasRespawnTimer_:1;
  BOOL hasItem5_:1;
  BOOL hasItem4_:1;
  BOOL hasItem3_:1;
  BOOL hasItem2_:1;
  BOOL hasItem1_:1;
  BOOL hasItem0_:1;
  BOOL hasLevel_:1;
  BOOL hasGold_:1;
  BOOL hasDenies_:1;
  BOOL hasLastHits_:1;
  BOOL hasAssists_:1;
  BOOL hasDeaths_:1;
  BOOL hasKills_:1;
  BOOL hasHeroId_:1;
  BOOL hasPlayerSlot_:1;
  BOOL hasultimate_state_:1;
  Float32 ultimateCooldown;
  Float32 xpPerMin;
  Float32 goldPerMin;
  NSString* playerName;
  NSString* heroName;
  uint32_t respawnTimer;
  uint32_t item5;
  uint32_t item4;
  uint32_t item3;
  uint32_t item2;
  uint32_t item1;
  uint32_t item0;
  uint32_t level;
  uint32_t gold;
  uint32_t denies;
  uint32_t lastHits;
  uint32_t assists;
  uint32_t deaths;
  uint32_t kills;
  uint32_t heroId;
  uint32_t playerSlot;
  CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState ultimate_state;
}
- (BOOL) hasPlayerSlot;
- (BOOL) hasPlayerName;
- (BOOL) hasHeroName;
- (BOOL) hasHeroId;
- (BOOL) hasKills;
- (BOOL) hasDeaths;
- (BOOL) hasAssists;
- (BOOL) hasLastHits;
- (BOOL) hasDenies;
- (BOOL) hasGold;
- (BOOL) hasLevel;
- (BOOL) hasGoldPerMin;
- (BOOL) hasXpPerMin;
- (BOOL) hasultimate_state;
- (BOOL) hasUltimateCooldown;
- (BOOL) hasItem0;
- (BOOL) hasItem1;
- (BOOL) hasItem2;
- (BOOL) hasItem3;
- (BOOL) hasItem4;
- (BOOL) hasItem5;
- (BOOL) hasRespawnTimer;
@property (readonly) uint32_t playerSlot;
@property (readonly, retain) NSString* playerName;
@property (readonly, retain) NSString* heroName;
@property (readonly) uint32_t heroId;
@property (readonly) uint32_t kills;
@property (readonly) uint32_t deaths;
@property (readonly) uint32_t assists;
@property (readonly) uint32_t lastHits;
@property (readonly) uint32_t denies;
@property (readonly) uint32_t gold;
@property (readonly) uint32_t level;
@property (readonly) Float32 goldPerMin;
@property (readonly) Float32 xpPerMin;
@property (readonly) CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState ultimate_state;
@property (readonly) Float32 ultimateCooldown;
@property (readonly) uint32_t item0;
@property (readonly) uint32_t item1;
@property (readonly) uint32_t item2;
@property (readonly) uint32_t item3;
@property (readonly) uint32_t item4;
@property (readonly) uint32_t item5;
@property (readonly) uint32_t respawnTimer;

+ (CMsgDOTALiveScoreboardUpdate_Team_Player*) defaultInstance;
- (CMsgDOTALiveScoreboardUpdate_Team_Player*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) builder;
+ (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) builder;
+ (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) builderWithPrototype:(CMsgDOTALiveScoreboardUpdate_Team_Player*) prototype;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) toBuilder;

+ (CMsgDOTALiveScoreboardUpdate_Team_Player*) parseFromData:(NSData*) data;
+ (CMsgDOTALiveScoreboardUpdate_Team_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALiveScoreboardUpdate_Team_Player*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTALiveScoreboardUpdate_Team_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALiveScoreboardUpdate_Team_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTALiveScoreboardUpdate_Team_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTALiveScoreboardUpdate_Team_Player_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTALiveScoreboardUpdate_Team_Player* _builderResult;
}

- (CMsgDOTALiveScoreboardUpdate_Team_Player*) defaultInstance;

- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clear;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clone;

- (CMsgDOTALiveScoreboardUpdate_Team_Player*) build;
- (CMsgDOTALiveScoreboardUpdate_Team_Player*) buildPartial;

- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) mergeFrom:(CMsgDOTALiveScoreboardUpdate_Team_Player*) other;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPlayerSlot;
- (uint32_t) playerSlot;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setPlayerSlot:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearPlayerSlot;

- (BOOL) hasPlayerName;
- (NSString*) playerName;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setPlayerName:(NSString*) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearPlayerName;

- (BOOL) hasHeroName;
- (NSString*) heroName;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setHeroName:(NSString*) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearHeroName;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearHeroId;

- (BOOL) hasKills;
- (uint32_t) kills;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setKills:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearKills;

- (BOOL) hasDeaths;
- (uint32_t) deaths;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setDeaths:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearDeaths;

- (BOOL) hasAssists;
- (uint32_t) assists;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setAssists:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearAssists;

- (BOOL) hasLastHits;
- (uint32_t) lastHits;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setLastHits:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearLastHits;

- (BOOL) hasDenies;
- (uint32_t) denies;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setDenies:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearDenies;

- (BOOL) hasGold;
- (uint32_t) gold;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setGold:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearGold;

- (BOOL) hasLevel;
- (uint32_t) level;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setLevel:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearLevel;

- (BOOL) hasGoldPerMin;
- (Float32) goldPerMin;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setGoldPerMin:(Float32) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearGoldPerMin;

- (BOOL) hasXpPerMin;
- (Float32) xpPerMin;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setXpPerMin:(Float32) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearXpPerMin;

- (BOOL) hasultimate_state;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState) ultimate_state;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setultimate_state:(CMsgDOTALiveScoreboardUpdate_Team_Player_DOTAUltimateState) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearultimate_state;

- (BOOL) hasUltimateCooldown;
- (Float32) ultimateCooldown;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setUltimateCooldown:(Float32) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearUltimateCooldown;

- (BOOL) hasItem0;
- (uint32_t) item0;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setItem0:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearItem0;

- (BOOL) hasItem1;
- (uint32_t) item1;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setItem1:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearItem1;

- (BOOL) hasItem2;
- (uint32_t) item2;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setItem2:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearItem2;

- (BOOL) hasItem3;
- (uint32_t) item3;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setItem3:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearItem3;

- (BOOL) hasItem4;
- (uint32_t) item4;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setItem4:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearItem4;

- (BOOL) hasItem5;
- (uint32_t) item5;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setItem5:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearItem5;

- (BOOL) hasRespawnTimer;
- (uint32_t) respawnTimer;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) setRespawnTimer:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Player_Builder*) clearRespawnTimer;
@end

@interface CMsgDOTALiveScoreboardUpdate_Team_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTALiveScoreboardUpdate_Team* _builderResult;
}

- (CMsgDOTALiveScoreboardUpdate_Team*) defaultInstance;

- (CMsgDOTALiveScoreboardUpdate_Team_Builder*) clear;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder*) clone;

- (CMsgDOTALiveScoreboardUpdate_Team*) build;
- (CMsgDOTALiveScoreboardUpdate_Team*) buildPartial;

- (CMsgDOTALiveScoreboardUpdate_Team_Builder*) mergeFrom:(CMsgDOTALiveScoreboardUpdate_Team*) other;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)players;
- (CMsgDOTALiveScoreboardUpdate_Team_Player*)playersAtIndex:(NSUInteger)index;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder *)addPlayers:(CMsgDOTALiveScoreboardUpdate_Team_Player*)value;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder *)setPlayersValues:(const CMsgDOTALiveScoreboardUpdate_Team_Player* *)values count:(NSUInteger)count;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder *)clearPlayers;

- (BOOL) hasScore;
- (uint32_t) score;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder*) setScore:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Team_Builder*) clearScore;
@end

@interface CMsgDOTALiveScoreboardUpdate_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTALiveScoreboardUpdate* _builderResult;
}

- (CMsgDOTALiveScoreboardUpdate*) defaultInstance;

- (CMsgDOTALiveScoreboardUpdate_Builder*) clear;
- (CMsgDOTALiveScoreboardUpdate_Builder*) clone;

- (CMsgDOTALiveScoreboardUpdate*) build;
- (CMsgDOTALiveScoreboardUpdate*) buildPartial;

- (CMsgDOTALiveScoreboardUpdate_Builder*) mergeFrom:(CMsgDOTALiveScoreboardUpdate*) other;
- (CMsgDOTALiveScoreboardUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTALiveScoreboardUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTournamentId;
- (uint32_t) tournamentId;
- (CMsgDOTALiveScoreboardUpdate_Builder*) setTournamentId:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Builder*) clearTournamentId;

- (BOOL) hasTournamentGameId;
- (uint32_t) tournamentGameId;
- (CMsgDOTALiveScoreboardUpdate_Builder*) setTournamentGameId:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Builder*) clearTournamentGameId;

- (BOOL) hasDuration;
- (Float32) duration;
- (CMsgDOTALiveScoreboardUpdate_Builder*) setDuration:(Float32) value;
- (CMsgDOTALiveScoreboardUpdate_Builder*) clearDuration;

- (BOOL) hasHltvDelay;
- (int32_t) hltvDelay;
- (CMsgDOTALiveScoreboardUpdate_Builder*) setHltvDelay:(int32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Builder*) clearHltvDelay;

- (BOOL) hasTeamGood;
- (CMsgDOTALiveScoreboardUpdate_Team*) teamGood;
- (CMsgDOTALiveScoreboardUpdate_Builder*) setTeamGood:(CMsgDOTALiveScoreboardUpdate_Team*) value;
- (CMsgDOTALiveScoreboardUpdate_Builder*) setTeamGoodBuilder:(CMsgDOTALiveScoreboardUpdate_Team_Builder*) builderForValue;
- (CMsgDOTALiveScoreboardUpdate_Builder*) mergeTeamGood:(CMsgDOTALiveScoreboardUpdate_Team*) value;
- (CMsgDOTALiveScoreboardUpdate_Builder*) clearTeamGood;

- (BOOL) hasTeamBad;
- (CMsgDOTALiveScoreboardUpdate_Team*) teamBad;
- (CMsgDOTALiveScoreboardUpdate_Builder*) setTeamBad:(CMsgDOTALiveScoreboardUpdate_Team*) value;
- (CMsgDOTALiveScoreboardUpdate_Builder*) setTeamBadBuilder:(CMsgDOTALiveScoreboardUpdate_Team_Builder*) builderForValue;
- (CMsgDOTALiveScoreboardUpdate_Builder*) mergeTeamBad:(CMsgDOTALiveScoreboardUpdate_Team*) value;
- (CMsgDOTALiveScoreboardUpdate_Builder*) clearTeamBad;

- (BOOL) hasRoshanRespawnTimer;
- (uint32_t) roshanRespawnTimer;
- (CMsgDOTALiveScoreboardUpdate_Builder*) setRoshanRespawnTimer:(uint32_t) value;
- (CMsgDOTALiveScoreboardUpdate_Builder*) clearRoshanRespawnTimer;
@end

@interface CMsgDOTAJoinChatChannel : PBGeneratedMessage {
@private
  BOOL hasPersonaName_:1;
  BOOL hasChannelName_:1;
  BOOL hasPassword_:1;
  BOOL haschannel_type_:1;
  NSString* personaName;
  NSString* channelName;
  NSString* password;
  DOTAChatChannelType_t channel_type;
}
- (BOOL) hasPersonaName;
- (BOOL) hasChannelName;
- (BOOL) hasPassword;
- (BOOL) haschannel_type;
@property (readonly, retain) NSString* personaName;
@property (readonly, retain) NSString* channelName;
@property (readonly, retain) NSString* password;
@property (readonly) DOTAChatChannelType_t channel_type;

+ (CMsgDOTAJoinChatChannel*) defaultInstance;
- (CMsgDOTAJoinChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAJoinChatChannel_Builder*) builder;
+ (CMsgDOTAJoinChatChannel_Builder*) builder;
+ (CMsgDOTAJoinChatChannel_Builder*) builderWithPrototype:(CMsgDOTAJoinChatChannel*) prototype;
- (CMsgDOTAJoinChatChannel_Builder*) toBuilder;

+ (CMsgDOTAJoinChatChannel*) parseFromData:(NSData*) data;
+ (CMsgDOTAJoinChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAJoinChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAJoinChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAJoinChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAJoinChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAJoinChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAJoinChatChannel* _builderResult;
}

- (CMsgDOTAJoinChatChannel*) defaultInstance;

- (CMsgDOTAJoinChatChannel_Builder*) clear;
- (CMsgDOTAJoinChatChannel_Builder*) clone;

- (CMsgDOTAJoinChatChannel*) build;
- (CMsgDOTAJoinChatChannel*) buildPartial;

- (CMsgDOTAJoinChatChannel_Builder*) mergeFrom:(CMsgDOTAJoinChatChannel*) other;
- (CMsgDOTAJoinChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAJoinChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPersonaName;
- (NSString*) personaName;
- (CMsgDOTAJoinChatChannel_Builder*) setPersonaName:(NSString*) value;
- (CMsgDOTAJoinChatChannel_Builder*) clearPersonaName;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgDOTAJoinChatChannel_Builder*) setChannelName:(NSString*) value;
- (CMsgDOTAJoinChatChannel_Builder*) clearChannelName;

- (BOOL) hasPassword;
- (NSString*) password;
- (CMsgDOTAJoinChatChannel_Builder*) setPassword:(NSString*) value;
- (CMsgDOTAJoinChatChannel_Builder*) clearPassword;

- (BOOL) haschannel_type;
- (DOTAChatChannelType_t) channel_type;
- (CMsgDOTAJoinChatChannel_Builder*) setchannel_type:(DOTAChatChannelType_t) value;
- (CMsgDOTAJoinChatChannel_Builder*) clearchannel_type;
@end

@interface CMsgDOTALeaveChatChannel : PBGeneratedMessage {
@private
  BOOL hasChannelName_:1;
  NSString* channelName;
}
- (BOOL) hasChannelName;
@property (readonly, retain) NSString* channelName;

+ (CMsgDOTALeaveChatChannel*) defaultInstance;
- (CMsgDOTALeaveChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTALeaveChatChannel_Builder*) builder;
+ (CMsgDOTALeaveChatChannel_Builder*) builder;
+ (CMsgDOTALeaveChatChannel_Builder*) builderWithPrototype:(CMsgDOTALeaveChatChannel*) prototype;
- (CMsgDOTALeaveChatChannel_Builder*) toBuilder;

+ (CMsgDOTALeaveChatChannel*) parseFromData:(NSData*) data;
+ (CMsgDOTALeaveChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALeaveChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTALeaveChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTALeaveChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTALeaveChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTALeaveChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTALeaveChatChannel* _builderResult;
}

- (CMsgDOTALeaveChatChannel*) defaultInstance;

- (CMsgDOTALeaveChatChannel_Builder*) clear;
- (CMsgDOTALeaveChatChannel_Builder*) clone;

- (CMsgDOTALeaveChatChannel*) build;
- (CMsgDOTALeaveChatChannel*) buildPartial;

- (CMsgDOTALeaveChatChannel_Builder*) mergeFrom:(CMsgDOTALeaveChatChannel*) other;
- (CMsgDOTALeaveChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTALeaveChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgDOTALeaveChatChannel_Builder*) setChannelName:(NSString*) value;
- (CMsgDOTALeaveChatChannel_Builder*) clearChannelName;
@end

@interface CMsgDOTAChatMessage : PBGeneratedMessage {
@private
  BOOL hasChannelName_:1;
  BOOL hasPersonaName_:1;
  BOOL hasText_:1;
  BOOL hasSuggestInviteName_:1;
  BOOL hasAccountId_:1;
  BOOL hasTimestamp_:1;
  BOOL hasSuggestInviteAccountId_:1;
  NSString* channelName;
  NSString* personaName;
  NSString* text;
  NSString* suggestInviteName;
  uint32_t accountId;
  uint32_t timestamp;
  uint32_t suggestInviteAccountId;
}
- (BOOL) hasAccountId;
- (BOOL) hasChannelName;
- (BOOL) hasPersonaName;
- (BOOL) hasText;
- (BOOL) hasTimestamp;
- (BOOL) hasSuggestInviteAccountId;
- (BOOL) hasSuggestInviteName;
@property (readonly) uint32_t accountId;
@property (readonly, retain) NSString* channelName;
@property (readonly, retain) NSString* personaName;
@property (readonly, retain) NSString* text;
@property (readonly) uint32_t timestamp;
@property (readonly) uint32_t suggestInviteAccountId;
@property (readonly, retain) NSString* suggestInviteName;

+ (CMsgDOTAChatMessage*) defaultInstance;
- (CMsgDOTAChatMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAChatMessage_Builder*) builder;
+ (CMsgDOTAChatMessage_Builder*) builder;
+ (CMsgDOTAChatMessage_Builder*) builderWithPrototype:(CMsgDOTAChatMessage*) prototype;
- (CMsgDOTAChatMessage_Builder*) toBuilder;

+ (CMsgDOTAChatMessage*) parseFromData:(NSData*) data;
+ (CMsgDOTAChatMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAChatMessage*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAChatMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAChatMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAChatMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAChatMessage_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAChatMessage* _builderResult;
}

- (CMsgDOTAChatMessage*) defaultInstance;

- (CMsgDOTAChatMessage_Builder*) clear;
- (CMsgDOTAChatMessage_Builder*) clone;

- (CMsgDOTAChatMessage*) build;
- (CMsgDOTAChatMessage*) buildPartial;

- (CMsgDOTAChatMessage_Builder*) mergeFrom:(CMsgDOTAChatMessage*) other;
- (CMsgDOTAChatMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAChatMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTAChatMessage_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTAChatMessage_Builder*) clearAccountId;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgDOTAChatMessage_Builder*) setChannelName:(NSString*) value;
- (CMsgDOTAChatMessage_Builder*) clearChannelName;

- (BOOL) hasPersonaName;
- (NSString*) personaName;
- (CMsgDOTAChatMessage_Builder*) setPersonaName:(NSString*) value;
- (CMsgDOTAChatMessage_Builder*) clearPersonaName;

- (BOOL) hasText;
- (NSString*) text;
- (CMsgDOTAChatMessage_Builder*) setText:(NSString*) value;
- (CMsgDOTAChatMessage_Builder*) clearText;

- (BOOL) hasTimestamp;
- (uint32_t) timestamp;
- (CMsgDOTAChatMessage_Builder*) setTimestamp:(uint32_t) value;
- (CMsgDOTAChatMessage_Builder*) clearTimestamp;

- (BOOL) hasSuggestInviteAccountId;
- (uint32_t) suggestInviteAccountId;
- (CMsgDOTAChatMessage_Builder*) setSuggestInviteAccountId:(uint32_t) value;
- (CMsgDOTAChatMessage_Builder*) clearSuggestInviteAccountId;

- (BOOL) hasSuggestInviteName;
- (NSString*) suggestInviteName;
- (CMsgDOTAChatMessage_Builder*) setSuggestInviteName:(NSString*) value;
- (CMsgDOTAChatMessage_Builder*) clearSuggestInviteName;
@end

@interface CMsgDOTASetChatChannelVerbosity : PBGeneratedMessage {
@private
  PBAppendableArray * verbositiesArray;
}
@property (readonly, retain) PBArray * verbosities;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*)verbositiesAtIndex:(NSUInteger)index;

+ (CMsgDOTASetChatChannelVerbosity*) defaultInstance;
- (CMsgDOTASetChatChannelVerbosity*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTASetChatChannelVerbosity_Builder*) builder;
+ (CMsgDOTASetChatChannelVerbosity_Builder*) builder;
+ (CMsgDOTASetChatChannelVerbosity_Builder*) builderWithPrototype:(CMsgDOTASetChatChannelVerbosity*) prototype;
- (CMsgDOTASetChatChannelVerbosity_Builder*) toBuilder;

+ (CMsgDOTASetChatChannelVerbosity*) parseFromData:(NSData*) data;
+ (CMsgDOTASetChatChannelVerbosity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASetChatChannelVerbosity*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTASetChatChannelVerbosity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASetChatChannelVerbosity*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTASetChatChannelVerbosity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTASetChatChannelVerbosity_ChannelVerbosity : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  BOOL hasSuppressionFlags_:1;
  uint64_t channelId;
  uint32_t suppressionFlags;
}
- (BOOL) hasChannelId;
- (BOOL) hasSuppressionFlags;
@property (readonly) uint64_t channelId;
@property (readonly) uint32_t suppressionFlags;

+ (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) defaultInstance;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) builder;
+ (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) builder;
+ (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) builderWithPrototype:(CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) prototype;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) toBuilder;

+ (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) parseFromData:(NSData*) data;
+ (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTASetChatChannelVerbosity_ChannelVerbosity* _builderResult;
}

- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) defaultInstance;

- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) clear;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) clone;

- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) build;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) buildPartial;

- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) mergeFrom:(CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*) other;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) setChannelId:(uint64_t) value;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) clearChannelId;

- (BOOL) hasSuppressionFlags;
- (uint32_t) suppressionFlags;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) setSuppressionFlags:(uint32_t) value;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity_Builder*) clearSuppressionFlags;
@end

@interface CMsgDOTASetChatChannelVerbosity_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTASetChatChannelVerbosity* _builderResult;
}

- (CMsgDOTASetChatChannelVerbosity*) defaultInstance;

- (CMsgDOTASetChatChannelVerbosity_Builder*) clear;
- (CMsgDOTASetChatChannelVerbosity_Builder*) clone;

- (CMsgDOTASetChatChannelVerbosity*) build;
- (CMsgDOTASetChatChannelVerbosity*) buildPartial;

- (CMsgDOTASetChatChannelVerbosity_Builder*) mergeFrom:(CMsgDOTASetChatChannelVerbosity*) other;
- (CMsgDOTASetChatChannelVerbosity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTASetChatChannelVerbosity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)verbosities;
- (CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*)verbositiesAtIndex:(NSUInteger)index;
- (CMsgDOTASetChatChannelVerbosity_Builder *)addVerbosities:(CMsgDOTASetChatChannelVerbosity_ChannelVerbosity*)value;
- (CMsgDOTASetChatChannelVerbosity_Builder *)setVerbositiesArray:(NSArray *)array;
- (CMsgDOTASetChatChannelVerbosity_Builder *)setVerbositiesValues:(const CMsgDOTASetChatChannelVerbosity_ChannelVerbosity* *)values count:(NSUInteger)count;
- (CMsgDOTASetChatChannelVerbosity_Builder *)clearVerbosities;
@end

@interface CMsgDOTAChatMember : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasPersonaName_:1;
  uint64_t steamId;
  NSString* personaName;
}
- (BOOL) hasSteamId;
- (BOOL) hasPersonaName;
@property (readonly) uint64_t steamId;
@property (readonly, retain) NSString* personaName;

+ (CMsgDOTAChatMember*) defaultInstance;
- (CMsgDOTAChatMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAChatMember_Builder*) builder;
+ (CMsgDOTAChatMember_Builder*) builder;
+ (CMsgDOTAChatMember_Builder*) builderWithPrototype:(CMsgDOTAChatMember*) prototype;
- (CMsgDOTAChatMember_Builder*) toBuilder;

+ (CMsgDOTAChatMember*) parseFromData:(NSData*) data;
+ (CMsgDOTAChatMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAChatMember*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAChatMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAChatMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAChatMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAChatMember_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAChatMember* _builderResult;
}

- (CMsgDOTAChatMember*) defaultInstance;

- (CMsgDOTAChatMember_Builder*) clear;
- (CMsgDOTAChatMember_Builder*) clone;

- (CMsgDOTAChatMember*) build;
- (CMsgDOTAChatMember*) buildPartial;

- (CMsgDOTAChatMember_Builder*) mergeFrom:(CMsgDOTAChatMember*) other;
- (CMsgDOTAChatMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAChatMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgDOTAChatMember_Builder*) setSteamId:(uint64_t) value;
- (CMsgDOTAChatMember_Builder*) clearSteamId;

- (BOOL) hasPersonaName;
- (NSString*) personaName;
- (CMsgDOTAChatMember_Builder*) setPersonaName:(NSString*) value;
- (CMsgDOTAChatMember_Builder*) clearPersonaName;
@end

@interface CMsgDOTAJoinChatChannelResponse : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  BOOL hasChannelName_:1;
  BOOL hasResponse_:1;
  BOOL hasMaxMembers_:1;
  uint64_t channelId;
  NSString* channelName;
  uint32_t response;
  uint32_t maxMembers;
  PBAppendableArray * membersArray;
}
- (BOOL) hasResponse;
- (BOOL) hasChannelName;
- (BOOL) hasChannelId;
- (BOOL) hasMaxMembers;
@property (readonly) uint32_t response;
@property (readonly, retain) NSString* channelName;
@property (readonly) uint64_t channelId;
@property (readonly) uint32_t maxMembers;
@property (readonly, retain) PBArray * members;
- (CMsgDOTAChatMember*)membersAtIndex:(NSUInteger)index;

+ (CMsgDOTAJoinChatChannelResponse*) defaultInstance;
- (CMsgDOTAJoinChatChannelResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAJoinChatChannelResponse_Builder*) builder;
+ (CMsgDOTAJoinChatChannelResponse_Builder*) builder;
+ (CMsgDOTAJoinChatChannelResponse_Builder*) builderWithPrototype:(CMsgDOTAJoinChatChannelResponse*) prototype;
- (CMsgDOTAJoinChatChannelResponse_Builder*) toBuilder;

+ (CMsgDOTAJoinChatChannelResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAJoinChatChannelResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAJoinChatChannelResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAJoinChatChannelResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAJoinChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAJoinChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAJoinChatChannelResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAJoinChatChannelResponse* _builderResult;
}

- (CMsgDOTAJoinChatChannelResponse*) defaultInstance;

- (CMsgDOTAJoinChatChannelResponse_Builder*) clear;
- (CMsgDOTAJoinChatChannelResponse_Builder*) clone;

- (CMsgDOTAJoinChatChannelResponse*) build;
- (CMsgDOTAJoinChatChannelResponse*) buildPartial;

- (CMsgDOTAJoinChatChannelResponse_Builder*) mergeFrom:(CMsgDOTAJoinChatChannelResponse*) other;
- (CMsgDOTAJoinChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAJoinChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResponse;
- (uint32_t) response;
- (CMsgDOTAJoinChatChannelResponse_Builder*) setResponse:(uint32_t) value;
- (CMsgDOTAJoinChatChannelResponse_Builder*) clearResponse;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgDOTAJoinChatChannelResponse_Builder*) setChannelName:(NSString*) value;
- (CMsgDOTAJoinChatChannelResponse_Builder*) clearChannelName;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgDOTAJoinChatChannelResponse_Builder*) setChannelId:(uint64_t) value;
- (CMsgDOTAJoinChatChannelResponse_Builder*) clearChannelId;

- (BOOL) hasMaxMembers;
- (uint32_t) maxMembers;
- (CMsgDOTAJoinChatChannelResponse_Builder*) setMaxMembers:(uint32_t) value;
- (CMsgDOTAJoinChatChannelResponse_Builder*) clearMaxMembers;

- (PBAppendableArray *)members;
- (CMsgDOTAChatMember*)membersAtIndex:(NSUInteger)index;
- (CMsgDOTAJoinChatChannelResponse_Builder *)addMembers:(CMsgDOTAChatMember*)value;
- (CMsgDOTAJoinChatChannelResponse_Builder *)setMembersArray:(NSArray *)array;
- (CMsgDOTAJoinChatChannelResponse_Builder *)setMembersValues:(const CMsgDOTAChatMember* *)values count:(NSUInteger)count;
- (CMsgDOTAJoinChatChannelResponse_Builder *)clearMembers;
@end

@interface CMsgDOTAChatChannelFullUpdate : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  uint64_t channelId;
  PBAppendableArray * membersArray;
}
- (BOOL) hasChannelId;
@property (readonly) uint64_t channelId;
@property (readonly, retain) PBArray * members;
- (CMsgDOTAChatMember*)membersAtIndex:(NSUInteger)index;

+ (CMsgDOTAChatChannelFullUpdate*) defaultInstance;
- (CMsgDOTAChatChannelFullUpdate*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAChatChannelFullUpdate_Builder*) builder;
+ (CMsgDOTAChatChannelFullUpdate_Builder*) builder;
+ (CMsgDOTAChatChannelFullUpdate_Builder*) builderWithPrototype:(CMsgDOTAChatChannelFullUpdate*) prototype;
- (CMsgDOTAChatChannelFullUpdate_Builder*) toBuilder;

+ (CMsgDOTAChatChannelFullUpdate*) parseFromData:(NSData*) data;
+ (CMsgDOTAChatChannelFullUpdate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAChatChannelFullUpdate*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAChatChannelFullUpdate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAChatChannelFullUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAChatChannelFullUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAChatChannelFullUpdate_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAChatChannelFullUpdate* _builderResult;
}

- (CMsgDOTAChatChannelFullUpdate*) defaultInstance;

- (CMsgDOTAChatChannelFullUpdate_Builder*) clear;
- (CMsgDOTAChatChannelFullUpdate_Builder*) clone;

- (CMsgDOTAChatChannelFullUpdate*) build;
- (CMsgDOTAChatChannelFullUpdate*) buildPartial;

- (CMsgDOTAChatChannelFullUpdate_Builder*) mergeFrom:(CMsgDOTAChatChannelFullUpdate*) other;
- (CMsgDOTAChatChannelFullUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAChatChannelFullUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgDOTAChatChannelFullUpdate_Builder*) setChannelId:(uint64_t) value;
- (CMsgDOTAChatChannelFullUpdate_Builder*) clearChannelId;

- (PBAppendableArray *)members;
- (CMsgDOTAChatMember*)membersAtIndex:(NSUInteger)index;
- (CMsgDOTAChatChannelFullUpdate_Builder *)addMembers:(CMsgDOTAChatMember*)value;
- (CMsgDOTAChatChannelFullUpdate_Builder *)setMembersArray:(NSArray *)array;
- (CMsgDOTAChatChannelFullUpdate_Builder *)setMembersValues:(const CMsgDOTAChatMember* *)values count:(NSUInteger)count;
- (CMsgDOTAChatChannelFullUpdate_Builder *)clearMembers;
@end

@interface CMsgDOTAOtherJoinedChatChannel : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  BOOL hasSteamId_:1;
  BOOL hasPersonaName_:1;
  uint64_t channelId;
  uint64_t steamId;
  NSString* personaName;
}
- (BOOL) hasChannelId;
- (BOOL) hasPersonaName;
- (BOOL) hasSteamId;
@property (readonly) uint64_t channelId;
@property (readonly, retain) NSString* personaName;
@property (readonly) uint64_t steamId;

+ (CMsgDOTAOtherJoinedChatChannel*) defaultInstance;
- (CMsgDOTAOtherJoinedChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) builder;
+ (CMsgDOTAOtherJoinedChatChannel_Builder*) builder;
+ (CMsgDOTAOtherJoinedChatChannel_Builder*) builderWithPrototype:(CMsgDOTAOtherJoinedChatChannel*) prototype;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) toBuilder;

+ (CMsgDOTAOtherJoinedChatChannel*) parseFromData:(NSData*) data;
+ (CMsgDOTAOtherJoinedChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAOtherJoinedChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAOtherJoinedChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAOtherJoinedChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAOtherJoinedChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAOtherJoinedChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAOtherJoinedChatChannel* _builderResult;
}

- (CMsgDOTAOtherJoinedChatChannel*) defaultInstance;

- (CMsgDOTAOtherJoinedChatChannel_Builder*) clear;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) clone;

- (CMsgDOTAOtherJoinedChatChannel*) build;
- (CMsgDOTAOtherJoinedChatChannel*) buildPartial;

- (CMsgDOTAOtherJoinedChatChannel_Builder*) mergeFrom:(CMsgDOTAOtherJoinedChatChannel*) other;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) setChannelId:(uint64_t) value;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) clearChannelId;

- (BOOL) hasPersonaName;
- (NSString*) personaName;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) setPersonaName:(NSString*) value;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) clearPersonaName;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) setSteamId:(uint64_t) value;
- (CMsgDOTAOtherJoinedChatChannel_Builder*) clearSteamId;
@end

@interface CMsgDOTAOtherLeftChatChannel : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  BOOL hasSteamId_:1;
  uint64_t channelId;
  uint64_t steamId;
}
- (BOOL) hasChannelId;
- (BOOL) hasSteamId;
@property (readonly) uint64_t channelId;
@property (readonly) uint64_t steamId;

+ (CMsgDOTAOtherLeftChatChannel*) defaultInstance;
- (CMsgDOTAOtherLeftChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAOtherLeftChatChannel_Builder*) builder;
+ (CMsgDOTAOtherLeftChatChannel_Builder*) builder;
+ (CMsgDOTAOtherLeftChatChannel_Builder*) builderWithPrototype:(CMsgDOTAOtherLeftChatChannel*) prototype;
- (CMsgDOTAOtherLeftChatChannel_Builder*) toBuilder;

+ (CMsgDOTAOtherLeftChatChannel*) parseFromData:(NSData*) data;
+ (CMsgDOTAOtherLeftChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAOtherLeftChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAOtherLeftChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAOtherLeftChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAOtherLeftChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAOtherLeftChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAOtherLeftChatChannel* _builderResult;
}

- (CMsgDOTAOtherLeftChatChannel*) defaultInstance;

- (CMsgDOTAOtherLeftChatChannel_Builder*) clear;
- (CMsgDOTAOtherLeftChatChannel_Builder*) clone;

- (CMsgDOTAOtherLeftChatChannel*) build;
- (CMsgDOTAOtherLeftChatChannel*) buildPartial;

- (CMsgDOTAOtherLeftChatChannel_Builder*) mergeFrom:(CMsgDOTAOtherLeftChatChannel*) other;
- (CMsgDOTAOtherLeftChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAOtherLeftChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgDOTAOtherLeftChatChannel_Builder*) setChannelId:(uint64_t) value;
- (CMsgDOTAOtherLeftChatChannel_Builder*) clearChannelId;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgDOTAOtherLeftChatChannel_Builder*) setSteamId:(uint64_t) value;
- (CMsgDOTAOtherLeftChatChannel_Builder*) clearSteamId;
@end

@interface CMsgDOTARequestDefaultChatChannel : PBGeneratedMessage {
@private
}

+ (CMsgDOTARequestDefaultChatChannel*) defaultInstance;
- (CMsgDOTARequestDefaultChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestDefaultChatChannel_Builder*) builder;
+ (CMsgDOTARequestDefaultChatChannel_Builder*) builder;
+ (CMsgDOTARequestDefaultChatChannel_Builder*) builderWithPrototype:(CMsgDOTARequestDefaultChatChannel*) prototype;
- (CMsgDOTARequestDefaultChatChannel_Builder*) toBuilder;

+ (CMsgDOTARequestDefaultChatChannel*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestDefaultChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestDefaultChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestDefaultChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestDefaultChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestDefaultChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestDefaultChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestDefaultChatChannel* _builderResult;
}

- (CMsgDOTARequestDefaultChatChannel*) defaultInstance;

- (CMsgDOTARequestDefaultChatChannel_Builder*) clear;
- (CMsgDOTARequestDefaultChatChannel_Builder*) clone;

- (CMsgDOTARequestDefaultChatChannel*) build;
- (CMsgDOTARequestDefaultChatChannel*) buildPartial;

- (CMsgDOTARequestDefaultChatChannel_Builder*) mergeFrom:(CMsgDOTARequestDefaultChatChannel*) other;
- (CMsgDOTARequestDefaultChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestDefaultChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestDefaultChatChannelResponse : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  BOOL hasChannelName_:1;
  uint64_t channelId;
  NSString* channelName;
}
- (BOOL) hasChannelName;
- (BOOL) hasChannelId;
@property (readonly, retain) NSString* channelName;
@property (readonly) uint64_t channelId;

+ (CMsgDOTARequestDefaultChatChannelResponse*) defaultInstance;
- (CMsgDOTARequestDefaultChatChannelResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) builder;
+ (CMsgDOTARequestDefaultChatChannelResponse_Builder*) builder;
+ (CMsgDOTARequestDefaultChatChannelResponse_Builder*) builderWithPrototype:(CMsgDOTARequestDefaultChatChannelResponse*) prototype;
- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) toBuilder;

+ (CMsgDOTARequestDefaultChatChannelResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestDefaultChatChannelResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestDefaultChatChannelResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestDefaultChatChannelResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestDefaultChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestDefaultChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestDefaultChatChannelResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestDefaultChatChannelResponse* _builderResult;
}

- (CMsgDOTARequestDefaultChatChannelResponse*) defaultInstance;

- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) clear;
- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) clone;

- (CMsgDOTARequestDefaultChatChannelResponse*) build;
- (CMsgDOTARequestDefaultChatChannelResponse*) buildPartial;

- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) mergeFrom:(CMsgDOTARequestDefaultChatChannelResponse*) other;
- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) setChannelName:(NSString*) value;
- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) clearChannelName;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) setChannelId:(uint64_t) value;
- (CMsgDOTARequestDefaultChatChannelResponse_Builder*) clearChannelId;
@end

@interface CMsgDOTARequestChatChannelList : PBGeneratedMessage {
@private
}

+ (CMsgDOTARequestChatChannelList*) defaultInstance;
- (CMsgDOTARequestChatChannelList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestChatChannelList_Builder*) builder;
+ (CMsgDOTARequestChatChannelList_Builder*) builder;
+ (CMsgDOTARequestChatChannelList_Builder*) builderWithPrototype:(CMsgDOTARequestChatChannelList*) prototype;
- (CMsgDOTARequestChatChannelList_Builder*) toBuilder;

+ (CMsgDOTARequestChatChannelList*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestChatChannelList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestChatChannelList*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestChatChannelList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestChatChannelList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestChatChannelList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestChatChannelList_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestChatChannelList* _builderResult;
}

- (CMsgDOTARequestChatChannelList*) defaultInstance;

- (CMsgDOTARequestChatChannelList_Builder*) clear;
- (CMsgDOTARequestChatChannelList_Builder*) clone;

- (CMsgDOTARequestChatChannelList*) build;
- (CMsgDOTARequestChatChannelList*) buildPartial;

- (CMsgDOTARequestChatChannelList_Builder*) mergeFrom:(CMsgDOTARequestChatChannelList*) other;
- (CMsgDOTARequestChatChannelList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestChatChannelList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestChatChannelListResponse : PBGeneratedMessage {
@private
  PBAppendableArray * channelsArray;
}
@property (readonly, retain) PBArray * channels;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel*)channelsAtIndex:(NSUInteger)index;

+ (CMsgDOTARequestChatChannelListResponse*) defaultInstance;
- (CMsgDOTARequestChatChannelListResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestChatChannelListResponse_Builder*) builder;
+ (CMsgDOTARequestChatChannelListResponse_Builder*) builder;
+ (CMsgDOTARequestChatChannelListResponse_Builder*) builderWithPrototype:(CMsgDOTARequestChatChannelListResponse*) prototype;
- (CMsgDOTARequestChatChannelListResponse_Builder*) toBuilder;

+ (CMsgDOTARequestChatChannelListResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestChatChannelListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestChatChannelListResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestChatChannelListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestChatChannelListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestChatChannelListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestChatChannelListResponse_ChatChannel : PBGeneratedMessage {
@private
  BOOL hasChannelName_:1;
  BOOL hasNumMembers_:1;
  BOOL haschannel_type_:1;
  NSString* channelName;
  uint32_t numMembers;
  DOTAChatChannelType_t channel_type;
}
- (BOOL) hasChannelName;
- (BOOL) hasNumMembers;
- (BOOL) haschannel_type;
@property (readonly, retain) NSString* channelName;
@property (readonly) uint32_t numMembers;
@property (readonly) DOTAChatChannelType_t channel_type;

+ (CMsgDOTARequestChatChannelListResponse_ChatChannel*) defaultInstance;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) builder;
+ (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) builder;
+ (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) builderWithPrototype:(CMsgDOTARequestChatChannelListResponse_ChatChannel*) prototype;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) toBuilder;

+ (CMsgDOTARequestChatChannelListResponse_ChatChannel*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestChatChannelListResponse_ChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestChatChannelListResponse_ChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestChatChannelListResponse_ChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestChatChannelListResponse_ChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestChatChannelListResponse_ChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestChatChannelListResponse_ChatChannel* _builderResult;
}

- (CMsgDOTARequestChatChannelListResponse_ChatChannel*) defaultInstance;

- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) clear;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) clone;

- (CMsgDOTARequestChatChannelListResponse_ChatChannel*) build;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel*) buildPartial;

- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) mergeFrom:(CMsgDOTARequestChatChannelListResponse_ChatChannel*) other;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) setChannelName:(NSString*) value;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) clearChannelName;

- (BOOL) hasNumMembers;
- (uint32_t) numMembers;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) setNumMembers:(uint32_t) value;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) clearNumMembers;

- (BOOL) haschannel_type;
- (DOTAChatChannelType_t) channel_type;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) setchannel_type:(DOTAChatChannelType_t) value;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel_Builder*) clearchannel_type;
@end

@interface CMsgDOTARequestChatChannelListResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestChatChannelListResponse* _builderResult;
}

- (CMsgDOTARequestChatChannelListResponse*) defaultInstance;

- (CMsgDOTARequestChatChannelListResponse_Builder*) clear;
- (CMsgDOTARequestChatChannelListResponse_Builder*) clone;

- (CMsgDOTARequestChatChannelListResponse*) build;
- (CMsgDOTARequestChatChannelListResponse*) buildPartial;

- (CMsgDOTARequestChatChannelListResponse_Builder*) mergeFrom:(CMsgDOTARequestChatChannelListResponse*) other;
- (CMsgDOTARequestChatChannelListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestChatChannelListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)channels;
- (CMsgDOTARequestChatChannelListResponse_ChatChannel*)channelsAtIndex:(NSUInteger)index;
- (CMsgDOTARequestChatChannelListResponse_Builder *)addChannels:(CMsgDOTARequestChatChannelListResponse_ChatChannel*)value;
- (CMsgDOTARequestChatChannelListResponse_Builder *)setChannelsArray:(NSArray *)array;
- (CMsgDOTARequestChatChannelListResponse_Builder *)setChannelsValues:(const CMsgDOTARequestChatChannelListResponse_ChatChannel* *)values count:(NSUInteger)count;
- (CMsgDOTARequestChatChannelListResponse_Builder *)clearChannels;
@end

@interface CMsgDOTAPlayerReports : PBGeneratedMessage {
@private
  PBAppendableArray * reportsArray;
}
@property (readonly, retain) PBArray * reports;
- (CMsgDOTAPlayerReports_PlayerReport*)reportsAtIndex:(NSUInteger)index;

+ (CMsgDOTAPlayerReports*) defaultInstance;
- (CMsgDOTAPlayerReports*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAPlayerReports_Builder*) builder;
+ (CMsgDOTAPlayerReports_Builder*) builder;
+ (CMsgDOTAPlayerReports_Builder*) builderWithPrototype:(CMsgDOTAPlayerReports*) prototype;
- (CMsgDOTAPlayerReports_Builder*) toBuilder;

+ (CMsgDOTAPlayerReports*) parseFromData:(NSData*) data;
+ (CMsgDOTAPlayerReports*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerReports*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAPlayerReports*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerReports*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAPlayerReports*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAPlayerReports_PlayerReport : PBGeneratedMessage {
@private
  BOOL hasDate_:1;
  BOOL hasComment_:1;
  BOOL hasReportId_:1;
  BOOL hasReporterAccountId_:1;
  BOOL hasTargetAccountId_:1;
  BOOL hasReportFlags_:1;
  BOOL hasMatchId_:1;
  uint32_t date;
  NSString* comment;
  uint32_t reportId;
  uint32_t reporterAccountId;
  uint32_t targetAccountId;
  uint32_t reportFlags;
  uint32_t matchId;
}
- (BOOL) hasReportId;
- (BOOL) hasReporterAccountId;
- (BOOL) hasTargetAccountId;
- (BOOL) hasReportFlags;
- (BOOL) hasMatchId;
- (BOOL) hasDate;
- (BOOL) hasComment;
@property (readonly) uint32_t reportId;
@property (readonly) uint32_t reporterAccountId;
@property (readonly) uint32_t targetAccountId;
@property (readonly) uint32_t reportFlags;
@property (readonly) uint32_t matchId;
@property (readonly) uint32_t date;
@property (readonly, retain) NSString* comment;

+ (CMsgDOTAPlayerReports_PlayerReport*) defaultInstance;
- (CMsgDOTAPlayerReports_PlayerReport*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) builder;
+ (CMsgDOTAPlayerReports_PlayerReport_Builder*) builder;
+ (CMsgDOTAPlayerReports_PlayerReport_Builder*) builderWithPrototype:(CMsgDOTAPlayerReports_PlayerReport*) prototype;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) toBuilder;

+ (CMsgDOTAPlayerReports_PlayerReport*) parseFromData:(NSData*) data;
+ (CMsgDOTAPlayerReports_PlayerReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerReports_PlayerReport*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAPlayerReports_PlayerReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerReports_PlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAPlayerReports_PlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAPlayerReports_PlayerReport_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAPlayerReports_PlayerReport* _builderResult;
}

- (CMsgDOTAPlayerReports_PlayerReport*) defaultInstance;

- (CMsgDOTAPlayerReports_PlayerReport_Builder*) clear;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) clone;

- (CMsgDOTAPlayerReports_PlayerReport*) build;
- (CMsgDOTAPlayerReports_PlayerReport*) buildPartial;

- (CMsgDOTAPlayerReports_PlayerReport_Builder*) mergeFrom:(CMsgDOTAPlayerReports_PlayerReport*) other;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasReportId;
- (uint32_t) reportId;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) setReportId:(uint32_t) value;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) clearReportId;

- (BOOL) hasReporterAccountId;
- (uint32_t) reporterAccountId;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) setReporterAccountId:(uint32_t) value;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) clearReporterAccountId;

- (BOOL) hasTargetAccountId;
- (uint32_t) targetAccountId;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) setTargetAccountId:(uint32_t) value;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) clearTargetAccountId;

- (BOOL) hasReportFlags;
- (uint32_t) reportFlags;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) setReportFlags:(uint32_t) value;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) clearReportFlags;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) setMatchId:(uint32_t) value;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) clearMatchId;

- (BOOL) hasDate;
- (uint32_t) date;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) setDate:(uint32_t) value;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) clearDate;

- (BOOL) hasComment;
- (NSString*) comment;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) setComment:(NSString*) value;
- (CMsgDOTAPlayerReports_PlayerReport_Builder*) clearComment;
@end

@interface CMsgDOTAPlayerReports_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAPlayerReports* _builderResult;
}

- (CMsgDOTAPlayerReports*) defaultInstance;

- (CMsgDOTAPlayerReports_Builder*) clear;
- (CMsgDOTAPlayerReports_Builder*) clone;

- (CMsgDOTAPlayerReports*) build;
- (CMsgDOTAPlayerReports*) buildPartial;

- (CMsgDOTAPlayerReports_Builder*) mergeFrom:(CMsgDOTAPlayerReports*) other;
- (CMsgDOTAPlayerReports_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAPlayerReports_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)reports;
- (CMsgDOTAPlayerReports_PlayerReport*)reportsAtIndex:(NSUInteger)index;
- (CMsgDOTAPlayerReports_Builder *)addReports:(CMsgDOTAPlayerReports_PlayerReport*)value;
- (CMsgDOTAPlayerReports_Builder *)setReportsArray:(NSArray *)array;
- (CMsgDOTAPlayerReports_Builder *)setReportsValues:(const CMsgDOTAPlayerReports_PlayerReport* *)values count:(NSUInteger)count;
- (CMsgDOTAPlayerReports_Builder *)clearReports;
@end

@interface CMsgDOTAReportsRemainingRequest : PBGeneratedMessage {
@private
}

+ (CMsgDOTAReportsRemainingRequest*) defaultInstance;
- (CMsgDOTAReportsRemainingRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAReportsRemainingRequest_Builder*) builder;
+ (CMsgDOTAReportsRemainingRequest_Builder*) builder;
+ (CMsgDOTAReportsRemainingRequest_Builder*) builderWithPrototype:(CMsgDOTAReportsRemainingRequest*) prototype;
- (CMsgDOTAReportsRemainingRequest_Builder*) toBuilder;

+ (CMsgDOTAReportsRemainingRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTAReportsRemainingRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAReportsRemainingRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAReportsRemainingRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAReportsRemainingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAReportsRemainingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAReportsRemainingRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAReportsRemainingRequest* _builderResult;
}

- (CMsgDOTAReportsRemainingRequest*) defaultInstance;

- (CMsgDOTAReportsRemainingRequest_Builder*) clear;
- (CMsgDOTAReportsRemainingRequest_Builder*) clone;

- (CMsgDOTAReportsRemainingRequest*) build;
- (CMsgDOTAReportsRemainingRequest*) buildPartial;

- (CMsgDOTAReportsRemainingRequest_Builder*) mergeFrom:(CMsgDOTAReportsRemainingRequest*) other;
- (CMsgDOTAReportsRemainingRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAReportsRemainingRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAReportsRemainingResponse : PBGeneratedMessage {
@private
  BOOL hasNumPositiveReportsRemaining_:1;
  BOOL hasNumNegativeReportsRemaining_:1;
  BOOL hasNumPositiveReportsTotal_:1;
  BOOL hasNumNegativeReportsTotal_:1;
  uint32_t numPositiveReportsRemaining;
  uint32_t numNegativeReportsRemaining;
  uint32_t numPositiveReportsTotal;
  uint32_t numNegativeReportsTotal;
}
- (BOOL) hasNumPositiveReportsRemaining;
- (BOOL) hasNumNegativeReportsRemaining;
- (BOOL) hasNumPositiveReportsTotal;
- (BOOL) hasNumNegativeReportsTotal;
@property (readonly) uint32_t numPositiveReportsRemaining;
@property (readonly) uint32_t numNegativeReportsRemaining;
@property (readonly) uint32_t numPositiveReportsTotal;
@property (readonly) uint32_t numNegativeReportsTotal;

+ (CMsgDOTAReportsRemainingResponse*) defaultInstance;
- (CMsgDOTAReportsRemainingResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAReportsRemainingResponse_Builder*) builder;
+ (CMsgDOTAReportsRemainingResponse_Builder*) builder;
+ (CMsgDOTAReportsRemainingResponse_Builder*) builderWithPrototype:(CMsgDOTAReportsRemainingResponse*) prototype;
- (CMsgDOTAReportsRemainingResponse_Builder*) toBuilder;

+ (CMsgDOTAReportsRemainingResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAReportsRemainingResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAReportsRemainingResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAReportsRemainingResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAReportsRemainingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAReportsRemainingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAReportsRemainingResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAReportsRemainingResponse* _builderResult;
}

- (CMsgDOTAReportsRemainingResponse*) defaultInstance;

- (CMsgDOTAReportsRemainingResponse_Builder*) clear;
- (CMsgDOTAReportsRemainingResponse_Builder*) clone;

- (CMsgDOTAReportsRemainingResponse*) build;
- (CMsgDOTAReportsRemainingResponse*) buildPartial;

- (CMsgDOTAReportsRemainingResponse_Builder*) mergeFrom:(CMsgDOTAReportsRemainingResponse*) other;
- (CMsgDOTAReportsRemainingResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAReportsRemainingResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNumPositiveReportsRemaining;
- (uint32_t) numPositiveReportsRemaining;
- (CMsgDOTAReportsRemainingResponse_Builder*) setNumPositiveReportsRemaining:(uint32_t) value;
- (CMsgDOTAReportsRemainingResponse_Builder*) clearNumPositiveReportsRemaining;

- (BOOL) hasNumNegativeReportsRemaining;
- (uint32_t) numNegativeReportsRemaining;
- (CMsgDOTAReportsRemainingResponse_Builder*) setNumNegativeReportsRemaining:(uint32_t) value;
- (CMsgDOTAReportsRemainingResponse_Builder*) clearNumNegativeReportsRemaining;

- (BOOL) hasNumPositiveReportsTotal;
- (uint32_t) numPositiveReportsTotal;
- (CMsgDOTAReportsRemainingResponse_Builder*) setNumPositiveReportsTotal:(uint32_t) value;
- (CMsgDOTAReportsRemainingResponse_Builder*) clearNumPositiveReportsTotal;

- (BOOL) hasNumNegativeReportsTotal;
- (uint32_t) numNegativeReportsTotal;
- (CMsgDOTAReportsRemainingResponse_Builder*) setNumNegativeReportsTotal:(uint32_t) value;
- (CMsgDOTAReportsRemainingResponse_Builder*) clearNumNegativeReportsTotal;
@end

@interface CMsgDOTASubmitPlayerReport : PBGeneratedMessage {
@private
  BOOL hasComment_:1;
  BOOL hasTargetAccountId_:1;
  BOOL hasReportFlags_:1;
  NSString* comment;
  uint32_t targetAccountId;
  uint32_t reportFlags;
}
- (BOOL) hasTargetAccountId;
- (BOOL) hasReportFlags;
- (BOOL) hasComment;
@property (readonly) uint32_t targetAccountId;
@property (readonly) uint32_t reportFlags;
@property (readonly, retain) NSString* comment;

+ (CMsgDOTASubmitPlayerReport*) defaultInstance;
- (CMsgDOTASubmitPlayerReport*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTASubmitPlayerReport_Builder*) builder;
+ (CMsgDOTASubmitPlayerReport_Builder*) builder;
+ (CMsgDOTASubmitPlayerReport_Builder*) builderWithPrototype:(CMsgDOTASubmitPlayerReport*) prototype;
- (CMsgDOTASubmitPlayerReport_Builder*) toBuilder;

+ (CMsgDOTASubmitPlayerReport*) parseFromData:(NSData*) data;
+ (CMsgDOTASubmitPlayerReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASubmitPlayerReport*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTASubmitPlayerReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASubmitPlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTASubmitPlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTASubmitPlayerReport_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTASubmitPlayerReport* _builderResult;
}

- (CMsgDOTASubmitPlayerReport*) defaultInstance;

- (CMsgDOTASubmitPlayerReport_Builder*) clear;
- (CMsgDOTASubmitPlayerReport_Builder*) clone;

- (CMsgDOTASubmitPlayerReport*) build;
- (CMsgDOTASubmitPlayerReport*) buildPartial;

- (CMsgDOTASubmitPlayerReport_Builder*) mergeFrom:(CMsgDOTASubmitPlayerReport*) other;
- (CMsgDOTASubmitPlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTASubmitPlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTargetAccountId;
- (uint32_t) targetAccountId;
- (CMsgDOTASubmitPlayerReport_Builder*) setTargetAccountId:(uint32_t) value;
- (CMsgDOTASubmitPlayerReport_Builder*) clearTargetAccountId;

- (BOOL) hasReportFlags;
- (uint32_t) reportFlags;
- (CMsgDOTASubmitPlayerReport_Builder*) setReportFlags:(uint32_t) value;
- (CMsgDOTASubmitPlayerReport_Builder*) clearReportFlags;

- (BOOL) hasComment;
- (NSString*) comment;
- (CMsgDOTASubmitPlayerReport_Builder*) setComment:(NSString*) value;
- (CMsgDOTASubmitPlayerReport_Builder*) clearComment;
@end

@interface CMsgDOTASubmitPlayerReportResponse : PBGeneratedMessage {
@private
  BOOL hasTargetAccountId_:1;
  BOOL hasReportFlags_:1;
  BOOL hasResult_:1;
  uint32_t targetAccountId;
  uint32_t reportFlags;
  uint32_t result;
}
- (BOOL) hasTargetAccountId;
- (BOOL) hasReportFlags;
- (BOOL) hasResult;
@property (readonly) uint32_t targetAccountId;
@property (readonly) uint32_t reportFlags;
@property (readonly) uint32_t result;

+ (CMsgDOTASubmitPlayerReportResponse*) defaultInstance;
- (CMsgDOTASubmitPlayerReportResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) builder;
+ (CMsgDOTASubmitPlayerReportResponse_Builder*) builder;
+ (CMsgDOTASubmitPlayerReportResponse_Builder*) builderWithPrototype:(CMsgDOTASubmitPlayerReportResponse*) prototype;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) toBuilder;

+ (CMsgDOTASubmitPlayerReportResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTASubmitPlayerReportResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASubmitPlayerReportResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTASubmitPlayerReportResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTASubmitPlayerReportResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTASubmitPlayerReportResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTASubmitPlayerReportResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTASubmitPlayerReportResponse* _builderResult;
}

- (CMsgDOTASubmitPlayerReportResponse*) defaultInstance;

- (CMsgDOTASubmitPlayerReportResponse_Builder*) clear;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) clone;

- (CMsgDOTASubmitPlayerReportResponse*) build;
- (CMsgDOTASubmitPlayerReportResponse*) buildPartial;

- (CMsgDOTASubmitPlayerReportResponse_Builder*) mergeFrom:(CMsgDOTASubmitPlayerReportResponse*) other;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTargetAccountId;
- (uint32_t) targetAccountId;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) setTargetAccountId:(uint32_t) value;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) clearTargetAccountId;

- (BOOL) hasReportFlags;
- (uint32_t) reportFlags;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) setReportFlags:(uint32_t) value;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) clearReportFlags;

- (BOOL) hasResult;
- (uint32_t) result;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) setResult:(uint32_t) value;
- (CMsgDOTASubmitPlayerReportResponse_Builder*) clearResult;
@end

@interface CMsgDOTAReportCountsRequest : PBGeneratedMessage {
@private
  BOOL hasTargetAccountId_:1;
  uint32_t targetAccountId;
}
- (BOOL) hasTargetAccountId;
@property (readonly) uint32_t targetAccountId;

+ (CMsgDOTAReportCountsRequest*) defaultInstance;
- (CMsgDOTAReportCountsRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAReportCountsRequest_Builder*) builder;
+ (CMsgDOTAReportCountsRequest_Builder*) builder;
+ (CMsgDOTAReportCountsRequest_Builder*) builderWithPrototype:(CMsgDOTAReportCountsRequest*) prototype;
- (CMsgDOTAReportCountsRequest_Builder*) toBuilder;

+ (CMsgDOTAReportCountsRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTAReportCountsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAReportCountsRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAReportCountsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAReportCountsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAReportCountsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAReportCountsRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAReportCountsRequest* _builderResult;
}

- (CMsgDOTAReportCountsRequest*) defaultInstance;

- (CMsgDOTAReportCountsRequest_Builder*) clear;
- (CMsgDOTAReportCountsRequest_Builder*) clone;

- (CMsgDOTAReportCountsRequest*) build;
- (CMsgDOTAReportCountsRequest*) buildPartial;

- (CMsgDOTAReportCountsRequest_Builder*) mergeFrom:(CMsgDOTAReportCountsRequest*) other;
- (CMsgDOTAReportCountsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAReportCountsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTargetAccountId;
- (uint32_t) targetAccountId;
- (CMsgDOTAReportCountsRequest_Builder*) setTargetAccountId:(uint32_t) value;
- (CMsgDOTAReportCountsRequest_Builder*) clearTargetAccountId;
@end

@interface CMsgDOTAReportCountsResponse : PBGeneratedMessage {
@private
  BOOL hasTargetAccountId_:1;
  BOOL hasLeadershipCount_:1;
  BOOL hasTeachingCount_:1;
  BOOL hasFriendlyCount_:1;
  BOOL hasForgivingCount_:1;
  uint32_t targetAccountId;
  uint32_t leadershipCount;
  uint32_t teachingCount;
  uint32_t friendlyCount;
  uint32_t forgivingCount;
}
- (BOOL) hasTargetAccountId;
- (BOOL) hasLeadershipCount;
- (BOOL) hasTeachingCount;
- (BOOL) hasFriendlyCount;
- (BOOL) hasForgivingCount;
@property (readonly) uint32_t targetAccountId;
@property (readonly) uint32_t leadershipCount;
@property (readonly) uint32_t teachingCount;
@property (readonly) uint32_t friendlyCount;
@property (readonly) uint32_t forgivingCount;

+ (CMsgDOTAReportCountsResponse*) defaultInstance;
- (CMsgDOTAReportCountsResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAReportCountsResponse_Builder*) builder;
+ (CMsgDOTAReportCountsResponse_Builder*) builder;
+ (CMsgDOTAReportCountsResponse_Builder*) builderWithPrototype:(CMsgDOTAReportCountsResponse*) prototype;
- (CMsgDOTAReportCountsResponse_Builder*) toBuilder;

+ (CMsgDOTAReportCountsResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAReportCountsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAReportCountsResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAReportCountsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAReportCountsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAReportCountsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAReportCountsResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAReportCountsResponse* _builderResult;
}

- (CMsgDOTAReportCountsResponse*) defaultInstance;

- (CMsgDOTAReportCountsResponse_Builder*) clear;
- (CMsgDOTAReportCountsResponse_Builder*) clone;

- (CMsgDOTAReportCountsResponse*) build;
- (CMsgDOTAReportCountsResponse*) buildPartial;

- (CMsgDOTAReportCountsResponse_Builder*) mergeFrom:(CMsgDOTAReportCountsResponse*) other;
- (CMsgDOTAReportCountsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAReportCountsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTargetAccountId;
- (uint32_t) targetAccountId;
- (CMsgDOTAReportCountsResponse_Builder*) setTargetAccountId:(uint32_t) value;
- (CMsgDOTAReportCountsResponse_Builder*) clearTargetAccountId;

- (BOOL) hasLeadershipCount;
- (uint32_t) leadershipCount;
- (CMsgDOTAReportCountsResponse_Builder*) setLeadershipCount:(uint32_t) value;
- (CMsgDOTAReportCountsResponse_Builder*) clearLeadershipCount;

- (BOOL) hasTeachingCount;
- (uint32_t) teachingCount;
- (CMsgDOTAReportCountsResponse_Builder*) setTeachingCount:(uint32_t) value;
- (CMsgDOTAReportCountsResponse_Builder*) clearTeachingCount;

- (BOOL) hasFriendlyCount;
- (uint32_t) friendlyCount;
- (CMsgDOTAReportCountsResponse_Builder*) setFriendlyCount:(uint32_t) value;
- (CMsgDOTAReportCountsResponse_Builder*) clearFriendlyCount;

- (BOOL) hasForgivingCount;
- (uint32_t) forgivingCount;
- (CMsgDOTAReportCountsResponse_Builder*) setForgivingCount:(uint32_t) value;
- (CMsgDOTAReportCountsResponse_Builder*) clearForgivingCount;
@end

@interface CMsgDOTARequestPlayerResources : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasPlayerId_:1;
  uint64_t steamId;
  uint32_t playerId;
}
- (BOOL) hasSteamId;
- (BOOL) hasPlayerId;
@property (readonly) uint64_t steamId;
@property (readonly) uint32_t playerId;

+ (CMsgDOTARequestPlayerResources*) defaultInstance;
- (CMsgDOTARequestPlayerResources*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestPlayerResources_Builder*) builder;
+ (CMsgDOTARequestPlayerResources_Builder*) builder;
+ (CMsgDOTARequestPlayerResources_Builder*) builderWithPrototype:(CMsgDOTARequestPlayerResources*) prototype;
- (CMsgDOTARequestPlayerResources_Builder*) toBuilder;

+ (CMsgDOTARequestPlayerResources*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestPlayerResources*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestPlayerResources*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestPlayerResources*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestPlayerResources*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestPlayerResources*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestPlayerResources_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestPlayerResources* _builderResult;
}

- (CMsgDOTARequestPlayerResources*) defaultInstance;

- (CMsgDOTARequestPlayerResources_Builder*) clear;
- (CMsgDOTARequestPlayerResources_Builder*) clone;

- (CMsgDOTARequestPlayerResources*) build;
- (CMsgDOTARequestPlayerResources*) buildPartial;

- (CMsgDOTARequestPlayerResources_Builder*) mergeFrom:(CMsgDOTARequestPlayerResources*) other;
- (CMsgDOTARequestPlayerResources_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestPlayerResources_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgDOTARequestPlayerResources_Builder*) setSteamId:(uint64_t) value;
- (CMsgDOTARequestPlayerResources_Builder*) clearSteamId;

- (BOOL) hasPlayerId;
- (uint32_t) playerId;
- (CMsgDOTARequestPlayerResources_Builder*) setPlayerId:(uint32_t) value;
- (CMsgDOTARequestPlayerResources_Builder*) clearPlayerId;
@end

@interface CMsgDOTARequestPlayerResourcesResponse : PBGeneratedMessage {
@private
  BOOL hasPreventTextChat_:1;
  BOOL hasPreventVoiceChat_:1;
  BOOL hasMatchMakingBan_:1;
  BOOL hasSteamId_:1;
  BOOL hasRank_:1;
  BOOL hasPlayerId_:1;
  BOOL preventTextChat_:1;
  BOOL preventVoiceChat_:1;
  BOOL matchMakingBan_:1;
  uint64_t steamId;
  uint32_t rank;
  uint32_t playerId;
}
- (BOOL) hasSteamId;
- (BOOL) hasRank;
- (BOOL) hasPlayerId;
- (BOOL) hasPreventTextChat;
- (BOOL) hasPreventVoiceChat;
- (BOOL) hasMatchMakingBan;
@property (readonly) uint64_t steamId;
@property (readonly) uint32_t rank;
@property (readonly) uint32_t playerId;
- (BOOL) preventTextChat;
- (BOOL) preventVoiceChat;
- (BOOL) matchMakingBan;

+ (CMsgDOTARequestPlayerResourcesResponse*) defaultInstance;
- (CMsgDOTARequestPlayerResourcesResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) builder;
+ (CMsgDOTARequestPlayerResourcesResponse_Builder*) builder;
+ (CMsgDOTARequestPlayerResourcesResponse_Builder*) builderWithPrototype:(CMsgDOTARequestPlayerResourcesResponse*) prototype;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) toBuilder;

+ (CMsgDOTARequestPlayerResourcesResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestPlayerResourcesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestPlayerResourcesResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestPlayerResourcesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestPlayerResourcesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestPlayerResourcesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestPlayerResourcesResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestPlayerResourcesResponse* _builderResult;
}

- (CMsgDOTARequestPlayerResourcesResponse*) defaultInstance;

- (CMsgDOTARequestPlayerResourcesResponse_Builder*) clear;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) clone;

- (CMsgDOTARequestPlayerResourcesResponse*) build;
- (CMsgDOTARequestPlayerResourcesResponse*) buildPartial;

- (CMsgDOTARequestPlayerResourcesResponse_Builder*) mergeFrom:(CMsgDOTARequestPlayerResourcesResponse*) other;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) setSteamId:(uint64_t) value;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) clearSteamId;

- (BOOL) hasRank;
- (uint32_t) rank;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) setRank:(uint32_t) value;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) clearRank;

- (BOOL) hasPlayerId;
- (uint32_t) playerId;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) setPlayerId:(uint32_t) value;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) clearPlayerId;

- (BOOL) hasPreventTextChat;
- (BOOL) preventTextChat;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) setPreventTextChat:(BOOL) value;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) clearPreventTextChat;

- (BOOL) hasPreventVoiceChat;
- (BOOL) preventVoiceChat;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) setPreventVoiceChat:(BOOL) value;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) clearPreventVoiceChat;

- (BOOL) hasMatchMakingBan;
- (BOOL) matchMakingBan;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) setMatchMakingBan:(BOOL) value;
- (CMsgDOTARequestPlayerResourcesResponse_Builder*) clearMatchMakingBan;
@end

@interface CMsgDOTAKickedFromMatchmakingQueue : PBGeneratedMessage {
@private
  BOOL hasmatch_type_:1;
  MatchType match_type;
}
- (BOOL) hasmatch_type;
@property (readonly) MatchType match_type;

+ (CMsgDOTAKickedFromMatchmakingQueue*) defaultInstance;
- (CMsgDOTAKickedFromMatchmakingQueue*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAKickedFromMatchmakingQueue_Builder*) builder;
+ (CMsgDOTAKickedFromMatchmakingQueue_Builder*) builder;
+ (CMsgDOTAKickedFromMatchmakingQueue_Builder*) builderWithPrototype:(CMsgDOTAKickedFromMatchmakingQueue*) prototype;
- (CMsgDOTAKickedFromMatchmakingQueue_Builder*) toBuilder;

+ (CMsgDOTAKickedFromMatchmakingQueue*) parseFromData:(NSData*) data;
+ (CMsgDOTAKickedFromMatchmakingQueue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAKickedFromMatchmakingQueue*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAKickedFromMatchmakingQueue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAKickedFromMatchmakingQueue*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAKickedFromMatchmakingQueue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAKickedFromMatchmakingQueue_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAKickedFromMatchmakingQueue* _builderResult;
}

- (CMsgDOTAKickedFromMatchmakingQueue*) defaultInstance;

- (CMsgDOTAKickedFromMatchmakingQueue_Builder*) clear;
- (CMsgDOTAKickedFromMatchmakingQueue_Builder*) clone;

- (CMsgDOTAKickedFromMatchmakingQueue*) build;
- (CMsgDOTAKickedFromMatchmakingQueue*) buildPartial;

- (CMsgDOTAKickedFromMatchmakingQueue_Builder*) mergeFrom:(CMsgDOTAKickedFromMatchmakingQueue*) other;
- (CMsgDOTAKickedFromMatchmakingQueue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAKickedFromMatchmakingQueue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasmatch_type;
- (MatchType) match_type;
- (CMsgDOTAKickedFromMatchmakingQueue_Builder*) setmatch_type:(MatchType) value;
- (CMsgDOTAKickedFromMatchmakingQueue_Builder*) clearmatch_type;
@end

@interface CMsgDOTARequestSaveGames : PBGeneratedMessage {
@private
  BOOL hasServerRegion_:1;
  uint32_t serverRegion;
}
- (BOOL) hasServerRegion;
@property (readonly) uint32_t serverRegion;

+ (CMsgDOTARequestSaveGames*) defaultInstance;
- (CMsgDOTARequestSaveGames*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestSaveGames_Builder*) builder;
+ (CMsgDOTARequestSaveGames_Builder*) builder;
+ (CMsgDOTARequestSaveGames_Builder*) builderWithPrototype:(CMsgDOTARequestSaveGames*) prototype;
- (CMsgDOTARequestSaveGames_Builder*) toBuilder;

+ (CMsgDOTARequestSaveGames*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestSaveGames*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGames*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestSaveGames*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGames*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestSaveGames*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestSaveGames_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestSaveGames* _builderResult;
}

- (CMsgDOTARequestSaveGames*) defaultInstance;

- (CMsgDOTARequestSaveGames_Builder*) clear;
- (CMsgDOTARequestSaveGames_Builder*) clone;

- (CMsgDOTARequestSaveGames*) build;
- (CMsgDOTARequestSaveGames*) buildPartial;

- (CMsgDOTARequestSaveGames_Builder*) mergeFrom:(CMsgDOTARequestSaveGames*) other;
- (CMsgDOTARequestSaveGames_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestSaveGames_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasServerRegion;
- (uint32_t) serverRegion;
- (CMsgDOTARequestSaveGames_Builder*) setServerRegion:(uint32_t) value;
- (CMsgDOTARequestSaveGames_Builder*) clearServerRegion;
@end

@interface CMsgDOTARequestSaveGamesServer : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  uint64_t steamId;
}
- (BOOL) hasSteamId;
@property (readonly) uint64_t steamId;

+ (CMsgDOTARequestSaveGamesServer*) defaultInstance;
- (CMsgDOTARequestSaveGamesServer*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestSaveGamesServer_Builder*) builder;
+ (CMsgDOTARequestSaveGamesServer_Builder*) builder;
+ (CMsgDOTARequestSaveGamesServer_Builder*) builderWithPrototype:(CMsgDOTARequestSaveGamesServer*) prototype;
- (CMsgDOTARequestSaveGamesServer_Builder*) toBuilder;

+ (CMsgDOTARequestSaveGamesServer*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestSaveGamesServer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesServer*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestSaveGamesServer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesServer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestSaveGamesServer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestSaveGamesServer_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestSaveGamesServer* _builderResult;
}

- (CMsgDOTARequestSaveGamesServer*) defaultInstance;

- (CMsgDOTARequestSaveGamesServer_Builder*) clear;
- (CMsgDOTARequestSaveGamesServer_Builder*) clone;

- (CMsgDOTARequestSaveGamesServer*) build;
- (CMsgDOTARequestSaveGamesServer*) buildPartial;

- (CMsgDOTARequestSaveGamesServer_Builder*) mergeFrom:(CMsgDOTARequestSaveGamesServer*) other;
- (CMsgDOTARequestSaveGamesServer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestSaveGamesServer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgDOTARequestSaveGamesServer_Builder*) setSteamId:(uint64_t) value;
- (CMsgDOTARequestSaveGamesServer_Builder*) clearSteamId;
@end

@interface CMsgDOTARequestSaveGamesResponse : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  uint64_t steamId;
  PBAppendableArray * saveGamesArray;
}
- (BOOL) hasSteamId;
@property (readonly) uint64_t steamId;
@property (readonly, retain) PBArray * saveGames;
- (CMsgDOTARequestSaveGamesResponse_SaveGame*)saveGamesAtIndex:(NSUInteger)index;

+ (CMsgDOTARequestSaveGamesResponse*) defaultInstance;
- (CMsgDOTARequestSaveGamesResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestSaveGamesResponse_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_Builder*) builderWithPrototype:(CMsgDOTARequestSaveGamesResponse*) prototype;
- (CMsgDOTARequestSaveGamesResponse_Builder*) toBuilder;

+ (CMsgDOTARequestSaveGamesResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestSaveGamesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestSaveGamesResponse_SaveGame : PBGeneratedMessage {
@private
  BOOL hasLobbyId_:1;
  BOOL hasSaveTime_:1;
  uint64_t lobbyId;
  uint32_t saveTime;
  PBAppendableArray * playersArray;
  PBAppendableArray * saveInstancesArray;
}
- (BOOL) hasLobbyId;
- (BOOL) hasSaveTime;
@property (readonly) uint64_t lobbyId;
@property (readonly) uint32_t saveTime;
@property (readonly, retain) PBArray * players;
@property (readonly, retain) PBArray * saveInstances;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*)playersAtIndex:(NSUInteger)index;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*)saveInstancesAtIndex:(NSUInteger)index;

+ (CMsgDOTARequestSaveGamesResponse_SaveGame*) defaultInstance;
- (CMsgDOTARequestSaveGamesResponse_SaveGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) builderWithPrototype:(CMsgDOTARequestSaveGamesResponse_SaveGame*) prototype;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) toBuilder;

+ (CMsgDOTARequestSaveGamesResponse_SaveGame*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestSaveGamesResponse_SaveGame_Player : PBGeneratedMessage {
@private
  BOOL hasName_:1;
  BOOL hasHero_:1;
  BOOL hasteam_:1;
  NSString* name;
  NSString* hero;
  DOTA_GC_TEAM team;
}
- (BOOL) hasteam;
- (BOOL) hasName;
- (BOOL) hasHero;
@property (readonly) DOTA_GC_TEAM team;
@property (readonly, retain) NSString* name;
@property (readonly, retain) NSString* hero;

+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) defaultInstance;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) builderWithPrototype:(CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) prototype;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) toBuilder;

+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestSaveGamesResponse_SaveGame_Player* _builderResult;
}

- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) defaultInstance;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) clear;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) clone;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) build;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) buildPartial;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) mergeFrom:(CMsgDOTARequestSaveGamesResponse_SaveGame_Player*) other;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasteam;
- (DOTA_GC_TEAM) team;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) setteam:(DOTA_GC_TEAM) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) clearteam;

- (BOOL) hasName;
- (NSString*) name;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) setName:(NSString*) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) clearName;

- (BOOL) hasHero;
- (NSString*) hero;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) setHero:(NSString*) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player_Builder*) clearHero;
@end

@interface CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance : PBGeneratedMessage {
@private
  BOOL hasSaveNumber_:1;
  BOOL hasGameTime_:1;
  BOOL hasTeam1Score_:1;
  BOOL hasTeam2Score_:1;
  BOOL hasSaveId_:1;
  uint32_t saveNumber;
  uint32_t gameTime;
  uint32_t team1Score;
  uint32_t team2Score;
  uint32_t saveId;
  PBAppendableArray * playerPositionsArray;
}
- (BOOL) hasSaveNumber;
- (BOOL) hasGameTime;
- (BOOL) hasTeam1Score;
- (BOOL) hasTeam2Score;
- (BOOL) hasSaveId;
@property (readonly) uint32_t saveNumber;
@property (readonly) uint32_t gameTime;
@property (readonly) uint32_t team1Score;
@property (readonly) uint32_t team2Score;
@property (readonly, retain) PBArray * playerPositions;
@property (readonly) uint32_t saveId;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*)playerPositionsAtIndex:(NSUInteger)index;

+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) defaultInstance;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) builderWithPrototype:(CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) prototype;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) toBuilder;

+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions : PBGeneratedMessage {
@private
  BOOL hasX_:1;
  BOOL hasY_:1;
  Float32 x;
  Float32 y;
}
- (BOOL) hasX;
- (BOOL) hasY;
@property (readonly) Float32 x;
@property (readonly) Float32 y;

+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) defaultInstance;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) builder;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) builderWithPrototype:(CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) prototype;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) toBuilder;

+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions* _builderResult;
}

- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) defaultInstance;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) clear;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) clone;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) build;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) buildPartial;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) mergeFrom:(CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*) other;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasX;
- (Float32) x;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) setX:(Float32) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) clearX;

- (BOOL) hasY;
- (Float32) y;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) setY:(Float32) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions_Builder*) clearY;
@end

@interface CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance* _builderResult;
}

- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) defaultInstance;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) clear;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) clone;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) build;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) buildPartial;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) mergeFrom:(CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*) other;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSaveNumber;
- (uint32_t) saveNumber;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) setSaveNumber:(uint32_t) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) clearSaveNumber;

- (BOOL) hasGameTime;
- (uint32_t) gameTime;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) setGameTime:(uint32_t) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) clearGameTime;

- (BOOL) hasTeam1Score;
- (uint32_t) team1Score;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) setTeam1Score:(uint32_t) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) clearTeam1Score;

- (BOOL) hasTeam2Score;
- (uint32_t) team2Score;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) setTeam2Score:(uint32_t) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) clearTeam2Score;

- (PBAppendableArray *)playerPositions;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*)playerPositionsAtIndex:(NSUInteger)index;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder *)addPlayerPositions:(CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions*)value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder *)setPlayerPositionsArray:(NSArray *)array;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder *)setPlayerPositionsValues:(const CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_PlayerPositions* *)values count:(NSUInteger)count;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder *)clearPlayerPositions;

- (BOOL) hasSaveId;
- (uint32_t) saveId;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) setSaveId:(uint32_t) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance_Builder*) clearSaveId;
@end

@interface CMsgDOTARequestSaveGamesResponse_SaveGame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestSaveGamesResponse_SaveGame* _builderResult;
}

- (CMsgDOTARequestSaveGamesResponse_SaveGame*) defaultInstance;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) clear;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) clone;

- (CMsgDOTARequestSaveGamesResponse_SaveGame*) build;
- (CMsgDOTARequestSaveGamesResponse_SaveGame*) buildPartial;

- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) mergeFrom:(CMsgDOTARequestSaveGamesResponse_SaveGame*) other;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) setLobbyId:(uint64_t) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) clearLobbyId;

- (BOOL) hasSaveTime;
- (uint32_t) saveTime;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) setSaveTime:(uint32_t) value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder*) clearSaveTime;

- (PBAppendableArray *)players;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Player*)playersAtIndex:(NSUInteger)index;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder *)addPlayers:(CMsgDOTARequestSaveGamesResponse_SaveGame_Player*)value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder *)setPlayersValues:(const CMsgDOTARequestSaveGamesResponse_SaveGame_Player* *)values count:(NSUInteger)count;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder *)clearPlayers;

- (PBAppendableArray *)saveInstances;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*)saveInstancesAtIndex:(NSUInteger)index;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder *)addSaveInstances:(CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance*)value;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder *)setSaveInstancesArray:(NSArray *)array;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder *)setSaveInstancesValues:(const CMsgDOTARequestSaveGamesResponse_SaveGame_SaveInstance* *)values count:(NSUInteger)count;
- (CMsgDOTARequestSaveGamesResponse_SaveGame_Builder *)clearSaveInstances;
@end

@interface CMsgDOTARequestSaveGamesResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestSaveGamesResponse* _builderResult;
}

- (CMsgDOTARequestSaveGamesResponse*) defaultInstance;

- (CMsgDOTARequestSaveGamesResponse_Builder*) clear;
- (CMsgDOTARequestSaveGamesResponse_Builder*) clone;

- (CMsgDOTARequestSaveGamesResponse*) build;
- (CMsgDOTARequestSaveGamesResponse*) buildPartial;

- (CMsgDOTARequestSaveGamesResponse_Builder*) mergeFrom:(CMsgDOTARequestSaveGamesResponse*) other;
- (CMsgDOTARequestSaveGamesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestSaveGamesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgDOTARequestSaveGamesResponse_Builder*) setSteamId:(uint64_t) value;
- (CMsgDOTARequestSaveGamesResponse_Builder*) clearSteamId;

- (PBAppendableArray *)saveGames;
- (CMsgDOTARequestSaveGamesResponse_SaveGame*)saveGamesAtIndex:(NSUInteger)index;
- (CMsgDOTARequestSaveGamesResponse_Builder *)addSaveGames:(CMsgDOTARequestSaveGamesResponse_SaveGame*)value;
- (CMsgDOTARequestSaveGamesResponse_Builder *)setSaveGamesArray:(NSArray *)array;
- (CMsgDOTARequestSaveGamesResponse_Builder *)setSaveGamesValues:(const CMsgDOTARequestSaveGamesResponse_SaveGame* *)values count:(NSUInteger)count;
- (CMsgDOTARequestSaveGamesResponse_Builder *)clearSaveGames;
@end

@interface CMsgDOTAPlayerFailedToConnect : PBGeneratedMessage {
@private
  PBAppendableArray * failedLoadersArray;
  PBAppendableArray * abandonedLoadersArray;
}
@property (readonly, retain) PBArray * failedLoaders;
@property (readonly, retain) PBArray * abandonedLoaders;
- (uint64_t)failedLoadersAtIndex:(NSUInteger)index;
- (uint64_t)abandonedLoadersAtIndex:(NSUInteger)index;

+ (CMsgDOTAPlayerFailedToConnect*) defaultInstance;
- (CMsgDOTAPlayerFailedToConnect*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAPlayerFailedToConnect_Builder*) builder;
+ (CMsgDOTAPlayerFailedToConnect_Builder*) builder;
+ (CMsgDOTAPlayerFailedToConnect_Builder*) builderWithPrototype:(CMsgDOTAPlayerFailedToConnect*) prototype;
- (CMsgDOTAPlayerFailedToConnect_Builder*) toBuilder;

+ (CMsgDOTAPlayerFailedToConnect*) parseFromData:(NSData*) data;
+ (CMsgDOTAPlayerFailedToConnect*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerFailedToConnect*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAPlayerFailedToConnect*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerFailedToConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAPlayerFailedToConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAPlayerFailedToConnect_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAPlayerFailedToConnect* _builderResult;
}

- (CMsgDOTAPlayerFailedToConnect*) defaultInstance;

- (CMsgDOTAPlayerFailedToConnect_Builder*) clear;
- (CMsgDOTAPlayerFailedToConnect_Builder*) clone;

- (CMsgDOTAPlayerFailedToConnect*) build;
- (CMsgDOTAPlayerFailedToConnect*) buildPartial;

- (CMsgDOTAPlayerFailedToConnect_Builder*) mergeFrom:(CMsgDOTAPlayerFailedToConnect*) other;
- (CMsgDOTAPlayerFailedToConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAPlayerFailedToConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)failedLoaders;
- (uint64_t)failedLoadersAtIndex:(NSUInteger)index;
- (CMsgDOTAPlayerFailedToConnect_Builder *)addFailedLoaders:(uint64_t)value;
- (CMsgDOTAPlayerFailedToConnect_Builder *)setFailedLoadersArray:(NSArray *)array;
- (CMsgDOTAPlayerFailedToConnect_Builder *)setFailedLoadersValues:(const uint64_t *)values count:(NSUInteger)count;
- (CMsgDOTAPlayerFailedToConnect_Builder *)clearFailedLoaders;

- (PBAppendableArray *)abandonedLoaders;
- (uint64_t)abandonedLoadersAtIndex:(NSUInteger)index;
- (CMsgDOTAPlayerFailedToConnect_Builder *)addAbandonedLoaders:(uint64_t)value;
- (CMsgDOTAPlayerFailedToConnect_Builder *)setAbandonedLoadersArray:(NSArray *)array;
- (CMsgDOTAPlayerFailedToConnect_Builder *)setAbandonedLoadersValues:(const uint64_t *)values count:(NSUInteger)count;
- (CMsgDOTAPlayerFailedToConnect_Builder *)clearAbandonedLoaders;
@end

@interface CMsgGCToRelayConnect : PBGeneratedMessage {
@private
  BOOL hasGameServerSteamId_:1;
  BOOL hasTvUniqueSecretCode_:1;
  BOOL hasSourceTvPublicAddr_:1;
  BOOL hasSourceTvPrivateAddr_:1;
  BOOL hasSourceTvPort_:1;
  BOOL hasParentCount_:1;
  uint64_t gameServerSteamId;
  uint64_t tvUniqueSecretCode;
  uint32_t sourceTvPublicAddr;
  uint32_t sourceTvPrivateAddr;
  uint32_t sourceTvPort;
  uint32_t parentCount;
}
- (BOOL) hasSourceTvPublicAddr;
- (BOOL) hasSourceTvPrivateAddr;
- (BOOL) hasSourceTvPort;
- (BOOL) hasGameServerSteamId;
- (BOOL) hasParentCount;
- (BOOL) hasTvUniqueSecretCode;
@property (readonly) uint32_t sourceTvPublicAddr;
@property (readonly) uint32_t sourceTvPrivateAddr;
@property (readonly) uint32_t sourceTvPort;
@property (readonly) uint64_t gameServerSteamId;
@property (readonly) uint32_t parentCount;
@property (readonly) uint64_t tvUniqueSecretCode;

+ (CMsgGCToRelayConnect*) defaultInstance;
- (CMsgGCToRelayConnect*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGCToRelayConnect_Builder*) builder;
+ (CMsgGCToRelayConnect_Builder*) builder;
+ (CMsgGCToRelayConnect_Builder*) builderWithPrototype:(CMsgGCToRelayConnect*) prototype;
- (CMsgGCToRelayConnect_Builder*) toBuilder;

+ (CMsgGCToRelayConnect*) parseFromData:(NSData*) data;
+ (CMsgGCToRelayConnect*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCToRelayConnect*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGCToRelayConnect*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCToRelayConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGCToRelayConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGCToRelayConnect_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGCToRelayConnect* _builderResult;
}

- (CMsgGCToRelayConnect*) defaultInstance;

- (CMsgGCToRelayConnect_Builder*) clear;
- (CMsgGCToRelayConnect_Builder*) clone;

- (CMsgGCToRelayConnect*) build;
- (CMsgGCToRelayConnect*) buildPartial;

- (CMsgGCToRelayConnect_Builder*) mergeFrom:(CMsgGCToRelayConnect*) other;
- (CMsgGCToRelayConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGCToRelayConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSourceTvPublicAddr;
- (uint32_t) sourceTvPublicAddr;
- (CMsgGCToRelayConnect_Builder*) setSourceTvPublicAddr:(uint32_t) value;
- (CMsgGCToRelayConnect_Builder*) clearSourceTvPublicAddr;

- (BOOL) hasSourceTvPrivateAddr;
- (uint32_t) sourceTvPrivateAddr;
- (CMsgGCToRelayConnect_Builder*) setSourceTvPrivateAddr:(uint32_t) value;
- (CMsgGCToRelayConnect_Builder*) clearSourceTvPrivateAddr;

- (BOOL) hasSourceTvPort;
- (uint32_t) sourceTvPort;
- (CMsgGCToRelayConnect_Builder*) setSourceTvPort:(uint32_t) value;
- (CMsgGCToRelayConnect_Builder*) clearSourceTvPort;

- (BOOL) hasGameServerSteamId;
- (uint64_t) gameServerSteamId;
- (CMsgGCToRelayConnect_Builder*) setGameServerSteamId:(uint64_t) value;
- (CMsgGCToRelayConnect_Builder*) clearGameServerSteamId;

- (BOOL) hasParentCount;
- (uint32_t) parentCount;
- (CMsgGCToRelayConnect_Builder*) setParentCount:(uint32_t) value;
- (CMsgGCToRelayConnect_Builder*) clearParentCount;

- (BOOL) hasTvUniqueSecretCode;
- (uint64_t) tvUniqueSecretCode;
- (CMsgGCToRelayConnect_Builder*) setTvUniqueSecretCode:(uint64_t) value;
- (CMsgGCToRelayConnect_Builder*) clearTvUniqueSecretCode;
@end

@interface CMsgGCToRelayConnectResponse : PBGeneratedMessage {
@private
}

+ (CMsgGCToRelayConnectResponse*) defaultInstance;
- (CMsgGCToRelayConnectResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGCToRelayConnectResponse_Builder*) builder;
+ (CMsgGCToRelayConnectResponse_Builder*) builder;
+ (CMsgGCToRelayConnectResponse_Builder*) builderWithPrototype:(CMsgGCToRelayConnectResponse*) prototype;
- (CMsgGCToRelayConnectResponse_Builder*) toBuilder;

+ (CMsgGCToRelayConnectResponse*) parseFromData:(NSData*) data;
+ (CMsgGCToRelayConnectResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCToRelayConnectResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGCToRelayConnectResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCToRelayConnectResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGCToRelayConnectResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGCToRelayConnectResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGCToRelayConnectResponse* _builderResult;
}

- (CMsgGCToRelayConnectResponse*) defaultInstance;

- (CMsgGCToRelayConnectResponse_Builder*) clear;
- (CMsgGCToRelayConnectResponse_Builder*) clone;

- (CMsgGCToRelayConnectResponse*) build;
- (CMsgGCToRelayConnectResponse*) buildPartial;

- (CMsgGCToRelayConnectResponse_Builder*) mergeFrom:(CMsgGCToRelayConnectResponse*) other;
- (CMsgGCToRelayConnectResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGCToRelayConnectResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgWatchGame : PBGeneratedMessage {
@private
  BOOL hasLobbyId_:1;
  BOOL hasServerSteamid_:1;
  BOOL hasWatchServerSteamid_:1;
  BOOL hasClientVersion_:1;
  uint64_t lobbyId;
  uint64_t serverSteamid;
  uint64_t watchServerSteamid;
  uint32_t clientVersion;
}
- (BOOL) hasServerSteamid;
- (BOOL) hasClientVersion;
- (BOOL) hasWatchServerSteamid;
- (BOOL) hasLobbyId;
@property (readonly) uint64_t serverSteamid;
@property (readonly) uint32_t clientVersion;
@property (readonly) uint64_t watchServerSteamid;
@property (readonly) uint64_t lobbyId;

+ (CMsgWatchGame*) defaultInstance;
- (CMsgWatchGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgWatchGame_Builder*) builder;
+ (CMsgWatchGame_Builder*) builder;
+ (CMsgWatchGame_Builder*) builderWithPrototype:(CMsgWatchGame*) prototype;
- (CMsgWatchGame_Builder*) toBuilder;

+ (CMsgWatchGame*) parseFromData:(NSData*) data;
+ (CMsgWatchGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgWatchGame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgWatchGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgWatchGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgWatchGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgWatchGame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgWatchGame* _builderResult;
}

- (CMsgWatchGame*) defaultInstance;

- (CMsgWatchGame_Builder*) clear;
- (CMsgWatchGame_Builder*) clone;

- (CMsgWatchGame*) build;
- (CMsgWatchGame*) buildPartial;

- (CMsgWatchGame_Builder*) mergeFrom:(CMsgWatchGame*) other;
- (CMsgWatchGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgWatchGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasServerSteamid;
- (uint64_t) serverSteamid;
- (CMsgWatchGame_Builder*) setServerSteamid:(uint64_t) value;
- (CMsgWatchGame_Builder*) clearServerSteamid;

- (BOOL) hasClientVersion;
- (uint32_t) clientVersion;
- (CMsgWatchGame_Builder*) setClientVersion:(uint32_t) value;
- (CMsgWatchGame_Builder*) clearClientVersion;

- (BOOL) hasWatchServerSteamid;
- (uint64_t) watchServerSteamid;
- (CMsgWatchGame_Builder*) setWatchServerSteamid:(uint64_t) value;
- (CMsgWatchGame_Builder*) clearWatchServerSteamid;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgWatchGame_Builder*) setLobbyId:(uint64_t) value;
- (CMsgWatchGame_Builder*) clearLobbyId;
@end

@interface CMsgCancelWatchGame : PBGeneratedMessage {
@private
}

+ (CMsgCancelWatchGame*) defaultInstance;
- (CMsgCancelWatchGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgCancelWatchGame_Builder*) builder;
+ (CMsgCancelWatchGame_Builder*) builder;
+ (CMsgCancelWatchGame_Builder*) builderWithPrototype:(CMsgCancelWatchGame*) prototype;
- (CMsgCancelWatchGame_Builder*) toBuilder;

+ (CMsgCancelWatchGame*) parseFromData:(NSData*) data;
+ (CMsgCancelWatchGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCancelWatchGame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgCancelWatchGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCancelWatchGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgCancelWatchGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgCancelWatchGame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgCancelWatchGame* _builderResult;
}

- (CMsgCancelWatchGame*) defaultInstance;

- (CMsgCancelWatchGame_Builder*) clear;
- (CMsgCancelWatchGame_Builder*) clone;

- (CMsgCancelWatchGame*) build;
- (CMsgCancelWatchGame*) buildPartial;

- (CMsgCancelWatchGame_Builder*) mergeFrom:(CMsgCancelWatchGame*) other;
- (CMsgCancelWatchGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgCancelWatchGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgWatchGameResponse : PBGeneratedMessage {
@private
  BOOL hasGameServerSteamid_:1;
  BOOL hasWatchServerSteamid_:1;
  BOOL hasWatchTvUniqueSecretCode_:1;
  BOOL hasSourceTvPublicAddr_:1;
  BOOL hasSourceTvPrivateAddr_:1;
  BOOL hasSourceTvPort_:1;
  BOOL haswatch_game_result_:1;
  uint64_t gameServerSteamid;
  uint64_t watchServerSteamid;
  uint64_t watchTvUniqueSecretCode;
  uint32_t sourceTvPublicAddr;
  uint32_t sourceTvPrivateAddr;
  uint32_t sourceTvPort;
  CMsgWatchGameResponse_WatchGameResult watch_game_result;
}
- (BOOL) haswatch_game_result;
- (BOOL) hasSourceTvPublicAddr;
- (BOOL) hasSourceTvPrivateAddr;
- (BOOL) hasSourceTvPort;
- (BOOL) hasGameServerSteamid;
- (BOOL) hasWatchServerSteamid;
- (BOOL) hasWatchTvUniqueSecretCode;
@property (readonly) CMsgWatchGameResponse_WatchGameResult watch_game_result;
@property (readonly) uint32_t sourceTvPublicAddr;
@property (readonly) uint32_t sourceTvPrivateAddr;
@property (readonly) uint32_t sourceTvPort;
@property (readonly) uint64_t gameServerSteamid;
@property (readonly) uint64_t watchServerSteamid;
@property (readonly) uint64_t watchTvUniqueSecretCode;

+ (CMsgWatchGameResponse*) defaultInstance;
- (CMsgWatchGameResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgWatchGameResponse_Builder*) builder;
+ (CMsgWatchGameResponse_Builder*) builder;
+ (CMsgWatchGameResponse_Builder*) builderWithPrototype:(CMsgWatchGameResponse*) prototype;
- (CMsgWatchGameResponse_Builder*) toBuilder;

+ (CMsgWatchGameResponse*) parseFromData:(NSData*) data;
+ (CMsgWatchGameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgWatchGameResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgWatchGameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgWatchGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgWatchGameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgWatchGameResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgWatchGameResponse* _builderResult;
}

- (CMsgWatchGameResponse*) defaultInstance;

- (CMsgWatchGameResponse_Builder*) clear;
- (CMsgWatchGameResponse_Builder*) clone;

- (CMsgWatchGameResponse*) build;
- (CMsgWatchGameResponse*) buildPartial;

- (CMsgWatchGameResponse_Builder*) mergeFrom:(CMsgWatchGameResponse*) other;
- (CMsgWatchGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgWatchGameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) haswatch_game_result;
- (CMsgWatchGameResponse_WatchGameResult) watch_game_result;
- (CMsgWatchGameResponse_Builder*) setwatch_game_result:(CMsgWatchGameResponse_WatchGameResult) value;
- (CMsgWatchGameResponse_Builder*) clearwatch_game_result;

- (BOOL) hasSourceTvPublicAddr;
- (uint32_t) sourceTvPublicAddr;
- (CMsgWatchGameResponse_Builder*) setSourceTvPublicAddr:(uint32_t) value;
- (CMsgWatchGameResponse_Builder*) clearSourceTvPublicAddr;

- (BOOL) hasSourceTvPrivateAddr;
- (uint32_t) sourceTvPrivateAddr;
- (CMsgWatchGameResponse_Builder*) setSourceTvPrivateAddr:(uint32_t) value;
- (CMsgWatchGameResponse_Builder*) clearSourceTvPrivateAddr;

- (BOOL) hasSourceTvPort;
- (uint32_t) sourceTvPort;
- (CMsgWatchGameResponse_Builder*) setSourceTvPort:(uint32_t) value;
- (CMsgWatchGameResponse_Builder*) clearSourceTvPort;

- (BOOL) hasGameServerSteamid;
- (uint64_t) gameServerSteamid;
- (CMsgWatchGameResponse_Builder*) setGameServerSteamid:(uint64_t) value;
- (CMsgWatchGameResponse_Builder*) clearGameServerSteamid;

- (BOOL) hasWatchServerSteamid;
- (uint64_t) watchServerSteamid;
- (CMsgWatchGameResponse_Builder*) setWatchServerSteamid:(uint64_t) value;
- (CMsgWatchGameResponse_Builder*) clearWatchServerSteamid;

- (BOOL) hasWatchTvUniqueSecretCode;
- (uint64_t) watchTvUniqueSecretCode;
- (CMsgWatchGameResponse_Builder*) setWatchTvUniqueSecretCode:(uint64_t) value;
- (CMsgWatchGameResponse_Builder*) clearWatchTvUniqueSecretCode;
@end

@interface CMsgGCBanStatusRequest : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
@property (readonly) uint32_t accountId;

+ (CMsgGCBanStatusRequest*) defaultInstance;
- (CMsgGCBanStatusRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGCBanStatusRequest_Builder*) builder;
+ (CMsgGCBanStatusRequest_Builder*) builder;
+ (CMsgGCBanStatusRequest_Builder*) builderWithPrototype:(CMsgGCBanStatusRequest*) prototype;
- (CMsgGCBanStatusRequest_Builder*) toBuilder;

+ (CMsgGCBanStatusRequest*) parseFromData:(NSData*) data;
+ (CMsgGCBanStatusRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCBanStatusRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGCBanStatusRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCBanStatusRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGCBanStatusRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGCBanStatusRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGCBanStatusRequest* _builderResult;
}

- (CMsgGCBanStatusRequest*) defaultInstance;

- (CMsgGCBanStatusRequest_Builder*) clear;
- (CMsgGCBanStatusRequest_Builder*) clone;

- (CMsgGCBanStatusRequest*) build;
- (CMsgGCBanStatusRequest*) buildPartial;

- (CMsgGCBanStatusRequest_Builder*) mergeFrom:(CMsgGCBanStatusRequest*) other;
- (CMsgGCBanStatusRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGCBanStatusRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgGCBanStatusRequest_Builder*) setAccountId:(uint32_t) value;
- (CMsgGCBanStatusRequest_Builder*) clearAccountId;
@end

@interface CMsgGCBanStatusResponse : PBGeneratedMessage {
@private
  BOOL hasMatchBanned_:1;
  BOOL hasTextChatBanned_:1;
  BOOL hasVoiceChatBanned_:1;
  BOOL hasResult_:1;
  BOOL matchBanned_:1;
  BOOL textChatBanned_:1;
  BOOL voiceChatBanned_:1;
  uint32_t result;
}
- (BOOL) hasResult;
- (BOOL) hasMatchBanned;
- (BOOL) hasTextChatBanned;
- (BOOL) hasVoiceChatBanned;
@property (readonly) uint32_t result;
- (BOOL) matchBanned;
- (BOOL) textChatBanned;
- (BOOL) voiceChatBanned;

+ (CMsgGCBanStatusResponse*) defaultInstance;
- (CMsgGCBanStatusResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGCBanStatusResponse_Builder*) builder;
+ (CMsgGCBanStatusResponse_Builder*) builder;
+ (CMsgGCBanStatusResponse_Builder*) builderWithPrototype:(CMsgGCBanStatusResponse*) prototype;
- (CMsgGCBanStatusResponse_Builder*) toBuilder;

+ (CMsgGCBanStatusResponse*) parseFromData:(NSData*) data;
+ (CMsgGCBanStatusResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCBanStatusResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGCBanStatusResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCBanStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGCBanStatusResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGCBanStatusResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGCBanStatusResponse* _builderResult;
}

- (CMsgGCBanStatusResponse*) defaultInstance;

- (CMsgGCBanStatusResponse_Builder*) clear;
- (CMsgGCBanStatusResponse_Builder*) clone;

- (CMsgGCBanStatusResponse*) build;
- (CMsgGCBanStatusResponse*) buildPartial;

- (CMsgGCBanStatusResponse_Builder*) mergeFrom:(CMsgGCBanStatusResponse*) other;
- (CMsgGCBanStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGCBanStatusResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResult;
- (uint32_t) result;
- (CMsgGCBanStatusResponse_Builder*) setResult:(uint32_t) value;
- (CMsgGCBanStatusResponse_Builder*) clearResult;

- (BOOL) hasMatchBanned;
- (BOOL) matchBanned;
- (CMsgGCBanStatusResponse_Builder*) setMatchBanned:(BOOL) value;
- (CMsgGCBanStatusResponse_Builder*) clearMatchBanned;

- (BOOL) hasTextChatBanned;
- (BOOL) textChatBanned;
- (CMsgGCBanStatusResponse_Builder*) setTextChatBanned:(BOOL) value;
- (CMsgGCBanStatusResponse_Builder*) clearTextChatBanned;

- (BOOL) hasVoiceChatBanned;
- (BOOL) voiceChatBanned;
- (CMsgGCBanStatusResponse_Builder*) setVoiceChatBanned:(BOOL) value;
- (CMsgGCBanStatusResponse_Builder*) clearVoiceChatBanned;
@end

@interface CMsgDOTADailyStats : PBGeneratedMessage {
@private
  BOOL hasDate_:1;
  BOOL hasHeroId_:1;
  BOOL hasPopularity_:1;
  uint32_t date;
  uint32_t heroId;
  uint32_t popularity;
}
- (BOOL) hasDate;
- (BOOL) hasHeroId;
- (BOOL) hasPopularity;
@property (readonly) uint32_t date;
@property (readonly) uint32_t heroId;
@property (readonly) uint32_t popularity;

+ (CMsgDOTADailyStats*) defaultInstance;
- (CMsgDOTADailyStats*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTADailyStats_Builder*) builder;
+ (CMsgDOTADailyStats_Builder*) builder;
+ (CMsgDOTADailyStats_Builder*) builderWithPrototype:(CMsgDOTADailyStats*) prototype;
- (CMsgDOTADailyStats_Builder*) toBuilder;

+ (CMsgDOTADailyStats*) parseFromData:(NSData*) data;
+ (CMsgDOTADailyStats*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADailyStats*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTADailyStats*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADailyStats*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTADailyStats*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTADailyStats_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTADailyStats* _builderResult;
}

- (CMsgDOTADailyStats*) defaultInstance;

- (CMsgDOTADailyStats_Builder*) clear;
- (CMsgDOTADailyStats_Builder*) clone;

- (CMsgDOTADailyStats*) build;
- (CMsgDOTADailyStats*) buildPartial;

- (CMsgDOTADailyStats_Builder*) mergeFrom:(CMsgDOTADailyStats*) other;
- (CMsgDOTADailyStats_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTADailyStats_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDate;
- (uint32_t) date;
- (CMsgDOTADailyStats_Builder*) setDate:(uint32_t) value;
- (CMsgDOTADailyStats_Builder*) clearDate;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTADailyStats_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTADailyStats_Builder*) clearHeroId;

- (BOOL) hasPopularity;
- (uint32_t) popularity;
- (CMsgDOTADailyStats_Builder*) setPopularity:(uint32_t) value;
- (CMsgDOTADailyStats_Builder*) clearPopularity;
@end

@interface CMsgDOTARequestDailyStats : PBGeneratedMessage {
@private
}

+ (CMsgDOTARequestDailyStats*) defaultInstance;
- (CMsgDOTARequestDailyStats*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARequestDailyStats_Builder*) builder;
+ (CMsgDOTARequestDailyStats_Builder*) builder;
+ (CMsgDOTARequestDailyStats_Builder*) builderWithPrototype:(CMsgDOTARequestDailyStats*) prototype;
- (CMsgDOTARequestDailyStats_Builder*) toBuilder;

+ (CMsgDOTARequestDailyStats*) parseFromData:(NSData*) data;
+ (CMsgDOTARequestDailyStats*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestDailyStats*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARequestDailyStats*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARequestDailyStats*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARequestDailyStats*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARequestDailyStats_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARequestDailyStats* _builderResult;
}

- (CMsgDOTARequestDailyStats*) defaultInstance;

- (CMsgDOTARequestDailyStats_Builder*) clear;
- (CMsgDOTARequestDailyStats_Builder*) clone;

- (CMsgDOTARequestDailyStats*) build;
- (CMsgDOTARequestDailyStats*) buildPartial;

- (CMsgDOTARequestDailyStats_Builder*) mergeFrom:(CMsgDOTARequestDailyStats*) other;
- (CMsgDOTARequestDailyStats_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARequestDailyStats_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGCMatchDetailsRequest : PBGeneratedMessage {
@private
  BOOL hasMatchId_:1;
  uint32_t matchId;
}
- (BOOL) hasMatchId;
@property (readonly) uint32_t matchId;

+ (CMsgGCMatchDetailsRequest*) defaultInstance;
- (CMsgGCMatchDetailsRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGCMatchDetailsRequest_Builder*) builder;
+ (CMsgGCMatchDetailsRequest_Builder*) builder;
+ (CMsgGCMatchDetailsRequest_Builder*) builderWithPrototype:(CMsgGCMatchDetailsRequest*) prototype;
- (CMsgGCMatchDetailsRequest_Builder*) toBuilder;

+ (CMsgGCMatchDetailsRequest*) parseFromData:(NSData*) data;
+ (CMsgGCMatchDetailsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCMatchDetailsRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGCMatchDetailsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCMatchDetailsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGCMatchDetailsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGCMatchDetailsRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGCMatchDetailsRequest* _builderResult;
}

- (CMsgGCMatchDetailsRequest*) defaultInstance;

- (CMsgGCMatchDetailsRequest_Builder*) clear;
- (CMsgGCMatchDetailsRequest_Builder*) clone;

- (CMsgGCMatchDetailsRequest*) build;
- (CMsgGCMatchDetailsRequest*) buildPartial;

- (CMsgGCMatchDetailsRequest_Builder*) mergeFrom:(CMsgGCMatchDetailsRequest*) other;
- (CMsgGCMatchDetailsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGCMatchDetailsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgGCMatchDetailsRequest_Builder*) setMatchId:(uint32_t) value;
- (CMsgGCMatchDetailsRequest_Builder*) clearMatchId;
@end

@interface CMsgGCMatchDetailsResponse : PBGeneratedMessage {
@private
  BOOL hasMatch_:1;
  BOOL hasResult_:1;
  BOOL hasvote_:1;
  CMsgDOTAMatch* match;
  uint32_t result;
  DOTAMatchVote vote;
}
- (BOOL) hasResult;
- (BOOL) hasMatch;
- (BOOL) hasvote;
@property (readonly) uint32_t result;
@property (readonly, retain) CMsgDOTAMatch* match;
@property (readonly) DOTAMatchVote vote;

+ (CMsgGCMatchDetailsResponse*) defaultInstance;
- (CMsgGCMatchDetailsResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGCMatchDetailsResponse_Builder*) builder;
+ (CMsgGCMatchDetailsResponse_Builder*) builder;
+ (CMsgGCMatchDetailsResponse_Builder*) builderWithPrototype:(CMsgGCMatchDetailsResponse*) prototype;
- (CMsgGCMatchDetailsResponse_Builder*) toBuilder;

+ (CMsgGCMatchDetailsResponse*) parseFromData:(NSData*) data;
+ (CMsgGCMatchDetailsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCMatchDetailsResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGCMatchDetailsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGCMatchDetailsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGCMatchDetailsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGCMatchDetailsResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGCMatchDetailsResponse* _builderResult;
}

- (CMsgGCMatchDetailsResponse*) defaultInstance;

- (CMsgGCMatchDetailsResponse_Builder*) clear;
- (CMsgGCMatchDetailsResponse_Builder*) clone;

- (CMsgGCMatchDetailsResponse*) build;
- (CMsgGCMatchDetailsResponse*) buildPartial;

- (CMsgGCMatchDetailsResponse_Builder*) mergeFrom:(CMsgGCMatchDetailsResponse*) other;
- (CMsgGCMatchDetailsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGCMatchDetailsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResult;
- (uint32_t) result;
- (CMsgGCMatchDetailsResponse_Builder*) setResult:(uint32_t) value;
- (CMsgGCMatchDetailsResponse_Builder*) clearResult;

- (BOOL) hasMatch;
- (CMsgDOTAMatch*) match;
- (CMsgGCMatchDetailsResponse_Builder*) setMatch:(CMsgDOTAMatch*) value;
- (CMsgGCMatchDetailsResponse_Builder*) setMatchBuilder:(CMsgDOTAMatch_Builder*) builderForValue;
- (CMsgGCMatchDetailsResponse_Builder*) mergeMatch:(CMsgDOTAMatch*) value;
- (CMsgGCMatchDetailsResponse_Builder*) clearMatch;

- (BOOL) hasvote;
- (DOTAMatchVote) vote;
- (CMsgGCMatchDetailsResponse_Builder*) setvote:(DOTAMatchVote) value;
- (CMsgGCMatchDetailsResponse_Builder*) clearvote;
@end

@interface CMsgDOTAProfileRequest : PBGeneratedMessage {
@private
  BOOL hasRequestName_:1;
  BOOL hasAccountId_:1;
  BOOL requestName_:1;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
- (BOOL) hasRequestName;
@property (readonly) uint32_t accountId;
- (BOOL) requestName;

+ (CMsgDOTAProfileRequest*) defaultInstance;
- (CMsgDOTAProfileRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAProfileRequest_Builder*) builder;
+ (CMsgDOTAProfileRequest_Builder*) builder;
+ (CMsgDOTAProfileRequest_Builder*) builderWithPrototype:(CMsgDOTAProfileRequest*) prototype;
- (CMsgDOTAProfileRequest_Builder*) toBuilder;

+ (CMsgDOTAProfileRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTAProfileRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAProfileRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProfileRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAProfileRequest* _builderResult;
}

- (CMsgDOTAProfileRequest*) defaultInstance;

- (CMsgDOTAProfileRequest_Builder*) clear;
- (CMsgDOTAProfileRequest_Builder*) clone;

- (CMsgDOTAProfileRequest*) build;
- (CMsgDOTAProfileRequest*) buildPartial;

- (CMsgDOTAProfileRequest_Builder*) mergeFrom:(CMsgDOTAProfileRequest*) other;
- (CMsgDOTAProfileRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAProfileRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTAProfileRequest_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTAProfileRequest_Builder*) clearAccountId;

- (BOOL) hasRequestName;
- (BOOL) requestName;
- (CMsgDOTAProfileRequest_Builder*) setRequestName:(BOOL) value;
- (CMsgDOTAProfileRequest_Builder*) clearRequestName;
@end

@interface CMsgDOTAProfileResponse : PBGeneratedMessage {
@private
  BOOL hasTeamLogo_:1;
  BOOL hasPlayerName_:1;
  BOOL hasTeamName_:1;
  BOOL hasTeamTag_:1;
  BOOL hasGameAccountClient_:1;
  BOOL hasShowcaseHero_:1;
  BOOL hasResult_:1;
  BOOL hasTeamId_:1;
  uint64_t teamLogo;
  NSString* playerName;
  NSString* teamName;
  NSString* teamTag;
  CSODOTAGameAccountClient* gameAccountClient;
  CMsgDOTAProfileResponse_ShowcaseHero* showcaseHero;
  uint32_t result;
  uint32_t teamId;
  PBAppendableArray * latestMatchesArray;
  PBAppendableArray * heroesArray;
  PBAppendableArray * leaguePassesArray;
  PBAppendableArray * eventTicketsArray;
}
- (BOOL) hasResult;
- (BOOL) hasGameAccountClient;
- (BOOL) hasPlayerName;
- (BOOL) hasTeamName;
- (BOOL) hasTeamTag;
- (BOOL) hasTeamLogo;
- (BOOL) hasShowcaseHero;
- (BOOL) hasTeamId;
@property (readonly) uint32_t result;
@property (readonly, retain) CSODOTAGameAccountClient* gameAccountClient;
@property (readonly, retain) PBArray * latestMatches;
@property (readonly, retain) PBArray * heroes;
@property (readonly, retain) NSString* playerName;
@property (readonly, retain) NSString* teamName;
@property (readonly, retain) NSString* teamTag;
@property (readonly) uint64_t teamLogo;
@property (readonly, retain) CMsgDOTAProfileResponse_ShowcaseHero* showcaseHero;
@property (readonly, retain) PBArray * leaguePasses;
@property (readonly, retain) PBArray * eventTickets;
@property (readonly) uint32_t teamId;
- (CMsgDOTAMatch*)latestMatchesAtIndex:(NSUInteger)index;
- (CMsgDOTAProfileResponse_PlayedHero*)heroesAtIndex:(NSUInteger)index;
- (CMsgDOTAProfileResponse_LeaguePass*)leaguePassesAtIndex:(NSUInteger)index;
- (CMsgDOTAProfileResponse_EventTicket*)eventTicketsAtIndex:(NSUInteger)index;

+ (CMsgDOTAProfileResponse*) defaultInstance;
- (CMsgDOTAProfileResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAProfileResponse_Builder*) builder;
+ (CMsgDOTAProfileResponse_Builder*) builder;
+ (CMsgDOTAProfileResponse_Builder*) builderWithPrototype:(CMsgDOTAProfileResponse*) prototype;
- (CMsgDOTAProfileResponse_Builder*) toBuilder;

+ (CMsgDOTAProfileResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAProfileResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAProfileResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProfileResponse_PlayedHero : PBGeneratedMessage {
@private
  BOOL hasHeroId_:1;
  BOOL hasWins_:1;
  uint32_t heroId;
  uint32_t wins;
}
- (BOOL) hasHeroId;
- (BOOL) hasWins;
@property (readonly) uint32_t heroId;
@property (readonly) uint32_t wins;

+ (CMsgDOTAProfileResponse_PlayedHero*) defaultInstance;
- (CMsgDOTAProfileResponse_PlayedHero*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAProfileResponse_PlayedHero_Builder*) builder;
+ (CMsgDOTAProfileResponse_PlayedHero_Builder*) builder;
+ (CMsgDOTAProfileResponse_PlayedHero_Builder*) builderWithPrototype:(CMsgDOTAProfileResponse_PlayedHero*) prototype;
- (CMsgDOTAProfileResponse_PlayedHero_Builder*) toBuilder;

+ (CMsgDOTAProfileResponse_PlayedHero*) parseFromData:(NSData*) data;
+ (CMsgDOTAProfileResponse_PlayedHero*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse_PlayedHero*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAProfileResponse_PlayedHero*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse_PlayedHero*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAProfileResponse_PlayedHero*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProfileResponse_PlayedHero_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAProfileResponse_PlayedHero* _builderResult;
}

- (CMsgDOTAProfileResponse_PlayedHero*) defaultInstance;

- (CMsgDOTAProfileResponse_PlayedHero_Builder*) clear;
- (CMsgDOTAProfileResponse_PlayedHero_Builder*) clone;

- (CMsgDOTAProfileResponse_PlayedHero*) build;
- (CMsgDOTAProfileResponse_PlayedHero*) buildPartial;

- (CMsgDOTAProfileResponse_PlayedHero_Builder*) mergeFrom:(CMsgDOTAProfileResponse_PlayedHero*) other;
- (CMsgDOTAProfileResponse_PlayedHero_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAProfileResponse_PlayedHero_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTAProfileResponse_PlayedHero_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTAProfileResponse_PlayedHero_Builder*) clearHeroId;

- (BOOL) hasWins;
- (uint32_t) wins;
- (CMsgDOTAProfileResponse_PlayedHero_Builder*) setWins:(uint32_t) value;
- (CMsgDOTAProfileResponse_PlayedHero_Builder*) clearWins;
@end

@interface CMsgDOTAProfileResponse_ShowcaseHero : PBGeneratedMessage {
@private
  BOOL hasHeroId_:1;
  uint32_t heroId;
  PBAppendableArray * objectDataArray;
}
- (BOOL) hasHeroId;
@property (readonly) uint32_t heroId;
@property (readonly, retain) PBArray * objectData;
- (NSData*)objectDataAtIndex:(NSUInteger)index;

+ (CMsgDOTAProfileResponse_ShowcaseHero*) defaultInstance;
- (CMsgDOTAProfileResponse_ShowcaseHero*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) builder;
+ (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) builder;
+ (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) builderWithPrototype:(CMsgDOTAProfileResponse_ShowcaseHero*) prototype;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) toBuilder;

+ (CMsgDOTAProfileResponse_ShowcaseHero*) parseFromData:(NSData*) data;
+ (CMsgDOTAProfileResponse_ShowcaseHero*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse_ShowcaseHero*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAProfileResponse_ShowcaseHero*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse_ShowcaseHero*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAProfileResponse_ShowcaseHero*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProfileResponse_ShowcaseHero_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAProfileResponse_ShowcaseHero* _builderResult;
}

- (CMsgDOTAProfileResponse_ShowcaseHero*) defaultInstance;

- (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) clear;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) clone;

- (CMsgDOTAProfileResponse_ShowcaseHero*) build;
- (CMsgDOTAProfileResponse_ShowcaseHero*) buildPartial;

- (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) mergeFrom:(CMsgDOTAProfileResponse_ShowcaseHero*) other;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder*) clearHeroId;

- (PBAppendableArray *)objectData;
- (NSData*)objectDataAtIndex:(NSUInteger)index;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder *)addObjectData:(NSData*)value;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder *)setObjectDataArray:(NSArray *)array;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder *)setObjectDataValues:(const NSData* *)values count:(NSUInteger)count;
- (CMsgDOTAProfileResponse_ShowcaseHero_Builder *)clearObjectData;
@end

@interface CMsgDOTAProfileResponse_LeaguePass : PBGeneratedMessage {
@private
  BOOL hasLeagueId_:1;
  BOOL hasItemDef_:1;
  uint32_t leagueId;
  uint32_t itemDef;
}
- (BOOL) hasLeagueId;
- (BOOL) hasItemDef;
@property (readonly) uint32_t leagueId;
@property (readonly) uint32_t itemDef;

+ (CMsgDOTAProfileResponse_LeaguePass*) defaultInstance;
- (CMsgDOTAProfileResponse_LeaguePass*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAProfileResponse_LeaguePass_Builder*) builder;
+ (CMsgDOTAProfileResponse_LeaguePass_Builder*) builder;
+ (CMsgDOTAProfileResponse_LeaguePass_Builder*) builderWithPrototype:(CMsgDOTAProfileResponse_LeaguePass*) prototype;
- (CMsgDOTAProfileResponse_LeaguePass_Builder*) toBuilder;

+ (CMsgDOTAProfileResponse_LeaguePass*) parseFromData:(NSData*) data;
+ (CMsgDOTAProfileResponse_LeaguePass*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse_LeaguePass*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAProfileResponse_LeaguePass*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse_LeaguePass*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAProfileResponse_LeaguePass*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProfileResponse_LeaguePass_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAProfileResponse_LeaguePass* _builderResult;
}

- (CMsgDOTAProfileResponse_LeaguePass*) defaultInstance;

- (CMsgDOTAProfileResponse_LeaguePass_Builder*) clear;
- (CMsgDOTAProfileResponse_LeaguePass_Builder*) clone;

- (CMsgDOTAProfileResponse_LeaguePass*) build;
- (CMsgDOTAProfileResponse_LeaguePass*) buildPartial;

- (CMsgDOTAProfileResponse_LeaguePass_Builder*) mergeFrom:(CMsgDOTAProfileResponse_LeaguePass*) other;
- (CMsgDOTAProfileResponse_LeaguePass_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAProfileResponse_LeaguePass_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLeagueId;
- (uint32_t) leagueId;
- (CMsgDOTAProfileResponse_LeaguePass_Builder*) setLeagueId:(uint32_t) value;
- (CMsgDOTAProfileResponse_LeaguePass_Builder*) clearLeagueId;

- (BOOL) hasItemDef;
- (uint32_t) itemDef;
- (CMsgDOTAProfileResponse_LeaguePass_Builder*) setItemDef:(uint32_t) value;
- (CMsgDOTAProfileResponse_LeaguePass_Builder*) clearItemDef;
@end

@interface CMsgDOTAProfileResponse_EventTicket : PBGeneratedMessage {
@private
  BOOL hasEventId_:1;
  uint32_t eventId;
}
- (BOOL) hasEventId;
@property (readonly) uint32_t eventId;

+ (CMsgDOTAProfileResponse_EventTicket*) defaultInstance;
- (CMsgDOTAProfileResponse_EventTicket*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAProfileResponse_EventTicket_Builder*) builder;
+ (CMsgDOTAProfileResponse_EventTicket_Builder*) builder;
+ (CMsgDOTAProfileResponse_EventTicket_Builder*) builderWithPrototype:(CMsgDOTAProfileResponse_EventTicket*) prototype;
- (CMsgDOTAProfileResponse_EventTicket_Builder*) toBuilder;

+ (CMsgDOTAProfileResponse_EventTicket*) parseFromData:(NSData*) data;
+ (CMsgDOTAProfileResponse_EventTicket*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse_EventTicket*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAProfileResponse_EventTicket*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAProfileResponse_EventTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAProfileResponse_EventTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAProfileResponse_EventTicket_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAProfileResponse_EventTicket* _builderResult;
}

- (CMsgDOTAProfileResponse_EventTicket*) defaultInstance;

- (CMsgDOTAProfileResponse_EventTicket_Builder*) clear;
- (CMsgDOTAProfileResponse_EventTicket_Builder*) clone;

- (CMsgDOTAProfileResponse_EventTicket*) build;
- (CMsgDOTAProfileResponse_EventTicket*) buildPartial;

- (CMsgDOTAProfileResponse_EventTicket_Builder*) mergeFrom:(CMsgDOTAProfileResponse_EventTicket*) other;
- (CMsgDOTAProfileResponse_EventTicket_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAProfileResponse_EventTicket_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventId;
- (uint32_t) eventId;
- (CMsgDOTAProfileResponse_EventTicket_Builder*) setEventId:(uint32_t) value;
- (CMsgDOTAProfileResponse_EventTicket_Builder*) clearEventId;
@end

@interface CMsgDOTAProfileResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAProfileResponse* _builderResult;
}

- (CMsgDOTAProfileResponse*) defaultInstance;

- (CMsgDOTAProfileResponse_Builder*) clear;
- (CMsgDOTAProfileResponse_Builder*) clone;

- (CMsgDOTAProfileResponse*) build;
- (CMsgDOTAProfileResponse*) buildPartial;

- (CMsgDOTAProfileResponse_Builder*) mergeFrom:(CMsgDOTAProfileResponse*) other;
- (CMsgDOTAProfileResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAProfileResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResult;
- (uint32_t) result;
- (CMsgDOTAProfileResponse_Builder*) setResult:(uint32_t) value;
- (CMsgDOTAProfileResponse_Builder*) clearResult;

- (BOOL) hasGameAccountClient;
- (CSODOTAGameAccountClient*) gameAccountClient;
- (CMsgDOTAProfileResponse_Builder*) setGameAccountClient:(CSODOTAGameAccountClient*) value;
- (CMsgDOTAProfileResponse_Builder*) setGameAccountClientBuilder:(CSODOTAGameAccountClient_Builder*) builderForValue;
- (CMsgDOTAProfileResponse_Builder*) mergeGameAccountClient:(CSODOTAGameAccountClient*) value;
- (CMsgDOTAProfileResponse_Builder*) clearGameAccountClient;

- (PBAppendableArray *)latestMatches;
- (CMsgDOTAMatch*)latestMatchesAtIndex:(NSUInteger)index;
- (CMsgDOTAProfileResponse_Builder *)addLatestMatches:(CMsgDOTAMatch*)value;
- (CMsgDOTAProfileResponse_Builder *)setLatestMatchesArray:(NSArray *)array;
- (CMsgDOTAProfileResponse_Builder *)setLatestMatchesValues:(const CMsgDOTAMatch* *)values count:(NSUInteger)count;
- (CMsgDOTAProfileResponse_Builder *)clearLatestMatches;

- (PBAppendableArray *)heroes;
- (CMsgDOTAProfileResponse_PlayedHero*)heroesAtIndex:(NSUInteger)index;
- (CMsgDOTAProfileResponse_Builder *)addHeroes:(CMsgDOTAProfileResponse_PlayedHero*)value;
- (CMsgDOTAProfileResponse_Builder *)setHeroesArray:(NSArray *)array;
- (CMsgDOTAProfileResponse_Builder *)setHeroesValues:(const CMsgDOTAProfileResponse_PlayedHero* *)values count:(NSUInteger)count;
- (CMsgDOTAProfileResponse_Builder *)clearHeroes;

- (BOOL) hasPlayerName;
- (NSString*) playerName;
- (CMsgDOTAProfileResponse_Builder*) setPlayerName:(NSString*) value;
- (CMsgDOTAProfileResponse_Builder*) clearPlayerName;

- (BOOL) hasTeamName;
- (NSString*) teamName;
- (CMsgDOTAProfileResponse_Builder*) setTeamName:(NSString*) value;
- (CMsgDOTAProfileResponse_Builder*) clearTeamName;

- (BOOL) hasTeamTag;
- (NSString*) teamTag;
- (CMsgDOTAProfileResponse_Builder*) setTeamTag:(NSString*) value;
- (CMsgDOTAProfileResponse_Builder*) clearTeamTag;

- (BOOL) hasTeamLogo;
- (uint64_t) teamLogo;
- (CMsgDOTAProfileResponse_Builder*) setTeamLogo:(uint64_t) value;
- (CMsgDOTAProfileResponse_Builder*) clearTeamLogo;

- (BOOL) hasShowcaseHero;
- (CMsgDOTAProfileResponse_ShowcaseHero*) showcaseHero;
- (CMsgDOTAProfileResponse_Builder*) setShowcaseHero:(CMsgDOTAProfileResponse_ShowcaseHero*) value;
- (CMsgDOTAProfileResponse_Builder*) setShowcaseHeroBuilder:(CMsgDOTAProfileResponse_ShowcaseHero_Builder*) builderForValue;
- (CMsgDOTAProfileResponse_Builder*) mergeShowcaseHero:(CMsgDOTAProfileResponse_ShowcaseHero*) value;
- (CMsgDOTAProfileResponse_Builder*) clearShowcaseHero;

- (PBAppendableArray *)leaguePasses;
- (CMsgDOTAProfileResponse_LeaguePass*)leaguePassesAtIndex:(NSUInteger)index;
- (CMsgDOTAProfileResponse_Builder *)addLeaguePasses:(CMsgDOTAProfileResponse_LeaguePass*)value;
- (CMsgDOTAProfileResponse_Builder *)setLeaguePassesArray:(NSArray *)array;
- (CMsgDOTAProfileResponse_Builder *)setLeaguePassesValues:(const CMsgDOTAProfileResponse_LeaguePass* *)values count:(NSUInteger)count;
- (CMsgDOTAProfileResponse_Builder *)clearLeaguePasses;

- (PBAppendableArray *)eventTickets;
- (CMsgDOTAProfileResponse_EventTicket*)eventTicketsAtIndex:(NSUInteger)index;
- (CMsgDOTAProfileResponse_Builder *)addEventTickets:(CMsgDOTAProfileResponse_EventTicket*)value;
- (CMsgDOTAProfileResponse_Builder *)setEventTicketsArray:(NSArray *)array;
- (CMsgDOTAProfileResponse_Builder *)setEventTicketsValues:(const CMsgDOTAProfileResponse_EventTicket* *)values count:(NSUInteger)count;
- (CMsgDOTAProfileResponse_Builder *)clearEventTickets;

- (BOOL) hasTeamId;
- (uint32_t) teamId;
- (CMsgDOTAProfileResponse_Builder*) setTeamId:(uint32_t) value;
- (CMsgDOTAProfileResponse_Builder*) clearTeamId;
@end

@interface CMsgDOTANotifySuccessfulReport : PBGeneratedMessage {
@private
}

+ (CMsgDOTANotifySuccessfulReport*) defaultInstance;
- (CMsgDOTANotifySuccessfulReport*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTANotifySuccessfulReport_Builder*) builder;
+ (CMsgDOTANotifySuccessfulReport_Builder*) builder;
+ (CMsgDOTANotifySuccessfulReport_Builder*) builderWithPrototype:(CMsgDOTANotifySuccessfulReport*) prototype;
- (CMsgDOTANotifySuccessfulReport_Builder*) toBuilder;

+ (CMsgDOTANotifySuccessfulReport*) parseFromData:(NSData*) data;
+ (CMsgDOTANotifySuccessfulReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTANotifySuccessfulReport*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTANotifySuccessfulReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTANotifySuccessfulReport*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTANotifySuccessfulReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTANotifySuccessfulReport_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTANotifySuccessfulReport* _builderResult;
}

- (CMsgDOTANotifySuccessfulReport*) defaultInstance;

- (CMsgDOTANotifySuccessfulReport_Builder*) clear;
- (CMsgDOTANotifySuccessfulReport_Builder*) clone;

- (CMsgDOTANotifySuccessfulReport*) build;
- (CMsgDOTANotifySuccessfulReport*) buildPartial;

- (CMsgDOTANotifySuccessfulReport_Builder*) mergeFrom:(CMsgDOTANotifySuccessfulReport*) other;
- (CMsgDOTANotifySuccessfulReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTANotifySuccessfulReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAClearNotifySuccessfulReport : PBGeneratedMessage {
@private
}

+ (CMsgDOTAClearNotifySuccessfulReport*) defaultInstance;
- (CMsgDOTAClearNotifySuccessfulReport*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAClearNotifySuccessfulReport_Builder*) builder;
+ (CMsgDOTAClearNotifySuccessfulReport_Builder*) builder;
+ (CMsgDOTAClearNotifySuccessfulReport_Builder*) builderWithPrototype:(CMsgDOTAClearNotifySuccessfulReport*) prototype;
- (CMsgDOTAClearNotifySuccessfulReport_Builder*) toBuilder;

+ (CMsgDOTAClearNotifySuccessfulReport*) parseFromData:(NSData*) data;
+ (CMsgDOTAClearNotifySuccessfulReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAClearNotifySuccessfulReport*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAClearNotifySuccessfulReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAClearNotifySuccessfulReport*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAClearNotifySuccessfulReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAClearNotifySuccessfulReport_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAClearNotifySuccessfulReport* _builderResult;
}

- (CMsgDOTAClearNotifySuccessfulReport*) defaultInstance;

- (CMsgDOTAClearNotifySuccessfulReport_Builder*) clear;
- (CMsgDOTAClearNotifySuccessfulReport_Builder*) clone;

- (CMsgDOTAClearNotifySuccessfulReport*) build;
- (CMsgDOTAClearNotifySuccessfulReport*) buildPartial;

- (CMsgDOTAClearNotifySuccessfulReport_Builder*) mergeFrom:(CMsgDOTAClearNotifySuccessfulReport*) other;
- (CMsgDOTAClearNotifySuccessfulReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAClearNotifySuccessfulReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgUnpickedHeroListRequest : PBGeneratedMessage {
@private
}

+ (CMsgUnpickedHeroListRequest*) defaultInstance;
- (CMsgUnpickedHeroListRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgUnpickedHeroListRequest_Builder*) builder;
+ (CMsgUnpickedHeroListRequest_Builder*) builder;
+ (CMsgUnpickedHeroListRequest_Builder*) builderWithPrototype:(CMsgUnpickedHeroListRequest*) prototype;
- (CMsgUnpickedHeroListRequest_Builder*) toBuilder;

+ (CMsgUnpickedHeroListRequest*) parseFromData:(NSData*) data;
+ (CMsgUnpickedHeroListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgUnpickedHeroListRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgUnpickedHeroListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgUnpickedHeroListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgUnpickedHeroListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgUnpickedHeroListRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgUnpickedHeroListRequest* _builderResult;
}

- (CMsgUnpickedHeroListRequest*) defaultInstance;

- (CMsgUnpickedHeroListRequest_Builder*) clear;
- (CMsgUnpickedHeroListRequest_Builder*) clone;

- (CMsgUnpickedHeroListRequest*) build;
- (CMsgUnpickedHeroListRequest*) buildPartial;

- (CMsgUnpickedHeroListRequest_Builder*) mergeFrom:(CMsgUnpickedHeroListRequest*) other;
- (CMsgUnpickedHeroListRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgUnpickedHeroListRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgUnpickedHeroListResponse : PBGeneratedMessage {
@private
  PBAppendableArray * heroIdsArray;
}
@property (readonly, retain) PBArray * heroIds;
- (uint32_t)heroIdsAtIndex:(NSUInteger)index;

+ (CMsgUnpickedHeroListResponse*) defaultInstance;
- (CMsgUnpickedHeroListResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgUnpickedHeroListResponse_Builder*) builder;
+ (CMsgUnpickedHeroListResponse_Builder*) builder;
+ (CMsgUnpickedHeroListResponse_Builder*) builderWithPrototype:(CMsgUnpickedHeroListResponse*) prototype;
- (CMsgUnpickedHeroListResponse_Builder*) toBuilder;

+ (CMsgUnpickedHeroListResponse*) parseFromData:(NSData*) data;
+ (CMsgUnpickedHeroListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgUnpickedHeroListResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgUnpickedHeroListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgUnpickedHeroListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgUnpickedHeroListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgUnpickedHeroListResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgUnpickedHeroListResponse* _builderResult;
}

- (CMsgUnpickedHeroListResponse*) defaultInstance;

- (CMsgUnpickedHeroListResponse_Builder*) clear;
- (CMsgUnpickedHeroListResponse_Builder*) clone;

- (CMsgUnpickedHeroListResponse*) build;
- (CMsgUnpickedHeroListResponse*) buildPartial;

- (CMsgUnpickedHeroListResponse_Builder*) mergeFrom:(CMsgUnpickedHeroListResponse*) other;
- (CMsgUnpickedHeroListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgUnpickedHeroListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)heroIds;
- (uint32_t)heroIdsAtIndex:(NSUInteger)index;
- (CMsgUnpickedHeroListResponse_Builder *)addHeroIds:(uint32_t)value;
- (CMsgUnpickedHeroListResponse_Builder *)setHeroIdsArray:(NSArray *)array;
- (CMsgUnpickedHeroListResponse_Builder *)setHeroIdsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgUnpickedHeroListResponse_Builder *)clearHeroIds;
@end

@interface CMsgRemoveFromUnpickedHeroList : PBGeneratedMessage {
@private
  BOOL hasHeroId_:1;
  uint32_t heroId;
}
- (BOOL) hasHeroId;
@property (readonly) uint32_t heroId;

+ (CMsgRemoveFromUnpickedHeroList*) defaultInstance;
- (CMsgRemoveFromUnpickedHeroList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgRemoveFromUnpickedHeroList_Builder*) builder;
+ (CMsgRemoveFromUnpickedHeroList_Builder*) builder;
+ (CMsgRemoveFromUnpickedHeroList_Builder*) builderWithPrototype:(CMsgRemoveFromUnpickedHeroList*) prototype;
- (CMsgRemoveFromUnpickedHeroList_Builder*) toBuilder;

+ (CMsgRemoveFromUnpickedHeroList*) parseFromData:(NSData*) data;
+ (CMsgRemoveFromUnpickedHeroList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRemoveFromUnpickedHeroList*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgRemoveFromUnpickedHeroList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRemoveFromUnpickedHeroList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgRemoveFromUnpickedHeroList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgRemoveFromUnpickedHeroList_Builder : PBGeneratedMessage_Builder {
@private
  CMsgRemoveFromUnpickedHeroList* _builderResult;
}

- (CMsgRemoveFromUnpickedHeroList*) defaultInstance;

- (CMsgRemoveFromUnpickedHeroList_Builder*) clear;
- (CMsgRemoveFromUnpickedHeroList_Builder*) clone;

- (CMsgRemoveFromUnpickedHeroList*) build;
- (CMsgRemoveFromUnpickedHeroList*) buildPartial;

- (CMsgRemoveFromUnpickedHeroList_Builder*) mergeFrom:(CMsgRemoveFromUnpickedHeroList*) other;
- (CMsgRemoveFromUnpickedHeroList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgRemoveFromUnpickedHeroList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgRemoveFromUnpickedHeroList_Builder*) setHeroId:(uint32_t) value;
- (CMsgRemoveFromUnpickedHeroList_Builder*) clearHeroId;
@end

@interface CMsgDOTAMatchGroupWaitTimesRequest : PBGeneratedMessage {
@private
}

+ (CMsgDOTAMatchGroupWaitTimesRequest*) defaultInstance;
- (CMsgDOTAMatchGroupWaitTimesRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAMatchGroupWaitTimesRequest_Builder*) builder;
+ (CMsgDOTAMatchGroupWaitTimesRequest_Builder*) builder;
+ (CMsgDOTAMatchGroupWaitTimesRequest_Builder*) builderWithPrototype:(CMsgDOTAMatchGroupWaitTimesRequest*) prototype;
- (CMsgDOTAMatchGroupWaitTimesRequest_Builder*) toBuilder;

+ (CMsgDOTAMatchGroupWaitTimesRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTAMatchGroupWaitTimesRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchGroupWaitTimesRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAMatchGroupWaitTimesRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchGroupWaitTimesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAMatchGroupWaitTimesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAMatchGroupWaitTimesRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAMatchGroupWaitTimesRequest* _builderResult;
}

- (CMsgDOTAMatchGroupWaitTimesRequest*) defaultInstance;

- (CMsgDOTAMatchGroupWaitTimesRequest_Builder*) clear;
- (CMsgDOTAMatchGroupWaitTimesRequest_Builder*) clone;

- (CMsgDOTAMatchGroupWaitTimesRequest*) build;
- (CMsgDOTAMatchGroupWaitTimesRequest*) buildPartial;

- (CMsgDOTAMatchGroupWaitTimesRequest_Builder*) mergeFrom:(CMsgDOTAMatchGroupWaitTimesRequest*) other;
- (CMsgDOTAMatchGroupWaitTimesRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAMatchGroupWaitTimesRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAMatchGroupWaitTimesResponse : PBGeneratedMessage {
@private
  PBAppendableArray * waitTimesByGroupArray;
}
@property (readonly, retain) PBArray * waitTimesByGroup;
- (uint32_t)waitTimesByGroupAtIndex:(NSUInteger)index;

+ (CMsgDOTAMatchGroupWaitTimesResponse*) defaultInstance;
- (CMsgDOTAMatchGroupWaitTimesResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAMatchGroupWaitTimesResponse_Builder*) builder;
+ (CMsgDOTAMatchGroupWaitTimesResponse_Builder*) builder;
+ (CMsgDOTAMatchGroupWaitTimesResponse_Builder*) builderWithPrototype:(CMsgDOTAMatchGroupWaitTimesResponse*) prototype;
- (CMsgDOTAMatchGroupWaitTimesResponse_Builder*) toBuilder;

+ (CMsgDOTAMatchGroupWaitTimesResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAMatchGroupWaitTimesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchGroupWaitTimesResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAMatchGroupWaitTimesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchGroupWaitTimesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAMatchGroupWaitTimesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAMatchGroupWaitTimesResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAMatchGroupWaitTimesResponse* _builderResult;
}

- (CMsgDOTAMatchGroupWaitTimesResponse*) defaultInstance;

- (CMsgDOTAMatchGroupWaitTimesResponse_Builder*) clear;
- (CMsgDOTAMatchGroupWaitTimesResponse_Builder*) clone;

- (CMsgDOTAMatchGroupWaitTimesResponse*) build;
- (CMsgDOTAMatchGroupWaitTimesResponse*) buildPartial;

- (CMsgDOTAMatchGroupWaitTimesResponse_Builder*) mergeFrom:(CMsgDOTAMatchGroupWaitTimesResponse*) other;
- (CMsgDOTAMatchGroupWaitTimesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAMatchGroupWaitTimesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)waitTimesByGroup;
- (uint32_t)waitTimesByGroupAtIndex:(NSUInteger)index;
- (CMsgDOTAMatchGroupWaitTimesResponse_Builder *)addWaitTimesByGroup:(uint32_t)value;
- (CMsgDOTAMatchGroupWaitTimesResponse_Builder *)setWaitTimesByGroupArray:(NSArray *)array;
- (CMsgDOTAMatchGroupWaitTimesResponse_Builder *)setWaitTimesByGroupValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgDOTAMatchGroupWaitTimesResponse_Builder *)clearWaitTimesByGroup;
@end

@interface CItemDropEvent : PBGeneratedMessage {
@private
  BOOL hasIsCrate_:1;
  BOOL hasIsLevelReward_:1;
  BOOL hasDropBonus_:1;
  BOOL hasItemId_:1;
  BOOL hasAccountId_:1;
  BOOL hasTimeStamp_:1;
  BOOL hasDefIndex_:1;
  BOOL hasGamesPlayedSinceLastDrop_:1;
  BOOL hasTimePlayedSinceLastDrop_:1;
  BOOL hasRarity_:1;
  BOOL hasCurrentScore_:1;
  BOOL hasNextDropAt_:1;
  BOOL hasXp_:1;
  BOOL hasLevel_:1;
  BOOL hasMatchId_:1;
  BOOL isCrate_:1;
  BOOL isLevelReward_:1;
  Float32 dropBonus;
  uint64_t itemId;
  uint32_t accountId;
  uint32_t timeStamp;
  uint32_t defIndex;
  uint32_t gamesPlayedSinceLastDrop;
  uint32_t timePlayedSinceLastDrop;
  uint32_t rarity;
  uint32_t currentScore;
  uint32_t nextDropAt;
  uint32_t xp;
  uint32_t level;
  uint32_t matchId;
}
- (BOOL) hasAccountId;
- (BOOL) hasTimeStamp;
- (BOOL) hasDefIndex;
- (BOOL) hasItemId;
- (BOOL) hasGamesPlayedSinceLastDrop;
- (BOOL) hasTimePlayedSinceLastDrop;
- (BOOL) hasDropBonus;
- (BOOL) hasRarity;
- (BOOL) hasCurrentScore;
- (BOOL) hasNextDropAt;
- (BOOL) hasIsCrate;
- (BOOL) hasIsLevelReward;
- (BOOL) hasXp;
- (BOOL) hasLevel;
- (BOOL) hasMatchId;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t timeStamp;
@property (readonly) uint32_t defIndex;
@property (readonly) uint64_t itemId;
@property (readonly) uint32_t gamesPlayedSinceLastDrop;
@property (readonly) uint32_t timePlayedSinceLastDrop;
@property (readonly) Float32 dropBonus;
@property (readonly) uint32_t rarity;
@property (readonly) uint32_t currentScore;
@property (readonly) uint32_t nextDropAt;
- (BOOL) isCrate;
- (BOOL) isLevelReward;
@property (readonly) uint32_t xp;
@property (readonly) uint32_t level;
@property (readonly) uint32_t matchId;

+ (CItemDropEvent*) defaultInstance;
- (CItemDropEvent*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CItemDropEvent_Builder*) builder;
+ (CItemDropEvent_Builder*) builder;
+ (CItemDropEvent_Builder*) builderWithPrototype:(CItemDropEvent*) prototype;
- (CItemDropEvent_Builder*) toBuilder;

+ (CItemDropEvent*) parseFromData:(NSData*) data;
+ (CItemDropEvent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CItemDropEvent*) parseFromInputStream:(NSInputStream*) input;
+ (CItemDropEvent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CItemDropEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CItemDropEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CItemDropEvent_Builder : PBGeneratedMessage_Builder {
@private
  CItemDropEvent* _builderResult;
}

- (CItemDropEvent*) defaultInstance;

- (CItemDropEvent_Builder*) clear;
- (CItemDropEvent_Builder*) clone;

- (CItemDropEvent*) build;
- (CItemDropEvent*) buildPartial;

- (CItemDropEvent_Builder*) mergeFrom:(CItemDropEvent*) other;
- (CItemDropEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CItemDropEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CItemDropEvent_Builder*) setAccountId:(uint32_t) value;
- (CItemDropEvent_Builder*) clearAccountId;

- (BOOL) hasTimeStamp;
- (uint32_t) timeStamp;
- (CItemDropEvent_Builder*) setTimeStamp:(uint32_t) value;
- (CItemDropEvent_Builder*) clearTimeStamp;

- (BOOL) hasDefIndex;
- (uint32_t) defIndex;
- (CItemDropEvent_Builder*) setDefIndex:(uint32_t) value;
- (CItemDropEvent_Builder*) clearDefIndex;

- (BOOL) hasItemId;
- (uint64_t) itemId;
- (CItemDropEvent_Builder*) setItemId:(uint64_t) value;
- (CItemDropEvent_Builder*) clearItemId;

- (BOOL) hasGamesPlayedSinceLastDrop;
- (uint32_t) gamesPlayedSinceLastDrop;
- (CItemDropEvent_Builder*) setGamesPlayedSinceLastDrop:(uint32_t) value;
- (CItemDropEvent_Builder*) clearGamesPlayedSinceLastDrop;

- (BOOL) hasTimePlayedSinceLastDrop;
- (uint32_t) timePlayedSinceLastDrop;
- (CItemDropEvent_Builder*) setTimePlayedSinceLastDrop:(uint32_t) value;
- (CItemDropEvent_Builder*) clearTimePlayedSinceLastDrop;

- (BOOL) hasDropBonus;
- (Float32) dropBonus;
- (CItemDropEvent_Builder*) setDropBonus:(Float32) value;
- (CItemDropEvent_Builder*) clearDropBonus;

- (BOOL) hasRarity;
- (uint32_t) rarity;
- (CItemDropEvent_Builder*) setRarity:(uint32_t) value;
- (CItemDropEvent_Builder*) clearRarity;

- (BOOL) hasCurrentScore;
- (uint32_t) currentScore;
- (CItemDropEvent_Builder*) setCurrentScore:(uint32_t) value;
- (CItemDropEvent_Builder*) clearCurrentScore;

- (BOOL) hasNextDropAt;
- (uint32_t) nextDropAt;
- (CItemDropEvent_Builder*) setNextDropAt:(uint32_t) value;
- (CItemDropEvent_Builder*) clearNextDropAt;

- (BOOL) hasIsCrate;
- (BOOL) isCrate;
- (CItemDropEvent_Builder*) setIsCrate:(BOOL) value;
- (CItemDropEvent_Builder*) clearIsCrate;

- (BOOL) hasIsLevelReward;
- (BOOL) isLevelReward;
- (CItemDropEvent_Builder*) setIsLevelReward:(BOOL) value;
- (CItemDropEvent_Builder*) clearIsLevelReward;

- (BOOL) hasXp;
- (uint32_t) xp;
- (CItemDropEvent_Builder*) setXp:(uint32_t) value;
- (CItemDropEvent_Builder*) clearXp;

- (BOOL) hasLevel;
- (uint32_t) level;
- (CItemDropEvent_Builder*) setLevel:(uint32_t) value;
- (CItemDropEvent_Builder*) clearLevel;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CItemDropEvent_Builder*) setMatchId:(uint32_t) value;
- (CItemDropEvent_Builder*) clearMatchId;
@end

@interface CXPGainEvent : PBGeneratedMessage {
@private
  BOOL hasLeveledUp_:1;
  BOOL hasDropRateBonus_:1;
  BOOL hasMatchId_:1;
  BOOL hasAccountId_:1;
  BOOL hasTimeStamp_:1;
  BOOL hasDuration_:1;
  BOOL hasBaseXp_:1;
  BOOL hasTimeRewardXp_:1;
  BOOL hasDropRateBonusXp_:1;
  BOOL hasFinalXp_:1;
  BOOL leveledUp_:1;
  Float32 dropRateBonus;
  uint32_t matchId;
  uint32_t accountId;
  uint32_t timeStamp;
  uint32_t duration;
  uint32_t baseXp;
  uint32_t timeRewardXp;
  uint32_t dropRateBonusXp;
  uint32_t finalXp;
}
- (BOOL) hasMatchId;
- (BOOL) hasAccountId;
- (BOOL) hasTimeStamp;
- (BOOL) hasDuration;
- (BOOL) hasBaseXp;
- (BOOL) hasTimeRewardXp;
- (BOOL) hasDropRateBonusXp;
- (BOOL) hasFinalXp;
- (BOOL) hasDropRateBonus;
- (BOOL) hasLeveledUp;
@property (readonly) uint32_t matchId;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t timeStamp;
@property (readonly) uint32_t duration;
@property (readonly) uint32_t baseXp;
@property (readonly) uint32_t timeRewardXp;
@property (readonly) uint32_t dropRateBonusXp;
@property (readonly) uint32_t finalXp;
@property (readonly) Float32 dropRateBonus;
- (BOOL) leveledUp;

+ (CXPGainEvent*) defaultInstance;
- (CXPGainEvent*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CXPGainEvent_Builder*) builder;
+ (CXPGainEvent_Builder*) builder;
+ (CXPGainEvent_Builder*) builderWithPrototype:(CXPGainEvent*) prototype;
- (CXPGainEvent_Builder*) toBuilder;

+ (CXPGainEvent*) parseFromData:(NSData*) data;
+ (CXPGainEvent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CXPGainEvent*) parseFromInputStream:(NSInputStream*) input;
+ (CXPGainEvent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CXPGainEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CXPGainEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CXPGainEvent_Builder : PBGeneratedMessage_Builder {
@private
  CXPGainEvent* _builderResult;
}

- (CXPGainEvent*) defaultInstance;

- (CXPGainEvent_Builder*) clear;
- (CXPGainEvent_Builder*) clone;

- (CXPGainEvent*) build;
- (CXPGainEvent*) buildPartial;

- (CXPGainEvent_Builder*) mergeFrom:(CXPGainEvent*) other;
- (CXPGainEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CXPGainEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CXPGainEvent_Builder*) setMatchId:(uint32_t) value;
- (CXPGainEvent_Builder*) clearMatchId;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CXPGainEvent_Builder*) setAccountId:(uint32_t) value;
- (CXPGainEvent_Builder*) clearAccountId;

- (BOOL) hasTimeStamp;
- (uint32_t) timeStamp;
- (CXPGainEvent_Builder*) setTimeStamp:(uint32_t) value;
- (CXPGainEvent_Builder*) clearTimeStamp;

- (BOOL) hasDuration;
- (uint32_t) duration;
- (CXPGainEvent_Builder*) setDuration:(uint32_t) value;
- (CXPGainEvent_Builder*) clearDuration;

- (BOOL) hasBaseXp;
- (uint32_t) baseXp;
- (CXPGainEvent_Builder*) setBaseXp:(uint32_t) value;
- (CXPGainEvent_Builder*) clearBaseXp;

- (BOOL) hasTimeRewardXp;
- (uint32_t) timeRewardXp;
- (CXPGainEvent_Builder*) setTimeRewardXp:(uint32_t) value;
- (CXPGainEvent_Builder*) clearTimeRewardXp;

- (BOOL) hasDropRateBonusXp;
- (uint32_t) dropRateBonusXp;
- (CXPGainEvent_Builder*) setDropRateBonusXp:(uint32_t) value;
- (CXPGainEvent_Builder*) clearDropRateBonusXp;

- (BOOL) hasFinalXp;
- (uint32_t) finalXp;
- (CXPGainEvent_Builder*) setFinalXp:(uint32_t) value;
- (CXPGainEvent_Builder*) clearFinalXp;

- (BOOL) hasDropRateBonus;
- (Float32) dropRateBonus;
- (CXPGainEvent_Builder*) setDropRateBonus:(Float32) value;
- (CXPGainEvent_Builder*) clearDropRateBonus;

- (BOOL) hasLeveledUp;
- (BOOL) leveledUp;
- (CXPGainEvent_Builder*) setLeveledUp:(BOOL) value;
- (CXPGainEvent_Builder*) clearLeveledUp;
@end

@interface CLowPriPenalty : PBGeneratedMessage {
@private
  BOOL hasMatchId_:1;
  BOOL hasAccountId_:1;
  BOOL hasTimeStamp_:1;
  BOOL hasGamesSinceReportPenalty_:1;
  BOOL hasPendingInGameReports_:1;
  BOOL hasPendingOutOfGameReports_:1;
  BOOL hasPendingDetectedReports_:1;
  BOOL hasReportPenaltyCount_:1;
  BOOL hasLastPenaltyDate_:1;
  BOOL hasLastAbandonDate_:1;
  BOOL hasAbandonPenaltyCount_:1;
  BOOL hasCompletedGameStreak_:1;
  BOOL hasAbandonTimeGiven_:1;
  BOOL hasReportTimeGiven_:1;
  BOOL hasRank_:1;
  uint32_t matchId;
  uint32_t accountId;
  uint32_t timeStamp;
  uint32_t gamesSinceReportPenalty;
  uint32_t pendingInGameReports;
  uint32_t pendingOutOfGameReports;
  uint32_t pendingDetectedReports;
  uint32_t reportPenaltyCount;
  uint32_t lastPenaltyDate;
  uint32_t lastAbandonDate;
  uint32_t abandonPenaltyCount;
  uint32_t completedGameStreak;
  uint32_t abandonTimeGiven;
  uint32_t reportTimeGiven;
  uint32_t rank;
}
- (BOOL) hasMatchId;
- (BOOL) hasAccountId;
- (BOOL) hasTimeStamp;
- (BOOL) hasGamesSinceReportPenalty;
- (BOOL) hasPendingInGameReports;
- (BOOL) hasPendingOutOfGameReports;
- (BOOL) hasPendingDetectedReports;
- (BOOL) hasReportPenaltyCount;
- (BOOL) hasLastPenaltyDate;
- (BOOL) hasLastAbandonDate;
- (BOOL) hasAbandonPenaltyCount;
- (BOOL) hasCompletedGameStreak;
- (BOOL) hasAbandonTimeGiven;
- (BOOL) hasReportTimeGiven;
- (BOOL) hasRank;
@property (readonly) uint32_t matchId;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t timeStamp;
@property (readonly) uint32_t gamesSinceReportPenalty;
@property (readonly) uint32_t pendingInGameReports;
@property (readonly) uint32_t pendingOutOfGameReports;
@property (readonly) uint32_t pendingDetectedReports;
@property (readonly) uint32_t reportPenaltyCount;
@property (readonly) uint32_t lastPenaltyDate;
@property (readonly) uint32_t lastAbandonDate;
@property (readonly) uint32_t abandonPenaltyCount;
@property (readonly) uint32_t completedGameStreak;
@property (readonly) uint32_t abandonTimeGiven;
@property (readonly) uint32_t reportTimeGiven;
@property (readonly) uint32_t rank;

+ (CLowPriPenalty*) defaultInstance;
- (CLowPriPenalty*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CLowPriPenalty_Builder*) builder;
+ (CLowPriPenalty_Builder*) builder;
+ (CLowPriPenalty_Builder*) builderWithPrototype:(CLowPriPenalty*) prototype;
- (CLowPriPenalty_Builder*) toBuilder;

+ (CLowPriPenalty*) parseFromData:(NSData*) data;
+ (CLowPriPenalty*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLowPriPenalty*) parseFromInputStream:(NSInputStream*) input;
+ (CLowPriPenalty*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLowPriPenalty*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CLowPriPenalty*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CLowPriPenalty_Builder : PBGeneratedMessage_Builder {
@private
  CLowPriPenalty* _builderResult;
}

- (CLowPriPenalty*) defaultInstance;

- (CLowPriPenalty_Builder*) clear;
- (CLowPriPenalty_Builder*) clone;

- (CLowPriPenalty*) build;
- (CLowPriPenalty*) buildPartial;

- (CLowPriPenalty_Builder*) mergeFrom:(CLowPriPenalty*) other;
- (CLowPriPenalty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CLowPriPenalty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CLowPriPenalty_Builder*) setMatchId:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearMatchId;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CLowPriPenalty_Builder*) setAccountId:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearAccountId;

- (BOOL) hasTimeStamp;
- (uint32_t) timeStamp;
- (CLowPriPenalty_Builder*) setTimeStamp:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearTimeStamp;

- (BOOL) hasGamesSinceReportPenalty;
- (uint32_t) gamesSinceReportPenalty;
- (CLowPriPenalty_Builder*) setGamesSinceReportPenalty:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearGamesSinceReportPenalty;

- (BOOL) hasPendingInGameReports;
- (uint32_t) pendingInGameReports;
- (CLowPriPenalty_Builder*) setPendingInGameReports:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearPendingInGameReports;

- (BOOL) hasPendingOutOfGameReports;
- (uint32_t) pendingOutOfGameReports;
- (CLowPriPenalty_Builder*) setPendingOutOfGameReports:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearPendingOutOfGameReports;

- (BOOL) hasPendingDetectedReports;
- (uint32_t) pendingDetectedReports;
- (CLowPriPenalty_Builder*) setPendingDetectedReports:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearPendingDetectedReports;

- (BOOL) hasReportPenaltyCount;
- (uint32_t) reportPenaltyCount;
- (CLowPriPenalty_Builder*) setReportPenaltyCount:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearReportPenaltyCount;

- (BOOL) hasLastPenaltyDate;
- (uint32_t) lastPenaltyDate;
- (CLowPriPenalty_Builder*) setLastPenaltyDate:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearLastPenaltyDate;

- (BOOL) hasLastAbandonDate;
- (uint32_t) lastAbandonDate;
- (CLowPriPenalty_Builder*) setLastAbandonDate:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearLastAbandonDate;

- (BOOL) hasAbandonPenaltyCount;
- (uint32_t) abandonPenaltyCount;
- (CLowPriPenalty_Builder*) setAbandonPenaltyCount:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearAbandonPenaltyCount;

- (BOOL) hasCompletedGameStreak;
- (uint32_t) completedGameStreak;
- (CLowPriPenalty_Builder*) setCompletedGameStreak:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearCompletedGameStreak;

- (BOOL) hasAbandonTimeGiven;
- (uint32_t) abandonTimeGiven;
- (CLowPriPenalty_Builder*) setAbandonTimeGiven:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearAbandonTimeGiven;

- (BOOL) hasReportTimeGiven;
- (uint32_t) reportTimeGiven;
- (CLowPriPenalty_Builder*) setReportTimeGiven:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearReportTimeGiven;

- (BOOL) hasRank;
- (uint32_t) rank;
- (CLowPriPenalty_Builder*) setRank:(uint32_t) value;
- (CLowPriPenalty_Builder*) clearRank;
@end

@interface CMsgDOTAWelcome : PBGeneratedMessage {
@private
  BOOL hasSpectatorOnly_:1;
  BOOL hasAllowTeamCreation_:1;
  BOOL hasTournamentAdmin_:1;
  BOOL hasTournamentBroadcaster_:1;
  BOOL hasStoreItemHash_:1;
  BOOL spectatorOnly_:1;
  BOOL allowTeamCreation_:1;
  BOOL tournamentAdmin_:1;
  BOOL tournamentBroadcaster_:1;
  uint32_t storeItemHash;
}
- (BOOL) hasSpectatorOnly;
- (BOOL) hasAllowTeamCreation;
- (BOOL) hasTournamentAdmin;
- (BOOL) hasTournamentBroadcaster;
- (BOOL) hasStoreItemHash;
- (BOOL) spectatorOnly;
- (BOOL) allowTeamCreation;
- (BOOL) tournamentAdmin;
- (BOOL) tournamentBroadcaster;
@property (readonly) uint32_t storeItemHash;

+ (CMsgDOTAWelcome*) defaultInstance;
- (CMsgDOTAWelcome*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAWelcome_Builder*) builder;
+ (CMsgDOTAWelcome_Builder*) builder;
+ (CMsgDOTAWelcome_Builder*) builderWithPrototype:(CMsgDOTAWelcome*) prototype;
- (CMsgDOTAWelcome_Builder*) toBuilder;

+ (CMsgDOTAWelcome*) parseFromData:(NSData*) data;
+ (CMsgDOTAWelcome*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAWelcome*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAWelcome*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAWelcome*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAWelcome*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAWelcome_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAWelcome* _builderResult;
}

- (CMsgDOTAWelcome*) defaultInstance;

- (CMsgDOTAWelcome_Builder*) clear;
- (CMsgDOTAWelcome_Builder*) clone;

- (CMsgDOTAWelcome*) build;
- (CMsgDOTAWelcome*) buildPartial;

- (CMsgDOTAWelcome_Builder*) mergeFrom:(CMsgDOTAWelcome*) other;
- (CMsgDOTAWelcome_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAWelcome_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSpectatorOnly;
- (BOOL) spectatorOnly;
- (CMsgDOTAWelcome_Builder*) setSpectatorOnly:(BOOL) value;
- (CMsgDOTAWelcome_Builder*) clearSpectatorOnly;

- (BOOL) hasAllowTeamCreation;
- (BOOL) allowTeamCreation;
- (CMsgDOTAWelcome_Builder*) setAllowTeamCreation:(BOOL) value;
- (CMsgDOTAWelcome_Builder*) clearAllowTeamCreation;

- (BOOL) hasTournamentAdmin;
- (BOOL) tournamentAdmin;
- (CMsgDOTAWelcome_Builder*) setTournamentAdmin:(BOOL) value;
- (CMsgDOTAWelcome_Builder*) clearTournamentAdmin;

- (BOOL) hasTournamentBroadcaster;
- (BOOL) tournamentBroadcaster;
- (CMsgDOTAWelcome_Builder*) setTournamentBroadcaster:(BOOL) value;
- (CMsgDOTAWelcome_Builder*) clearTournamentBroadcaster;

- (BOOL) hasStoreItemHash;
- (uint32_t) storeItemHash;
- (CMsgDOTAWelcome_Builder*) setStoreItemHash:(uint32_t) value;
- (CMsgDOTAWelcome_Builder*) clearStoreItemHash;
@end

@interface CSODOTAGameHeroFavorites : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  BOOL hasHeroId_:1;
  uint32_t accountId;
  uint32_t heroId;
}
- (BOOL) hasAccountId;
- (BOOL) hasHeroId;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t heroId;

+ (CSODOTAGameHeroFavorites*) defaultInstance;
- (CSODOTAGameHeroFavorites*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSODOTAGameHeroFavorites_Builder*) builder;
+ (CSODOTAGameHeroFavorites_Builder*) builder;
+ (CSODOTAGameHeroFavorites_Builder*) builderWithPrototype:(CSODOTAGameHeroFavorites*) prototype;
- (CSODOTAGameHeroFavorites_Builder*) toBuilder;

+ (CSODOTAGameHeroFavorites*) parseFromData:(NSData*) data;
+ (CSODOTAGameHeroFavorites*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAGameHeroFavorites*) parseFromInputStream:(NSInputStream*) input;
+ (CSODOTAGameHeroFavorites*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSODOTAGameHeroFavorites*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSODOTAGameHeroFavorites*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSODOTAGameHeroFavorites_Builder : PBGeneratedMessage_Builder {
@private
  CSODOTAGameHeroFavorites* _builderResult;
}

- (CSODOTAGameHeroFavorites*) defaultInstance;

- (CSODOTAGameHeroFavorites_Builder*) clear;
- (CSODOTAGameHeroFavorites_Builder*) clone;

- (CSODOTAGameHeroFavorites*) build;
- (CSODOTAGameHeroFavorites*) buildPartial;

- (CSODOTAGameHeroFavorites_Builder*) mergeFrom:(CSODOTAGameHeroFavorites*) other;
- (CSODOTAGameHeroFavorites_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSODOTAGameHeroFavorites_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CSODOTAGameHeroFavorites_Builder*) setAccountId:(uint32_t) value;
- (CSODOTAGameHeroFavorites_Builder*) clearAccountId;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CSODOTAGameHeroFavorites_Builder*) setHeroId:(uint32_t) value;
- (CSODOTAGameHeroFavorites_Builder*) clearHeroId;
@end

@interface CMsgDOTAHeroFavoritesAdd : PBGeneratedMessage {
@private
  BOOL hasHeroId_:1;
  uint32_t heroId;
}
- (BOOL) hasHeroId;
@property (readonly) uint32_t heroId;

+ (CMsgDOTAHeroFavoritesAdd*) defaultInstance;
- (CMsgDOTAHeroFavoritesAdd*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAHeroFavoritesAdd_Builder*) builder;
+ (CMsgDOTAHeroFavoritesAdd_Builder*) builder;
+ (CMsgDOTAHeroFavoritesAdd_Builder*) builderWithPrototype:(CMsgDOTAHeroFavoritesAdd*) prototype;
- (CMsgDOTAHeroFavoritesAdd_Builder*) toBuilder;

+ (CMsgDOTAHeroFavoritesAdd*) parseFromData:(NSData*) data;
+ (CMsgDOTAHeroFavoritesAdd*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHeroFavoritesAdd*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAHeroFavoritesAdd*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHeroFavoritesAdd*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAHeroFavoritesAdd*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAHeroFavoritesAdd_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAHeroFavoritesAdd* _builderResult;
}

- (CMsgDOTAHeroFavoritesAdd*) defaultInstance;

- (CMsgDOTAHeroFavoritesAdd_Builder*) clear;
- (CMsgDOTAHeroFavoritesAdd_Builder*) clone;

- (CMsgDOTAHeroFavoritesAdd*) build;
- (CMsgDOTAHeroFavoritesAdd*) buildPartial;

- (CMsgDOTAHeroFavoritesAdd_Builder*) mergeFrom:(CMsgDOTAHeroFavoritesAdd*) other;
- (CMsgDOTAHeroFavoritesAdd_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAHeroFavoritesAdd_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTAHeroFavoritesAdd_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTAHeroFavoritesAdd_Builder*) clearHeroId;
@end

@interface CMsgDOTAHeroFavoritesRemove : PBGeneratedMessage {
@private
  BOOL hasHeroId_:1;
  uint32_t heroId;
}
- (BOOL) hasHeroId;
@property (readonly) uint32_t heroId;

+ (CMsgDOTAHeroFavoritesRemove*) defaultInstance;
- (CMsgDOTAHeroFavoritesRemove*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAHeroFavoritesRemove_Builder*) builder;
+ (CMsgDOTAHeroFavoritesRemove_Builder*) builder;
+ (CMsgDOTAHeroFavoritesRemove_Builder*) builderWithPrototype:(CMsgDOTAHeroFavoritesRemove*) prototype;
- (CMsgDOTAHeroFavoritesRemove_Builder*) toBuilder;

+ (CMsgDOTAHeroFavoritesRemove*) parseFromData:(NSData*) data;
+ (CMsgDOTAHeroFavoritesRemove*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHeroFavoritesRemove*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAHeroFavoritesRemove*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHeroFavoritesRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAHeroFavoritesRemove*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAHeroFavoritesRemove_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAHeroFavoritesRemove* _builderResult;
}

- (CMsgDOTAHeroFavoritesRemove*) defaultInstance;

- (CMsgDOTAHeroFavoritesRemove_Builder*) clear;
- (CMsgDOTAHeroFavoritesRemove_Builder*) clone;

- (CMsgDOTAHeroFavoritesRemove*) build;
- (CMsgDOTAHeroFavoritesRemove*) buildPartial;

- (CMsgDOTAHeroFavoritesRemove_Builder*) mergeFrom:(CMsgDOTAHeroFavoritesRemove*) other;
- (CMsgDOTAHeroFavoritesRemove_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAHeroFavoritesRemove_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTAHeroFavoritesRemove_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTAHeroFavoritesRemove_Builder*) clearHeroId;
@end

@interface CMsgDOTAPlayerHeroesRecentRequest : PBGeneratedMessage {
@private
}

+ (CMsgDOTAPlayerHeroesRecentRequest*) defaultInstance;
- (CMsgDOTAPlayerHeroesRecentRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAPlayerHeroesRecentRequest_Builder*) builder;
+ (CMsgDOTAPlayerHeroesRecentRequest_Builder*) builder;
+ (CMsgDOTAPlayerHeroesRecentRequest_Builder*) builderWithPrototype:(CMsgDOTAPlayerHeroesRecentRequest*) prototype;
- (CMsgDOTAPlayerHeroesRecentRequest_Builder*) toBuilder;

+ (CMsgDOTAPlayerHeroesRecentRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTAPlayerHeroesRecentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerHeroesRecentRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAPlayerHeroesRecentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerHeroesRecentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAPlayerHeroesRecentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAPlayerHeroesRecentRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAPlayerHeroesRecentRequest* _builderResult;
}

- (CMsgDOTAPlayerHeroesRecentRequest*) defaultInstance;

- (CMsgDOTAPlayerHeroesRecentRequest_Builder*) clear;
- (CMsgDOTAPlayerHeroesRecentRequest_Builder*) clone;

- (CMsgDOTAPlayerHeroesRecentRequest*) build;
- (CMsgDOTAPlayerHeroesRecentRequest*) buildPartial;

- (CMsgDOTAPlayerHeroesRecentRequest_Builder*) mergeFrom:(CMsgDOTAPlayerHeroesRecentRequest*) other;
- (CMsgDOTAPlayerHeroesRecentRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAPlayerHeroesRecentRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAPlayerHeroesRecentResponse : PBGeneratedMessage {
@private
  BOOL hasResult_:1;
  uint32_t result;
  PBAppendableArray * heroIdsArray;
}
- (BOOL) hasResult;
@property (readonly) uint32_t result;
@property (readonly, retain) PBArray * heroIds;
- (uint32_t)heroIdsAtIndex:(NSUInteger)index;

+ (CMsgDOTAPlayerHeroesRecentResponse*) defaultInstance;
- (CMsgDOTAPlayerHeroesRecentResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder*) builder;
+ (CMsgDOTAPlayerHeroesRecentResponse_Builder*) builder;
+ (CMsgDOTAPlayerHeroesRecentResponse_Builder*) builderWithPrototype:(CMsgDOTAPlayerHeroesRecentResponse*) prototype;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder*) toBuilder;

+ (CMsgDOTAPlayerHeroesRecentResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAPlayerHeroesRecentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerHeroesRecentResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAPlayerHeroesRecentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAPlayerHeroesRecentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAPlayerHeroesRecentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAPlayerHeroesRecentResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAPlayerHeroesRecentResponse* _builderResult;
}

- (CMsgDOTAPlayerHeroesRecentResponse*) defaultInstance;

- (CMsgDOTAPlayerHeroesRecentResponse_Builder*) clear;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder*) clone;

- (CMsgDOTAPlayerHeroesRecentResponse*) build;
- (CMsgDOTAPlayerHeroesRecentResponse*) buildPartial;

- (CMsgDOTAPlayerHeroesRecentResponse_Builder*) mergeFrom:(CMsgDOTAPlayerHeroesRecentResponse*) other;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResult;
- (uint32_t) result;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder*) setResult:(uint32_t) value;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder*) clearResult;

- (PBAppendableArray *)heroIds;
- (uint32_t)heroIdsAtIndex:(NSUInteger)index;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder *)addHeroIds:(uint32_t)value;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder *)setHeroIdsArray:(NSArray *)array;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder *)setHeroIdsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgDOTAPlayerHeroesRecentResponse_Builder *)clearHeroIds;
@end

@interface CDOTAOverview : PBGeneratedMessage {
@private
  PBAppendableArray * playersByRegionArray;
  PBAppendableArray * gameServersByRegionArray;
  PBAppendableArray * proxyServersByRegionArray;
}
@property (readonly, retain) PBArray * playersByRegion;
@property (readonly, retain) PBArray * gameServersByRegion;
@property (readonly, retain) PBArray * proxyServersByRegion;
- (CDOTAOverview_PlayersByRegion*)playersByRegionAtIndex:(NSUInteger)index;
- (CDOTAOverview_ServersByRegion*)gameServersByRegionAtIndex:(NSUInteger)index;
- (CDOTAOverview_ServersByRegion*)proxyServersByRegionAtIndex:(NSUInteger)index;

+ (CDOTAOverview*) defaultInstance;
- (CDOTAOverview*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CDOTAOverview_Builder*) builder;
+ (CDOTAOverview_Builder*) builder;
+ (CDOTAOverview_Builder*) builderWithPrototype:(CDOTAOverview*) prototype;
- (CDOTAOverview_Builder*) toBuilder;

+ (CDOTAOverview*) parseFromData:(NSData*) data;
+ (CDOTAOverview*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CDOTAOverview*) parseFromInputStream:(NSInputStream*) input;
+ (CDOTAOverview*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CDOTAOverview*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CDOTAOverview*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CDOTAOverview_PlayersByRegion : PBGeneratedMessage {
@private
  BOOL hasRegion_:1;
  BOOL hasTotal_:1;
  BOOL hasInQueue_:1;
  BOOL hasInMatch_:1;
  BOOL hasInPractice_:1;
  BOOL hasInTournament_:1;
  BOOL hasInTutorial_:1;
  BOOL hasInCoop_:1;
  BOOL hasInTeamMatch_:1;
  BOOL hasSpectating_:1;
  BOOL hasIdle_:1;
  int32_t region;
  int32_t total;
  int32_t inQueue;
  int32_t inMatch;
  int32_t inPractice;
  int32_t inTournament;
  int32_t inTutorial;
  int32_t inCoop;
  int32_t inTeamMatch;
  int32_t spectating;
  int32_t idle;
}
- (BOOL) hasRegion;
- (BOOL) hasTotal;
- (BOOL) hasInQueue;
- (BOOL) hasInMatch;
- (BOOL) hasInPractice;
- (BOOL) hasInTournament;
- (BOOL) hasInTutorial;
- (BOOL) hasInCoop;
- (BOOL) hasInTeamMatch;
- (BOOL) hasSpectating;
- (BOOL) hasIdle;
@property (readonly) int32_t region;
@property (readonly) int32_t total;
@property (readonly) int32_t inQueue;
@property (readonly) int32_t inMatch;
@property (readonly) int32_t inPractice;
@property (readonly) int32_t inTournament;
@property (readonly) int32_t inTutorial;
@property (readonly) int32_t inCoop;
@property (readonly) int32_t inTeamMatch;
@property (readonly) int32_t spectating;
@property (readonly) int32_t idle;

+ (CDOTAOverview_PlayersByRegion*) defaultInstance;
- (CDOTAOverview_PlayersByRegion*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CDOTAOverview_PlayersByRegion_Builder*) builder;
+ (CDOTAOverview_PlayersByRegion_Builder*) builder;
+ (CDOTAOverview_PlayersByRegion_Builder*) builderWithPrototype:(CDOTAOverview_PlayersByRegion*) prototype;
- (CDOTAOverview_PlayersByRegion_Builder*) toBuilder;

+ (CDOTAOverview_PlayersByRegion*) parseFromData:(NSData*) data;
+ (CDOTAOverview_PlayersByRegion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CDOTAOverview_PlayersByRegion*) parseFromInputStream:(NSInputStream*) input;
+ (CDOTAOverview_PlayersByRegion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CDOTAOverview_PlayersByRegion*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CDOTAOverview_PlayersByRegion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CDOTAOverview_PlayersByRegion_Builder : PBGeneratedMessage_Builder {
@private
  CDOTAOverview_PlayersByRegion* _builderResult;
}

- (CDOTAOverview_PlayersByRegion*) defaultInstance;

- (CDOTAOverview_PlayersByRegion_Builder*) clear;
- (CDOTAOverview_PlayersByRegion_Builder*) clone;

- (CDOTAOverview_PlayersByRegion*) build;
- (CDOTAOverview_PlayersByRegion*) buildPartial;

- (CDOTAOverview_PlayersByRegion_Builder*) mergeFrom:(CDOTAOverview_PlayersByRegion*) other;
- (CDOTAOverview_PlayersByRegion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CDOTAOverview_PlayersByRegion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRegion;
- (int32_t) region;
- (CDOTAOverview_PlayersByRegion_Builder*) setRegion:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearRegion;

- (BOOL) hasTotal;
- (int32_t) total;
- (CDOTAOverview_PlayersByRegion_Builder*) setTotal:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearTotal;

- (BOOL) hasInQueue;
- (int32_t) inQueue;
- (CDOTAOverview_PlayersByRegion_Builder*) setInQueue:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearInQueue;

- (BOOL) hasInMatch;
- (int32_t) inMatch;
- (CDOTAOverview_PlayersByRegion_Builder*) setInMatch:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearInMatch;

- (BOOL) hasInPractice;
- (int32_t) inPractice;
- (CDOTAOverview_PlayersByRegion_Builder*) setInPractice:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearInPractice;

- (BOOL) hasInTournament;
- (int32_t) inTournament;
- (CDOTAOverview_PlayersByRegion_Builder*) setInTournament:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearInTournament;

- (BOOL) hasInTutorial;
- (int32_t) inTutorial;
- (CDOTAOverview_PlayersByRegion_Builder*) setInTutorial:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearInTutorial;

- (BOOL) hasInCoop;
- (int32_t) inCoop;
- (CDOTAOverview_PlayersByRegion_Builder*) setInCoop:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearInCoop;

- (BOOL) hasInTeamMatch;
- (int32_t) inTeamMatch;
- (CDOTAOverview_PlayersByRegion_Builder*) setInTeamMatch:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearInTeamMatch;

- (BOOL) hasSpectating;
- (int32_t) spectating;
- (CDOTAOverview_PlayersByRegion_Builder*) setSpectating:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearSpectating;

- (BOOL) hasIdle;
- (int32_t) idle;
- (CDOTAOverview_PlayersByRegion_Builder*) setIdle:(int32_t) value;
- (CDOTAOverview_PlayersByRegion_Builder*) clearIdle;
@end

@interface CDOTAOverview_ServersByRegion : PBGeneratedMessage {
@private
  BOOL hasRegion_:1;
  BOOL hasInUse_:1;
  BOOL hasAvailable_:1;
  int32_t region;
  int32_t inUse;
  int32_t available;
}
- (BOOL) hasRegion;
- (BOOL) hasInUse;
- (BOOL) hasAvailable;
@property (readonly) int32_t region;
@property (readonly) int32_t inUse;
@property (readonly) int32_t available;

+ (CDOTAOverview_ServersByRegion*) defaultInstance;
- (CDOTAOverview_ServersByRegion*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CDOTAOverview_ServersByRegion_Builder*) builder;
+ (CDOTAOverview_ServersByRegion_Builder*) builder;
+ (CDOTAOverview_ServersByRegion_Builder*) builderWithPrototype:(CDOTAOverview_ServersByRegion*) prototype;
- (CDOTAOverview_ServersByRegion_Builder*) toBuilder;

+ (CDOTAOverview_ServersByRegion*) parseFromData:(NSData*) data;
+ (CDOTAOverview_ServersByRegion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CDOTAOverview_ServersByRegion*) parseFromInputStream:(NSInputStream*) input;
+ (CDOTAOverview_ServersByRegion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CDOTAOverview_ServersByRegion*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CDOTAOverview_ServersByRegion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CDOTAOverview_ServersByRegion_Builder : PBGeneratedMessage_Builder {
@private
  CDOTAOverview_ServersByRegion* _builderResult;
}

- (CDOTAOverview_ServersByRegion*) defaultInstance;

- (CDOTAOverview_ServersByRegion_Builder*) clear;
- (CDOTAOverview_ServersByRegion_Builder*) clone;

- (CDOTAOverview_ServersByRegion*) build;
- (CDOTAOverview_ServersByRegion*) buildPartial;

- (CDOTAOverview_ServersByRegion_Builder*) mergeFrom:(CDOTAOverview_ServersByRegion*) other;
- (CDOTAOverview_ServersByRegion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CDOTAOverview_ServersByRegion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRegion;
- (int32_t) region;
- (CDOTAOverview_ServersByRegion_Builder*) setRegion:(int32_t) value;
- (CDOTAOverview_ServersByRegion_Builder*) clearRegion;

- (BOOL) hasInUse;
- (int32_t) inUse;
- (CDOTAOverview_ServersByRegion_Builder*) setInUse:(int32_t) value;
- (CDOTAOverview_ServersByRegion_Builder*) clearInUse;

- (BOOL) hasAvailable;
- (int32_t) available;
- (CDOTAOverview_ServersByRegion_Builder*) setAvailable:(int32_t) value;
- (CDOTAOverview_ServersByRegion_Builder*) clearAvailable;
@end

@interface CDOTAOverview_Builder : PBGeneratedMessage_Builder {
@private
  CDOTAOverview* _builderResult;
}

- (CDOTAOverview*) defaultInstance;

- (CDOTAOverview_Builder*) clear;
- (CDOTAOverview_Builder*) clone;

- (CDOTAOverview*) build;
- (CDOTAOverview*) buildPartial;

- (CDOTAOverview_Builder*) mergeFrom:(CDOTAOverview*) other;
- (CDOTAOverview_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CDOTAOverview_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)playersByRegion;
- (CDOTAOverview_PlayersByRegion*)playersByRegionAtIndex:(NSUInteger)index;
- (CDOTAOverview_Builder *)addPlayersByRegion:(CDOTAOverview_PlayersByRegion*)value;
- (CDOTAOverview_Builder *)setPlayersByRegionArray:(NSArray *)array;
- (CDOTAOverview_Builder *)setPlayersByRegionValues:(const CDOTAOverview_PlayersByRegion* *)values count:(NSUInteger)count;
- (CDOTAOverview_Builder *)clearPlayersByRegion;

- (PBAppendableArray *)gameServersByRegion;
- (CDOTAOverview_ServersByRegion*)gameServersByRegionAtIndex:(NSUInteger)index;
- (CDOTAOverview_Builder *)addGameServersByRegion:(CDOTAOverview_ServersByRegion*)value;
- (CDOTAOverview_Builder *)setGameServersByRegionArray:(NSArray *)array;
- (CDOTAOverview_Builder *)setGameServersByRegionValues:(const CDOTAOverview_ServersByRegion* *)values count:(NSUInteger)count;
- (CDOTAOverview_Builder *)clearGameServersByRegion;

- (PBAppendableArray *)proxyServersByRegion;
- (CDOTAOverview_ServersByRegion*)proxyServersByRegionAtIndex:(NSUInteger)index;
- (CDOTAOverview_Builder *)addProxyServersByRegion:(CDOTAOverview_ServersByRegion*)value;
- (CDOTAOverview_Builder *)setProxyServersByRegionArray:(NSArray *)array;
- (CDOTAOverview_Builder *)setProxyServersByRegionValues:(const CDOTAOverview_ServersByRegion* *)values count:(NSUInteger)count;
- (CDOTAOverview_Builder *)clearProxyServersByRegion;
@end

@interface CMsgSetShowcaseHero : PBGeneratedMessage {
@private
  BOOL hasShowcaseHeroId_:1;
  uint32_t showcaseHeroId;
}
- (BOOL) hasShowcaseHeroId;
@property (readonly) uint32_t showcaseHeroId;

+ (CMsgSetShowcaseHero*) defaultInstance;
- (CMsgSetShowcaseHero*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSetShowcaseHero_Builder*) builder;
+ (CMsgSetShowcaseHero_Builder*) builder;
+ (CMsgSetShowcaseHero_Builder*) builderWithPrototype:(CMsgSetShowcaseHero*) prototype;
- (CMsgSetShowcaseHero_Builder*) toBuilder;

+ (CMsgSetShowcaseHero*) parseFromData:(NSData*) data;
+ (CMsgSetShowcaseHero*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSetShowcaseHero*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSetShowcaseHero*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSetShowcaseHero*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSetShowcaseHero*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSetShowcaseHero_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSetShowcaseHero* _builderResult;
}

- (CMsgSetShowcaseHero*) defaultInstance;

- (CMsgSetShowcaseHero_Builder*) clear;
- (CMsgSetShowcaseHero_Builder*) clone;

- (CMsgSetShowcaseHero*) build;
- (CMsgSetShowcaseHero*) buildPartial;

- (CMsgSetShowcaseHero_Builder*) mergeFrom:(CMsgSetShowcaseHero*) other;
- (CMsgSetShowcaseHero_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSetShowcaseHero_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasShowcaseHeroId;
- (uint32_t) showcaseHeroId;
- (CMsgSetShowcaseHero_Builder*) setShowcaseHeroId:(uint32_t) value;
- (CMsgSetShowcaseHero_Builder*) clearShowcaseHeroId;
@end

@interface CMsgRequestLeagueInfo : PBGeneratedMessage {
@private
}

+ (CMsgRequestLeagueInfo*) defaultInstance;
- (CMsgRequestLeagueInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgRequestLeagueInfo_Builder*) builder;
+ (CMsgRequestLeagueInfo_Builder*) builder;
+ (CMsgRequestLeagueInfo_Builder*) builderWithPrototype:(CMsgRequestLeagueInfo*) prototype;
- (CMsgRequestLeagueInfo_Builder*) toBuilder;

+ (CMsgRequestLeagueInfo*) parseFromData:(NSData*) data;
+ (CMsgRequestLeagueInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRequestLeagueInfo*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgRequestLeagueInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRequestLeagueInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgRequestLeagueInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgRequestLeagueInfo_Builder : PBGeneratedMessage_Builder {
@private
  CMsgRequestLeagueInfo* _builderResult;
}

- (CMsgRequestLeagueInfo*) defaultInstance;

- (CMsgRequestLeagueInfo_Builder*) clear;
- (CMsgRequestLeagueInfo_Builder*) clone;

- (CMsgRequestLeagueInfo*) build;
- (CMsgRequestLeagueInfo*) buildPartial;

- (CMsgRequestLeagueInfo_Builder*) mergeFrom:(CMsgRequestLeagueInfo*) other;
- (CMsgRequestLeagueInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgRequestLeagueInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CLeague : PBGeneratedMessage {
@private
  BOOL hasLive_:1;
  BOOL hasFreeleague_:1;
  BOOL hasLeagueid_:1;
  BOOL live_:1;
  BOOL freeleague_:1;
  uint32_t leagueid;
}
- (BOOL) hasLeagueid;
- (BOOL) hasLive;
- (BOOL) hasFreeleague;
@property (readonly) uint32_t leagueid;
- (BOOL) live;
- (BOOL) freeleague;

+ (CLeague*) defaultInstance;
- (CLeague*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CLeague_Builder*) builder;
+ (CLeague_Builder*) builder;
+ (CLeague_Builder*) builderWithPrototype:(CLeague*) prototype;
- (CLeague_Builder*) toBuilder;

+ (CLeague*) parseFromData:(NSData*) data;
+ (CLeague*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLeague*) parseFromInputStream:(NSInputStream*) input;
+ (CLeague*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLeague*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CLeague*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CLeague_Builder : PBGeneratedMessage_Builder {
@private
  CLeague* _builderResult;
}

- (CLeague*) defaultInstance;

- (CLeague_Builder*) clear;
- (CLeague_Builder*) clone;

- (CLeague*) build;
- (CLeague*) buildPartial;

- (CLeague_Builder*) mergeFrom:(CLeague*) other;
- (CLeague_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CLeague_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLeagueid;
- (uint32_t) leagueid;
- (CLeague_Builder*) setLeagueid:(uint32_t) value;
- (CLeague_Builder*) clearLeagueid;

- (BOOL) hasLive;
- (BOOL) live;
- (CLeague_Builder*) setLive:(BOOL) value;
- (CLeague_Builder*) clearLive;

- (BOOL) hasFreeleague;
- (BOOL) freeleague;
- (CLeague_Builder*) setFreeleague:(BOOL) value;
- (CLeague_Builder*) clearFreeleague;
@end

@interface CMsgResponseLeagueInfo : PBGeneratedMessage {
@private
  PBAppendableArray * leaguesArray;
}
@property (readonly, retain) PBArray * leagues;
- (CLeague*)leaguesAtIndex:(NSUInteger)index;

+ (CMsgResponseLeagueInfo*) defaultInstance;
- (CMsgResponseLeagueInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgResponseLeagueInfo_Builder*) builder;
+ (CMsgResponseLeagueInfo_Builder*) builder;
+ (CMsgResponseLeagueInfo_Builder*) builderWithPrototype:(CMsgResponseLeagueInfo*) prototype;
- (CMsgResponseLeagueInfo_Builder*) toBuilder;

+ (CMsgResponseLeagueInfo*) parseFromData:(NSData*) data;
+ (CMsgResponseLeagueInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgResponseLeagueInfo*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgResponseLeagueInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgResponseLeagueInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgResponseLeagueInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgResponseLeagueInfo_Builder : PBGeneratedMessage_Builder {
@private
  CMsgResponseLeagueInfo* _builderResult;
}

- (CMsgResponseLeagueInfo*) defaultInstance;

- (CMsgResponseLeagueInfo_Builder*) clear;
- (CMsgResponseLeagueInfo_Builder*) clone;

- (CMsgResponseLeagueInfo*) build;
- (CMsgResponseLeagueInfo*) buildPartial;

- (CMsgResponseLeagueInfo_Builder*) mergeFrom:(CMsgResponseLeagueInfo*) other;
- (CMsgResponseLeagueInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgResponseLeagueInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)leagues;
- (CLeague*)leaguesAtIndex:(NSUInteger)index;
- (CMsgResponseLeagueInfo_Builder *)addLeagues:(CLeague*)value;
- (CMsgResponseLeagueInfo_Builder *)setLeaguesArray:(NSArray *)array;
- (CMsgResponseLeagueInfo_Builder *)setLeaguesValues:(const CLeague* *)values count:(NSUInteger)count;
- (CMsgResponseLeagueInfo_Builder *)clearLeagues;
@end

@interface CMsgTournamentItemEvent : PBGeneratedMessage {
@private
  BOOL hasReplayTime_:1;
  BOOL hasTvDelay_:1;
  BOOL hasDotaTime_:1;
  BOOL hasKillerAccountId_:1;
  BOOL hasVictimAccountId_:1;
  BOOL hasLootList_:1;
  BOOL hasEventTeam_:1;
  BOOL hasMultiKillCount_:1;
  BOOL hasWinnerScore_:1;
  BOOL hasLoserScore_:1;
  BOOL hasevent_type_:1;
  Float32 replayTime;
  int32_t tvDelay;
  int32_t dotaTime;
  uint32_t killerAccountId;
  uint32_t victimAccountId;
  NSString* lootList;
  uint32_t eventTeam;
  uint32_t multiKillCount;
  uint32_t winnerScore;
  uint32_t loserScore;
  DOTA_TournamentEvents event_type;
}
- (BOOL) hasKillerAccountId;
- (BOOL) hasVictimAccountId;
- (BOOL) hasevent_type;
- (BOOL) hasTvDelay;
- (BOOL) hasDotaTime;
- (BOOL) hasReplayTime;
- (BOOL) hasLootList;
- (BOOL) hasEventTeam;
- (BOOL) hasMultiKillCount;
- (BOOL) hasWinnerScore;
- (BOOL) hasLoserScore;
@property (readonly) uint32_t killerAccountId;
@property (readonly) uint32_t victimAccountId;
@property (readonly) DOTA_TournamentEvents event_type;
@property (readonly) int32_t tvDelay;
@property (readonly) int32_t dotaTime;
@property (readonly) Float32 replayTime;
@property (readonly, retain) NSString* lootList;
@property (readonly) uint32_t eventTeam;
@property (readonly) uint32_t multiKillCount;
@property (readonly) uint32_t winnerScore;
@property (readonly) uint32_t loserScore;

+ (CMsgTournamentItemEvent*) defaultInstance;
- (CMsgTournamentItemEvent*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTournamentItemEvent_Builder*) builder;
+ (CMsgTournamentItemEvent_Builder*) builder;
+ (CMsgTournamentItemEvent_Builder*) builderWithPrototype:(CMsgTournamentItemEvent*) prototype;
- (CMsgTournamentItemEvent_Builder*) toBuilder;

+ (CMsgTournamentItemEvent*) parseFromData:(NSData*) data;
+ (CMsgTournamentItemEvent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTournamentItemEvent*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTournamentItemEvent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTournamentItemEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTournamentItemEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTournamentItemEvent_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTournamentItemEvent* _builderResult;
}

- (CMsgTournamentItemEvent*) defaultInstance;

- (CMsgTournamentItemEvent_Builder*) clear;
- (CMsgTournamentItemEvent_Builder*) clone;

- (CMsgTournamentItemEvent*) build;
- (CMsgTournamentItemEvent*) buildPartial;

- (CMsgTournamentItemEvent_Builder*) mergeFrom:(CMsgTournamentItemEvent*) other;
- (CMsgTournamentItemEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTournamentItemEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKillerAccountId;
- (uint32_t) killerAccountId;
- (CMsgTournamentItemEvent_Builder*) setKillerAccountId:(uint32_t) value;
- (CMsgTournamentItemEvent_Builder*) clearKillerAccountId;

- (BOOL) hasVictimAccountId;
- (uint32_t) victimAccountId;
- (CMsgTournamentItemEvent_Builder*) setVictimAccountId:(uint32_t) value;
- (CMsgTournamentItemEvent_Builder*) clearVictimAccountId;

- (BOOL) hasevent_type;
- (DOTA_TournamentEvents) event_type;
- (CMsgTournamentItemEvent_Builder*) setevent_type:(DOTA_TournamentEvents) value;
- (CMsgTournamentItemEvent_Builder*) clearevent_type;

- (BOOL) hasTvDelay;
- (int32_t) tvDelay;
- (CMsgTournamentItemEvent_Builder*) setTvDelay:(int32_t) value;
- (CMsgTournamentItemEvent_Builder*) clearTvDelay;

- (BOOL) hasDotaTime;
- (int32_t) dotaTime;
- (CMsgTournamentItemEvent_Builder*) setDotaTime:(int32_t) value;
- (CMsgTournamentItemEvent_Builder*) clearDotaTime;

- (BOOL) hasReplayTime;
- (Float32) replayTime;
- (CMsgTournamentItemEvent_Builder*) setReplayTime:(Float32) value;
- (CMsgTournamentItemEvent_Builder*) clearReplayTime;

- (BOOL) hasLootList;
- (NSString*) lootList;
- (CMsgTournamentItemEvent_Builder*) setLootList:(NSString*) value;
- (CMsgTournamentItemEvent_Builder*) clearLootList;

- (BOOL) hasEventTeam;
- (uint32_t) eventTeam;
- (CMsgTournamentItemEvent_Builder*) setEventTeam:(uint32_t) value;
- (CMsgTournamentItemEvent_Builder*) clearEventTeam;

- (BOOL) hasMultiKillCount;
- (uint32_t) multiKillCount;
- (CMsgTournamentItemEvent_Builder*) setMultiKillCount:(uint32_t) value;
- (CMsgTournamentItemEvent_Builder*) clearMultiKillCount;

- (BOOL) hasWinnerScore;
- (uint32_t) winnerScore;
- (CMsgTournamentItemEvent_Builder*) setWinnerScore:(uint32_t) value;
- (CMsgTournamentItemEvent_Builder*) clearWinnerScore;

- (BOOL) hasLoserScore;
- (uint32_t) loserScore;
- (CMsgTournamentItemEvent_Builder*) setLoserScore:(uint32_t) value;
- (CMsgTournamentItemEvent_Builder*) clearLoserScore;
@end

@interface CMsgTournamentItemEventResponse : PBGeneratedMessage {
@private
  BOOL hasWinnerName_:1;
  BOOL hasevent_type_:1;
  NSString* winnerName;
  DOTA_TournamentEvents event_type;
}
- (BOOL) hasevent_type;
- (BOOL) hasWinnerName;
@property (readonly) DOTA_TournamentEvents event_type;
@property (readonly, retain) NSString* winnerName;

+ (CMsgTournamentItemEventResponse*) defaultInstance;
- (CMsgTournamentItemEventResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTournamentItemEventResponse_Builder*) builder;
+ (CMsgTournamentItemEventResponse_Builder*) builder;
+ (CMsgTournamentItemEventResponse_Builder*) builderWithPrototype:(CMsgTournamentItemEventResponse*) prototype;
- (CMsgTournamentItemEventResponse_Builder*) toBuilder;

+ (CMsgTournamentItemEventResponse*) parseFromData:(NSData*) data;
+ (CMsgTournamentItemEventResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTournamentItemEventResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTournamentItemEventResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTournamentItemEventResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTournamentItemEventResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTournamentItemEventResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTournamentItemEventResponse* _builderResult;
}

- (CMsgTournamentItemEventResponse*) defaultInstance;

- (CMsgTournamentItemEventResponse_Builder*) clear;
- (CMsgTournamentItemEventResponse_Builder*) clone;

- (CMsgTournamentItemEventResponse*) build;
- (CMsgTournamentItemEventResponse*) buildPartial;

- (CMsgTournamentItemEventResponse_Builder*) mergeFrom:(CMsgTournamentItemEventResponse*) other;
- (CMsgTournamentItemEventResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTournamentItemEventResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasevent_type;
- (DOTA_TournamentEvents) event_type;
- (CMsgTournamentItemEventResponse_Builder*) setevent_type:(DOTA_TournamentEvents) value;
- (CMsgTournamentItemEventResponse_Builder*) clearevent_type;

- (BOOL) hasWinnerName;
- (NSString*) winnerName;
- (CMsgTournamentItemEventResponse_Builder*) setWinnerName:(NSString*) value;
- (CMsgTournamentItemEventResponse_Builder*) clearWinnerName;
@end

@interface CMsgDOTAMatchVotes : PBGeneratedMessage {
@private
  BOOL hasMatchId_:1;
  uint32_t matchId;
  PBAppendableArray * votesArray;
}
- (BOOL) hasMatchId;
@property (readonly) uint32_t matchId;
@property (readonly, retain) PBArray * votes;
- (CMsgDOTAMatchVotes_PlayerVote*)votesAtIndex:(NSUInteger)index;

+ (CMsgDOTAMatchVotes*) defaultInstance;
- (CMsgDOTAMatchVotes*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAMatchVotes_Builder*) builder;
+ (CMsgDOTAMatchVotes_Builder*) builder;
+ (CMsgDOTAMatchVotes_Builder*) builderWithPrototype:(CMsgDOTAMatchVotes*) prototype;
- (CMsgDOTAMatchVotes_Builder*) toBuilder;

+ (CMsgDOTAMatchVotes*) parseFromData:(NSData*) data;
+ (CMsgDOTAMatchVotes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchVotes*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAMatchVotes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchVotes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAMatchVotes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAMatchVotes_PlayerVote : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  BOOL hasVote_:1;
  uint32_t accountId;
  uint32_t vote;
}
- (BOOL) hasAccountId;
- (BOOL) hasVote;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t vote;

+ (CMsgDOTAMatchVotes_PlayerVote*) defaultInstance;
- (CMsgDOTAMatchVotes_PlayerVote*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAMatchVotes_PlayerVote_Builder*) builder;
+ (CMsgDOTAMatchVotes_PlayerVote_Builder*) builder;
+ (CMsgDOTAMatchVotes_PlayerVote_Builder*) builderWithPrototype:(CMsgDOTAMatchVotes_PlayerVote*) prototype;
- (CMsgDOTAMatchVotes_PlayerVote_Builder*) toBuilder;

+ (CMsgDOTAMatchVotes_PlayerVote*) parseFromData:(NSData*) data;
+ (CMsgDOTAMatchVotes_PlayerVote*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchVotes_PlayerVote*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAMatchVotes_PlayerVote*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAMatchVotes_PlayerVote*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAMatchVotes_PlayerVote*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAMatchVotes_PlayerVote_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAMatchVotes_PlayerVote* _builderResult;
}

- (CMsgDOTAMatchVotes_PlayerVote*) defaultInstance;

- (CMsgDOTAMatchVotes_PlayerVote_Builder*) clear;
- (CMsgDOTAMatchVotes_PlayerVote_Builder*) clone;

- (CMsgDOTAMatchVotes_PlayerVote*) build;
- (CMsgDOTAMatchVotes_PlayerVote*) buildPartial;

- (CMsgDOTAMatchVotes_PlayerVote_Builder*) mergeFrom:(CMsgDOTAMatchVotes_PlayerVote*) other;
- (CMsgDOTAMatchVotes_PlayerVote_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAMatchVotes_PlayerVote_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTAMatchVotes_PlayerVote_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTAMatchVotes_PlayerVote_Builder*) clearAccountId;

- (BOOL) hasVote;
- (uint32_t) vote;
- (CMsgDOTAMatchVotes_PlayerVote_Builder*) setVote:(uint32_t) value;
- (CMsgDOTAMatchVotes_PlayerVote_Builder*) clearVote;
@end

@interface CMsgDOTAMatchVotes_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAMatchVotes* _builderResult;
}

- (CMsgDOTAMatchVotes*) defaultInstance;

- (CMsgDOTAMatchVotes_Builder*) clear;
- (CMsgDOTAMatchVotes_Builder*) clone;

- (CMsgDOTAMatchVotes*) build;
- (CMsgDOTAMatchVotes*) buildPartial;

- (CMsgDOTAMatchVotes_Builder*) mergeFrom:(CMsgDOTAMatchVotes*) other;
- (CMsgDOTAMatchVotes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAMatchVotes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgDOTAMatchVotes_Builder*) setMatchId:(uint32_t) value;
- (CMsgDOTAMatchVotes_Builder*) clearMatchId;

- (PBAppendableArray *)votes;
- (CMsgDOTAMatchVotes_PlayerVote*)votesAtIndex:(NSUInteger)index;
- (CMsgDOTAMatchVotes_Builder *)addVotes:(CMsgDOTAMatchVotes_PlayerVote*)value;
- (CMsgDOTAMatchVotes_Builder *)setVotesArray:(NSArray *)array;
- (CMsgDOTAMatchVotes_Builder *)setVotesValues:(const CMsgDOTAMatchVotes_PlayerVote* *)values count:(NSUInteger)count;
- (CMsgDOTAMatchVotes_Builder *)clearVotes;
@end

@interface CMsgCastMatchVote : PBGeneratedMessage {
@private
  BOOL hasMatchId_:1;
  BOOL hasvote_:1;
  uint32_t matchId;
  DOTAMatchVote vote;
}
- (BOOL) hasMatchId;
- (BOOL) hasvote;
@property (readonly) uint32_t matchId;
@property (readonly) DOTAMatchVote vote;

+ (CMsgCastMatchVote*) defaultInstance;
- (CMsgCastMatchVote*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgCastMatchVote_Builder*) builder;
+ (CMsgCastMatchVote_Builder*) builder;
+ (CMsgCastMatchVote_Builder*) builderWithPrototype:(CMsgCastMatchVote*) prototype;
- (CMsgCastMatchVote_Builder*) toBuilder;

+ (CMsgCastMatchVote*) parseFromData:(NSData*) data;
+ (CMsgCastMatchVote*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCastMatchVote*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgCastMatchVote*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCastMatchVote*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgCastMatchVote*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgCastMatchVote_Builder : PBGeneratedMessage_Builder {
@private
  CMsgCastMatchVote* _builderResult;
}

- (CMsgCastMatchVote*) defaultInstance;

- (CMsgCastMatchVote_Builder*) clear;
- (CMsgCastMatchVote_Builder*) clone;

- (CMsgCastMatchVote*) build;
- (CMsgCastMatchVote*) buildPartial;

- (CMsgCastMatchVote_Builder*) mergeFrom:(CMsgCastMatchVote*) other;
- (CMsgCastMatchVote_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgCastMatchVote_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgCastMatchVote_Builder*) setMatchId:(uint32_t) value;
- (CMsgCastMatchVote_Builder*) clearMatchId;

- (BOOL) hasvote;
- (DOTAMatchVote) vote;
- (CMsgCastMatchVote_Builder*) setvote:(DOTAMatchVote) value;
- (CMsgCastMatchVote_Builder*) clearvote;
@end

@interface CMsgRetrieveMatchVote : PBGeneratedMessage {
@private
  BOOL hasMatchId_:1;
  BOOL hasIncremental_:1;
  uint32_t matchId;
  uint32_t incremental;
}
- (BOOL) hasMatchId;
- (BOOL) hasIncremental;
@property (readonly) uint32_t matchId;
@property (readonly) uint32_t incremental;

+ (CMsgRetrieveMatchVote*) defaultInstance;
- (CMsgRetrieveMatchVote*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgRetrieveMatchVote_Builder*) builder;
+ (CMsgRetrieveMatchVote_Builder*) builder;
+ (CMsgRetrieveMatchVote_Builder*) builderWithPrototype:(CMsgRetrieveMatchVote*) prototype;
- (CMsgRetrieveMatchVote_Builder*) toBuilder;

+ (CMsgRetrieveMatchVote*) parseFromData:(NSData*) data;
+ (CMsgRetrieveMatchVote*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRetrieveMatchVote*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgRetrieveMatchVote*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRetrieveMatchVote*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgRetrieveMatchVote*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgRetrieveMatchVote_Builder : PBGeneratedMessage_Builder {
@private
  CMsgRetrieveMatchVote* _builderResult;
}

- (CMsgRetrieveMatchVote*) defaultInstance;

- (CMsgRetrieveMatchVote_Builder*) clear;
- (CMsgRetrieveMatchVote_Builder*) clone;

- (CMsgRetrieveMatchVote*) build;
- (CMsgRetrieveMatchVote*) buildPartial;

- (CMsgRetrieveMatchVote_Builder*) mergeFrom:(CMsgRetrieveMatchVote*) other;
- (CMsgRetrieveMatchVote_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgRetrieveMatchVote_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgRetrieveMatchVote_Builder*) setMatchId:(uint32_t) value;
- (CMsgRetrieveMatchVote_Builder*) clearMatchId;

- (BOOL) hasIncremental;
- (uint32_t) incremental;
- (CMsgRetrieveMatchVote_Builder*) setIncremental:(uint32_t) value;
- (CMsgRetrieveMatchVote_Builder*) clearIncremental;
@end

@interface CMsgMatchVoteResponse : PBGeneratedMessage {
@private
  BOOL hasEresult_:1;
  BOOL hasPositiveVotes_:1;
  BOOL hasNegativeVotes_:1;
  BOOL hasvote_:1;
  uint32_t eresult;
  uint32_t positiveVotes;
  uint32_t negativeVotes;
  DOTAMatchVote vote;
}
- (BOOL) hasEresult;
- (BOOL) hasvote;
- (BOOL) hasPositiveVotes;
- (BOOL) hasNegativeVotes;
@property (readonly) uint32_t eresult;
@property (readonly) DOTAMatchVote vote;
@property (readonly) uint32_t positiveVotes;
@property (readonly) uint32_t negativeVotes;

+ (CMsgMatchVoteResponse*) defaultInstance;
- (CMsgMatchVoteResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMatchVoteResponse_Builder*) builder;
+ (CMsgMatchVoteResponse_Builder*) builder;
+ (CMsgMatchVoteResponse_Builder*) builderWithPrototype:(CMsgMatchVoteResponse*) prototype;
- (CMsgMatchVoteResponse_Builder*) toBuilder;

+ (CMsgMatchVoteResponse*) parseFromData:(NSData*) data;
+ (CMsgMatchVoteResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchVoteResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMatchVoteResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchVoteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMatchVoteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMatchVoteResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMatchVoteResponse* _builderResult;
}

- (CMsgMatchVoteResponse*) defaultInstance;

- (CMsgMatchVoteResponse_Builder*) clear;
- (CMsgMatchVoteResponse_Builder*) clone;

- (CMsgMatchVoteResponse*) build;
- (CMsgMatchVoteResponse*) buildPartial;

- (CMsgMatchVoteResponse_Builder*) mergeFrom:(CMsgMatchVoteResponse*) other;
- (CMsgMatchVoteResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMatchVoteResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEresult;
- (uint32_t) eresult;
- (CMsgMatchVoteResponse_Builder*) setEresult:(uint32_t) value;
- (CMsgMatchVoteResponse_Builder*) clearEresult;

- (BOOL) hasvote;
- (DOTAMatchVote) vote;
- (CMsgMatchVoteResponse_Builder*) setvote:(DOTAMatchVote) value;
- (CMsgMatchVoteResponse_Builder*) clearvote;

- (BOOL) hasPositiveVotes;
- (uint32_t) positiveVotes;
- (CMsgMatchVoteResponse_Builder*) setPositiveVotes:(uint32_t) value;
- (CMsgMatchVoteResponse_Builder*) clearPositiveVotes;

- (BOOL) hasNegativeVotes;
- (uint32_t) negativeVotes;
- (CMsgMatchVoteResponse_Builder*) setNegativeVotes:(uint32_t) value;
- (CMsgMatchVoteResponse_Builder*) clearNegativeVotes;
@end

@interface CMsgTeamFanfare : PBGeneratedMessage {
@private
  BOOL hasMatchId_:1;
  uint32_t matchId;
}
- (BOOL) hasMatchId;
@property (readonly) uint32_t matchId;

+ (CMsgTeamFanfare*) defaultInstance;
- (CMsgTeamFanfare*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTeamFanfare_Builder*) builder;
+ (CMsgTeamFanfare_Builder*) builder;
+ (CMsgTeamFanfare_Builder*) builderWithPrototype:(CMsgTeamFanfare*) prototype;
- (CMsgTeamFanfare_Builder*) toBuilder;

+ (CMsgTeamFanfare*) parseFromData:(NSData*) data;
+ (CMsgTeamFanfare*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTeamFanfare*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTeamFanfare*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTeamFanfare*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTeamFanfare*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTeamFanfare_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTeamFanfare* _builderResult;
}

- (CMsgTeamFanfare*) defaultInstance;

- (CMsgTeamFanfare_Builder*) clear;
- (CMsgTeamFanfare_Builder*) clone;

- (CMsgTeamFanfare*) build;
- (CMsgTeamFanfare*) buildPartial;

- (CMsgTeamFanfare_Builder*) mergeFrom:(CMsgTeamFanfare*) other;
- (CMsgTeamFanfare_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTeamFanfare_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgTeamFanfare_Builder*) setMatchId:(uint32_t) value;
- (CMsgTeamFanfare_Builder*) clearMatchId;
@end

@interface CMsgResponseTeamFanfare : PBGeneratedMessage {
@private
  BOOL hasFanfareGoodguys_:1;
  BOOL hasFanfareBadguys_:1;
  uint32_t fanfareGoodguys;
  uint32_t fanfareBadguys;
}
- (BOOL) hasFanfareGoodguys;
- (BOOL) hasFanfareBadguys;
@property (readonly) uint32_t fanfareGoodguys;
@property (readonly) uint32_t fanfareBadguys;

+ (CMsgResponseTeamFanfare*) defaultInstance;
- (CMsgResponseTeamFanfare*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgResponseTeamFanfare_Builder*) builder;
+ (CMsgResponseTeamFanfare_Builder*) builder;
+ (CMsgResponseTeamFanfare_Builder*) builderWithPrototype:(CMsgResponseTeamFanfare*) prototype;
- (CMsgResponseTeamFanfare_Builder*) toBuilder;

+ (CMsgResponseTeamFanfare*) parseFromData:(NSData*) data;
+ (CMsgResponseTeamFanfare*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgResponseTeamFanfare*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgResponseTeamFanfare*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgResponseTeamFanfare*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgResponseTeamFanfare*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgResponseTeamFanfare_Builder : PBGeneratedMessage_Builder {
@private
  CMsgResponseTeamFanfare* _builderResult;
}

- (CMsgResponseTeamFanfare*) defaultInstance;

- (CMsgResponseTeamFanfare_Builder*) clear;
- (CMsgResponseTeamFanfare_Builder*) clone;

- (CMsgResponseTeamFanfare*) build;
- (CMsgResponseTeamFanfare*) buildPartial;

- (CMsgResponseTeamFanfare_Builder*) mergeFrom:(CMsgResponseTeamFanfare*) other;
- (CMsgResponseTeamFanfare_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgResponseTeamFanfare_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFanfareGoodguys;
- (uint32_t) fanfareGoodguys;
- (CMsgResponseTeamFanfare_Builder*) setFanfareGoodguys:(uint32_t) value;
- (CMsgResponseTeamFanfare_Builder*) clearFanfareGoodguys;

- (BOOL) hasFanfareBadguys;
- (uint32_t) fanfareBadguys;
- (CMsgResponseTeamFanfare_Builder*) setFanfareBadguys:(uint32_t) value;
- (CMsgResponseTeamFanfare_Builder*) clearFanfareBadguys;
@end

@interface CMsgSpectatorConnect : PBGeneratedMessage {
@private
  BOOL hasSpectatorId_:1;
  uint64_t spectatorId;
}
- (BOOL) hasSpectatorId;
@property (readonly) uint64_t spectatorId;

+ (CMsgSpectatorConnect*) defaultInstance;
- (CMsgSpectatorConnect*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSpectatorConnect_Builder*) builder;
+ (CMsgSpectatorConnect_Builder*) builder;
+ (CMsgSpectatorConnect_Builder*) builderWithPrototype:(CMsgSpectatorConnect*) prototype;
- (CMsgSpectatorConnect_Builder*) toBuilder;

+ (CMsgSpectatorConnect*) parseFromData:(NSData*) data;
+ (CMsgSpectatorConnect*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpectatorConnect*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSpectatorConnect*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpectatorConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSpectatorConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSpectatorConnect_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSpectatorConnect* _builderResult;
}

- (CMsgSpectatorConnect*) defaultInstance;

- (CMsgSpectatorConnect_Builder*) clear;
- (CMsgSpectatorConnect_Builder*) clone;

- (CMsgSpectatorConnect*) build;
- (CMsgSpectatorConnect*) buildPartial;

- (CMsgSpectatorConnect_Builder*) mergeFrom:(CMsgSpectatorConnect*) other;
- (CMsgSpectatorConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSpectatorConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSpectatorId;
- (uint64_t) spectatorId;
- (CMsgSpectatorConnect_Builder*) setSpectatorId:(uint64_t) value;
- (CMsgSpectatorConnect_Builder*) clearSpectatorId;
@end

@interface CMsgSpectatorDisconnect : PBGeneratedMessage {
@private
  BOOL hasSpectatorId_:1;
  uint64_t spectatorId;
}
- (BOOL) hasSpectatorId;
@property (readonly) uint64_t spectatorId;

+ (CMsgSpectatorDisconnect*) defaultInstance;
- (CMsgSpectatorDisconnect*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSpectatorDisconnect_Builder*) builder;
+ (CMsgSpectatorDisconnect_Builder*) builder;
+ (CMsgSpectatorDisconnect_Builder*) builderWithPrototype:(CMsgSpectatorDisconnect*) prototype;
- (CMsgSpectatorDisconnect_Builder*) toBuilder;

+ (CMsgSpectatorDisconnect*) parseFromData:(NSData*) data;
+ (CMsgSpectatorDisconnect*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpectatorDisconnect*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSpectatorDisconnect*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSpectatorDisconnect*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSpectatorDisconnect*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSpectatorDisconnect_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSpectatorDisconnect* _builderResult;
}

- (CMsgSpectatorDisconnect*) defaultInstance;

- (CMsgSpectatorDisconnect_Builder*) clear;
- (CMsgSpectatorDisconnect_Builder*) clone;

- (CMsgSpectatorDisconnect*) build;
- (CMsgSpectatorDisconnect*) buildPartial;

- (CMsgSpectatorDisconnect_Builder*) mergeFrom:(CMsgSpectatorDisconnect*) other;
- (CMsgSpectatorDisconnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSpectatorDisconnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSpectatorId;
- (uint64_t) spectatorId;
- (CMsgSpectatorDisconnect_Builder*) setSpectatorId:(uint64_t) value;
- (CMsgSpectatorDisconnect_Builder*) clearSpectatorId;
@end

@interface CMsgGameServerUploadSaveGame : PBGeneratedMessage {
@private
  BOOL hasLobbyId_:1;
  BOOL hasSaveGameData_:1;
  BOOL hasGameTime_:1;
  uint64_t lobbyId;
  NSData* saveGameData;
  uint32_t gameTime;
  PBAppendableArray * playerSteamIdsArray;
}
- (BOOL) hasGameTime;
- (BOOL) hasSaveGameData;
- (BOOL) hasLobbyId;
@property (readonly) uint32_t gameTime;
@property (readonly, retain) NSData* saveGameData;
@property (readonly) uint64_t lobbyId;
@property (readonly, retain) PBArray * playerSteamIds;
- (uint64_t)playerSteamIdsAtIndex:(NSUInteger)index;

+ (CMsgGameServerUploadSaveGame*) defaultInstance;
- (CMsgGameServerUploadSaveGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameServerUploadSaveGame_Builder*) builder;
+ (CMsgGameServerUploadSaveGame_Builder*) builder;
+ (CMsgGameServerUploadSaveGame_Builder*) builderWithPrototype:(CMsgGameServerUploadSaveGame*) prototype;
- (CMsgGameServerUploadSaveGame_Builder*) toBuilder;

+ (CMsgGameServerUploadSaveGame*) parseFromData:(NSData*) data;
+ (CMsgGameServerUploadSaveGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerUploadSaveGame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameServerUploadSaveGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerUploadSaveGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameServerUploadSaveGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameServerUploadSaveGame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameServerUploadSaveGame* _builderResult;
}

- (CMsgGameServerUploadSaveGame*) defaultInstance;

- (CMsgGameServerUploadSaveGame_Builder*) clear;
- (CMsgGameServerUploadSaveGame_Builder*) clone;

- (CMsgGameServerUploadSaveGame*) build;
- (CMsgGameServerUploadSaveGame*) buildPartial;

- (CMsgGameServerUploadSaveGame_Builder*) mergeFrom:(CMsgGameServerUploadSaveGame*) other;
- (CMsgGameServerUploadSaveGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameServerUploadSaveGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameTime;
- (uint32_t) gameTime;
- (CMsgGameServerUploadSaveGame_Builder*) setGameTime:(uint32_t) value;
- (CMsgGameServerUploadSaveGame_Builder*) clearGameTime;

- (BOOL) hasSaveGameData;
- (NSData*) saveGameData;
- (CMsgGameServerUploadSaveGame_Builder*) setSaveGameData:(NSData*) value;
- (CMsgGameServerUploadSaveGame_Builder*) clearSaveGameData;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgGameServerUploadSaveGame_Builder*) setLobbyId:(uint64_t) value;
- (CMsgGameServerUploadSaveGame_Builder*) clearLobbyId;

- (PBAppendableArray *)playerSteamIds;
- (uint64_t)playerSteamIdsAtIndex:(NSUInteger)index;
- (CMsgGameServerUploadSaveGame_Builder *)addPlayerSteamIds:(uint64_t)value;
- (CMsgGameServerUploadSaveGame_Builder *)setPlayerSteamIdsArray:(NSArray *)array;
- (CMsgGameServerUploadSaveGame_Builder *)setPlayerSteamIdsValues:(const uint64_t *)values count:(NSUInteger)count;
- (CMsgGameServerUploadSaveGame_Builder *)clearPlayerSteamIds;
@end

@interface CMsgGameServerSaveGameResult : PBGeneratedMessage {
@private
  BOOL hasresult_:1;
  CMsgGameServerSaveGameResult_Result result;
}
- (BOOL) hasresult;
@property (readonly) CMsgGameServerSaveGameResult_Result result;

+ (CMsgGameServerSaveGameResult*) defaultInstance;
- (CMsgGameServerSaveGameResult*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameServerSaveGameResult_Builder*) builder;
+ (CMsgGameServerSaveGameResult_Builder*) builder;
+ (CMsgGameServerSaveGameResult_Builder*) builderWithPrototype:(CMsgGameServerSaveGameResult*) prototype;
- (CMsgGameServerSaveGameResult_Builder*) toBuilder;

+ (CMsgGameServerSaveGameResult*) parseFromData:(NSData*) data;
+ (CMsgGameServerSaveGameResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerSaveGameResult*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameServerSaveGameResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerSaveGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameServerSaveGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameServerSaveGameResult_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameServerSaveGameResult* _builderResult;
}

- (CMsgGameServerSaveGameResult*) defaultInstance;

- (CMsgGameServerSaveGameResult_Builder*) clear;
- (CMsgGameServerSaveGameResult_Builder*) clone;

- (CMsgGameServerSaveGameResult*) build;
- (CMsgGameServerSaveGameResult*) buildPartial;

- (CMsgGameServerSaveGameResult_Builder*) mergeFrom:(CMsgGameServerSaveGameResult*) other;
- (CMsgGameServerSaveGameResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameServerSaveGameResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasresult;
- (CMsgGameServerSaveGameResult_Result) result;
- (CMsgGameServerSaveGameResult_Builder*) setresult:(CMsgGameServerSaveGameResult_Result) value;
- (CMsgGameServerSaveGameResult_Builder*) clearresult;
@end

@interface CMsgGameServerGetLoadGame : PBGeneratedMessage {
@private
  BOOL hasSaveId_:1;
  uint32_t saveId;
}
- (BOOL) hasSaveId;
@property (readonly) uint32_t saveId;

+ (CMsgGameServerGetLoadGame*) defaultInstance;
- (CMsgGameServerGetLoadGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameServerGetLoadGame_Builder*) builder;
+ (CMsgGameServerGetLoadGame_Builder*) builder;
+ (CMsgGameServerGetLoadGame_Builder*) builderWithPrototype:(CMsgGameServerGetLoadGame*) prototype;
- (CMsgGameServerGetLoadGame_Builder*) toBuilder;

+ (CMsgGameServerGetLoadGame*) parseFromData:(NSData*) data;
+ (CMsgGameServerGetLoadGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerGetLoadGame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameServerGetLoadGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerGetLoadGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameServerGetLoadGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameServerGetLoadGame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameServerGetLoadGame* _builderResult;
}

- (CMsgGameServerGetLoadGame*) defaultInstance;

- (CMsgGameServerGetLoadGame_Builder*) clear;
- (CMsgGameServerGetLoadGame_Builder*) clone;

- (CMsgGameServerGetLoadGame*) build;
- (CMsgGameServerGetLoadGame*) buildPartial;

- (CMsgGameServerGetLoadGame_Builder*) mergeFrom:(CMsgGameServerGetLoadGame*) other;
- (CMsgGameServerGetLoadGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameServerGetLoadGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSaveId;
- (uint32_t) saveId;
- (CMsgGameServerGetLoadGame_Builder*) setSaveId:(uint32_t) value;
- (CMsgGameServerGetLoadGame_Builder*) clearSaveId;
@end

@interface CMsgGameServerGetLoadGameResult : PBGeneratedMessage {
@private
  BOOL hasSaveGameData_:1;
  NSData* saveGameData;
}
- (BOOL) hasSaveGameData;
@property (readonly, retain) NSData* saveGameData;

+ (CMsgGameServerGetLoadGameResult*) defaultInstance;
- (CMsgGameServerGetLoadGameResult*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameServerGetLoadGameResult_Builder*) builder;
+ (CMsgGameServerGetLoadGameResult_Builder*) builder;
+ (CMsgGameServerGetLoadGameResult_Builder*) builderWithPrototype:(CMsgGameServerGetLoadGameResult*) prototype;
- (CMsgGameServerGetLoadGameResult_Builder*) toBuilder;

+ (CMsgGameServerGetLoadGameResult*) parseFromData:(NSData*) data;
+ (CMsgGameServerGetLoadGameResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerGetLoadGameResult*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameServerGetLoadGameResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerGetLoadGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameServerGetLoadGameResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameServerGetLoadGameResult_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameServerGetLoadGameResult* _builderResult;
}

- (CMsgGameServerGetLoadGameResult*) defaultInstance;

- (CMsgGameServerGetLoadGameResult_Builder*) clear;
- (CMsgGameServerGetLoadGameResult_Builder*) clone;

- (CMsgGameServerGetLoadGameResult*) build;
- (CMsgGameServerGetLoadGameResult*) buildPartial;

- (CMsgGameServerGetLoadGameResult_Builder*) mergeFrom:(CMsgGameServerGetLoadGameResult*) other;
- (CMsgGameServerGetLoadGameResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameServerGetLoadGameResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSaveGameData;
- (NSData*) saveGameData;
- (CMsgGameServerGetLoadGameResult_Builder*) setSaveGameData:(NSData*) value;
- (CMsgGameServerGetLoadGameResult_Builder*) clearSaveGameData;
@end

@interface CMsgCheckSpectatorOnly : PBGeneratedMessage {
@private
}

+ (CMsgCheckSpectatorOnly*) defaultInstance;
- (CMsgCheckSpectatorOnly*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgCheckSpectatorOnly_Builder*) builder;
+ (CMsgCheckSpectatorOnly_Builder*) builder;
+ (CMsgCheckSpectatorOnly_Builder*) builderWithPrototype:(CMsgCheckSpectatorOnly*) prototype;
- (CMsgCheckSpectatorOnly_Builder*) toBuilder;

+ (CMsgCheckSpectatorOnly*) parseFromData:(NSData*) data;
+ (CMsgCheckSpectatorOnly*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCheckSpectatorOnly*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgCheckSpectatorOnly*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCheckSpectatorOnly*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgCheckSpectatorOnly*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgCheckSpectatorOnly_Builder : PBGeneratedMessage_Builder {
@private
  CMsgCheckSpectatorOnly* _builderResult;
}

- (CMsgCheckSpectatorOnly*) defaultInstance;

- (CMsgCheckSpectatorOnly_Builder*) clear;
- (CMsgCheckSpectatorOnly_Builder*) clone;

- (CMsgCheckSpectatorOnly*) build;
- (CMsgCheckSpectatorOnly*) buildPartial;

- (CMsgCheckSpectatorOnly_Builder*) mergeFrom:(CMsgCheckSpectatorOnly*) other;
- (CMsgCheckSpectatorOnly_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgCheckSpectatorOnly_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgCheckSpectatorOnlyResponse : PBGeneratedMessage {
@private
  BOOL hasSpectatorOnly_:1;
  BOOL hasEresult_:1;
  BOOL spectatorOnly_:1;
  uint32_t eresult;
}
- (BOOL) hasEresult;
- (BOOL) hasSpectatorOnly;
@property (readonly) uint32_t eresult;
- (BOOL) spectatorOnly;

+ (CMsgCheckSpectatorOnlyResponse*) defaultInstance;
- (CMsgCheckSpectatorOnlyResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgCheckSpectatorOnlyResponse_Builder*) builder;
+ (CMsgCheckSpectatorOnlyResponse_Builder*) builder;
+ (CMsgCheckSpectatorOnlyResponse_Builder*) builderWithPrototype:(CMsgCheckSpectatorOnlyResponse*) prototype;
- (CMsgCheckSpectatorOnlyResponse_Builder*) toBuilder;

+ (CMsgCheckSpectatorOnlyResponse*) parseFromData:(NSData*) data;
+ (CMsgCheckSpectatorOnlyResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCheckSpectatorOnlyResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgCheckSpectatorOnlyResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCheckSpectatorOnlyResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgCheckSpectatorOnlyResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgCheckSpectatorOnlyResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgCheckSpectatorOnlyResponse* _builderResult;
}

- (CMsgCheckSpectatorOnlyResponse*) defaultInstance;

- (CMsgCheckSpectatorOnlyResponse_Builder*) clear;
- (CMsgCheckSpectatorOnlyResponse_Builder*) clone;

- (CMsgCheckSpectatorOnlyResponse*) build;
- (CMsgCheckSpectatorOnlyResponse*) buildPartial;

- (CMsgCheckSpectatorOnlyResponse_Builder*) mergeFrom:(CMsgCheckSpectatorOnlyResponse*) other;
- (CMsgCheckSpectatorOnlyResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgCheckSpectatorOnlyResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEresult;
- (uint32_t) eresult;
- (CMsgCheckSpectatorOnlyResponse_Builder*) setEresult:(uint32_t) value;
- (CMsgCheckSpectatorOnlyResponse_Builder*) clearEresult;

- (BOOL) hasSpectatorOnly;
- (BOOL) spectatorOnly;
- (CMsgCheckSpectatorOnlyResponse_Builder*) setSpectatorOnly:(BOOL) value;
- (CMsgCheckSpectatorOnlyResponse_Builder*) clearSpectatorOnly;
@end

@interface CMsgDOTAHallOfFame : PBGeneratedMessage {
@private
  BOOL hasFeaturedFarmer_:1;
  BOOL hasWeek_:1;
  CMsgDOTAHallOfFame_FeaturedFarmer* featuredFarmer;
  uint32_t week;
  PBAppendableArray * featuredPlayersArray;
}
- (BOOL) hasWeek;
- (BOOL) hasFeaturedFarmer;
@property (readonly) uint32_t week;
@property (readonly, retain) PBArray * featuredPlayers;
@property (readonly, retain) CMsgDOTAHallOfFame_FeaturedFarmer* featuredFarmer;
- (CMsgDOTAHallOfFame_FeaturedPlayer*)featuredPlayersAtIndex:(NSUInteger)index;

+ (CMsgDOTAHallOfFame*) defaultInstance;
- (CMsgDOTAHallOfFame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAHallOfFame_Builder*) builder;
+ (CMsgDOTAHallOfFame_Builder*) builder;
+ (CMsgDOTAHallOfFame_Builder*) builderWithPrototype:(CMsgDOTAHallOfFame*) prototype;
- (CMsgDOTAHallOfFame_Builder*) toBuilder;

+ (CMsgDOTAHallOfFame*) parseFromData:(NSData*) data;
+ (CMsgDOTAHallOfFame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAHallOfFame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAHallOfFame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAHallOfFame_FeaturedPlayer : PBGeneratedMessage {
@private
  BOOL hasAverageScaledMetric_:1;
  BOOL hasAccountId_:1;
  BOOL hasHeroId_:1;
  BOOL hasNumGames_:1;
  Float32 averageScaledMetric;
  uint32_t accountId;
  uint32_t heroId;
  uint32_t numGames;
}
- (BOOL) hasAccountId;
- (BOOL) hasHeroId;
- (BOOL) hasAverageScaledMetric;
- (BOOL) hasNumGames;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t heroId;
@property (readonly) Float32 averageScaledMetric;
@property (readonly) uint32_t numGames;

+ (CMsgDOTAHallOfFame_FeaturedPlayer*) defaultInstance;
- (CMsgDOTAHallOfFame_FeaturedPlayer*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) builder;
+ (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) builder;
+ (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) builderWithPrototype:(CMsgDOTAHallOfFame_FeaturedPlayer*) prototype;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) toBuilder;

+ (CMsgDOTAHallOfFame_FeaturedPlayer*) parseFromData:(NSData*) data;
+ (CMsgDOTAHallOfFame_FeaturedPlayer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFame_FeaturedPlayer*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAHallOfFame_FeaturedPlayer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFame_FeaturedPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAHallOfFame_FeaturedPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAHallOfFame_FeaturedPlayer_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAHallOfFame_FeaturedPlayer* _builderResult;
}

- (CMsgDOTAHallOfFame_FeaturedPlayer*) defaultInstance;

- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) clear;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) clone;

- (CMsgDOTAHallOfFame_FeaturedPlayer*) build;
- (CMsgDOTAHallOfFame_FeaturedPlayer*) buildPartial;

- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) mergeFrom:(CMsgDOTAHallOfFame_FeaturedPlayer*) other;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) clearAccountId;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) clearHeroId;

- (BOOL) hasAverageScaledMetric;
- (Float32) averageScaledMetric;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) setAverageScaledMetric:(Float32) value;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) clearAverageScaledMetric;

- (BOOL) hasNumGames;
- (uint32_t) numGames;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) setNumGames:(uint32_t) value;
- (CMsgDOTAHallOfFame_FeaturedPlayer_Builder*) clearNumGames;
@end

@interface CMsgDOTAHallOfFame_FeaturedFarmer : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  BOOL hasHeroId_:1;
  BOOL hasGoldPerMin_:1;
  BOOL hasMatchId_:1;
  uint32_t accountId;
  uint32_t heroId;
  uint32_t goldPerMin;
  uint32_t matchId;
}
- (BOOL) hasAccountId;
- (BOOL) hasHeroId;
- (BOOL) hasGoldPerMin;
- (BOOL) hasMatchId;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t heroId;
@property (readonly) uint32_t goldPerMin;
@property (readonly) uint32_t matchId;

+ (CMsgDOTAHallOfFame_FeaturedFarmer*) defaultInstance;
- (CMsgDOTAHallOfFame_FeaturedFarmer*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) builder;
+ (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) builder;
+ (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) builderWithPrototype:(CMsgDOTAHallOfFame_FeaturedFarmer*) prototype;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) toBuilder;

+ (CMsgDOTAHallOfFame_FeaturedFarmer*) parseFromData:(NSData*) data;
+ (CMsgDOTAHallOfFame_FeaturedFarmer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFame_FeaturedFarmer*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAHallOfFame_FeaturedFarmer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFame_FeaturedFarmer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAHallOfFame_FeaturedFarmer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAHallOfFame_FeaturedFarmer_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAHallOfFame_FeaturedFarmer* _builderResult;
}

- (CMsgDOTAHallOfFame_FeaturedFarmer*) defaultInstance;

- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) clear;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) clone;

- (CMsgDOTAHallOfFame_FeaturedFarmer*) build;
- (CMsgDOTAHallOfFame_FeaturedFarmer*) buildPartial;

- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) mergeFrom:(CMsgDOTAHallOfFame_FeaturedFarmer*) other;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) setAccountId:(uint32_t) value;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) clearAccountId;

- (BOOL) hasHeroId;
- (uint32_t) heroId;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) setHeroId:(uint32_t) value;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) clearHeroId;

- (BOOL) hasGoldPerMin;
- (uint32_t) goldPerMin;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) setGoldPerMin:(uint32_t) value;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) clearGoldPerMin;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) setMatchId:(uint32_t) value;
- (CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) clearMatchId;
@end

@interface CMsgDOTAHallOfFame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAHallOfFame* _builderResult;
}

- (CMsgDOTAHallOfFame*) defaultInstance;

- (CMsgDOTAHallOfFame_Builder*) clear;
- (CMsgDOTAHallOfFame_Builder*) clone;

- (CMsgDOTAHallOfFame*) build;
- (CMsgDOTAHallOfFame*) buildPartial;

- (CMsgDOTAHallOfFame_Builder*) mergeFrom:(CMsgDOTAHallOfFame*) other;
- (CMsgDOTAHallOfFame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAHallOfFame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWeek;
- (uint32_t) week;
- (CMsgDOTAHallOfFame_Builder*) setWeek:(uint32_t) value;
- (CMsgDOTAHallOfFame_Builder*) clearWeek;

- (PBAppendableArray *)featuredPlayers;
- (CMsgDOTAHallOfFame_FeaturedPlayer*)featuredPlayersAtIndex:(NSUInteger)index;
- (CMsgDOTAHallOfFame_Builder *)addFeaturedPlayers:(CMsgDOTAHallOfFame_FeaturedPlayer*)value;
- (CMsgDOTAHallOfFame_Builder *)setFeaturedPlayersArray:(NSArray *)array;
- (CMsgDOTAHallOfFame_Builder *)setFeaturedPlayersValues:(const CMsgDOTAHallOfFame_FeaturedPlayer* *)values count:(NSUInteger)count;
- (CMsgDOTAHallOfFame_Builder *)clearFeaturedPlayers;

- (BOOL) hasFeaturedFarmer;
- (CMsgDOTAHallOfFame_FeaturedFarmer*) featuredFarmer;
- (CMsgDOTAHallOfFame_Builder*) setFeaturedFarmer:(CMsgDOTAHallOfFame_FeaturedFarmer*) value;
- (CMsgDOTAHallOfFame_Builder*) setFeaturedFarmerBuilder:(CMsgDOTAHallOfFame_FeaturedFarmer_Builder*) builderForValue;
- (CMsgDOTAHallOfFame_Builder*) mergeFeaturedFarmer:(CMsgDOTAHallOfFame_FeaturedFarmer*) value;
- (CMsgDOTAHallOfFame_Builder*) clearFeaturedFarmer;
@end

@interface CMsgDOTAHallOfFameRequest : PBGeneratedMessage {
@private
  BOOL hasWeek_:1;
  uint32_t week;
}
- (BOOL) hasWeek;
@property (readonly) uint32_t week;

+ (CMsgDOTAHallOfFameRequest*) defaultInstance;
- (CMsgDOTAHallOfFameRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAHallOfFameRequest_Builder*) builder;
+ (CMsgDOTAHallOfFameRequest_Builder*) builder;
+ (CMsgDOTAHallOfFameRequest_Builder*) builderWithPrototype:(CMsgDOTAHallOfFameRequest*) prototype;
- (CMsgDOTAHallOfFameRequest_Builder*) toBuilder;

+ (CMsgDOTAHallOfFameRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTAHallOfFameRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFameRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAHallOfFameRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAHallOfFameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAHallOfFameRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAHallOfFameRequest* _builderResult;
}

- (CMsgDOTAHallOfFameRequest*) defaultInstance;

- (CMsgDOTAHallOfFameRequest_Builder*) clear;
- (CMsgDOTAHallOfFameRequest_Builder*) clone;

- (CMsgDOTAHallOfFameRequest*) build;
- (CMsgDOTAHallOfFameRequest*) buildPartial;

- (CMsgDOTAHallOfFameRequest_Builder*) mergeFrom:(CMsgDOTAHallOfFameRequest*) other;
- (CMsgDOTAHallOfFameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAHallOfFameRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWeek;
- (uint32_t) week;
- (CMsgDOTAHallOfFameRequest_Builder*) setWeek:(uint32_t) value;
- (CMsgDOTAHallOfFameRequest_Builder*) clearWeek;
@end

@interface CMsgDOTAHallOfFameResponse : PBGeneratedMessage {
@private
  BOOL hasHallOfFame_:1;
  BOOL hasEresult_:1;
  CMsgDOTAHallOfFame* hallOfFame;
  uint32_t eresult;
}
- (BOOL) hasHallOfFame;
- (BOOL) hasEresult;
@property (readonly, retain) CMsgDOTAHallOfFame* hallOfFame;
@property (readonly) uint32_t eresult;

+ (CMsgDOTAHallOfFameResponse*) defaultInstance;
- (CMsgDOTAHallOfFameResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAHallOfFameResponse_Builder*) builder;
+ (CMsgDOTAHallOfFameResponse_Builder*) builder;
+ (CMsgDOTAHallOfFameResponse_Builder*) builderWithPrototype:(CMsgDOTAHallOfFameResponse*) prototype;
- (CMsgDOTAHallOfFameResponse_Builder*) toBuilder;

+ (CMsgDOTAHallOfFameResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAHallOfFameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFameResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAHallOfFameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHallOfFameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAHallOfFameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAHallOfFameResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAHallOfFameResponse* _builderResult;
}

- (CMsgDOTAHallOfFameResponse*) defaultInstance;

- (CMsgDOTAHallOfFameResponse_Builder*) clear;
- (CMsgDOTAHallOfFameResponse_Builder*) clone;

- (CMsgDOTAHallOfFameResponse*) build;
- (CMsgDOTAHallOfFameResponse*) buildPartial;

- (CMsgDOTAHallOfFameResponse_Builder*) mergeFrom:(CMsgDOTAHallOfFameResponse*) other;
- (CMsgDOTAHallOfFameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAHallOfFameResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasHallOfFame;
- (CMsgDOTAHallOfFame*) hallOfFame;
- (CMsgDOTAHallOfFameResponse_Builder*) setHallOfFame:(CMsgDOTAHallOfFame*) value;
- (CMsgDOTAHallOfFameResponse_Builder*) setHallOfFameBuilder:(CMsgDOTAHallOfFame_Builder*) builderForValue;
- (CMsgDOTAHallOfFameResponse_Builder*) mergeHallOfFame:(CMsgDOTAHallOfFame*) value;
- (CMsgDOTAHallOfFameResponse_Builder*) clearHallOfFame;

- (BOOL) hasEresult;
- (uint32_t) eresult;
- (CMsgDOTAHallOfFameResponse_Builder*) setEresult:(uint32_t) value;
- (CMsgDOTAHallOfFameResponse_Builder*) clearEresult;
@end

@interface CMsgDOTAGenerateDiretidePrizeList : PBGeneratedMessage {
@private
  BOOL hasPrizeList_:1;
  uint32_t prizeList;
}
- (BOOL) hasPrizeList;
@property (readonly) uint32_t prizeList;

+ (CMsgDOTAGenerateDiretidePrizeList*) defaultInstance;
- (CMsgDOTAGenerateDiretidePrizeList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAGenerateDiretidePrizeList_Builder*) builder;
+ (CMsgDOTAGenerateDiretidePrizeList_Builder*) builder;
+ (CMsgDOTAGenerateDiretidePrizeList_Builder*) builderWithPrototype:(CMsgDOTAGenerateDiretidePrizeList*) prototype;
- (CMsgDOTAGenerateDiretidePrizeList_Builder*) toBuilder;

+ (CMsgDOTAGenerateDiretidePrizeList*) parseFromData:(NSData*) data;
+ (CMsgDOTAGenerateDiretidePrizeList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAGenerateDiretidePrizeList*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAGenerateDiretidePrizeList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAGenerateDiretidePrizeList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAGenerateDiretidePrizeList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAGenerateDiretidePrizeList_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAGenerateDiretidePrizeList* _builderResult;
}

- (CMsgDOTAGenerateDiretidePrizeList*) defaultInstance;

- (CMsgDOTAGenerateDiretidePrizeList_Builder*) clear;
- (CMsgDOTAGenerateDiretidePrizeList_Builder*) clone;

- (CMsgDOTAGenerateDiretidePrizeList*) build;
- (CMsgDOTAGenerateDiretidePrizeList*) buildPartial;

- (CMsgDOTAGenerateDiretidePrizeList_Builder*) mergeFrom:(CMsgDOTAGenerateDiretidePrizeList*) other;
- (CMsgDOTAGenerateDiretidePrizeList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAGenerateDiretidePrizeList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrizeList;
- (uint32_t) prizeList;
- (CMsgDOTAGenerateDiretidePrizeList_Builder*) setPrizeList:(uint32_t) value;
- (CMsgDOTAGenerateDiretidePrizeList_Builder*) clearPrizeList;
@end

@interface CMsgDOTAGenerateDiretidePrizeListResponse : PBGeneratedMessage {
@private
  BOOL hasPrizeList_:1;
  uint32_t prizeList;
  PBAppendableArray * steamIdsArray;
  PBAppendableArray * itemDefsArray;
}
- (BOOL) hasPrizeList;
@property (readonly, retain) PBArray * itemDefs;
@property (readonly, retain) PBArray * steamIds;
@property (readonly) uint32_t prizeList;
- (uint32_t)itemDefsAtIndex:(NSUInteger)index;
- (uint64_t)steamIdsAtIndex:(NSUInteger)index;

+ (CMsgDOTAGenerateDiretidePrizeListResponse*) defaultInstance;
- (CMsgDOTAGenerateDiretidePrizeListResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) builder;
+ (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) builder;
+ (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) builderWithPrototype:(CMsgDOTAGenerateDiretidePrizeListResponse*) prototype;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) toBuilder;

+ (CMsgDOTAGenerateDiretidePrizeListResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAGenerateDiretidePrizeListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAGenerateDiretidePrizeListResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAGenerateDiretidePrizeListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAGenerateDiretidePrizeListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAGenerateDiretidePrizeListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAGenerateDiretidePrizeListResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAGenerateDiretidePrizeListResponse* _builderResult;
}

- (CMsgDOTAGenerateDiretidePrizeListResponse*) defaultInstance;

- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) clear;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) clone;

- (CMsgDOTAGenerateDiretidePrizeListResponse*) build;
- (CMsgDOTAGenerateDiretidePrizeListResponse*) buildPartial;

- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) mergeFrom:(CMsgDOTAGenerateDiretidePrizeListResponse*) other;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)itemDefs;
- (uint32_t)itemDefsAtIndex:(NSUInteger)index;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder *)addItemDefs:(uint32_t)value;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder *)setItemDefsArray:(NSArray *)array;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder *)setItemDefsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder *)clearItemDefs;

- (PBAppendableArray *)steamIds;
- (uint64_t)steamIdsAtIndex:(NSUInteger)index;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder *)addSteamIds:(uint64_t)value;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder *)setSteamIdsArray:(NSArray *)array;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder *)setSteamIdsValues:(const uint64_t *)values count:(NSUInteger)count;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder *)clearSteamIds;

- (BOOL) hasPrizeList;
- (uint32_t) prizeList;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) setPrizeList:(uint32_t) value;
- (CMsgDOTAGenerateDiretidePrizeListResponse_Builder*) clearPrizeList;
@end

@interface CMsgDOTARewardDiretidePrizes : PBGeneratedMessage {
@private
  BOOL hasTeam_:1;
  BOOL hasPrizeList_:1;
  uint32_t team;
  uint32_t prizeList;
}
- (BOOL) hasTeam;
- (BOOL) hasPrizeList;
@property (readonly) uint32_t team;
@property (readonly) uint32_t prizeList;

+ (CMsgDOTARewardDiretidePrizes*) defaultInstance;
- (CMsgDOTARewardDiretidePrizes*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTARewardDiretidePrizes_Builder*) builder;
+ (CMsgDOTARewardDiretidePrizes_Builder*) builder;
+ (CMsgDOTARewardDiretidePrizes_Builder*) builderWithPrototype:(CMsgDOTARewardDiretidePrizes*) prototype;
- (CMsgDOTARewardDiretidePrizes_Builder*) toBuilder;

+ (CMsgDOTARewardDiretidePrizes*) parseFromData:(NSData*) data;
+ (CMsgDOTARewardDiretidePrizes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARewardDiretidePrizes*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTARewardDiretidePrizes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTARewardDiretidePrizes*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTARewardDiretidePrizes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTARewardDiretidePrizes_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTARewardDiretidePrizes* _builderResult;
}

- (CMsgDOTARewardDiretidePrizes*) defaultInstance;

- (CMsgDOTARewardDiretidePrizes_Builder*) clear;
- (CMsgDOTARewardDiretidePrizes_Builder*) clone;

- (CMsgDOTARewardDiretidePrizes*) build;
- (CMsgDOTARewardDiretidePrizes*) buildPartial;

- (CMsgDOTARewardDiretidePrizes_Builder*) mergeFrom:(CMsgDOTARewardDiretidePrizes*) other;
- (CMsgDOTARewardDiretidePrizes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTARewardDiretidePrizes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTeam;
- (uint32_t) team;
- (CMsgDOTARewardDiretidePrizes_Builder*) setTeam:(uint32_t) value;
- (CMsgDOTARewardDiretidePrizes_Builder*) clearTeam;

- (BOOL) hasPrizeList;
- (uint32_t) prizeList;
- (CMsgDOTARewardDiretidePrizes_Builder*) setPrizeList:(uint32_t) value;
- (CMsgDOTARewardDiretidePrizes_Builder*) clearPrizeList;
@end

@interface CMsgDOTADiretidePrizesRewardedResponse : PBGeneratedMessage {
@private
  BOOL hasPrizeList_:1;
  uint32_t prizeList;
}
- (BOOL) hasPrizeList;
@property (readonly) uint32_t prizeList;

+ (CMsgDOTADiretidePrizesRewardedResponse*) defaultInstance;
- (CMsgDOTADiretidePrizesRewardedResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTADiretidePrizesRewardedResponse_Builder*) builder;
+ (CMsgDOTADiretidePrizesRewardedResponse_Builder*) builder;
+ (CMsgDOTADiretidePrizesRewardedResponse_Builder*) builderWithPrototype:(CMsgDOTADiretidePrizesRewardedResponse*) prototype;
- (CMsgDOTADiretidePrizesRewardedResponse_Builder*) toBuilder;

+ (CMsgDOTADiretidePrizesRewardedResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTADiretidePrizesRewardedResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADiretidePrizesRewardedResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTADiretidePrizesRewardedResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADiretidePrizesRewardedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTADiretidePrizesRewardedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTADiretidePrizesRewardedResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTADiretidePrizesRewardedResponse* _builderResult;
}

- (CMsgDOTADiretidePrizesRewardedResponse*) defaultInstance;

- (CMsgDOTADiretidePrizesRewardedResponse_Builder*) clear;
- (CMsgDOTADiretidePrizesRewardedResponse_Builder*) clone;

- (CMsgDOTADiretidePrizesRewardedResponse*) build;
- (CMsgDOTADiretidePrizesRewardedResponse*) buildPartial;

- (CMsgDOTADiretidePrizesRewardedResponse_Builder*) mergeFrom:(CMsgDOTADiretidePrizesRewardedResponse*) other;
- (CMsgDOTADiretidePrizesRewardedResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTADiretidePrizesRewardedResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPrizeList;
- (uint32_t) prizeList;
- (CMsgDOTADiretidePrizesRewardedResponse_Builder*) setPrizeList:(uint32_t) value;
- (CMsgDOTADiretidePrizesRewardedResponse_Builder*) clearPrizeList;
@end

@interface CMsgDOTADiretidePrizeResponse : PBGeneratedMessage {
@private
  BOOL hasItemDef_:1;
  BOOL hasPrizeList_:1;
  uint32_t itemDef;
  uint32_t prizeList;
}
- (BOOL) hasItemDef;
- (BOOL) hasPrizeList;
@property (readonly) uint32_t itemDef;
@property (readonly) uint32_t prizeList;

+ (CMsgDOTADiretidePrizeResponse*) defaultInstance;
- (CMsgDOTADiretidePrizeResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTADiretidePrizeResponse_Builder*) builder;
+ (CMsgDOTADiretidePrizeResponse_Builder*) builder;
+ (CMsgDOTADiretidePrizeResponse_Builder*) builderWithPrototype:(CMsgDOTADiretidePrizeResponse*) prototype;
- (CMsgDOTADiretidePrizeResponse_Builder*) toBuilder;

+ (CMsgDOTADiretidePrizeResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTADiretidePrizeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADiretidePrizeResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTADiretidePrizeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTADiretidePrizeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTADiretidePrizeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTADiretidePrizeResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTADiretidePrizeResponse* _builderResult;
}

- (CMsgDOTADiretidePrizeResponse*) defaultInstance;

- (CMsgDOTADiretidePrizeResponse_Builder*) clear;
- (CMsgDOTADiretidePrizeResponse_Builder*) clone;

- (CMsgDOTADiretidePrizeResponse*) build;
- (CMsgDOTADiretidePrizeResponse*) buildPartial;

- (CMsgDOTADiretidePrizeResponse_Builder*) mergeFrom:(CMsgDOTADiretidePrizeResponse*) other;
- (CMsgDOTADiretidePrizeResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTADiretidePrizeResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItemDef;
- (uint32_t) itemDef;
- (CMsgDOTADiretidePrizeResponse_Builder*) setItemDef:(uint32_t) value;
- (CMsgDOTADiretidePrizeResponse_Builder*) clearItemDef;

- (BOOL) hasPrizeList;
- (uint32_t) prizeList;
- (CMsgDOTADiretidePrizeResponse_Builder*) setPrizeList:(uint32_t) value;
- (CMsgDOTADiretidePrizeResponse_Builder*) clearPrizeList;
@end

@interface CMsgDOTAHalloweenHighScoreRequest : PBGeneratedMessage {
@private
  BOOL hasRound_:1;
  int32_t round;
}
- (BOOL) hasRound;
@property (readonly) int32_t round;

+ (CMsgDOTAHalloweenHighScoreRequest*) defaultInstance;
- (CMsgDOTAHalloweenHighScoreRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAHalloweenHighScoreRequest_Builder*) builder;
+ (CMsgDOTAHalloweenHighScoreRequest_Builder*) builder;
+ (CMsgDOTAHalloweenHighScoreRequest_Builder*) builderWithPrototype:(CMsgDOTAHalloweenHighScoreRequest*) prototype;
- (CMsgDOTAHalloweenHighScoreRequest_Builder*) toBuilder;

+ (CMsgDOTAHalloweenHighScoreRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTAHalloweenHighScoreRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHalloweenHighScoreRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAHalloweenHighScoreRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHalloweenHighScoreRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAHalloweenHighScoreRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAHalloweenHighScoreRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAHalloweenHighScoreRequest* _builderResult;
}

- (CMsgDOTAHalloweenHighScoreRequest*) defaultInstance;

- (CMsgDOTAHalloweenHighScoreRequest_Builder*) clear;
- (CMsgDOTAHalloweenHighScoreRequest_Builder*) clone;

- (CMsgDOTAHalloweenHighScoreRequest*) build;
- (CMsgDOTAHalloweenHighScoreRequest*) buildPartial;

- (CMsgDOTAHalloweenHighScoreRequest_Builder*) mergeFrom:(CMsgDOTAHalloweenHighScoreRequest*) other;
- (CMsgDOTAHalloweenHighScoreRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAHalloweenHighScoreRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRound;
- (int32_t) round;
- (CMsgDOTAHalloweenHighScoreRequest_Builder*) setRound:(int32_t) value;
- (CMsgDOTAHalloweenHighScoreRequest_Builder*) clearRound;
@end

@interface CMsgDOTAHalloweenHighScoreResponse : PBGeneratedMessage {
@private
  BOOL hasRound_:1;
  BOOL hasMatch_:1;
  BOOL hasScore_:1;
  BOOL hasEresult_:1;
  int32_t round;
  CMsgDOTAMatch* match;
  uint32_t score;
  uint32_t eresult;
}
- (BOOL) hasScore;
- (BOOL) hasMatch;
- (BOOL) hasEresult;
- (BOOL) hasRound;
@property (readonly) uint32_t score;
@property (readonly, retain) CMsgDOTAMatch* match;
@property (readonly) uint32_t eresult;
@property (readonly) int32_t round;

+ (CMsgDOTAHalloweenHighScoreResponse*) defaultInstance;
- (CMsgDOTAHalloweenHighScoreResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) builder;
+ (CMsgDOTAHalloweenHighScoreResponse_Builder*) builder;
+ (CMsgDOTAHalloweenHighScoreResponse_Builder*) builderWithPrototype:(CMsgDOTAHalloweenHighScoreResponse*) prototype;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) toBuilder;

+ (CMsgDOTAHalloweenHighScoreResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAHalloweenHighScoreResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHalloweenHighScoreResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAHalloweenHighScoreResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAHalloweenHighScoreResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAHalloweenHighScoreResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAHalloweenHighScoreResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAHalloweenHighScoreResponse* _builderResult;
}

- (CMsgDOTAHalloweenHighScoreResponse*) defaultInstance;

- (CMsgDOTAHalloweenHighScoreResponse_Builder*) clear;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) clone;

- (CMsgDOTAHalloweenHighScoreResponse*) build;
- (CMsgDOTAHalloweenHighScoreResponse*) buildPartial;

- (CMsgDOTAHalloweenHighScoreResponse_Builder*) mergeFrom:(CMsgDOTAHalloweenHighScoreResponse*) other;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasScore;
- (uint32_t) score;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) setScore:(uint32_t) value;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) clearScore;

- (BOOL) hasMatch;
- (CMsgDOTAMatch*) match;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) setMatch:(CMsgDOTAMatch*) value;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) setMatchBuilder:(CMsgDOTAMatch_Builder*) builderForValue;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) mergeMatch:(CMsgDOTAMatch*) value;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) clearMatch;

- (BOOL) hasEresult;
- (uint32_t) eresult;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) setEresult:(uint32_t) value;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) clearEresult;

- (BOOL) hasRound;
- (int32_t) round;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) setRound:(int32_t) value;
- (CMsgDOTAHalloweenHighScoreResponse_Builder*) clearRound;
@end

@interface CMsgDOTANotifyResetKeybindings : PBGeneratedMessage {
@private
  BOOL hasKeybindTemplate_:1;
  uint32_t keybindTemplate;
}
- (BOOL) hasKeybindTemplate;
@property (readonly) uint32_t keybindTemplate;

+ (CMsgDOTANotifyResetKeybindings*) defaultInstance;
- (CMsgDOTANotifyResetKeybindings*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTANotifyResetKeybindings_Builder*) builder;
+ (CMsgDOTANotifyResetKeybindings_Builder*) builder;
+ (CMsgDOTANotifyResetKeybindings_Builder*) builderWithPrototype:(CMsgDOTANotifyResetKeybindings*) prototype;
- (CMsgDOTANotifyResetKeybindings_Builder*) toBuilder;

+ (CMsgDOTANotifyResetKeybindings*) parseFromData:(NSData*) data;
+ (CMsgDOTANotifyResetKeybindings*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTANotifyResetKeybindings*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTANotifyResetKeybindings*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTANotifyResetKeybindings*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTANotifyResetKeybindings*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTANotifyResetKeybindings_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTANotifyResetKeybindings* _builderResult;
}

- (CMsgDOTANotifyResetKeybindings*) defaultInstance;

- (CMsgDOTANotifyResetKeybindings_Builder*) clear;
- (CMsgDOTANotifyResetKeybindings_Builder*) clone;

- (CMsgDOTANotifyResetKeybindings*) build;
- (CMsgDOTANotifyResetKeybindings*) buildPartial;

- (CMsgDOTANotifyResetKeybindings_Builder*) mergeFrom:(CMsgDOTANotifyResetKeybindings*) other;
- (CMsgDOTANotifyResetKeybindings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTANotifyResetKeybindings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasKeybindTemplate;
- (uint32_t) keybindTemplate;
- (CMsgDOTANotifyResetKeybindings_Builder*) setKeybindTemplate:(uint32_t) value;
- (CMsgDOTANotifyResetKeybindings_Builder*) clearKeybindTemplate;
@end

@interface CMsgDOTAStorePromoPagesRequest : PBGeneratedMessage {
@private
  BOOL hasVersionSeen_:1;
  uint32_t versionSeen;
}
- (BOOL) hasVersionSeen;
@property (readonly) uint32_t versionSeen;

+ (CMsgDOTAStorePromoPagesRequest*) defaultInstance;
- (CMsgDOTAStorePromoPagesRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAStorePromoPagesRequest_Builder*) builder;
+ (CMsgDOTAStorePromoPagesRequest_Builder*) builder;
+ (CMsgDOTAStorePromoPagesRequest_Builder*) builderWithPrototype:(CMsgDOTAStorePromoPagesRequest*) prototype;
- (CMsgDOTAStorePromoPagesRequest_Builder*) toBuilder;

+ (CMsgDOTAStorePromoPagesRequest*) parseFromData:(NSData*) data;
+ (CMsgDOTAStorePromoPagesRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAStorePromoPagesRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAStorePromoPagesRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAStorePromoPagesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAStorePromoPagesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAStorePromoPagesRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAStorePromoPagesRequest* _builderResult;
}

- (CMsgDOTAStorePromoPagesRequest*) defaultInstance;

- (CMsgDOTAStorePromoPagesRequest_Builder*) clear;
- (CMsgDOTAStorePromoPagesRequest_Builder*) clone;

- (CMsgDOTAStorePromoPagesRequest*) build;
- (CMsgDOTAStorePromoPagesRequest*) buildPartial;

- (CMsgDOTAStorePromoPagesRequest_Builder*) mergeFrom:(CMsgDOTAStorePromoPagesRequest*) other;
- (CMsgDOTAStorePromoPagesRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAStorePromoPagesRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersionSeen;
- (uint32_t) versionSeen;
- (CMsgDOTAStorePromoPagesRequest_Builder*) setVersionSeen:(uint32_t) value;
- (CMsgDOTAStorePromoPagesRequest_Builder*) clearVersionSeen;
@end

@interface CMsgDOTAStorePromoPagesResponse : PBGeneratedMessage {
@private
  PBAppendableArray * pagesArray;
}
@property (readonly, retain) PBArray * pages;
- (CMsgDOTAStorePromoPagesResponse_PromoPage*)pagesAtIndex:(NSUInteger)index;

+ (CMsgDOTAStorePromoPagesResponse*) defaultInstance;
- (CMsgDOTAStorePromoPagesResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAStorePromoPagesResponse_Builder*) builder;
+ (CMsgDOTAStorePromoPagesResponse_Builder*) builder;
+ (CMsgDOTAStorePromoPagesResponse_Builder*) builderWithPrototype:(CMsgDOTAStorePromoPagesResponse*) prototype;
- (CMsgDOTAStorePromoPagesResponse_Builder*) toBuilder;

+ (CMsgDOTAStorePromoPagesResponse*) parseFromData:(NSData*) data;
+ (CMsgDOTAStorePromoPagesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAStorePromoPagesResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAStorePromoPagesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAStorePromoPagesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAStorePromoPagesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAStorePromoPagesResponse_PromoPage : PBGeneratedMessage {
@private
  BOOL hasTitle_:1;
  BOOL hasUrl_:1;
  BOOL hasPromoId_:1;
  NSString* title;
  NSString* url;
  uint32_t promoId;
}
- (BOOL) hasPromoId;
- (BOOL) hasTitle;
- (BOOL) hasUrl;
@property (readonly) uint32_t promoId;
@property (readonly, retain) NSString* title;
@property (readonly, retain) NSString* url;

+ (CMsgDOTAStorePromoPagesResponse_PromoPage*) defaultInstance;
- (CMsgDOTAStorePromoPagesResponse_PromoPage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) builder;
+ (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) builder;
+ (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) builderWithPrototype:(CMsgDOTAStorePromoPagesResponse_PromoPage*) prototype;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) toBuilder;

+ (CMsgDOTAStorePromoPagesResponse_PromoPage*) parseFromData:(NSData*) data;
+ (CMsgDOTAStorePromoPagesResponse_PromoPage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAStorePromoPagesResponse_PromoPage*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAStorePromoPagesResponse_PromoPage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAStorePromoPagesResponse_PromoPage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAStorePromoPagesResponse_PromoPage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAStorePromoPagesResponse_PromoPage_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAStorePromoPagesResponse_PromoPage* _builderResult;
}

- (CMsgDOTAStorePromoPagesResponse_PromoPage*) defaultInstance;

- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) clear;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) clone;

- (CMsgDOTAStorePromoPagesResponse_PromoPage*) build;
- (CMsgDOTAStorePromoPagesResponse_PromoPage*) buildPartial;

- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) mergeFrom:(CMsgDOTAStorePromoPagesResponse_PromoPage*) other;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPromoId;
- (uint32_t) promoId;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) setPromoId:(uint32_t) value;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) clearPromoId;

- (BOOL) hasTitle;
- (NSString*) title;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) setTitle:(NSString*) value;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) clearTitle;

- (BOOL) hasUrl;
- (NSString*) url;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) setUrl:(NSString*) value;
- (CMsgDOTAStorePromoPagesResponse_PromoPage_Builder*) clearUrl;
@end

@interface CMsgDOTAStorePromoPagesResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAStorePromoPagesResponse* _builderResult;
}

- (CMsgDOTAStorePromoPagesResponse*) defaultInstance;

- (CMsgDOTAStorePromoPagesResponse_Builder*) clear;
- (CMsgDOTAStorePromoPagesResponse_Builder*) clone;

- (CMsgDOTAStorePromoPagesResponse*) build;
- (CMsgDOTAStorePromoPagesResponse*) buildPartial;

- (CMsgDOTAStorePromoPagesResponse_Builder*) mergeFrom:(CMsgDOTAStorePromoPagesResponse*) other;
- (CMsgDOTAStorePromoPagesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAStorePromoPagesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)pages;
- (CMsgDOTAStorePromoPagesResponse_PromoPage*)pagesAtIndex:(NSUInteger)index;
- (CMsgDOTAStorePromoPagesResponse_Builder *)addPages:(CMsgDOTAStorePromoPagesResponse_PromoPage*)value;
- (CMsgDOTAStorePromoPagesResponse_Builder *)setPagesArray:(NSArray *)array;
- (CMsgDOTAStorePromoPagesResponse_Builder *)setPagesValues:(const CMsgDOTAStorePromoPagesResponse_PromoPage* *)values count:(NSUInteger)count;
- (CMsgDOTAStorePromoPagesResponse_Builder *)clearPages;
@end

@interface CMsgDOTAGCToGCMatchCompleted : PBGeneratedMessage {
@private
  BOOL hasMatchId_:1;
  uint32_t matchId;
}
- (BOOL) hasMatchId;
@property (readonly) uint32_t matchId;

+ (CMsgDOTAGCToGCMatchCompleted*) defaultInstance;
- (CMsgDOTAGCToGCMatchCompleted*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgDOTAGCToGCMatchCompleted_Builder*) builder;
+ (CMsgDOTAGCToGCMatchCompleted_Builder*) builder;
+ (CMsgDOTAGCToGCMatchCompleted_Builder*) builderWithPrototype:(CMsgDOTAGCToGCMatchCompleted*) prototype;
- (CMsgDOTAGCToGCMatchCompleted_Builder*) toBuilder;

+ (CMsgDOTAGCToGCMatchCompleted*) parseFromData:(NSData*) data;
+ (CMsgDOTAGCToGCMatchCompleted*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAGCToGCMatchCompleted*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgDOTAGCToGCMatchCompleted*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgDOTAGCToGCMatchCompleted*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgDOTAGCToGCMatchCompleted*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgDOTAGCToGCMatchCompleted_Builder : PBGeneratedMessage_Builder {
@private
  CMsgDOTAGCToGCMatchCompleted* _builderResult;
}

- (CMsgDOTAGCToGCMatchCompleted*) defaultInstance;

- (CMsgDOTAGCToGCMatchCompleted_Builder*) clear;
- (CMsgDOTAGCToGCMatchCompleted_Builder*) clone;

- (CMsgDOTAGCToGCMatchCompleted*) build;
- (CMsgDOTAGCToGCMatchCompleted*) buildPartial;

- (CMsgDOTAGCToGCMatchCompleted_Builder*) mergeFrom:(CMsgDOTAGCToGCMatchCompleted*) other;
- (CMsgDOTAGCToGCMatchCompleted_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgDOTAGCToGCMatchCompleted_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CMsgDOTAGCToGCMatchCompleted_Builder*) setMatchId:(uint32_t) value;
- (CMsgDOTAGCToGCMatchCompleted_Builder*) clearMatchId;
@end

