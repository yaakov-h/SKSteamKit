// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "gcsystemmsgs.pb.h"

@implementation GcsystemmsgsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GcsystemmsgsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL EGCSystemMsgIsValidValue(EGCSystemMsg value) {
  switch (value) {
    case EGCSystemMsgk_EGCMsgInvalid:
    case EGCSystemMsgk_EGCMsgMulti:
    case EGCSystemMsgk_EGCMsgGenericReply:
    case EGCSystemMsgk_EGCMsgSystemBase:
    case EGCSystemMsgk_EGCMsgAchievementAwarded:
    case EGCSystemMsgk_EGCMsgConCommand:
    case EGCSystemMsgk_EGCMsgStartPlaying:
    case EGCSystemMsgk_EGCMsgStopPlaying:
    case EGCSystemMsgk_EGCMsgStartGameserver:
    case EGCSystemMsgk_EGCMsgStopGameserver:
    case EGCSystemMsgk_EGCMsgWGRequest:
    case EGCSystemMsgk_EGCMsgWGResponse:
    case EGCSystemMsgk_EGCMsgGetUserGameStatsSchema:
    case EGCSystemMsgk_EGCMsgGetUserGameStatsSchemaResponse:
    case EGCSystemMsgk_EGCMsgGetUserStatsDEPRECATED:
    case EGCSystemMsgk_EGCMsgGetUserStatsResponse:
    case EGCSystemMsgk_EGCMsgAppInfoUpdated:
    case EGCSystemMsgk_EGCMsgValidateSession:
    case EGCSystemMsgk_EGCMsgValidateSessionResponse:
    case EGCSystemMsgk_EGCMsgLookupAccountFromInput:
    case EGCSystemMsgk_EGCMsgSendHTTPRequest:
    case EGCSystemMsgk_EGCMsgSendHTTPRequestResponse:
    case EGCSystemMsgk_EGCMsgPreTestSetup:
    case EGCSystemMsgk_EGCMsgRecordSupportAction:
    case EGCSystemMsgk_EGCMsgGetAccountDetails_DEPRECATED:
    case EGCSystemMsgk_EGCMsgReceiveInterAppMessage:
    case EGCSystemMsgk_EGCMsgFindAccounts:
    case EGCSystemMsgk_EGCMsgPostAlert:
    case EGCSystemMsgk_EGCMsgGetLicenses:
    case EGCSystemMsgk_EGCMsgGetUserStats:
    case EGCSystemMsgk_EGCMsgGetCommands:
    case EGCSystemMsgk_EGCMsgGetCommandsResponse:
    case EGCSystemMsgk_EGCMsgAddFreeLicense:
    case EGCSystemMsgk_EGCMsgAddFreeLicenseResponse:
    case EGCSystemMsgk_EGCMsgGetIPLocation:
    case EGCSystemMsgk_EGCMsgGetIPLocationResponse:
    case EGCSystemMsgk_EGCMsgSystemStatsSchema:
    case EGCSystemMsgk_EGCMsgGetSystemStats:
    case EGCSystemMsgk_EGCMsgGetSystemStatsResponse:
    case EGCSystemMsgk_EGCMsgSendEmail:
    case EGCSystemMsgk_EGCMsgSendEmailResponse:
    case EGCSystemMsgk_EGCMsgGetEmailTemplate:
    case EGCSystemMsgk_EGCMsgGetEmailTemplateResponse:
    case EGCSystemMsgk_EGCMsgGrantGuestPass:
    case EGCSystemMsgk_EGCMsgGrantGuestPassResponse:
    case EGCSystemMsgk_EGCMsgGetAccountDetails:
    case EGCSystemMsgk_EGCMsgGetAccountDetailsResponse:
    case EGCSystemMsgk_EGCMsgGetPersonaNames:
    case EGCSystemMsgk_EGCMsgGetPersonaNamesResponse:
    case EGCSystemMsgk_EGCMsgMultiplexMsg:
    case EGCSystemMsgk_EGCMsgWebAPIRegisterInterfaces:
    case EGCSystemMsgk_EGCMsgWebAPIJobRequest:
    case EGCSystemMsgk_EGCMsgWebAPIRegistrationRequested:
    case EGCSystemMsgk_EGCMsgMemCachedGet:
    case EGCSystemMsgk_EGCMsgMemCachedGetResponse:
    case EGCSystemMsgk_EGCMsgMemCachedSet:
    case EGCSystemMsgk_EGCMsgMemCachedDelete:
    case EGCSystemMsgk_EGCMsgMasterSetDirectory:
    case EGCSystemMsgk_EGCMsgMasterSetDirectoryResponse:
      return YES;
    default:
      return NO;
  }
}
BOOL ESOMsgIsValidValue(ESOMsg value) {
  switch (value) {
    case ESOMsgk_ESOMsg_Create:
    case ESOMsgk_ESOMsg_Update:
    case ESOMsgk_ESOMsg_Destroy:
    case ESOMsgk_ESOMsg_CacheSubscribed:
    case ESOMsgk_ESOMsg_CacheUnsubscribed:
    case ESOMsgk_ESOMsg_UpdateMultiple:
    case ESOMsgk_ESOMsg_CacheSubscriptionCheck:
    case ESOMsgk_ESOMsg_CacheSubscriptionRefresh:
      return YES;
    default:
      return NO;
  }
}
BOOL EGCToGCMsgIsValidValue(EGCToGCMsg value) {
  switch (value) {
    case EGCToGCMsgk_EGCToGCMsgMasterAck:
    case EGCToGCMsgk_EGCToGCMsgMasterAckResponse:
    case EGCToGCMsgk_EGCToGCMsgRouted:
    case EGCToGCMsgk_EGCToGCMsgRoutedReply:
    case EGCToGCMsgk_EMsgUpdateSessionIP:
    case EGCToGCMsgk_EMsgRequestSessionIP:
    case EGCToGCMsgk_EMsgRequestSessionIPResponse:
      return YES;
    default:
      return NO;
  }
}
