// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "steammessages.pb.h"

@class CGCMsgGetIPLocation;
@class CGCMsgGetIPLocationResponse;
@class CGCMsgGetIPLocationResponse_Builder;
@class CGCMsgGetIPLocation_Builder;
@class CGCMsgGetSystemStats;
@class CGCMsgGetSystemStatsResponse;
@class CGCMsgGetSystemStatsResponse_Builder;
@class CGCMsgGetSystemStats_Builder;
@class CGCMsgMemCachedDelete;
@class CGCMsgMemCachedDelete_Builder;
@class CGCMsgMemCachedGet;
@class CGCMsgMemCachedGetResponse;
@class CGCMsgMemCachedGetResponse_Builder;
@class CGCMsgMemCachedGetResponse_ValueTag;
@class CGCMsgMemCachedGetResponse_ValueTag_Builder;
@class CGCMsgMemCachedGet_Builder;
@class CGCMsgMemCachedSet;
@class CGCMsgMemCachedSet_Builder;
@class CGCMsgMemCachedSet_KeyPair;
@class CGCMsgMemCachedSet_KeyPair_Builder;
@class CGCMsgSystemStatsSchema;
@class CGCMsgSystemStatsSchema_Builder;
@class CGCMsgTFHelloResponse;
@class CGCMsgTFHelloResponse_Builder;
@class CGCMsgTFSync;
@class CGCMsgTFSync_Builder;
@class CGCSystemMsg_GetAccountDetails;
@class CGCSystemMsg_GetAccountDetails_Builder;
@class CGCSystemMsg_GetAccountDetails_Response;
@class CGCSystemMsg_GetAccountDetails_Response_Builder;
@class CIPLocationInfo;
@class CIPLocationInfo_Builder;
@class CLobbyPendingPlayerReport;
@class CLobbyPendingPlayerReport_Builder;
@class CMsgAMAddFreeLicense;
@class CMsgAMAddFreeLicenseResponse;
@class CMsgAMAddFreeLicenseResponse_Builder;
@class CMsgAMAddFreeLicense_Builder;
@class CMsgAMFindAccounts;
@class CMsgAMFindAccountsResponse;
@class CMsgAMFindAccountsResponse_Builder;
@class CMsgAMFindAccounts_Builder;
@class CMsgAMGetLicenses;
@class CMsgAMGetLicensesResponse;
@class CMsgAMGetLicensesResponse_Builder;
@class CMsgAMGetLicenses_Builder;
@class CMsgAMGetUserGameStats;
@class CMsgAMGetUserGameStatsResponse;
@class CMsgAMGetUserGameStatsResponse_Achievement_Blocks;
@class CMsgAMGetUserGameStatsResponse_Achievement_Blocks_Builder;
@class CMsgAMGetUserGameStatsResponse_Builder;
@class CMsgAMGetUserGameStatsResponse_Stats;
@class CMsgAMGetUserGameStatsResponse_Stats_Builder;
@class CMsgAMGetUserGameStats_Builder;
@class CMsgAMGrantGuestPasses2;
@class CMsgAMGrantGuestPasses2Response;
@class CMsgAMGrantGuestPasses2Response_Builder;
@class CMsgAMGrantGuestPasses2_Builder;
@class CMsgAMSendEmail;
@class CMsgAMSendEmailResponse;
@class CMsgAMSendEmailResponse_Builder;
@class CMsgAMSendEmail_Builder;
@class CMsgAMSendEmail_PersonaNameReplacementToken;
@class CMsgAMSendEmail_PersonaNameReplacementToken_Builder;
@class CMsgAMSendEmail_ReplacementToken;
@class CMsgAMSendEmail_ReplacementToken_Builder;
@class CMsgAcceptInvite;
@class CMsgAcceptInviteResponse;
@class CMsgAcceptInviteResponse_Builder;
@class CMsgAcceptInvite_Builder;
@class CMsgCreateOrUpdateParty;
@class CMsgCreateOrUpdatePartyReply;
@class CMsgCreateOrUpdatePartyReply_Builder;
@class CMsgCreateOrUpdateParty_Builder;
@class CMsgExitMatchmaking;
@class CMsgExitMatchmaking_Builder;
@class CMsgGCGetCommandList;
@class CMsgGCGetCommandListResponse;
@class CMsgGCGetCommandListResponse_Builder;
@class CMsgGCGetCommandList_Builder;
@class CMsgGCGetEmailTemplate;
@class CMsgGCGetEmailTemplateResponse;
@class CMsgGCGetEmailTemplateResponse_Builder;
@class CMsgGCGetEmailTemplate_Builder;
@class CMsgGCGetPersonaNames;
@class CMsgGCGetPersonaNames_Builder;
@class CMsgGCGetPersonaNames_Response;
@class CMsgGCGetPersonaNames_Response_Builder;
@class CMsgGCGetPersonaNames_Response_PersonaName;
@class CMsgGCGetPersonaNames_Response_PersonaName_Builder;
@class CMsgGC_GameServer_AuthChallenge;
@class CMsgGC_GameServer_AuthChallengeResponse;
@class CMsgGC_GameServer_AuthChallengeResponse_Builder;
@class CMsgGC_GameServer_AuthChallenge_Builder;
@class CMsgGC_GameServer_AuthResult;
@class CMsgGC_GameServer_AuthResult_Builder;
@class CMsgGC_GameServer_CreateIdentity;
@class CMsgGC_GameServer_CreateIdentityResponse;
@class CMsgGC_GameServer_CreateIdentityResponse_Builder;
@class CMsgGC_GameServer_CreateIdentity_Builder;
@class CMsgGC_GameServer_LevelInfo;
@class CMsgGC_GameServer_LevelInfo_Builder;
@class CMsgGC_GameServer_List;
@class CMsgGC_GameServer_ListResponse;
@class CMsgGC_GameServer_ListResponse_Builder;
@class CMsgGC_GameServer_ListResponse_GameServerIdentity;
@class CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder;
@class CMsgGC_GameServer_List_Builder;
@class CMsgGC_GameServer_ResetIdentity;
@class CMsgGC_GameServer_ResetIdentityResponse;
@class CMsgGC_GameServer_ResetIdentityResponse_Builder;
@class CMsgGC_GameServer_ResetIdentity_Builder;
@class CMsgGC_Halloween_GrantItem;
@class CMsgGC_Halloween_GrantItemResponse;
@class CMsgGC_Halloween_GrantItemResponse_Builder;
@class CMsgGC_Halloween_GrantItem_Builder;
@class CMsgGC_Halloween_ItemClaimed;
@class CMsgGC_Halloween_ItemClaimed_Builder;
@class CMsgGC_Halloween_ReservedItem;
@class CMsgGC_Halloween_ReservedItem_Builder;
@class CMsgGC_PickupItemEligibility_Query;
@class CMsgGC_PickupItemEligibility_QueryResponse;
@class CMsgGC_PickupItemEligibility_QueryResponse_Builder;
@class CMsgGC_PickupItemEligibility_Query_Builder;
@class CMsgGameMatchSignOut;
@class CMsgGameMatchSignOut_Builder;
@class CMsgGameServerKickingLobby;
@class CMsgGameServerKickingLobby_Builder;
@class CMsgGameServerMatchmakingStatus;
@class CMsgGameServerMatchmakingStatus_Builder;
@class CMsgGameServerMatchmakingStatus_Player;
@class CMsgGameServerMatchmakingStatus_Player_Builder;
@class CMsgHalloween_Merasmus2012;
@class CMsgHalloween_Merasmus2012_Builder;
@class CMsgHalloween_ServerBossEvent;
@class CMsgHalloween_ServerBossEvent_Builder;
@class CMsgHttpRequest;
@class CMsgHttpRequest_Builder;
@class CMsgHttpRequest_QueryParam;
@class CMsgHttpRequest_QueryParam_Builder;
@class CMsgHttpRequest_RequestHeader;
@class CMsgHttpRequest_RequestHeader_Builder;
@class CMsgHttpResponse;
@class CMsgHttpResponse_Builder;
@class CMsgHttpResponse_ResponseHeader;
@class CMsgHttpResponse_ResponseHeader_Builder;
@class CMsgKickedFromMatchmakingQueue;
@class CMsgKickedFromMatchmakingQueue_Builder;
@class CMsgLeaveGameAndPrepareToJoinParty;
@class CMsgLeaveGameAndPrepareToJoinParty_Builder;
@class CMsgMatchSearchCriteria;
@class CMsgMatchSearchCriteria_Builder;
@class CMsgMatchmakingProgress;
@class CMsgMatchmakingProgress_Builder;
@class CMsgMatchmakingSearchCountRequest;
@class CMsgMatchmakingSearchCountRequest_Builder;
@class CMsgMatchmakingSearchCountResponse;
@class CMsgMatchmakingSearchCountResponse_Builder;
@class CMsgMvMMannUpVictoryReply;
@class CMsgMvMMannUpVictoryReply_Builder;
@class CMsgMvMVictory;
@class CMsgMvMVictoryInfo;
@class CMsgMvMVictoryInfo_Builder;
@class CMsgMvMVictoryInfo_Item;
@class CMsgMvMVictoryInfo_Item_Builder;
@class CMsgMvMVictoryInfo_Player;
@class CMsgMvMVictoryInfo_Player_Builder;
@class CMsgMvMVictory_Builder;
@class CMsgMvMVictory_Player;
@class CMsgMvMVictory_Player_Builder;
@class CMsgNotifyWatchdog;
@class CMsgNotifyWatchdog_Builder;
@class CMsgPackageLicense;
@class CMsgPackageLicense_Builder;
@class CMsgProtoBufHeader;
@class CMsgProtoBufHeader_Builder;
@class CMsgReadyUp;
@class CMsgReadyUp_Builder;
@class CMsgRemovePlayerFromLobby;
@class CMsgRemovePlayerFromLobby_Builder;
@class CMsgReplaySubmitContestEntry;
@class CMsgReplaySubmitContestEntryResponse;
@class CMsgReplaySubmitContestEntryResponse_Builder;
@class CMsgReplaySubmitContestEntry_Builder;
@class CMsgSaxxyAwarded;
@class CMsgSaxxyAwarded_Builder;
@class CMsgSetLobbySafeToLeave;
@class CMsgSetLobbySafeToLeave_Builder;
@class CMsgTFCoaching_AddToCoaches;
@class CMsgTFCoaching_AddToCoaches_Builder;
@class CMsgTFCoaching_AskCoach;
@class CMsgTFCoaching_AskCoachResponse;
@class CMsgTFCoaching_AskCoachResponse_Builder;
@class CMsgTFCoaching_AskCoach_Builder;
@class CMsgTFCoaching_CoachJoinGame;
@class CMsgTFCoaching_CoachJoinGame_Builder;
@class CMsgTFCoaching_CoachJoined;
@class CMsgTFCoaching_CoachJoined_Builder;
@class CMsgTFCoaching_CoachJoining;
@class CMsgTFCoaching_CoachJoining_Builder;
@class CMsgTFCoaching_FindCoach;
@class CMsgTFCoaching_FindCoachResponse;
@class CMsgTFCoaching_FindCoachResponse_Builder;
@class CMsgTFCoaching_FindCoach_Builder;
@class CMsgTFCoaching_LikeCurrentCoach;
@class CMsgTFCoaching_LikeCurrentCoach_Builder;
@class CMsgTFCoaching_RemoveCurrentCoach;
@class CMsgTFCoaching_RemoveCurrentCoach_Builder;
@class CMsgTFCoaching_RemoveFromCoaches;
@class CMsgTFCoaching_RemoveFromCoaches_Builder;
@class CMsgTFFreeTrialChooseMostHelpfulFriend;
@class CMsgTFFreeTrialChooseMostHelpfulFriend_Builder;
@class CMsgTFFreeTrialConvertedToPremium;
@class CMsgTFFreeTrialConvertedToPremium_Builder;
@class CMsgTFGoldenWrenchBroadcast;
@class CMsgTFGoldenWrenchBroadcast_Builder;
@class CMsgTFJoinChatChannel;
@class CMsgTFJoinChatChannelResponse;
@class CMsgTFJoinChatChannelResponse_Builder;
@class CMsgTFJoinChatChannelResponse_ChatMember;
@class CMsgTFJoinChatChannelResponse_ChatMember_Builder;
@class CMsgTFJoinChatChannel_Builder;
@class CMsgTFKickPlayer;
@class CMsgTFKickPlayer_Builder;
@class CMsgTFLeaveChatChannel;
@class CMsgTFLeaveChatChannel_Builder;
@class CMsgTFOtherJoinedChatChannel;
@class CMsgTFOtherJoinedChatChannel_Builder;
@class CMsgTFOtherLeftChatChannel;
@class CMsgTFOtherLeftChatChannel_Builder;
@class CMsgTFPlayerFailedToConnect;
@class CMsgTFPlayerFailedToConnect_Builder;
@class CMsgTFQuickplay_PlayerJoining;
@class CMsgTFQuickplay_PlayerJoining_Builder;
@class CMsgTFQuickplay_ScoreServers;
@class CMsgTFQuickplay_ScoreServersResponse;
@class CMsgTFQuickplay_ScoreServersResponse_Builder;
@class CMsgTFQuickplay_ScoreServersResponse_ServerInfo;
@class CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder;
@class CMsgTFQuickplay_ScoreServers_Builder;
@class CMsgTFQuickplay_ScoreServers_ServerInfo;
@class CMsgTFQuickplay_ScoreServers_ServerInfo_Builder;
@class CMsgTFRequestChatChannelList;
@class CMsgTFRequestChatChannelListResponse;
@class CMsgTFRequestChatChannelListResponse_Builder;
@class CMsgTFRequestChatChannelListResponse_ChatChannel;
@class CMsgTFRequestChatChannelListResponse_ChatChannel_Builder;
@class CMsgTFRequestChatChannelList_Builder;
@class CMsgTFRequestDefaultChatChannel;
@class CMsgTFRequestDefaultChatChannelResponse;
@class CMsgTFRequestDefaultChatChannelResponse_Builder;
@class CMsgTFRequestDefaultChatChannel_Builder;
@class CMsgTFRequestTF2Friends;
@class CMsgTFRequestTF2FriendsResponse;
@class CMsgTFRequestTF2FriendsResponse_Builder;
@class CMsgTFRequestTF2Friends_Builder;
@class CMsgTFSaxxyBroadcast;
@class CMsgTFSaxxyBroadcast_Builder;
@class CMsgTFStartedTraining;
@class CMsgTFStartedTraining_Builder;
@class CMsgTFThankedBySomeone;
@class CMsgTFThankedBySomeone_Builder;
@class CMsgTFThankedSomeone;
@class CMsgTFThankedSomeone_Builder;
@class CMsgTFVoteKickBanPlayer;
@class CMsgTFVoteKickBanPlayerResult;
@class CMsgTFVoteKickBanPlayerResult_Builder;
@class CMsgTFVoteKickBanPlayer_Builder;
@class CMsgUpdateHalloweenMerasmusLootLevel;
@class CMsgUpdateHalloweenMerasmusLootLevel_Builder;
@class CMsgUpdateHalloweenMerasmusLootLevel_Player;
@class CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder;
@class CMsgWebAPIKey;
@class CMsgWebAPIKey_Builder;
@class CMsgWebAPIRequest;
@class CMsgWebAPIRequest_Builder;
@class CReplayCachedContestData;
@class CReplayCachedContestData_Builder;
@class CSOTFDuelSummary;
@class CSOTFDuelSummary_Builder;
@class CSOTFLobby;
@class CSOTFLobby_Builder;
@class CSOTFMapContribution;
@class CSOTFMapContribution_Builder;
@class CSOTFParty;
@class CSOTFPartyInvite;
@class CSOTFPartyInvite_Builder;
@class CSOTFPartyInvite_PartyMember;
@class CSOTFPartyInvite_PartyMember_Builder;
@class CSOTFPartyMember;
@class CSOTFPartyMember_Builder;
@class CSOTFParty_Builder;
@class CSOTFPlayerInfo;
@class CSOTFPlayerInfo_Builder;
@class CTFLobbyMember;
@class CTFLobbyMember_Builder;
@class PBDescriptorProto;
@class PBDescriptorProto_Builder;
@class PBDescriptorProto_ExtensionRange;
@class PBDescriptorProto_ExtensionRange_Builder;
@class PBEnumDescriptorProto;
@class PBEnumDescriptorProto_Builder;
@class PBEnumOptions;
@class PBEnumOptions_Builder;
@class PBEnumValueDescriptorProto;
@class PBEnumValueDescriptorProto_Builder;
@class PBEnumValueOptions;
@class PBEnumValueOptions_Builder;
@class PBFieldDescriptorProto;
@class PBFieldDescriptorProto_Builder;
@class PBFieldOptions;
@class PBFieldOptions_Builder;
@class PBFileDescriptorProto;
@class PBFileDescriptorProto_Builder;
@class PBFileDescriptorSet;
@class PBFileDescriptorSet_Builder;
@class PBFileOptions;
@class PBFileOptions_Builder;
@class PBMessageOptions;
@class PBMessageOptions_Builder;
@class PBMethodDescriptorProto;
@class PBMethodDescriptorProto_Builder;
@class PBMethodOptions;
@class PBMethodOptions_Builder;
@class PBServiceDescriptorProto;
@class PBServiceDescriptorProto_Builder;
@class PBServiceOptions;
@class PBServiceOptions_Builder;
@class PBSourceCodeInfo;
@class PBSourceCodeInfo_Builder;
@class PBSourceCodeInfo_Location;
@class PBSourceCodeInfo_Location_Builder;
@class PBUninterpretedOption;
@class PBUninterpretedOption_Builder;
@class PBUninterpretedOption_NamePart;
@class PBUninterpretedOption_NamePart_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  TF_MatchmakingModeTF_Matchmaking_INVALID = 0,
  TF_MatchmakingModeTF_Matchmaking_QUICKPLAY = 1,
  TF_MatchmakingModeTF_Matchmaking_TOBOR = 2,
} TF_MatchmakingMode;

BOOL TF_MatchmakingModeIsValidValue(TF_MatchmakingMode value);

typedef enum {
  TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_INVALID = 0,
  TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_TOBOR_PLAY_FOR_BRAGGING_RIGHTS = 1,
  TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_TOBOR_TOUR_OF_DUTY = 2,
  TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_TOBOR_CHALLENGE = 3,
  TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_QUICKPLAY = 4,
  TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_SEARCHING = 5,
} TF_Matchmaking_WizardStep;

BOOL TF_Matchmaking_WizardStepIsValidValue(TF_Matchmaking_WizardStep value);

typedef enum {
  TF_GC_GameStateTF_GC_GAMESTATE_STATE_INIT = 0,
  TF_GC_GameStateTF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD = 1,
  TF_GC_GameStateTF_GC_GAMESTATE_STRATEGY_TIME = 3,
  TF_GC_GameStateTF_GC_GAMESTATE_GAME_IN_PROGRESS = 5,
  TF_GC_GameStateTF_GC_GAMESTATE_POST_GAME = 6,
  TF_GC_GameStateTF_GC_GAMESTATE_DISCONNECT = 7,
  TF_GC_GameStateTF_GC_GAMESTATE_LAST = 8,
} TF_GC_GameState;

BOOL TF_GC_GameStateIsValidValue(TF_GC_GameState value);

typedef enum {
  TF_GC_TEAMTF_GC_TEAM_DEFENDERS = 0,
  TF_GC_TEAMTF_GC_TEAM_BROADCASTER = 2,
  TF_GC_TEAMTF_GC_TEAM_SPECTATOR = 3,
  TF_GC_TEAMTF_GC_TEAM_PLAYER_POOL = 4,
  TF_GC_TEAMTF_GC_TEAM_NOTEAM = 5,
} TF_GC_TEAM;

BOOL TF_GC_TEAMIsValidValue(TF_GC_TEAM value);

typedef enum {
  TFLobbyReadyStateTFLobbyReadyState_UNDECLARED = 0,
  TFLobbyReadyStateTFLobbyReadyState_ACCEPTED = 1,
  TFLobbyReadyStateTFLobbyReadyState_DECLINED = 2,
} TFLobbyReadyState;

BOOL TFLobbyReadyStateIsValidValue(TFLobbyReadyState value);

typedef enum {
  ChatChannelType_tChatChannelType_Regional = 0,
  ChatChannelType_tChatChannelType_Custom = 1,
  ChatChannelType_tChatChannelType_Party = 2,
  ChatChannelType_tChatChannelType_Lobby = 3,
} ChatChannelType_t;

BOOL ChatChannelType_tIsValidValue(ChatChannelType_t value);

typedef enum {
  ServerMatchmakingStateServerMatchmakingState_INVALID = 0,
  ServerMatchmakingStateServerMatchmakingState_NOT_PARTICIPATING = 1,
  ServerMatchmakingStateServerMatchmakingState_EMPTY = 2,
  ServerMatchmakingStateServerMatchmakingState_ACTIVE_SLOTS_AVAILABLE = 3,
  ServerMatchmakingStateServerMatchmakingState_ACTIVE_FULL = 4,
} ServerMatchmakingState;

BOOL ServerMatchmakingStateIsValidValue(ServerMatchmakingState value);

typedef enum {
  CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_GenericFailure = 0,
  CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_TooMany = -1,
  CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_NoPrivs = -2,
  CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_Created = 1,
} CMsgGC_GameServer_CreateIdentityResponse_EStatus;

BOOL CMsgGC_GameServer_CreateIdentityResponse_EStatusIsValidValue(CMsgGC_GameServer_CreateIdentityResponse_EStatus value);

typedef enum {
  CSOTFParty_StateUI = 0,
  CSOTFParty_StateFINDING_MATCH = 1,
  CSOTFParty_StateIN_MATCH = 2,
  CSOTFParty_StateAWAITING_RESERVATION_CONFIRMATION = 3,
} CSOTFParty_State;

BOOL CSOTFParty_StateIsValidValue(CSOTFParty_State value);

typedef enum {
  CTFLobbyMember_ConnectStateINVALID = 0,
  CTFLobbyMember_ConnectStateRESERVATION_PENDING = 1,
  CTFLobbyMember_ConnectStateRESERVED = 2,
  CTFLobbyMember_ConnectStateCONNECTED = 3,
  CTFLobbyMember_ConnectStateDISCONNECTED = 5,
} CTFLobbyMember_ConnectState;

BOOL CTFLobbyMember_ConnectStateIsValidValue(CTFLobbyMember_ConnectState value);

typedef enum {
  CSOTFLobby_StateSERVERSETUP = 1,
  CSOTFLobby_StateRUN = 2,
  CSOTFLobby_StatePOSTGAME = 3,
  CSOTFLobby_StateNOTREADY = 5,
  CSOTFLobby_StateSERVERASSIGN = 6,
} CSOTFLobby_State;

BOOL CSOTFLobby_StateIsValidValue(CSOTFLobby_State value);

typedef enum {
  CSOTFLobby_LobbyTypeINVALID = -1,
  CSOTFLobby_LobbyTypeMATCH = 0,
  CSOTFLobby_LobbyTypePRACTICE = 1,
  CSOTFLobby_LobbyTypeTOURNAMENT = 2,
  CSOTFLobby_LobbyTypeTUTORIAL = 3,
} CSOTFLobby_LobbyType;

BOOL CSOTFLobby_LobbyTypeIsValidValue(CSOTFLobby_LobbyType value);

typedef enum {
  CMsgGameServerMatchmakingStatus_PlayerConnectStateINVALID = 0,
  CMsgGameServerMatchmakingStatus_PlayerConnectStateCONNECTED = 1,
  CMsgGameServerMatchmakingStatus_PlayerConnectStateRESERVED = 2,
} CMsgGameServerMatchmakingStatus_PlayerConnectState;

BOOL CMsgGameServerMatchmakingStatus_PlayerConnectStateIsValidValue(CMsgGameServerMatchmakingStatus_PlayerConnectState value);

typedef enum {
  CMsgGameServerMatchmakingStatus_EventNone = 0,
  CMsgGameServerMatchmakingStatus_EventMvMVictory = 1,
  CMsgGameServerMatchmakingStatus_EventMvMDefeat = 2,
  CMsgGameServerMatchmakingStatus_EventAcknowledgePlayers = 3,
} CMsgGameServerMatchmakingStatus_Event;

BOOL CMsgGameServerMatchmakingStatus_EventIsValidValue(CMsgGameServerMatchmakingStatus_Event value);

typedef enum {
  CMsgMvMVictoryInfo_GrantReasonINVALID = 0,
  CMsgMvMVictoryInfo_GrantReasonBADGE_LEVELED = 1,
  CMsgMvMVictoryInfo_GrantReasonSQUAD_SURPLUS = 2,
  CMsgMvMVictoryInfo_GrantReasonMANN_UP = 3,
} CMsgMvMVictoryInfo_GrantReason;

BOOL CMsgMvMVictoryInfo_GrantReasonIsValidValue(CMsgMvMVictoryInfo_GrantReason value);

typedef enum {
  CMsgRemovePlayerFromLobby_RemoveReasonVOTE_KICK = 0,
  CMsgRemovePlayerFromLobby_RemoveReasonIDLE_KICK = 1,
  CMsgRemovePlayerFromLobby_RemoveReasonADMIN_KICK = 2,
} CMsgRemovePlayerFromLobby_RemoveReason;

BOOL CMsgRemovePlayerFromLobby_RemoveReasonIsValidValue(CMsgRemovePlayerFromLobby_RemoveReason value);


@interface TfGcmessagesRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface CMsgTFGoldenWrenchBroadcast : PBGeneratedMessage {
@private
  BOOL hasDeleted_:1;
  BOOL hasWrenchNumber_:1;
  BOOL hasUserName_:1;
  BOOL deleted_:1;
  int32_t wrenchNumber;
  NSString* userName;
}
- (BOOL) hasWrenchNumber;
- (BOOL) hasDeleted;
- (BOOL) hasUserName;
@property (readonly) int32_t wrenchNumber;
- (BOOL) deleted;
@property (readonly, retain) NSString* userName;

+ (CMsgTFGoldenWrenchBroadcast*) defaultInstance;
- (CMsgTFGoldenWrenchBroadcast*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFGoldenWrenchBroadcast_Builder*) builder;
+ (CMsgTFGoldenWrenchBroadcast_Builder*) builder;
+ (CMsgTFGoldenWrenchBroadcast_Builder*) builderWithPrototype:(CMsgTFGoldenWrenchBroadcast*) prototype;
- (CMsgTFGoldenWrenchBroadcast_Builder*) toBuilder;

+ (CMsgTFGoldenWrenchBroadcast*) parseFromData:(NSData*) data;
+ (CMsgTFGoldenWrenchBroadcast*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFGoldenWrenchBroadcast*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFGoldenWrenchBroadcast*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFGoldenWrenchBroadcast*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFGoldenWrenchBroadcast*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFGoldenWrenchBroadcast_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFGoldenWrenchBroadcast* _builderResult;
}

- (CMsgTFGoldenWrenchBroadcast*) defaultInstance;

- (CMsgTFGoldenWrenchBroadcast_Builder*) clear;
- (CMsgTFGoldenWrenchBroadcast_Builder*) clone;

- (CMsgTFGoldenWrenchBroadcast*) build;
- (CMsgTFGoldenWrenchBroadcast*) buildPartial;

- (CMsgTFGoldenWrenchBroadcast_Builder*) mergeFrom:(CMsgTFGoldenWrenchBroadcast*) other;
- (CMsgTFGoldenWrenchBroadcast_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFGoldenWrenchBroadcast_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWrenchNumber;
- (int32_t) wrenchNumber;
- (CMsgTFGoldenWrenchBroadcast_Builder*) setWrenchNumber:(int32_t) value;
- (CMsgTFGoldenWrenchBroadcast_Builder*) clearWrenchNumber;

- (BOOL) hasDeleted;
- (BOOL) deleted;
- (CMsgTFGoldenWrenchBroadcast_Builder*) setDeleted:(BOOL) value;
- (CMsgTFGoldenWrenchBroadcast_Builder*) clearDeleted;

- (BOOL) hasUserName;
- (NSString*) userName;
- (CMsgTFGoldenWrenchBroadcast_Builder*) setUserName:(NSString*) value;
- (CMsgTFGoldenWrenchBroadcast_Builder*) clearUserName;
@end

@interface CMsgTFSaxxyBroadcast : PBGeneratedMessage {
@private
  BOOL hasCategoryNumber_:1;
  BOOL hasUserName_:1;
  int32_t categoryNumber;
  NSString* userName;
}
- (BOOL) hasCategoryNumber;
- (BOOL) hasUserName;
@property (readonly) int32_t categoryNumber;
@property (readonly, retain) NSString* userName;

+ (CMsgTFSaxxyBroadcast*) defaultInstance;
- (CMsgTFSaxxyBroadcast*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFSaxxyBroadcast_Builder*) builder;
+ (CMsgTFSaxxyBroadcast_Builder*) builder;
+ (CMsgTFSaxxyBroadcast_Builder*) builderWithPrototype:(CMsgTFSaxxyBroadcast*) prototype;
- (CMsgTFSaxxyBroadcast_Builder*) toBuilder;

+ (CMsgTFSaxxyBroadcast*) parseFromData:(NSData*) data;
+ (CMsgTFSaxxyBroadcast*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFSaxxyBroadcast*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFSaxxyBroadcast*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFSaxxyBroadcast*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFSaxxyBroadcast*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFSaxxyBroadcast_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFSaxxyBroadcast* _builderResult;
}

- (CMsgTFSaxxyBroadcast*) defaultInstance;

- (CMsgTFSaxxyBroadcast_Builder*) clear;
- (CMsgTFSaxxyBroadcast_Builder*) clone;

- (CMsgTFSaxxyBroadcast*) build;
- (CMsgTFSaxxyBroadcast*) buildPartial;

- (CMsgTFSaxxyBroadcast_Builder*) mergeFrom:(CMsgTFSaxxyBroadcast*) other;
- (CMsgTFSaxxyBroadcast_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFSaxxyBroadcast_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCategoryNumber;
- (int32_t) categoryNumber;
- (CMsgTFSaxxyBroadcast_Builder*) setCategoryNumber:(int32_t) value;
- (CMsgTFSaxxyBroadcast_Builder*) clearCategoryNumber;

- (BOOL) hasUserName;
- (NSString*) userName;
- (CMsgTFSaxxyBroadcast_Builder*) setUserName:(NSString*) value;
- (CMsgTFSaxxyBroadcast_Builder*) clearUserName;
@end

@interface CSOTFDuelSummary : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  BOOL hasDuelWins_:1;
  BOOL hasDuelLosses_:1;
  BOOL hasLastDuelAccountId_:1;
  BOOL hasLastDuelTimestamp_:1;
  BOOL hasLastDuelStatus_:1;
  uint32_t accountId;
  uint32_t duelWins;
  uint32_t duelLosses;
  uint32_t lastDuelAccountId;
  uint32_t lastDuelTimestamp;
  uint32_t lastDuelStatus;
}
- (BOOL) hasAccountId;
- (BOOL) hasDuelWins;
- (BOOL) hasDuelLosses;
- (BOOL) hasLastDuelAccountId;
- (BOOL) hasLastDuelTimestamp;
- (BOOL) hasLastDuelStatus;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t duelWins;
@property (readonly) uint32_t duelLosses;
@property (readonly) uint32_t lastDuelAccountId;
@property (readonly) uint32_t lastDuelTimestamp;
@property (readonly) uint32_t lastDuelStatus;

+ (CSOTFDuelSummary*) defaultInstance;
- (CSOTFDuelSummary*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSOTFDuelSummary_Builder*) builder;
+ (CSOTFDuelSummary_Builder*) builder;
+ (CSOTFDuelSummary_Builder*) builderWithPrototype:(CSOTFDuelSummary*) prototype;
- (CSOTFDuelSummary_Builder*) toBuilder;

+ (CSOTFDuelSummary*) parseFromData:(NSData*) data;
+ (CSOTFDuelSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFDuelSummary*) parseFromInputStream:(NSInputStream*) input;
+ (CSOTFDuelSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFDuelSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSOTFDuelSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSOTFDuelSummary_Builder : PBGeneratedMessage_Builder {
@private
  CSOTFDuelSummary* _builderResult;
}

- (CSOTFDuelSummary*) defaultInstance;

- (CSOTFDuelSummary_Builder*) clear;
- (CSOTFDuelSummary_Builder*) clone;

- (CSOTFDuelSummary*) build;
- (CSOTFDuelSummary*) buildPartial;

- (CSOTFDuelSummary_Builder*) mergeFrom:(CSOTFDuelSummary*) other;
- (CSOTFDuelSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSOTFDuelSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CSOTFDuelSummary_Builder*) setAccountId:(uint32_t) value;
- (CSOTFDuelSummary_Builder*) clearAccountId;

- (BOOL) hasDuelWins;
- (uint32_t) duelWins;
- (CSOTFDuelSummary_Builder*) setDuelWins:(uint32_t) value;
- (CSOTFDuelSummary_Builder*) clearDuelWins;

- (BOOL) hasDuelLosses;
- (uint32_t) duelLosses;
- (CSOTFDuelSummary_Builder*) setDuelLosses:(uint32_t) value;
- (CSOTFDuelSummary_Builder*) clearDuelLosses;

- (BOOL) hasLastDuelAccountId;
- (uint32_t) lastDuelAccountId;
- (CSOTFDuelSummary_Builder*) setLastDuelAccountId:(uint32_t) value;
- (CSOTFDuelSummary_Builder*) clearLastDuelAccountId;

- (BOOL) hasLastDuelTimestamp;
- (uint32_t) lastDuelTimestamp;
- (CSOTFDuelSummary_Builder*) setLastDuelTimestamp:(uint32_t) value;
- (CSOTFDuelSummary_Builder*) clearLastDuelTimestamp;

- (BOOL) hasLastDuelStatus;
- (uint32_t) lastDuelStatus;
- (CSOTFDuelSummary_Builder*) setLastDuelStatus:(uint32_t) value;
- (CSOTFDuelSummary_Builder*) clearLastDuelStatus;
@end

@interface CSOTFMapContribution : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  BOOL hasDefIndex_:1;
  BOOL hasContributionLevel_:1;
  uint32_t accountId;
  uint32_t defIndex;
  uint32_t contributionLevel;
}
- (BOOL) hasAccountId;
- (BOOL) hasDefIndex;
- (BOOL) hasContributionLevel;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t defIndex;
@property (readonly) uint32_t contributionLevel;

+ (CSOTFMapContribution*) defaultInstance;
- (CSOTFMapContribution*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSOTFMapContribution_Builder*) builder;
+ (CSOTFMapContribution_Builder*) builder;
+ (CSOTFMapContribution_Builder*) builderWithPrototype:(CSOTFMapContribution*) prototype;
- (CSOTFMapContribution_Builder*) toBuilder;

+ (CSOTFMapContribution*) parseFromData:(NSData*) data;
+ (CSOTFMapContribution*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFMapContribution*) parseFromInputStream:(NSInputStream*) input;
+ (CSOTFMapContribution*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFMapContribution*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSOTFMapContribution*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSOTFMapContribution_Builder : PBGeneratedMessage_Builder {
@private
  CSOTFMapContribution* _builderResult;
}

- (CSOTFMapContribution*) defaultInstance;

- (CSOTFMapContribution_Builder*) clear;
- (CSOTFMapContribution_Builder*) clone;

- (CSOTFMapContribution*) build;
- (CSOTFMapContribution*) buildPartial;

- (CSOTFMapContribution_Builder*) mergeFrom:(CSOTFMapContribution*) other;
- (CSOTFMapContribution_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSOTFMapContribution_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CSOTFMapContribution_Builder*) setAccountId:(uint32_t) value;
- (CSOTFMapContribution_Builder*) clearAccountId;

- (BOOL) hasDefIndex;
- (uint32_t) defIndex;
- (CSOTFMapContribution_Builder*) setDefIndex:(uint32_t) value;
- (CSOTFMapContribution_Builder*) clearDefIndex;

- (BOOL) hasContributionLevel;
- (uint32_t) contributionLevel;
- (CSOTFMapContribution_Builder*) setContributionLevel:(uint32_t) value;
- (CSOTFMapContribution_Builder*) clearContributionLevel;
@end

@interface CMsgTFVoteKickBanPlayer : PBGeneratedMessage {
@private
  BOOL hasAccountIdSubject_:1;
  BOOL hasKickReason_:1;
  uint32_t accountIdSubject;
  uint32_t kickReason;
}
- (BOOL) hasAccountIdSubject;
- (BOOL) hasKickReason;
@property (readonly) uint32_t accountIdSubject;
@property (readonly) uint32_t kickReason;

+ (CMsgTFVoteKickBanPlayer*) defaultInstance;
- (CMsgTFVoteKickBanPlayer*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFVoteKickBanPlayer_Builder*) builder;
+ (CMsgTFVoteKickBanPlayer_Builder*) builder;
+ (CMsgTFVoteKickBanPlayer_Builder*) builderWithPrototype:(CMsgTFVoteKickBanPlayer*) prototype;
- (CMsgTFVoteKickBanPlayer_Builder*) toBuilder;

+ (CMsgTFVoteKickBanPlayer*) parseFromData:(NSData*) data;
+ (CMsgTFVoteKickBanPlayer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFVoteKickBanPlayer*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFVoteKickBanPlayer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFVoteKickBanPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFVoteKickBanPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFVoteKickBanPlayer_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFVoteKickBanPlayer* _builderResult;
}

- (CMsgTFVoteKickBanPlayer*) defaultInstance;

- (CMsgTFVoteKickBanPlayer_Builder*) clear;
- (CMsgTFVoteKickBanPlayer_Builder*) clone;

- (CMsgTFVoteKickBanPlayer*) build;
- (CMsgTFVoteKickBanPlayer*) buildPartial;

- (CMsgTFVoteKickBanPlayer_Builder*) mergeFrom:(CMsgTFVoteKickBanPlayer*) other;
- (CMsgTFVoteKickBanPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFVoteKickBanPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountIdSubject;
- (uint32_t) accountIdSubject;
- (CMsgTFVoteKickBanPlayer_Builder*) setAccountIdSubject:(uint32_t) value;
- (CMsgTFVoteKickBanPlayer_Builder*) clearAccountIdSubject;

- (BOOL) hasKickReason;
- (uint32_t) kickReason;
- (CMsgTFVoteKickBanPlayer_Builder*) setKickReason:(uint32_t) value;
- (CMsgTFVoteKickBanPlayer_Builder*) clearKickReason;
@end

@interface CMsgTFVoteKickBanPlayerResult : PBGeneratedMessage {
@private
  BOOL hasKickSuccessful_:1;
  BOOL hasAccountIdInitiator_:1;
  BOOL hasAccountIdSubject_:1;
  BOOL hasKickReason_:1;
  BOOL hasNumYesVotes_:1;
  BOOL hasNumNoVotes_:1;
  BOOL hasNumPossibleVotes_:1;
  BOOL kickSuccessful_:1;
  uint32_t accountIdInitiator;
  uint32_t accountIdSubject;
  uint32_t kickReason;
  uint32_t numYesVotes;
  uint32_t numNoVotes;
  uint32_t numPossibleVotes;
}
- (BOOL) hasAccountIdInitiator;
- (BOOL) hasAccountIdSubject;
- (BOOL) hasKickReason;
- (BOOL) hasKickSuccessful;
- (BOOL) hasNumYesVotes;
- (BOOL) hasNumNoVotes;
- (BOOL) hasNumPossibleVotes;
@property (readonly) uint32_t accountIdInitiator;
@property (readonly) uint32_t accountIdSubject;
@property (readonly) uint32_t kickReason;
- (BOOL) kickSuccessful;
@property (readonly) uint32_t numYesVotes;
@property (readonly) uint32_t numNoVotes;
@property (readonly) uint32_t numPossibleVotes;

+ (CMsgTFVoteKickBanPlayerResult*) defaultInstance;
- (CMsgTFVoteKickBanPlayerResult*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFVoteKickBanPlayerResult_Builder*) builder;
+ (CMsgTFVoteKickBanPlayerResult_Builder*) builder;
+ (CMsgTFVoteKickBanPlayerResult_Builder*) builderWithPrototype:(CMsgTFVoteKickBanPlayerResult*) prototype;
- (CMsgTFVoteKickBanPlayerResult_Builder*) toBuilder;

+ (CMsgTFVoteKickBanPlayerResult*) parseFromData:(NSData*) data;
+ (CMsgTFVoteKickBanPlayerResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFVoteKickBanPlayerResult*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFVoteKickBanPlayerResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFVoteKickBanPlayerResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFVoteKickBanPlayerResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFVoteKickBanPlayerResult_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFVoteKickBanPlayerResult* _builderResult;
}

- (CMsgTFVoteKickBanPlayerResult*) defaultInstance;

- (CMsgTFVoteKickBanPlayerResult_Builder*) clear;
- (CMsgTFVoteKickBanPlayerResult_Builder*) clone;

- (CMsgTFVoteKickBanPlayerResult*) build;
- (CMsgTFVoteKickBanPlayerResult*) buildPartial;

- (CMsgTFVoteKickBanPlayerResult_Builder*) mergeFrom:(CMsgTFVoteKickBanPlayerResult*) other;
- (CMsgTFVoteKickBanPlayerResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFVoteKickBanPlayerResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountIdInitiator;
- (uint32_t) accountIdInitiator;
- (CMsgTFVoteKickBanPlayerResult_Builder*) setAccountIdInitiator:(uint32_t) value;
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearAccountIdInitiator;

- (BOOL) hasAccountIdSubject;
- (uint32_t) accountIdSubject;
- (CMsgTFVoteKickBanPlayerResult_Builder*) setAccountIdSubject:(uint32_t) value;
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearAccountIdSubject;

- (BOOL) hasKickReason;
- (uint32_t) kickReason;
- (CMsgTFVoteKickBanPlayerResult_Builder*) setKickReason:(uint32_t) value;
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearKickReason;

- (BOOL) hasKickSuccessful;
- (BOOL) kickSuccessful;
- (CMsgTFVoteKickBanPlayerResult_Builder*) setKickSuccessful:(BOOL) value;
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearKickSuccessful;

- (BOOL) hasNumYesVotes;
- (uint32_t) numYesVotes;
- (CMsgTFVoteKickBanPlayerResult_Builder*) setNumYesVotes:(uint32_t) value;
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearNumYesVotes;

- (BOOL) hasNumNoVotes;
- (uint32_t) numNoVotes;
- (CMsgTFVoteKickBanPlayerResult_Builder*) setNumNoVotes:(uint32_t) value;
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearNumNoVotes;

- (BOOL) hasNumPossibleVotes;
- (uint32_t) numPossibleVotes;
- (CMsgTFVoteKickBanPlayerResult_Builder*) setNumPossibleVotes:(uint32_t) value;
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearNumPossibleVotes;
@end

@interface CMsgTFKickPlayer : PBGeneratedMessage {
@private
  BOOL hasAccountIdPlayer_:1;
  BOOL hasKickReason_:1;
  uint32_t accountIdPlayer;
  uint32_t kickReason;
}
- (BOOL) hasAccountIdPlayer;
- (BOOL) hasKickReason;
@property (readonly) uint32_t accountIdPlayer;
@property (readonly) uint32_t kickReason;

+ (CMsgTFKickPlayer*) defaultInstance;
- (CMsgTFKickPlayer*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFKickPlayer_Builder*) builder;
+ (CMsgTFKickPlayer_Builder*) builder;
+ (CMsgTFKickPlayer_Builder*) builderWithPrototype:(CMsgTFKickPlayer*) prototype;
- (CMsgTFKickPlayer_Builder*) toBuilder;

+ (CMsgTFKickPlayer*) parseFromData:(NSData*) data;
+ (CMsgTFKickPlayer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFKickPlayer*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFKickPlayer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFKickPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFKickPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFKickPlayer_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFKickPlayer* _builderResult;
}

- (CMsgTFKickPlayer*) defaultInstance;

- (CMsgTFKickPlayer_Builder*) clear;
- (CMsgTFKickPlayer_Builder*) clone;

- (CMsgTFKickPlayer*) build;
- (CMsgTFKickPlayer*) buildPartial;

- (CMsgTFKickPlayer_Builder*) mergeFrom:(CMsgTFKickPlayer*) other;
- (CMsgTFKickPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFKickPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountIdPlayer;
- (uint32_t) accountIdPlayer;
- (CMsgTFKickPlayer_Builder*) setAccountIdPlayer:(uint32_t) value;
- (CMsgTFKickPlayer_Builder*) clearAccountIdPlayer;

- (BOOL) hasKickReason;
- (uint32_t) kickReason;
- (CMsgTFKickPlayer_Builder*) setKickReason:(uint32_t) value;
- (CMsgTFKickPlayer_Builder*) clearKickReason;
@end

@interface CMsgTFStartedTraining : PBGeneratedMessage {
@private
}

+ (CMsgTFStartedTraining*) defaultInstance;
- (CMsgTFStartedTraining*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFStartedTraining_Builder*) builder;
+ (CMsgTFStartedTraining_Builder*) builder;
+ (CMsgTFStartedTraining_Builder*) builderWithPrototype:(CMsgTFStartedTraining*) prototype;
- (CMsgTFStartedTraining_Builder*) toBuilder;

+ (CMsgTFStartedTraining*) parseFromData:(NSData*) data;
+ (CMsgTFStartedTraining*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFStartedTraining*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFStartedTraining*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFStartedTraining*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFStartedTraining*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFStartedTraining_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFStartedTraining* _builderResult;
}

- (CMsgTFStartedTraining*) defaultInstance;

- (CMsgTFStartedTraining_Builder*) clear;
- (CMsgTFStartedTraining_Builder*) clone;

- (CMsgTFStartedTraining*) build;
- (CMsgTFStartedTraining*) buildPartial;

- (CMsgTFStartedTraining_Builder*) mergeFrom:(CMsgTFStartedTraining*) other;
- (CMsgTFStartedTraining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFStartedTraining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFFreeTrialChooseMostHelpfulFriend : PBGeneratedMessage {
@private
  BOOL hasAccountIdFriend_:1;
  uint32_t accountIdFriend;
}
- (BOOL) hasAccountIdFriend;
@property (readonly) uint32_t accountIdFriend;

+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) defaultInstance;
- (CMsgTFFreeTrialChooseMostHelpfulFriend*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) builder;
+ (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) builder;
+ (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) builderWithPrototype:(CMsgTFFreeTrialChooseMostHelpfulFriend*) prototype;
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) toBuilder;

+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromData:(NSData*) data;
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFFreeTrialChooseMostHelpfulFriend_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFFreeTrialChooseMostHelpfulFriend* _builderResult;
}

- (CMsgTFFreeTrialChooseMostHelpfulFriend*) defaultInstance;

- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) clear;
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) clone;

- (CMsgTFFreeTrialChooseMostHelpfulFriend*) build;
- (CMsgTFFreeTrialChooseMostHelpfulFriend*) buildPartial;

- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) mergeFrom:(CMsgTFFreeTrialChooseMostHelpfulFriend*) other;
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountIdFriend;
- (uint32_t) accountIdFriend;
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) setAccountIdFriend:(uint32_t) value;
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) clearAccountIdFriend;
@end

@interface CMsgTFRequestTF2Friends : PBGeneratedMessage {
@private
  PBAppendableArray * accountIdsArray;
}
@property (readonly, retain) PBArray * accountIds;
- (uint32_t)accountIdsAtIndex:(NSUInteger)index;

+ (CMsgTFRequestTF2Friends*) defaultInstance;
- (CMsgTFRequestTF2Friends*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFRequestTF2Friends_Builder*) builder;
+ (CMsgTFRequestTF2Friends_Builder*) builder;
+ (CMsgTFRequestTF2Friends_Builder*) builderWithPrototype:(CMsgTFRequestTF2Friends*) prototype;
- (CMsgTFRequestTF2Friends_Builder*) toBuilder;

+ (CMsgTFRequestTF2Friends*) parseFromData:(NSData*) data;
+ (CMsgTFRequestTF2Friends*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestTF2Friends*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFRequestTF2Friends*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestTF2Friends*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFRequestTF2Friends*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFRequestTF2Friends_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFRequestTF2Friends* _builderResult;
}

- (CMsgTFRequestTF2Friends*) defaultInstance;

- (CMsgTFRequestTF2Friends_Builder*) clear;
- (CMsgTFRequestTF2Friends_Builder*) clone;

- (CMsgTFRequestTF2Friends*) build;
- (CMsgTFRequestTF2Friends*) buildPartial;

- (CMsgTFRequestTF2Friends_Builder*) mergeFrom:(CMsgTFRequestTF2Friends*) other;
- (CMsgTFRequestTF2Friends_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFRequestTF2Friends_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)accountIds;
- (uint32_t)accountIdsAtIndex:(NSUInteger)index;
- (CMsgTFRequestTF2Friends_Builder *)addAccountIds:(uint32_t)value;
- (CMsgTFRequestTF2Friends_Builder *)setAccountIdsArray:(NSArray *)array;
- (CMsgTFRequestTF2Friends_Builder *)setAccountIdsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgTFRequestTF2Friends_Builder *)clearAccountIds;
@end

@interface CMsgTFRequestTF2FriendsResponse : PBGeneratedMessage {
@private
  PBAppendableArray * accountIdsArray;
}
@property (readonly, retain) PBArray * accountIds;
- (uint32_t)accountIdsAtIndex:(NSUInteger)index;

+ (CMsgTFRequestTF2FriendsResponse*) defaultInstance;
- (CMsgTFRequestTF2FriendsResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFRequestTF2FriendsResponse_Builder*) builder;
+ (CMsgTFRequestTF2FriendsResponse_Builder*) builder;
+ (CMsgTFRequestTF2FriendsResponse_Builder*) builderWithPrototype:(CMsgTFRequestTF2FriendsResponse*) prototype;
- (CMsgTFRequestTF2FriendsResponse_Builder*) toBuilder;

+ (CMsgTFRequestTF2FriendsResponse*) parseFromData:(NSData*) data;
+ (CMsgTFRequestTF2FriendsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestTF2FriendsResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFRequestTF2FriendsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestTF2FriendsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFRequestTF2FriendsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFRequestTF2FriendsResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFRequestTF2FriendsResponse* _builderResult;
}

- (CMsgTFRequestTF2FriendsResponse*) defaultInstance;

- (CMsgTFRequestTF2FriendsResponse_Builder*) clear;
- (CMsgTFRequestTF2FriendsResponse_Builder*) clone;

- (CMsgTFRequestTF2FriendsResponse*) build;
- (CMsgTFRequestTF2FriendsResponse*) buildPartial;

- (CMsgTFRequestTF2FriendsResponse_Builder*) mergeFrom:(CMsgTFRequestTF2FriendsResponse*) other;
- (CMsgTFRequestTF2FriendsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFRequestTF2FriendsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)accountIds;
- (uint32_t)accountIdsAtIndex:(NSUInteger)index;
- (CMsgTFRequestTF2FriendsResponse_Builder *)addAccountIds:(uint32_t)value;
- (CMsgTFRequestTF2FriendsResponse_Builder *)setAccountIdsArray:(NSArray *)array;
- (CMsgTFRequestTF2FriendsResponse_Builder *)setAccountIdsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgTFRequestTF2FriendsResponse_Builder *)clearAccountIds;
@end

@interface CSOTFPlayerInfo : PBGeneratedMessage {
@private
  BOOL hasTrialAccount_:1;
  BOOL hasNumNewUsersHelped_:1;
  BOOL trialAccount_:1;
  uint32_t numNewUsersHelped;
}
- (BOOL) hasNumNewUsersHelped;
- (BOOL) hasTrialAccount;
@property (readonly) uint32_t numNewUsersHelped;
- (BOOL) trialAccount;

+ (CSOTFPlayerInfo*) defaultInstance;
- (CSOTFPlayerInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSOTFPlayerInfo_Builder*) builder;
+ (CSOTFPlayerInfo_Builder*) builder;
+ (CSOTFPlayerInfo_Builder*) builderWithPrototype:(CSOTFPlayerInfo*) prototype;
- (CSOTFPlayerInfo_Builder*) toBuilder;

+ (CSOTFPlayerInfo*) parseFromData:(NSData*) data;
+ (CSOTFPlayerInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFPlayerInfo*) parseFromInputStream:(NSInputStream*) input;
+ (CSOTFPlayerInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFPlayerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSOTFPlayerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSOTFPlayerInfo_Builder : PBGeneratedMessage_Builder {
@private
  CSOTFPlayerInfo* _builderResult;
}

- (CSOTFPlayerInfo*) defaultInstance;

- (CSOTFPlayerInfo_Builder*) clear;
- (CSOTFPlayerInfo_Builder*) clone;

- (CSOTFPlayerInfo*) build;
- (CSOTFPlayerInfo*) buildPartial;

- (CSOTFPlayerInfo_Builder*) mergeFrom:(CSOTFPlayerInfo*) other;
- (CSOTFPlayerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSOTFPlayerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasNumNewUsersHelped;
- (uint32_t) numNewUsersHelped;
- (CSOTFPlayerInfo_Builder*) setNumNewUsersHelped:(uint32_t) value;
- (CSOTFPlayerInfo_Builder*) clearNumNewUsersHelped;

- (BOOL) hasTrialAccount;
- (BOOL) trialAccount;
- (CSOTFPlayerInfo_Builder*) setTrialAccount:(BOOL) value;
- (CSOTFPlayerInfo_Builder*) clearTrialAccount;
@end

@interface CMsgTFThankedBySomeone : PBGeneratedMessage {
@private
  BOOL hasThankerSteamId_:1;
  uint64_t thankerSteamId;
}
- (BOOL) hasThankerSteamId;
@property (readonly) uint64_t thankerSteamId;

+ (CMsgTFThankedBySomeone*) defaultInstance;
- (CMsgTFThankedBySomeone*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFThankedBySomeone_Builder*) builder;
+ (CMsgTFThankedBySomeone_Builder*) builder;
+ (CMsgTFThankedBySomeone_Builder*) builderWithPrototype:(CMsgTFThankedBySomeone*) prototype;
- (CMsgTFThankedBySomeone_Builder*) toBuilder;

+ (CMsgTFThankedBySomeone*) parseFromData:(NSData*) data;
+ (CMsgTFThankedBySomeone*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFThankedBySomeone*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFThankedBySomeone*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFThankedBySomeone*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFThankedBySomeone*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFThankedBySomeone_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFThankedBySomeone* _builderResult;
}

- (CMsgTFThankedBySomeone*) defaultInstance;

- (CMsgTFThankedBySomeone_Builder*) clear;
- (CMsgTFThankedBySomeone_Builder*) clone;

- (CMsgTFThankedBySomeone*) build;
- (CMsgTFThankedBySomeone*) buildPartial;

- (CMsgTFThankedBySomeone_Builder*) mergeFrom:(CMsgTFThankedBySomeone*) other;
- (CMsgTFThankedBySomeone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFThankedBySomeone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasThankerSteamId;
- (uint64_t) thankerSteamId;
- (CMsgTFThankedBySomeone_Builder*) setThankerSteamId:(uint64_t) value;
- (CMsgTFThankedBySomeone_Builder*) clearThankerSteamId;
@end

@interface CMsgTFThankedSomeone : PBGeneratedMessage {
@private
}

+ (CMsgTFThankedSomeone*) defaultInstance;
- (CMsgTFThankedSomeone*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFThankedSomeone_Builder*) builder;
+ (CMsgTFThankedSomeone_Builder*) builder;
+ (CMsgTFThankedSomeone_Builder*) builderWithPrototype:(CMsgTFThankedSomeone*) prototype;
- (CMsgTFThankedSomeone_Builder*) toBuilder;

+ (CMsgTFThankedSomeone*) parseFromData:(NSData*) data;
+ (CMsgTFThankedSomeone*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFThankedSomeone*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFThankedSomeone*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFThankedSomeone*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFThankedSomeone*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFThankedSomeone_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFThankedSomeone* _builderResult;
}

- (CMsgTFThankedSomeone*) defaultInstance;

- (CMsgTFThankedSomeone_Builder*) clear;
- (CMsgTFThankedSomeone_Builder*) clone;

- (CMsgTFThankedSomeone*) build;
- (CMsgTFThankedSomeone*) buildPartial;

- (CMsgTFThankedSomeone_Builder*) mergeFrom:(CMsgTFThankedSomeone*) other;
- (CMsgTFThankedSomeone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFThankedSomeone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFFreeTrialConvertedToPremium : PBGeneratedMessage {
@private
}

+ (CMsgTFFreeTrialConvertedToPremium*) defaultInstance;
- (CMsgTFFreeTrialConvertedToPremium*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFFreeTrialConvertedToPremium_Builder*) builder;
+ (CMsgTFFreeTrialConvertedToPremium_Builder*) builder;
+ (CMsgTFFreeTrialConvertedToPremium_Builder*) builderWithPrototype:(CMsgTFFreeTrialConvertedToPremium*) prototype;
- (CMsgTFFreeTrialConvertedToPremium_Builder*) toBuilder;

+ (CMsgTFFreeTrialConvertedToPremium*) parseFromData:(NSData*) data;
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFFreeTrialConvertedToPremium_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFFreeTrialConvertedToPremium* _builderResult;
}

- (CMsgTFFreeTrialConvertedToPremium*) defaultInstance;

- (CMsgTFFreeTrialConvertedToPremium_Builder*) clear;
- (CMsgTFFreeTrialConvertedToPremium_Builder*) clone;

- (CMsgTFFreeTrialConvertedToPremium*) build;
- (CMsgTFFreeTrialConvertedToPremium*) buildPartial;

- (CMsgTFFreeTrialConvertedToPremium_Builder*) mergeFrom:(CMsgTFFreeTrialConvertedToPremium*) other;
- (CMsgTFFreeTrialConvertedToPremium_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFFreeTrialConvertedToPremium_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSaxxyAwarded : PBGeneratedMessage {
@private
  BOOL hasCategory_:1;
  uint32_t category;
  PBAppendableArray * winnerNamesArray;
}
- (BOOL) hasCategory;
@property (readonly) uint32_t category;
@property (readonly, retain) PBArray * winnerNames;
- (NSString*)winnerNamesAtIndex:(NSUInteger)index;

+ (CMsgSaxxyAwarded*) defaultInstance;
- (CMsgSaxxyAwarded*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSaxxyAwarded_Builder*) builder;
+ (CMsgSaxxyAwarded_Builder*) builder;
+ (CMsgSaxxyAwarded_Builder*) builderWithPrototype:(CMsgSaxxyAwarded*) prototype;
- (CMsgSaxxyAwarded_Builder*) toBuilder;

+ (CMsgSaxxyAwarded*) parseFromData:(NSData*) data;
+ (CMsgSaxxyAwarded*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSaxxyAwarded*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSaxxyAwarded*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSaxxyAwarded*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSaxxyAwarded*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSaxxyAwarded_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSaxxyAwarded* _builderResult;
}

- (CMsgSaxxyAwarded*) defaultInstance;

- (CMsgSaxxyAwarded_Builder*) clear;
- (CMsgSaxxyAwarded_Builder*) clone;

- (CMsgSaxxyAwarded*) build;
- (CMsgSaxxyAwarded*) buildPartial;

- (CMsgSaxxyAwarded_Builder*) mergeFrom:(CMsgSaxxyAwarded*) other;
- (CMsgSaxxyAwarded_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSaxxyAwarded_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCategory;
- (uint32_t) category;
- (CMsgSaxxyAwarded_Builder*) setCategory:(uint32_t) value;
- (CMsgSaxxyAwarded_Builder*) clearCategory;

- (PBAppendableArray *)winnerNames;
- (NSString*)winnerNamesAtIndex:(NSUInteger)index;
- (CMsgSaxxyAwarded_Builder *)addWinnerNames:(NSString*)value;
- (CMsgSaxxyAwarded_Builder *)setWinnerNamesArray:(NSArray *)array;
- (CMsgSaxxyAwarded_Builder *)setWinnerNamesValues:(const NSString* *)values count:(NSUInteger)count;
- (CMsgSaxxyAwarded_Builder *)clearWinnerNames;
@end

@interface CMsgReplaySubmitContestEntry : PBGeneratedMessage {
@private
  BOOL hasYoutubeUrl_:1;
  BOOL hasCategory_:1;
  NSString* youtubeUrl;
  uint32_t category;
}
- (BOOL) hasYoutubeUrl;
- (BOOL) hasCategory;
@property (readonly, retain) NSString* youtubeUrl;
@property (readonly) uint32_t category;

+ (CMsgReplaySubmitContestEntry*) defaultInstance;
- (CMsgReplaySubmitContestEntry*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgReplaySubmitContestEntry_Builder*) builder;
+ (CMsgReplaySubmitContestEntry_Builder*) builder;
+ (CMsgReplaySubmitContestEntry_Builder*) builderWithPrototype:(CMsgReplaySubmitContestEntry*) prototype;
- (CMsgReplaySubmitContestEntry_Builder*) toBuilder;

+ (CMsgReplaySubmitContestEntry*) parseFromData:(NSData*) data;
+ (CMsgReplaySubmitContestEntry*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReplaySubmitContestEntry*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgReplaySubmitContestEntry*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReplaySubmitContestEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgReplaySubmitContestEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgReplaySubmitContestEntry_Builder : PBGeneratedMessage_Builder {
@private
  CMsgReplaySubmitContestEntry* _builderResult;
}

- (CMsgReplaySubmitContestEntry*) defaultInstance;

- (CMsgReplaySubmitContestEntry_Builder*) clear;
- (CMsgReplaySubmitContestEntry_Builder*) clone;

- (CMsgReplaySubmitContestEntry*) build;
- (CMsgReplaySubmitContestEntry*) buildPartial;

- (CMsgReplaySubmitContestEntry_Builder*) mergeFrom:(CMsgReplaySubmitContestEntry*) other;
- (CMsgReplaySubmitContestEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgReplaySubmitContestEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasYoutubeUrl;
- (NSString*) youtubeUrl;
- (CMsgReplaySubmitContestEntry_Builder*) setYoutubeUrl:(NSString*) value;
- (CMsgReplaySubmitContestEntry_Builder*) clearYoutubeUrl;

- (BOOL) hasCategory;
- (uint32_t) category;
- (CMsgReplaySubmitContestEntry_Builder*) setCategory:(uint32_t) value;
- (CMsgReplaySubmitContestEntry_Builder*) clearCategory;
@end

@interface CMsgReplaySubmitContestEntryResponse : PBGeneratedMessage {
@private
  BOOL hasSuccess_:1;
  BOOL success_:1;
}
- (BOOL) hasSuccess;
- (BOOL) success;

+ (CMsgReplaySubmitContestEntryResponse*) defaultInstance;
- (CMsgReplaySubmitContestEntryResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgReplaySubmitContestEntryResponse_Builder*) builder;
+ (CMsgReplaySubmitContestEntryResponse_Builder*) builder;
+ (CMsgReplaySubmitContestEntryResponse_Builder*) builderWithPrototype:(CMsgReplaySubmitContestEntryResponse*) prototype;
- (CMsgReplaySubmitContestEntryResponse_Builder*) toBuilder;

+ (CMsgReplaySubmitContestEntryResponse*) parseFromData:(NSData*) data;
+ (CMsgReplaySubmitContestEntryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReplaySubmitContestEntryResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgReplaySubmitContestEntryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReplaySubmitContestEntryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgReplaySubmitContestEntryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgReplaySubmitContestEntryResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgReplaySubmitContestEntryResponse* _builderResult;
}

- (CMsgReplaySubmitContestEntryResponse*) defaultInstance;

- (CMsgReplaySubmitContestEntryResponse_Builder*) clear;
- (CMsgReplaySubmitContestEntryResponse_Builder*) clone;

- (CMsgReplaySubmitContestEntryResponse*) build;
- (CMsgReplaySubmitContestEntryResponse*) buildPartial;

- (CMsgReplaySubmitContestEntryResponse_Builder*) mergeFrom:(CMsgReplaySubmitContestEntryResponse*) other;
- (CMsgReplaySubmitContestEntryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgReplaySubmitContestEntryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSuccess;
- (BOOL) success;
- (CMsgReplaySubmitContestEntryResponse_Builder*) setSuccess:(BOOL) value;
- (CMsgReplaySubmitContestEntryResponse_Builder*) clearSuccess;
@end

@interface CReplayCachedContestData : PBGeneratedMessage {
@private
  BOOL hasTimestamp_:1;
  BOOL hasNumVotesLastDay_:1;
  BOOL hasNumFlagsLastDay_:1;
  uint32_t timestamp;
  uint32_t numVotesLastDay;
  uint32_t numFlagsLastDay;
  PBAppendableArray * videoEntryIdsArray;
}
- (BOOL) hasTimestamp;
- (BOOL) hasNumVotesLastDay;
- (BOOL) hasNumFlagsLastDay;
@property (readonly) uint32_t timestamp;
@property (readonly) uint32_t numVotesLastDay;
@property (readonly, retain) PBArray * videoEntryIds;
@property (readonly) uint32_t numFlagsLastDay;
- (uint32_t)videoEntryIdsAtIndex:(NSUInteger)index;

+ (CReplayCachedContestData*) defaultInstance;
- (CReplayCachedContestData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CReplayCachedContestData_Builder*) builder;
+ (CReplayCachedContestData_Builder*) builder;
+ (CReplayCachedContestData_Builder*) builderWithPrototype:(CReplayCachedContestData*) prototype;
- (CReplayCachedContestData_Builder*) toBuilder;

+ (CReplayCachedContestData*) parseFromData:(NSData*) data;
+ (CReplayCachedContestData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CReplayCachedContestData*) parseFromInputStream:(NSInputStream*) input;
+ (CReplayCachedContestData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CReplayCachedContestData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CReplayCachedContestData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CReplayCachedContestData_Builder : PBGeneratedMessage_Builder {
@private
  CReplayCachedContestData* _builderResult;
}

- (CReplayCachedContestData*) defaultInstance;

- (CReplayCachedContestData_Builder*) clear;
- (CReplayCachedContestData_Builder*) clone;

- (CReplayCachedContestData*) build;
- (CReplayCachedContestData*) buildPartial;

- (CReplayCachedContestData_Builder*) mergeFrom:(CReplayCachedContestData*) other;
- (CReplayCachedContestData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CReplayCachedContestData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTimestamp;
- (uint32_t) timestamp;
- (CReplayCachedContestData_Builder*) setTimestamp:(uint32_t) value;
- (CReplayCachedContestData_Builder*) clearTimestamp;

- (BOOL) hasNumVotesLastDay;
- (uint32_t) numVotesLastDay;
- (CReplayCachedContestData_Builder*) setNumVotesLastDay:(uint32_t) value;
- (CReplayCachedContestData_Builder*) clearNumVotesLastDay;

- (PBAppendableArray *)videoEntryIds;
- (uint32_t)videoEntryIdsAtIndex:(NSUInteger)index;
- (CReplayCachedContestData_Builder *)addVideoEntryIds:(uint32_t)value;
- (CReplayCachedContestData_Builder *)setVideoEntryIdsArray:(NSArray *)array;
- (CReplayCachedContestData_Builder *)setVideoEntryIdsValues:(const uint32_t *)values count:(NSUInteger)count;
- (CReplayCachedContestData_Builder *)clearVideoEntryIds;

- (BOOL) hasNumFlagsLastDay;
- (uint32_t) numFlagsLastDay;
- (CReplayCachedContestData_Builder*) setNumFlagsLastDay:(uint32_t) value;
- (CReplayCachedContestData_Builder*) clearNumFlagsLastDay;
@end

@interface CMsgTFCoaching_AddToCoaches : PBGeneratedMessage {
@private
}

+ (CMsgTFCoaching_AddToCoaches*) defaultInstance;
- (CMsgTFCoaching_AddToCoaches*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_AddToCoaches_Builder*) builder;
+ (CMsgTFCoaching_AddToCoaches_Builder*) builder;
+ (CMsgTFCoaching_AddToCoaches_Builder*) builderWithPrototype:(CMsgTFCoaching_AddToCoaches*) prototype;
- (CMsgTFCoaching_AddToCoaches_Builder*) toBuilder;

+ (CMsgTFCoaching_AddToCoaches*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_AddToCoaches*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_AddToCoaches*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_AddToCoaches*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_AddToCoaches*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_AddToCoaches*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_AddToCoaches_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_AddToCoaches* _builderResult;
}

- (CMsgTFCoaching_AddToCoaches*) defaultInstance;

- (CMsgTFCoaching_AddToCoaches_Builder*) clear;
- (CMsgTFCoaching_AddToCoaches_Builder*) clone;

- (CMsgTFCoaching_AddToCoaches*) build;
- (CMsgTFCoaching_AddToCoaches*) buildPartial;

- (CMsgTFCoaching_AddToCoaches_Builder*) mergeFrom:(CMsgTFCoaching_AddToCoaches*) other;
- (CMsgTFCoaching_AddToCoaches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_AddToCoaches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_RemoveFromCoaches : PBGeneratedMessage {
@private
}

+ (CMsgTFCoaching_RemoveFromCoaches*) defaultInstance;
- (CMsgTFCoaching_RemoveFromCoaches*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) builder;
+ (CMsgTFCoaching_RemoveFromCoaches_Builder*) builder;
+ (CMsgTFCoaching_RemoveFromCoaches_Builder*) builderWithPrototype:(CMsgTFCoaching_RemoveFromCoaches*) prototype;
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) toBuilder;

+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_RemoveFromCoaches_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_RemoveFromCoaches* _builderResult;
}

- (CMsgTFCoaching_RemoveFromCoaches*) defaultInstance;

- (CMsgTFCoaching_RemoveFromCoaches_Builder*) clear;
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) clone;

- (CMsgTFCoaching_RemoveFromCoaches*) build;
- (CMsgTFCoaching_RemoveFromCoaches*) buildPartial;

- (CMsgTFCoaching_RemoveFromCoaches_Builder*) mergeFrom:(CMsgTFCoaching_RemoveFromCoaches*) other;
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_FindCoach : PBGeneratedMessage {
@private
  BOOL hasAccountIdFriendAsCoach_:1;
  uint32_t accountIdFriendAsCoach;
}
- (BOOL) hasAccountIdFriendAsCoach;
@property (readonly) uint32_t accountIdFriendAsCoach;

+ (CMsgTFCoaching_FindCoach*) defaultInstance;
- (CMsgTFCoaching_FindCoach*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_FindCoach_Builder*) builder;
+ (CMsgTFCoaching_FindCoach_Builder*) builder;
+ (CMsgTFCoaching_FindCoach_Builder*) builderWithPrototype:(CMsgTFCoaching_FindCoach*) prototype;
- (CMsgTFCoaching_FindCoach_Builder*) toBuilder;

+ (CMsgTFCoaching_FindCoach*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_FindCoach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_FindCoach*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_FindCoach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_FindCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_FindCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_FindCoach_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_FindCoach* _builderResult;
}

- (CMsgTFCoaching_FindCoach*) defaultInstance;

- (CMsgTFCoaching_FindCoach_Builder*) clear;
- (CMsgTFCoaching_FindCoach_Builder*) clone;

- (CMsgTFCoaching_FindCoach*) build;
- (CMsgTFCoaching_FindCoach*) buildPartial;

- (CMsgTFCoaching_FindCoach_Builder*) mergeFrom:(CMsgTFCoaching_FindCoach*) other;
- (CMsgTFCoaching_FindCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_FindCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountIdFriendAsCoach;
- (uint32_t) accountIdFriendAsCoach;
- (CMsgTFCoaching_FindCoach_Builder*) setAccountIdFriendAsCoach:(uint32_t) value;
- (CMsgTFCoaching_FindCoach_Builder*) clearAccountIdFriendAsCoach;
@end

@interface CMsgTFCoaching_FindCoachResponse : PBGeneratedMessage {
@private
  BOOL hasFoundCoach_:1;
  BOOL hasCoachName_:1;
  BOOL hasNumLikes_:1;
  BOOL foundCoach_:1;
  NSString* coachName;
  uint32_t numLikes;
}
- (BOOL) hasFoundCoach;
- (BOOL) hasNumLikes;
- (BOOL) hasCoachName;
- (BOOL) foundCoach;
@property (readonly) uint32_t numLikes;
@property (readonly, retain) NSString* coachName;

+ (CMsgTFCoaching_FindCoachResponse*) defaultInstance;
- (CMsgTFCoaching_FindCoachResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_FindCoachResponse_Builder*) builder;
+ (CMsgTFCoaching_FindCoachResponse_Builder*) builder;
+ (CMsgTFCoaching_FindCoachResponse_Builder*) builderWithPrototype:(CMsgTFCoaching_FindCoachResponse*) prototype;
- (CMsgTFCoaching_FindCoachResponse_Builder*) toBuilder;

+ (CMsgTFCoaching_FindCoachResponse*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_FindCoachResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_FindCoachResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_FindCoachResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_FindCoachResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_FindCoachResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_FindCoachResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_FindCoachResponse* _builderResult;
}

- (CMsgTFCoaching_FindCoachResponse*) defaultInstance;

- (CMsgTFCoaching_FindCoachResponse_Builder*) clear;
- (CMsgTFCoaching_FindCoachResponse_Builder*) clone;

- (CMsgTFCoaching_FindCoachResponse*) build;
- (CMsgTFCoaching_FindCoachResponse*) buildPartial;

- (CMsgTFCoaching_FindCoachResponse_Builder*) mergeFrom:(CMsgTFCoaching_FindCoachResponse*) other;
- (CMsgTFCoaching_FindCoachResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_FindCoachResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFoundCoach;
- (BOOL) foundCoach;
- (CMsgTFCoaching_FindCoachResponse_Builder*) setFoundCoach:(BOOL) value;
- (CMsgTFCoaching_FindCoachResponse_Builder*) clearFoundCoach;

- (BOOL) hasNumLikes;
- (uint32_t) numLikes;
- (CMsgTFCoaching_FindCoachResponse_Builder*) setNumLikes:(uint32_t) value;
- (CMsgTFCoaching_FindCoachResponse_Builder*) clearNumLikes;

- (BOOL) hasCoachName;
- (NSString*) coachName;
- (CMsgTFCoaching_FindCoachResponse_Builder*) setCoachName:(NSString*) value;
- (CMsgTFCoaching_FindCoachResponse_Builder*) clearCoachName;
@end

@interface CMsgTFCoaching_AskCoach : PBGeneratedMessage {
@private
  BOOL hasStudentIsFriend_:1;
  BOOL hasAccountIdStudent_:1;
  BOOL studentIsFriend_:1;
  uint32_t accountIdStudent;
}
- (BOOL) hasAccountIdStudent;
- (BOOL) hasStudentIsFriend;
@property (readonly) uint32_t accountIdStudent;
- (BOOL) studentIsFriend;

+ (CMsgTFCoaching_AskCoach*) defaultInstance;
- (CMsgTFCoaching_AskCoach*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_AskCoach_Builder*) builder;
+ (CMsgTFCoaching_AskCoach_Builder*) builder;
+ (CMsgTFCoaching_AskCoach_Builder*) builderWithPrototype:(CMsgTFCoaching_AskCoach*) prototype;
- (CMsgTFCoaching_AskCoach_Builder*) toBuilder;

+ (CMsgTFCoaching_AskCoach*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_AskCoach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_AskCoach*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_AskCoach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_AskCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_AskCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_AskCoach_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_AskCoach* _builderResult;
}

- (CMsgTFCoaching_AskCoach*) defaultInstance;

- (CMsgTFCoaching_AskCoach_Builder*) clear;
- (CMsgTFCoaching_AskCoach_Builder*) clone;

- (CMsgTFCoaching_AskCoach*) build;
- (CMsgTFCoaching_AskCoach*) buildPartial;

- (CMsgTFCoaching_AskCoach_Builder*) mergeFrom:(CMsgTFCoaching_AskCoach*) other;
- (CMsgTFCoaching_AskCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_AskCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountIdStudent;
- (uint32_t) accountIdStudent;
- (CMsgTFCoaching_AskCoach_Builder*) setAccountIdStudent:(uint32_t) value;
- (CMsgTFCoaching_AskCoach_Builder*) clearAccountIdStudent;

- (BOOL) hasStudentIsFriend;
- (BOOL) studentIsFriend;
- (CMsgTFCoaching_AskCoach_Builder*) setStudentIsFriend:(BOOL) value;
- (CMsgTFCoaching_AskCoach_Builder*) clearStudentIsFriend;
@end

@interface CMsgTFCoaching_AskCoachResponse : PBGeneratedMessage {
@private
  BOOL hasAcceptCoachingAssignment_:1;
  BOOL acceptCoachingAssignment_:1;
}
- (BOOL) hasAcceptCoachingAssignment;
- (BOOL) acceptCoachingAssignment;

+ (CMsgTFCoaching_AskCoachResponse*) defaultInstance;
- (CMsgTFCoaching_AskCoachResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_AskCoachResponse_Builder*) builder;
+ (CMsgTFCoaching_AskCoachResponse_Builder*) builder;
+ (CMsgTFCoaching_AskCoachResponse_Builder*) builderWithPrototype:(CMsgTFCoaching_AskCoachResponse*) prototype;
- (CMsgTFCoaching_AskCoachResponse_Builder*) toBuilder;

+ (CMsgTFCoaching_AskCoachResponse*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_AskCoachResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_AskCoachResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_AskCoachResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_AskCoachResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_AskCoachResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_AskCoachResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_AskCoachResponse* _builderResult;
}

- (CMsgTFCoaching_AskCoachResponse*) defaultInstance;

- (CMsgTFCoaching_AskCoachResponse_Builder*) clear;
- (CMsgTFCoaching_AskCoachResponse_Builder*) clone;

- (CMsgTFCoaching_AskCoachResponse*) build;
- (CMsgTFCoaching_AskCoachResponse*) buildPartial;

- (CMsgTFCoaching_AskCoachResponse_Builder*) mergeFrom:(CMsgTFCoaching_AskCoachResponse*) other;
- (CMsgTFCoaching_AskCoachResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_AskCoachResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAcceptCoachingAssignment;
- (BOOL) acceptCoachingAssignment;
- (CMsgTFCoaching_AskCoachResponse_Builder*) setAcceptCoachingAssignment:(BOOL) value;
- (CMsgTFCoaching_AskCoachResponse_Builder*) clearAcceptCoachingAssignment;
@end

@interface CMsgTFCoaching_CoachJoinGame : PBGeneratedMessage {
@private
  BOOL hasJoinGame_:1;
  BOOL hasServerAddress_:1;
  BOOL hasServerPort_:1;
  BOOL hasAccountIdStudent_:1;
  BOOL joinGame_:1;
  uint32_t serverAddress;
  uint32_t serverPort;
  uint32_t accountIdStudent;
}
- (BOOL) hasJoinGame;
- (BOOL) hasServerAddress;
- (BOOL) hasServerPort;
- (BOOL) hasAccountIdStudent;
- (BOOL) joinGame;
@property (readonly) uint32_t serverAddress;
@property (readonly) uint32_t serverPort;
@property (readonly) uint32_t accountIdStudent;

+ (CMsgTFCoaching_CoachJoinGame*) defaultInstance;
- (CMsgTFCoaching_CoachJoinGame*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_CoachJoinGame_Builder*) builder;
+ (CMsgTFCoaching_CoachJoinGame_Builder*) builder;
+ (CMsgTFCoaching_CoachJoinGame_Builder*) builderWithPrototype:(CMsgTFCoaching_CoachJoinGame*) prototype;
- (CMsgTFCoaching_CoachJoinGame_Builder*) toBuilder;

+ (CMsgTFCoaching_CoachJoinGame*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_CoachJoinGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_CoachJoinGame*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_CoachJoinGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_CoachJoinGame*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_CoachJoinGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_CoachJoinGame_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_CoachJoinGame* _builderResult;
}

- (CMsgTFCoaching_CoachJoinGame*) defaultInstance;

- (CMsgTFCoaching_CoachJoinGame_Builder*) clear;
- (CMsgTFCoaching_CoachJoinGame_Builder*) clone;

- (CMsgTFCoaching_CoachJoinGame*) build;
- (CMsgTFCoaching_CoachJoinGame*) buildPartial;

- (CMsgTFCoaching_CoachJoinGame_Builder*) mergeFrom:(CMsgTFCoaching_CoachJoinGame*) other;
- (CMsgTFCoaching_CoachJoinGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_CoachJoinGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasJoinGame;
- (BOOL) joinGame;
- (CMsgTFCoaching_CoachJoinGame_Builder*) setJoinGame:(BOOL) value;
- (CMsgTFCoaching_CoachJoinGame_Builder*) clearJoinGame;

- (BOOL) hasServerAddress;
- (uint32_t) serverAddress;
- (CMsgTFCoaching_CoachJoinGame_Builder*) setServerAddress:(uint32_t) value;
- (CMsgTFCoaching_CoachJoinGame_Builder*) clearServerAddress;

- (BOOL) hasServerPort;
- (uint32_t) serverPort;
- (CMsgTFCoaching_CoachJoinGame_Builder*) setServerPort:(uint32_t) value;
- (CMsgTFCoaching_CoachJoinGame_Builder*) clearServerPort;

- (BOOL) hasAccountIdStudent;
- (uint32_t) accountIdStudent;
- (CMsgTFCoaching_CoachJoinGame_Builder*) setAccountIdStudent:(uint32_t) value;
- (CMsgTFCoaching_CoachJoinGame_Builder*) clearAccountIdStudent;
@end

@interface CMsgTFCoaching_CoachJoining : PBGeneratedMessage {
@private
  BOOL hasAccountIdCoach_:1;
  BOOL hasAccountIdStudent_:1;
  uint32_t accountIdCoach;
  uint32_t accountIdStudent;
}
- (BOOL) hasAccountIdCoach;
- (BOOL) hasAccountIdStudent;
@property (readonly) uint32_t accountIdCoach;
@property (readonly) uint32_t accountIdStudent;

+ (CMsgTFCoaching_CoachJoining*) defaultInstance;
- (CMsgTFCoaching_CoachJoining*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_CoachJoining_Builder*) builder;
+ (CMsgTFCoaching_CoachJoining_Builder*) builder;
+ (CMsgTFCoaching_CoachJoining_Builder*) builderWithPrototype:(CMsgTFCoaching_CoachJoining*) prototype;
- (CMsgTFCoaching_CoachJoining_Builder*) toBuilder;

+ (CMsgTFCoaching_CoachJoining*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_CoachJoining*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_CoachJoining*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_CoachJoining*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_CoachJoining*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_CoachJoining*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_CoachJoining_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_CoachJoining* _builderResult;
}

- (CMsgTFCoaching_CoachJoining*) defaultInstance;

- (CMsgTFCoaching_CoachJoining_Builder*) clear;
- (CMsgTFCoaching_CoachJoining_Builder*) clone;

- (CMsgTFCoaching_CoachJoining*) build;
- (CMsgTFCoaching_CoachJoining*) buildPartial;

- (CMsgTFCoaching_CoachJoining_Builder*) mergeFrom:(CMsgTFCoaching_CoachJoining*) other;
- (CMsgTFCoaching_CoachJoining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_CoachJoining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountIdCoach;
- (uint32_t) accountIdCoach;
- (CMsgTFCoaching_CoachJoining_Builder*) setAccountIdCoach:(uint32_t) value;
- (CMsgTFCoaching_CoachJoining_Builder*) clearAccountIdCoach;

- (BOOL) hasAccountIdStudent;
- (uint32_t) accountIdStudent;
- (CMsgTFCoaching_CoachJoining_Builder*) setAccountIdStudent:(uint32_t) value;
- (CMsgTFCoaching_CoachJoining_Builder*) clearAccountIdStudent;
@end

@interface CMsgTFCoaching_CoachJoined : PBGeneratedMessage {
@private
  BOOL hasAccountIdCoach_:1;
  uint32_t accountIdCoach;
}
- (BOOL) hasAccountIdCoach;
@property (readonly) uint32_t accountIdCoach;

+ (CMsgTFCoaching_CoachJoined*) defaultInstance;
- (CMsgTFCoaching_CoachJoined*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_CoachJoined_Builder*) builder;
+ (CMsgTFCoaching_CoachJoined_Builder*) builder;
+ (CMsgTFCoaching_CoachJoined_Builder*) builderWithPrototype:(CMsgTFCoaching_CoachJoined*) prototype;
- (CMsgTFCoaching_CoachJoined_Builder*) toBuilder;

+ (CMsgTFCoaching_CoachJoined*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_CoachJoined*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_CoachJoined*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_CoachJoined*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_CoachJoined*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_CoachJoined*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_CoachJoined_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_CoachJoined* _builderResult;
}

- (CMsgTFCoaching_CoachJoined*) defaultInstance;

- (CMsgTFCoaching_CoachJoined_Builder*) clear;
- (CMsgTFCoaching_CoachJoined_Builder*) clone;

- (CMsgTFCoaching_CoachJoined*) build;
- (CMsgTFCoaching_CoachJoined*) buildPartial;

- (CMsgTFCoaching_CoachJoined_Builder*) mergeFrom:(CMsgTFCoaching_CoachJoined*) other;
- (CMsgTFCoaching_CoachJoined_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_CoachJoined_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountIdCoach;
- (uint32_t) accountIdCoach;
- (CMsgTFCoaching_CoachJoined_Builder*) setAccountIdCoach:(uint32_t) value;
- (CMsgTFCoaching_CoachJoined_Builder*) clearAccountIdCoach;
@end

@interface CMsgTFCoaching_LikeCurrentCoach : PBGeneratedMessage {
@private
  BOOL hasLikeCoach_:1;
  BOOL likeCoach_:1;
}
- (BOOL) hasLikeCoach;
- (BOOL) likeCoach;

+ (CMsgTFCoaching_LikeCurrentCoach*) defaultInstance;
- (CMsgTFCoaching_LikeCurrentCoach*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) builder;
+ (CMsgTFCoaching_LikeCurrentCoach_Builder*) builder;
+ (CMsgTFCoaching_LikeCurrentCoach_Builder*) builderWithPrototype:(CMsgTFCoaching_LikeCurrentCoach*) prototype;
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) toBuilder;

+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_LikeCurrentCoach_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_LikeCurrentCoach* _builderResult;
}

- (CMsgTFCoaching_LikeCurrentCoach*) defaultInstance;

- (CMsgTFCoaching_LikeCurrentCoach_Builder*) clear;
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) clone;

- (CMsgTFCoaching_LikeCurrentCoach*) build;
- (CMsgTFCoaching_LikeCurrentCoach*) buildPartial;

- (CMsgTFCoaching_LikeCurrentCoach_Builder*) mergeFrom:(CMsgTFCoaching_LikeCurrentCoach*) other;
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLikeCoach;
- (BOOL) likeCoach;
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) setLikeCoach:(BOOL) value;
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) clearLikeCoach;
@end

@interface CMsgTFCoaching_RemoveCurrentCoach : PBGeneratedMessage {
@private
  BOOL hasAccountIdCoach_:1;
  uint32_t accountIdCoach;
}
- (BOOL) hasAccountIdCoach;
@property (readonly) uint32_t accountIdCoach;

+ (CMsgTFCoaching_RemoveCurrentCoach*) defaultInstance;
- (CMsgTFCoaching_RemoveCurrentCoach*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) builder;
+ (CMsgTFCoaching_RemoveCurrentCoach_Builder*) builder;
+ (CMsgTFCoaching_RemoveCurrentCoach_Builder*) builderWithPrototype:(CMsgTFCoaching_RemoveCurrentCoach*) prototype;
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) toBuilder;

+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromData:(NSData*) data;
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFCoaching_RemoveCurrentCoach_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFCoaching_RemoveCurrentCoach* _builderResult;
}

- (CMsgTFCoaching_RemoveCurrentCoach*) defaultInstance;

- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) clear;
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) clone;

- (CMsgTFCoaching_RemoveCurrentCoach*) build;
- (CMsgTFCoaching_RemoveCurrentCoach*) buildPartial;

- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) mergeFrom:(CMsgTFCoaching_RemoveCurrentCoach*) other;
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountIdCoach;
- (uint32_t) accountIdCoach;
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) setAccountIdCoach:(uint32_t) value;
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) clearAccountIdCoach;
@end

@interface CMsgTFQuickplay_ScoreServers : PBGeneratedMessage {
@private
  PBAppendableArray * serversArray;
}
@property (readonly, retain) PBArray * servers;
- (CMsgTFQuickplay_ScoreServers_ServerInfo*)serversAtIndex:(NSUInteger)index;

+ (CMsgTFQuickplay_ScoreServers*) defaultInstance;
- (CMsgTFQuickplay_ScoreServers*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFQuickplay_ScoreServers_Builder*) builder;
+ (CMsgTFQuickplay_ScoreServers_Builder*) builder;
+ (CMsgTFQuickplay_ScoreServers_Builder*) builderWithPrototype:(CMsgTFQuickplay_ScoreServers*) prototype;
- (CMsgTFQuickplay_ScoreServers_Builder*) toBuilder;

+ (CMsgTFQuickplay_ScoreServers*) parseFromData:(NSData*) data;
+ (CMsgTFQuickplay_ScoreServers*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_ScoreServers*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFQuickplay_ScoreServers*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_ScoreServers*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFQuickplay_ScoreServers*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFQuickplay_ScoreServers_ServerInfo : PBGeneratedMessage {
@private
  BOOL hasUserScore_:1;
  BOOL hasSteamId_:1;
  BOOL hasServerAddress_:1;
  BOOL hasServerPort_:1;
  BOOL hasNumUsers_:1;
  BOOL hasMaxUsers_:1;
  Float32 userScore;
  uint64_t steamId;
  uint32_t serverAddress;
  uint32_t serverPort;
  uint32_t numUsers;
  uint32_t maxUsers;
}
- (BOOL) hasServerAddress;
- (BOOL) hasServerPort;
- (BOOL) hasNumUsers;
- (BOOL) hasSteamId;
- (BOOL) hasMaxUsers;
- (BOOL) hasUserScore;
@property (readonly) uint32_t serverAddress;
@property (readonly) uint32_t serverPort;
@property (readonly) uint32_t numUsers;
@property (readonly) uint64_t steamId;
@property (readonly) uint32_t maxUsers;
@property (readonly) Float32 userScore;

+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) defaultInstance;
- (CMsgTFQuickplay_ScoreServers_ServerInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) builder;
+ (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) builder;
+ (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) builderWithPrototype:(CMsgTFQuickplay_ScoreServers_ServerInfo*) prototype;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) toBuilder;

+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromData:(NSData*) data;
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFQuickplay_ScoreServers_ServerInfo_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFQuickplay_ScoreServers_ServerInfo* _builderResult;
}

- (CMsgTFQuickplay_ScoreServers_ServerInfo*) defaultInstance;

- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clear;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clone;

- (CMsgTFQuickplay_ScoreServers_ServerInfo*) build;
- (CMsgTFQuickplay_ScoreServers_ServerInfo*) buildPartial;

- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) mergeFrom:(CMsgTFQuickplay_ScoreServers_ServerInfo*) other;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasServerAddress;
- (uint32_t) serverAddress;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setServerAddress:(uint32_t) value;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearServerAddress;

- (BOOL) hasServerPort;
- (uint32_t) serverPort;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setServerPort:(uint32_t) value;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearServerPort;

- (BOOL) hasNumUsers;
- (uint32_t) numUsers;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setNumUsers:(uint32_t) value;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearNumUsers;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setSteamId:(uint64_t) value;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearSteamId;

- (BOOL) hasMaxUsers;
- (uint32_t) maxUsers;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setMaxUsers:(uint32_t) value;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearMaxUsers;

- (BOOL) hasUserScore;
- (Float32) userScore;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setUserScore:(Float32) value;
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearUserScore;
@end

@interface CMsgTFQuickplay_ScoreServers_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFQuickplay_ScoreServers* _builderResult;
}

- (CMsgTFQuickplay_ScoreServers*) defaultInstance;

- (CMsgTFQuickplay_ScoreServers_Builder*) clear;
- (CMsgTFQuickplay_ScoreServers_Builder*) clone;

- (CMsgTFQuickplay_ScoreServers*) build;
- (CMsgTFQuickplay_ScoreServers*) buildPartial;

- (CMsgTFQuickplay_ScoreServers_Builder*) mergeFrom:(CMsgTFQuickplay_ScoreServers*) other;
- (CMsgTFQuickplay_ScoreServers_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFQuickplay_ScoreServers_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)servers;
- (CMsgTFQuickplay_ScoreServers_ServerInfo*)serversAtIndex:(NSUInteger)index;
- (CMsgTFQuickplay_ScoreServers_Builder *)addServers:(CMsgTFQuickplay_ScoreServers_ServerInfo*)value;
- (CMsgTFQuickplay_ScoreServers_Builder *)setServersArray:(NSArray *)array;
- (CMsgTFQuickplay_ScoreServers_Builder *)setServersValues:(const CMsgTFQuickplay_ScoreServers_ServerInfo* *)values count:(NSUInteger)count;
- (CMsgTFQuickplay_ScoreServers_Builder *)clearServers;
@end

@interface CMsgTFQuickplay_ScoreServersResponse : PBGeneratedMessage {
@private
  PBAppendableArray * serversArray;
}
@property (readonly, retain) PBArray * servers;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)serversAtIndex:(NSUInteger)index;

+ (CMsgTFQuickplay_ScoreServersResponse*) defaultInstance;
- (CMsgTFQuickplay_ScoreServersResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) builder;
+ (CMsgTFQuickplay_ScoreServersResponse_Builder*) builder;
+ (CMsgTFQuickplay_ScoreServersResponse_Builder*) builderWithPrototype:(CMsgTFQuickplay_ScoreServersResponse*) prototype;
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) toBuilder;

+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromData:(NSData*) data;
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFQuickplay_ScoreServersResponse_ServerInfo : PBGeneratedMessage {
@private
  BOOL hasTotalScore_:1;
  BOOL hasSteamId_:1;
  BOOL hasServerAddress_:1;
  BOOL hasServerPort_:1;
  Float32 totalScore;
  uint64_t steamId;
  uint32_t serverAddress;
  uint32_t serverPort;
}
- (BOOL) hasServerAddress;
- (BOOL) hasServerPort;
- (BOOL) hasTotalScore;
- (BOOL) hasSteamId;
@property (readonly) uint32_t serverAddress;
@property (readonly) uint32_t serverPort;
@property (readonly) Float32 totalScore;
@property (readonly) uint64_t steamId;

+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) defaultInstance;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) builder;
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) builder;
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) builderWithPrototype:(CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) prototype;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) toBuilder;

+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromData:(NSData*) data;
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo* _builderResult;
}

- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) defaultInstance;

- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clear;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clone;

- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) build;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) buildPartial;

- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) mergeFrom:(CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) other;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasServerAddress;
- (uint32_t) serverAddress;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) setServerAddress:(uint32_t) value;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clearServerAddress;

- (BOOL) hasServerPort;
- (uint32_t) serverPort;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) setServerPort:(uint32_t) value;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clearServerPort;

- (BOOL) hasTotalScore;
- (Float32) totalScore;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) setTotalScore:(Float32) value;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clearTotalScore;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) setSteamId:(uint64_t) value;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clearSteamId;
@end

@interface CMsgTFQuickplay_ScoreServersResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFQuickplay_ScoreServersResponse* _builderResult;
}

- (CMsgTFQuickplay_ScoreServersResponse*) defaultInstance;

- (CMsgTFQuickplay_ScoreServersResponse_Builder*) clear;
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) clone;

- (CMsgTFQuickplay_ScoreServersResponse*) build;
- (CMsgTFQuickplay_ScoreServersResponse*) buildPartial;

- (CMsgTFQuickplay_ScoreServersResponse_Builder*) mergeFrom:(CMsgTFQuickplay_ScoreServersResponse*) other;
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)servers;
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)serversAtIndex:(NSUInteger)index;
- (CMsgTFQuickplay_ScoreServersResponse_Builder *)addServers:(CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)value;
- (CMsgTFQuickplay_ScoreServersResponse_Builder *)setServersArray:(NSArray *)array;
- (CMsgTFQuickplay_ScoreServersResponse_Builder *)setServersValues:(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo* *)values count:(NSUInteger)count;
- (CMsgTFQuickplay_ScoreServersResponse_Builder *)clearServers;
@end

@interface CMsgTFQuickplay_PlayerJoining : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
@property (readonly) uint32_t accountId;

+ (CMsgTFQuickplay_PlayerJoining*) defaultInstance;
- (CMsgTFQuickplay_PlayerJoining*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFQuickplay_PlayerJoining_Builder*) builder;
+ (CMsgTFQuickplay_PlayerJoining_Builder*) builder;
+ (CMsgTFQuickplay_PlayerJoining_Builder*) builderWithPrototype:(CMsgTFQuickplay_PlayerJoining*) prototype;
- (CMsgTFQuickplay_PlayerJoining_Builder*) toBuilder;

+ (CMsgTFQuickplay_PlayerJoining*) parseFromData:(NSData*) data;
+ (CMsgTFQuickplay_PlayerJoining*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_PlayerJoining*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFQuickplay_PlayerJoining*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFQuickplay_PlayerJoining*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFQuickplay_PlayerJoining*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFQuickplay_PlayerJoining_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFQuickplay_PlayerJoining* _builderResult;
}

- (CMsgTFQuickplay_PlayerJoining*) defaultInstance;

- (CMsgTFQuickplay_PlayerJoining_Builder*) clear;
- (CMsgTFQuickplay_PlayerJoining_Builder*) clone;

- (CMsgTFQuickplay_PlayerJoining*) build;
- (CMsgTFQuickplay_PlayerJoining*) buildPartial;

- (CMsgTFQuickplay_PlayerJoining_Builder*) mergeFrom:(CMsgTFQuickplay_PlayerJoining*) other;
- (CMsgTFQuickplay_PlayerJoining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFQuickplay_PlayerJoining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgTFQuickplay_PlayerJoining_Builder*) setAccountId:(uint32_t) value;
- (CMsgTFQuickplay_PlayerJoining_Builder*) clearAccountId;
@end

@interface CMsgGC_GameServer_LevelInfo : PBGeneratedMessage {
@private
  BOOL hasLevelLoaded_:1;
  BOOL hasLevelName_:1;
  BOOL levelLoaded_:1;
  NSString* levelName;
}
- (BOOL) hasLevelLoaded;
- (BOOL) hasLevelName;
- (BOOL) levelLoaded;
@property (readonly, retain) NSString* levelName;

+ (CMsgGC_GameServer_LevelInfo*) defaultInstance;
- (CMsgGC_GameServer_LevelInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_LevelInfo_Builder*) builder;
+ (CMsgGC_GameServer_LevelInfo_Builder*) builder;
+ (CMsgGC_GameServer_LevelInfo_Builder*) builderWithPrototype:(CMsgGC_GameServer_LevelInfo*) prototype;
- (CMsgGC_GameServer_LevelInfo_Builder*) toBuilder;

+ (CMsgGC_GameServer_LevelInfo*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_LevelInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_LevelInfo*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_LevelInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_LevelInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_LevelInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_LevelInfo_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_LevelInfo* _builderResult;
}

- (CMsgGC_GameServer_LevelInfo*) defaultInstance;

- (CMsgGC_GameServer_LevelInfo_Builder*) clear;
- (CMsgGC_GameServer_LevelInfo_Builder*) clone;

- (CMsgGC_GameServer_LevelInfo*) build;
- (CMsgGC_GameServer_LevelInfo*) buildPartial;

- (CMsgGC_GameServer_LevelInfo_Builder*) mergeFrom:(CMsgGC_GameServer_LevelInfo*) other;
- (CMsgGC_GameServer_LevelInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_LevelInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLevelLoaded;
- (BOOL) levelLoaded;
- (CMsgGC_GameServer_LevelInfo_Builder*) setLevelLoaded:(BOOL) value;
- (CMsgGC_GameServer_LevelInfo_Builder*) clearLevelLoaded;

- (BOOL) hasLevelName;
- (NSString*) levelName;
- (CMsgGC_GameServer_LevelInfo_Builder*) setLevelName:(NSString*) value;
- (CMsgGC_GameServer_LevelInfo_Builder*) clearLevelName;
@end

@interface CMsgGC_GameServer_AuthChallenge : PBGeneratedMessage {
@private
  BOOL hasChallengeString_:1;
  NSString* challengeString;
}
- (BOOL) hasChallengeString;
@property (readonly, retain) NSString* challengeString;

+ (CMsgGC_GameServer_AuthChallenge*) defaultInstance;
- (CMsgGC_GameServer_AuthChallenge*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_AuthChallenge_Builder*) builder;
+ (CMsgGC_GameServer_AuthChallenge_Builder*) builder;
+ (CMsgGC_GameServer_AuthChallenge_Builder*) builderWithPrototype:(CMsgGC_GameServer_AuthChallenge*) prototype;
- (CMsgGC_GameServer_AuthChallenge_Builder*) toBuilder;

+ (CMsgGC_GameServer_AuthChallenge*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_AuthChallenge*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_AuthChallenge*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_AuthChallenge*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_AuthChallenge*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_AuthChallenge*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_AuthChallenge_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_AuthChallenge* _builderResult;
}

- (CMsgGC_GameServer_AuthChallenge*) defaultInstance;

- (CMsgGC_GameServer_AuthChallenge_Builder*) clear;
- (CMsgGC_GameServer_AuthChallenge_Builder*) clone;

- (CMsgGC_GameServer_AuthChallenge*) build;
- (CMsgGC_GameServer_AuthChallenge*) buildPartial;

- (CMsgGC_GameServer_AuthChallenge_Builder*) mergeFrom:(CMsgGC_GameServer_AuthChallenge*) other;
- (CMsgGC_GameServer_AuthChallenge_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_AuthChallenge_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChallengeString;
- (NSString*) challengeString;
- (CMsgGC_GameServer_AuthChallenge_Builder*) setChallengeString:(NSString*) value;
- (CMsgGC_GameServer_AuthChallenge_Builder*) clearChallengeString;
@end

@interface CMsgGC_GameServer_AuthResult : PBGeneratedMessage {
@private
  BOOL hasAuthenticated_:1;
  BOOL hasIsValveServer_:1;
  BOOL hasGameServerStanding_:1;
  BOOL hasGameServerStandingTrend_:1;
  BOOL hasMessage_:1;
  BOOL authenticated_:1;
  BOOL isValveServer_:1;
  int32_t gameServerStanding;
  int32_t gameServerStandingTrend;
  NSString* message;
}
- (BOOL) hasAuthenticated;
- (BOOL) hasGameServerStanding;
- (BOOL) hasGameServerStandingTrend;
- (BOOL) hasIsValveServer;
- (BOOL) hasMessage;
- (BOOL) authenticated;
@property (readonly) int32_t gameServerStanding;
@property (readonly) int32_t gameServerStandingTrend;
- (BOOL) isValveServer;
@property (readonly, retain) NSString* message;

+ (CMsgGC_GameServer_AuthResult*) defaultInstance;
- (CMsgGC_GameServer_AuthResult*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_AuthResult_Builder*) builder;
+ (CMsgGC_GameServer_AuthResult_Builder*) builder;
+ (CMsgGC_GameServer_AuthResult_Builder*) builderWithPrototype:(CMsgGC_GameServer_AuthResult*) prototype;
- (CMsgGC_GameServer_AuthResult_Builder*) toBuilder;

+ (CMsgGC_GameServer_AuthResult*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_AuthResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_AuthResult*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_AuthResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_AuthResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_AuthResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_AuthResult_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_AuthResult* _builderResult;
}

- (CMsgGC_GameServer_AuthResult*) defaultInstance;

- (CMsgGC_GameServer_AuthResult_Builder*) clear;
- (CMsgGC_GameServer_AuthResult_Builder*) clone;

- (CMsgGC_GameServer_AuthResult*) build;
- (CMsgGC_GameServer_AuthResult*) buildPartial;

- (CMsgGC_GameServer_AuthResult_Builder*) mergeFrom:(CMsgGC_GameServer_AuthResult*) other;
- (CMsgGC_GameServer_AuthResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_AuthResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAuthenticated;
- (BOOL) authenticated;
- (CMsgGC_GameServer_AuthResult_Builder*) setAuthenticated:(BOOL) value;
- (CMsgGC_GameServer_AuthResult_Builder*) clearAuthenticated;

- (BOOL) hasGameServerStanding;
- (int32_t) gameServerStanding;
- (CMsgGC_GameServer_AuthResult_Builder*) setGameServerStanding:(int32_t) value;
- (CMsgGC_GameServer_AuthResult_Builder*) clearGameServerStanding;

- (BOOL) hasGameServerStandingTrend;
- (int32_t) gameServerStandingTrend;
- (CMsgGC_GameServer_AuthResult_Builder*) setGameServerStandingTrend:(int32_t) value;
- (CMsgGC_GameServer_AuthResult_Builder*) clearGameServerStandingTrend;

- (BOOL) hasIsValveServer;
- (BOOL) isValveServer;
- (CMsgGC_GameServer_AuthResult_Builder*) setIsValveServer:(BOOL) value;
- (CMsgGC_GameServer_AuthResult_Builder*) clearIsValveServer;

- (BOOL) hasMessage;
- (NSString*) message;
- (CMsgGC_GameServer_AuthResult_Builder*) setMessage:(NSString*) value;
- (CMsgGC_GameServer_AuthResult_Builder*) clearMessage;
@end

@interface CMsgGC_GameServer_AuthChallengeResponse : PBGeneratedMessage {
@private
  BOOL hasHashedChallengeString_:1;
  BOOL hasGameServerAccountId_:1;
  NSData* hashedChallengeString;
  uint32_t gameServerAccountId;
}
- (BOOL) hasGameServerAccountId;
- (BOOL) hasHashedChallengeString;
@property (readonly) uint32_t gameServerAccountId;
@property (readonly, retain) NSData* hashedChallengeString;

+ (CMsgGC_GameServer_AuthChallengeResponse*) defaultInstance;
- (CMsgGC_GameServer_AuthChallengeResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) builder;
+ (CMsgGC_GameServer_AuthChallengeResponse_Builder*) builder;
+ (CMsgGC_GameServer_AuthChallengeResponse_Builder*) builderWithPrototype:(CMsgGC_GameServer_AuthChallengeResponse*) prototype;
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) toBuilder;

+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_AuthChallengeResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_AuthChallengeResponse* _builderResult;
}

- (CMsgGC_GameServer_AuthChallengeResponse*) defaultInstance;

- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) clear;
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) clone;

- (CMsgGC_GameServer_AuthChallengeResponse*) build;
- (CMsgGC_GameServer_AuthChallengeResponse*) buildPartial;

- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) mergeFrom:(CMsgGC_GameServer_AuthChallengeResponse*) other;
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameServerAccountId;
- (uint32_t) gameServerAccountId;
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) setGameServerAccountId:(uint32_t) value;
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) clearGameServerAccountId;

- (BOOL) hasHashedChallengeString;
- (NSData*) hashedChallengeString;
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) setHashedChallengeString:(NSData*) value;
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) clearHashedChallengeString;
@end

@interface CMsgGC_GameServer_CreateIdentity : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
@property (readonly) uint32_t accountId;

+ (CMsgGC_GameServer_CreateIdentity*) defaultInstance;
- (CMsgGC_GameServer_CreateIdentity*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_CreateIdentity_Builder*) builder;
+ (CMsgGC_GameServer_CreateIdentity_Builder*) builder;
+ (CMsgGC_GameServer_CreateIdentity_Builder*) builderWithPrototype:(CMsgGC_GameServer_CreateIdentity*) prototype;
- (CMsgGC_GameServer_CreateIdentity_Builder*) toBuilder;

+ (CMsgGC_GameServer_CreateIdentity*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_CreateIdentity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_CreateIdentity*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_CreateIdentity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_CreateIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_CreateIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_CreateIdentity_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_CreateIdentity* _builderResult;
}

- (CMsgGC_GameServer_CreateIdentity*) defaultInstance;

- (CMsgGC_GameServer_CreateIdentity_Builder*) clear;
- (CMsgGC_GameServer_CreateIdentity_Builder*) clone;

- (CMsgGC_GameServer_CreateIdentity*) build;
- (CMsgGC_GameServer_CreateIdentity*) buildPartial;

- (CMsgGC_GameServer_CreateIdentity_Builder*) mergeFrom:(CMsgGC_GameServer_CreateIdentity*) other;
- (CMsgGC_GameServer_CreateIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_CreateIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgGC_GameServer_CreateIdentity_Builder*) setAccountId:(uint32_t) value;
- (CMsgGC_GameServer_CreateIdentity_Builder*) clearAccountId;
@end

@interface CMsgGC_GameServer_CreateIdentityResponse : PBGeneratedMessage {
@private
  BOOL hasAccountCreated_:1;
  BOOL hasGameServerIdentityToken_:1;
  BOOL hasGameServerAccountId_:1;
  BOOL hasstatus_:1;
  BOOL accountCreated_:1;
  NSString* gameServerIdentityToken;
  uint32_t gameServerAccountId;
  CMsgGC_GameServer_CreateIdentityResponse_EStatus status;
}
- (BOOL) hasAccountCreated;
- (BOOL) hasGameServerAccountId;
- (BOOL) hasGameServerIdentityToken;
- (BOOL) hasstatus;
- (BOOL) accountCreated;
@property (readonly) uint32_t gameServerAccountId;
@property (readonly, retain) NSString* gameServerIdentityToken;
@property (readonly) CMsgGC_GameServer_CreateIdentityResponse_EStatus status;

+ (CMsgGC_GameServer_CreateIdentityResponse*) defaultInstance;
- (CMsgGC_GameServer_CreateIdentityResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) builder;
+ (CMsgGC_GameServer_CreateIdentityResponse_Builder*) builder;
+ (CMsgGC_GameServer_CreateIdentityResponse_Builder*) builderWithPrototype:(CMsgGC_GameServer_CreateIdentityResponse*) prototype;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) toBuilder;

+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_CreateIdentityResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_CreateIdentityResponse* _builderResult;
}

- (CMsgGC_GameServer_CreateIdentityResponse*) defaultInstance;

- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clear;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clone;

- (CMsgGC_GameServer_CreateIdentityResponse*) build;
- (CMsgGC_GameServer_CreateIdentityResponse*) buildPartial;

- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) mergeFrom:(CMsgGC_GameServer_CreateIdentityResponse*) other;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountCreated;
- (BOOL) accountCreated;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) setAccountCreated:(BOOL) value;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clearAccountCreated;

- (BOOL) hasGameServerAccountId;
- (uint32_t) gameServerAccountId;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) setGameServerAccountId:(uint32_t) value;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clearGameServerAccountId;

- (BOOL) hasGameServerIdentityToken;
- (NSString*) gameServerIdentityToken;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) setGameServerIdentityToken:(NSString*) value;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clearGameServerIdentityToken;

- (BOOL) hasstatus;
- (CMsgGC_GameServer_CreateIdentityResponse_EStatus) status;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) setstatus:(CMsgGC_GameServer_CreateIdentityResponse_EStatus) value;
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clearstatus;
@end

@interface CMsgGC_GameServer_List : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
@property (readonly) uint32_t accountId;

+ (CMsgGC_GameServer_List*) defaultInstance;
- (CMsgGC_GameServer_List*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_List_Builder*) builder;
+ (CMsgGC_GameServer_List_Builder*) builder;
+ (CMsgGC_GameServer_List_Builder*) builderWithPrototype:(CMsgGC_GameServer_List*) prototype;
- (CMsgGC_GameServer_List_Builder*) toBuilder;

+ (CMsgGC_GameServer_List*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_List*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_List*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_List*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_List*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_List*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_List_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_List* _builderResult;
}

- (CMsgGC_GameServer_List*) defaultInstance;

- (CMsgGC_GameServer_List_Builder*) clear;
- (CMsgGC_GameServer_List_Builder*) clone;

- (CMsgGC_GameServer_List*) build;
- (CMsgGC_GameServer_List*) buildPartial;

- (CMsgGC_GameServer_List_Builder*) mergeFrom:(CMsgGC_GameServer_List*) other;
- (CMsgGC_GameServer_List_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_List_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgGC_GameServer_List_Builder*) setAccountId:(uint32_t) value;
- (CMsgGC_GameServer_List_Builder*) clearAccountId;
@end

@interface CMsgGC_GameServer_ListResponse : PBGeneratedMessage {
@private
  PBAppendableArray * ownedGameServersArray;
}
@property (readonly, retain) PBArray * ownedGameServers;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*)ownedGameServersAtIndex:(NSUInteger)index;

+ (CMsgGC_GameServer_ListResponse*) defaultInstance;
- (CMsgGC_GameServer_ListResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_ListResponse_Builder*) builder;
+ (CMsgGC_GameServer_ListResponse_Builder*) builder;
+ (CMsgGC_GameServer_ListResponse_Builder*) builderWithPrototype:(CMsgGC_GameServer_ListResponse*) prototype;
- (CMsgGC_GameServer_ListResponse_Builder*) toBuilder;

+ (CMsgGC_GameServer_ListResponse*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_ListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_ListResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_ListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_ListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_ListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_ListResponse_GameServerIdentity : PBGeneratedMessage {
@private
  BOOL hasGameServerStanding_:1;
  BOOL hasGameServerStandingTrend_:1;
  BOOL hasGameServerIdentityToken_:1;
  BOOL hasGameServerAccountId_:1;
  int32_t gameServerStanding;
  int32_t gameServerStandingTrend;
  NSString* gameServerIdentityToken;
  uint32_t gameServerAccountId;
}
- (BOOL) hasGameServerAccountId;
- (BOOL) hasGameServerIdentityToken;
- (BOOL) hasGameServerStanding;
- (BOOL) hasGameServerStandingTrend;
@property (readonly) uint32_t gameServerAccountId;
@property (readonly, retain) NSString* gameServerIdentityToken;
@property (readonly) int32_t gameServerStanding;
@property (readonly) int32_t gameServerStandingTrend;

+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) defaultInstance;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) builder;
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) builder;
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) builderWithPrototype:(CMsgGC_GameServer_ListResponse_GameServerIdentity*) prototype;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) toBuilder;

+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_ListResponse_GameServerIdentity* _builderResult;
}

- (CMsgGC_GameServer_ListResponse_GameServerIdentity*) defaultInstance;

- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clear;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clone;

- (CMsgGC_GameServer_ListResponse_GameServerIdentity*) build;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*) buildPartial;

- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) mergeFrom:(CMsgGC_GameServer_ListResponse_GameServerIdentity*) other;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameServerAccountId;
- (uint32_t) gameServerAccountId;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) setGameServerAccountId:(uint32_t) value;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clearGameServerAccountId;

- (BOOL) hasGameServerIdentityToken;
- (NSString*) gameServerIdentityToken;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) setGameServerIdentityToken:(NSString*) value;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clearGameServerIdentityToken;

- (BOOL) hasGameServerStanding;
- (int32_t) gameServerStanding;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) setGameServerStanding:(int32_t) value;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clearGameServerStanding;

- (BOOL) hasGameServerStandingTrend;
- (int32_t) gameServerStandingTrend;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) setGameServerStandingTrend:(int32_t) value;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clearGameServerStandingTrend;
@end

@interface CMsgGC_GameServer_ListResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_ListResponse* _builderResult;
}

- (CMsgGC_GameServer_ListResponse*) defaultInstance;

- (CMsgGC_GameServer_ListResponse_Builder*) clear;
- (CMsgGC_GameServer_ListResponse_Builder*) clone;

- (CMsgGC_GameServer_ListResponse*) build;
- (CMsgGC_GameServer_ListResponse*) buildPartial;

- (CMsgGC_GameServer_ListResponse_Builder*) mergeFrom:(CMsgGC_GameServer_ListResponse*) other;
- (CMsgGC_GameServer_ListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_ListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)ownedGameServers;
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*)ownedGameServersAtIndex:(NSUInteger)index;
- (CMsgGC_GameServer_ListResponse_Builder *)addOwnedGameServers:(CMsgGC_GameServer_ListResponse_GameServerIdentity*)value;
- (CMsgGC_GameServer_ListResponse_Builder *)setOwnedGameServersArray:(NSArray *)array;
- (CMsgGC_GameServer_ListResponse_Builder *)setOwnedGameServersValues:(const CMsgGC_GameServer_ListResponse_GameServerIdentity* *)values count:(NSUInteger)count;
- (CMsgGC_GameServer_ListResponse_Builder *)clearOwnedGameServers;
@end

@interface CMsgGC_GameServer_ResetIdentity : PBGeneratedMessage {
@private
  BOOL hasGameServerAccountId_:1;
  uint32_t gameServerAccountId;
}
- (BOOL) hasGameServerAccountId;
@property (readonly) uint32_t gameServerAccountId;

+ (CMsgGC_GameServer_ResetIdentity*) defaultInstance;
- (CMsgGC_GameServer_ResetIdentity*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_ResetIdentity_Builder*) builder;
+ (CMsgGC_GameServer_ResetIdentity_Builder*) builder;
+ (CMsgGC_GameServer_ResetIdentity_Builder*) builderWithPrototype:(CMsgGC_GameServer_ResetIdentity*) prototype;
- (CMsgGC_GameServer_ResetIdentity_Builder*) toBuilder;

+ (CMsgGC_GameServer_ResetIdentity*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_ResetIdentity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_ResetIdentity*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_ResetIdentity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_ResetIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_ResetIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_ResetIdentity_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_ResetIdentity* _builderResult;
}

- (CMsgGC_GameServer_ResetIdentity*) defaultInstance;

- (CMsgGC_GameServer_ResetIdentity_Builder*) clear;
- (CMsgGC_GameServer_ResetIdentity_Builder*) clone;

- (CMsgGC_GameServer_ResetIdentity*) build;
- (CMsgGC_GameServer_ResetIdentity*) buildPartial;

- (CMsgGC_GameServer_ResetIdentity_Builder*) mergeFrom:(CMsgGC_GameServer_ResetIdentity*) other;
- (CMsgGC_GameServer_ResetIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_ResetIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameServerAccountId;
- (uint32_t) gameServerAccountId;
- (CMsgGC_GameServer_ResetIdentity_Builder*) setGameServerAccountId:(uint32_t) value;
- (CMsgGC_GameServer_ResetIdentity_Builder*) clearGameServerAccountId;
@end

@interface CMsgGC_GameServer_ResetIdentityResponse : PBGeneratedMessage {
@private
  BOOL hasGameServerIdentityTokenReset_:1;
  BOOL hasGameServerIdentityToken_:1;
  BOOL hasGameServerAccountId_:1;
  BOOL gameServerIdentityTokenReset_:1;
  NSString* gameServerIdentityToken;
  uint32_t gameServerAccountId;
}
- (BOOL) hasGameServerIdentityTokenReset;
- (BOOL) hasGameServerAccountId;
- (BOOL) hasGameServerIdentityToken;
- (BOOL) gameServerIdentityTokenReset;
@property (readonly) uint32_t gameServerAccountId;
@property (readonly, retain) NSString* gameServerIdentityToken;

+ (CMsgGC_GameServer_ResetIdentityResponse*) defaultInstance;
- (CMsgGC_GameServer_ResetIdentityResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) builder;
+ (CMsgGC_GameServer_ResetIdentityResponse_Builder*) builder;
+ (CMsgGC_GameServer_ResetIdentityResponse_Builder*) builderWithPrototype:(CMsgGC_GameServer_ResetIdentityResponse*) prototype;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) toBuilder;

+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromData:(NSData*) data;
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_GameServer_ResetIdentityResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_GameServer_ResetIdentityResponse* _builderResult;
}

- (CMsgGC_GameServer_ResetIdentityResponse*) defaultInstance;

- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clear;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clone;

- (CMsgGC_GameServer_ResetIdentityResponse*) build;
- (CMsgGC_GameServer_ResetIdentityResponse*) buildPartial;

- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) mergeFrom:(CMsgGC_GameServer_ResetIdentityResponse*) other;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGameServerIdentityTokenReset;
- (BOOL) gameServerIdentityTokenReset;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) setGameServerIdentityTokenReset:(BOOL) value;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clearGameServerIdentityTokenReset;

- (BOOL) hasGameServerAccountId;
- (uint32_t) gameServerAccountId;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) setGameServerAccountId:(uint32_t) value;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clearGameServerAccountId;

- (BOOL) hasGameServerIdentityToken;
- (NSString*) gameServerIdentityToken;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) setGameServerIdentityToken:(NSString*) value;
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clearGameServerIdentityToken;
@end

@interface CMsgGC_Halloween_ReservedItem : PBGeneratedMessage {
@private
  BOOL hasSpawnMetaInfo_:1;
  uint32_t spawnMetaInfo;
  PBAppendableArray * xArray;
  PBAppendableArray * yArray;
  PBAppendableArray * zArray;
}
- (BOOL) hasSpawnMetaInfo;
@property (readonly, retain) PBArray * x;
@property (readonly, retain) PBArray * y;
@property (readonly, retain) PBArray * z;
@property (readonly) uint32_t spawnMetaInfo;
- (Float32)xAtIndex:(NSUInteger)index;
- (Float32)yAtIndex:(NSUInteger)index;
- (Float32)zAtIndex:(NSUInteger)index;

+ (CMsgGC_Halloween_ReservedItem*) defaultInstance;
- (CMsgGC_Halloween_ReservedItem*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_Halloween_ReservedItem_Builder*) builder;
+ (CMsgGC_Halloween_ReservedItem_Builder*) builder;
+ (CMsgGC_Halloween_ReservedItem_Builder*) builderWithPrototype:(CMsgGC_Halloween_ReservedItem*) prototype;
- (CMsgGC_Halloween_ReservedItem_Builder*) toBuilder;

+ (CMsgGC_Halloween_ReservedItem*) parseFromData:(NSData*) data;
+ (CMsgGC_Halloween_ReservedItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_Halloween_ReservedItem*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_Halloween_ReservedItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_Halloween_ReservedItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_Halloween_ReservedItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_Halloween_ReservedItem_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_Halloween_ReservedItem* _builderResult;
}

- (CMsgGC_Halloween_ReservedItem*) defaultInstance;

- (CMsgGC_Halloween_ReservedItem_Builder*) clear;
- (CMsgGC_Halloween_ReservedItem_Builder*) clone;

- (CMsgGC_Halloween_ReservedItem*) build;
- (CMsgGC_Halloween_ReservedItem*) buildPartial;

- (CMsgGC_Halloween_ReservedItem_Builder*) mergeFrom:(CMsgGC_Halloween_ReservedItem*) other;
- (CMsgGC_Halloween_ReservedItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_Halloween_ReservedItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)x;
- (Float32)xAtIndex:(NSUInteger)index;
- (CMsgGC_Halloween_ReservedItem_Builder *)addX:(Float32)value;
- (CMsgGC_Halloween_ReservedItem_Builder *)setXArray:(NSArray *)array;
- (CMsgGC_Halloween_ReservedItem_Builder *)setXValues:(const Float32 *)values count:(NSUInteger)count;
- (CMsgGC_Halloween_ReservedItem_Builder *)clearX;

- (PBAppendableArray *)y;
- (Float32)yAtIndex:(NSUInteger)index;
- (CMsgGC_Halloween_ReservedItem_Builder *)addY:(Float32)value;
- (CMsgGC_Halloween_ReservedItem_Builder *)setYArray:(NSArray *)array;
- (CMsgGC_Halloween_ReservedItem_Builder *)setYValues:(const Float32 *)values count:(NSUInteger)count;
- (CMsgGC_Halloween_ReservedItem_Builder *)clearY;

- (PBAppendableArray *)z;
- (Float32)zAtIndex:(NSUInteger)index;
- (CMsgGC_Halloween_ReservedItem_Builder *)addZ:(Float32)value;
- (CMsgGC_Halloween_ReservedItem_Builder *)setZArray:(NSArray *)array;
- (CMsgGC_Halloween_ReservedItem_Builder *)setZValues:(const Float32 *)values count:(NSUInteger)count;
- (CMsgGC_Halloween_ReservedItem_Builder *)clearZ;

- (BOOL) hasSpawnMetaInfo;
- (uint32_t) spawnMetaInfo;
- (CMsgGC_Halloween_ReservedItem_Builder*) setSpawnMetaInfo:(uint32_t) value;
- (CMsgGC_Halloween_ReservedItem_Builder*) clearSpawnMetaInfo;
@end

@interface CMsgGC_Halloween_GrantItem : PBGeneratedMessage {
@private
  BOOL hasFlagged_:1;
  BOOL hasRecipientAccountId_:1;
  BOOL hasLevelId_:1;
  BOOL flagged_:1;
  uint32_t recipientAccountId;
  uint32_t levelId;
}
- (BOOL) hasRecipientAccountId;
- (BOOL) hasLevelId;
- (BOOL) hasFlagged;
@property (readonly) uint32_t recipientAccountId;
@property (readonly) uint32_t levelId;
- (BOOL) flagged;

+ (CMsgGC_Halloween_GrantItem*) defaultInstance;
- (CMsgGC_Halloween_GrantItem*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_Halloween_GrantItem_Builder*) builder;
+ (CMsgGC_Halloween_GrantItem_Builder*) builder;
+ (CMsgGC_Halloween_GrantItem_Builder*) builderWithPrototype:(CMsgGC_Halloween_GrantItem*) prototype;
- (CMsgGC_Halloween_GrantItem_Builder*) toBuilder;

+ (CMsgGC_Halloween_GrantItem*) parseFromData:(NSData*) data;
+ (CMsgGC_Halloween_GrantItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_Halloween_GrantItem*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_Halloween_GrantItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_Halloween_GrantItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_Halloween_GrantItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_Halloween_GrantItem_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_Halloween_GrantItem* _builderResult;
}

- (CMsgGC_Halloween_GrantItem*) defaultInstance;

- (CMsgGC_Halloween_GrantItem_Builder*) clear;
- (CMsgGC_Halloween_GrantItem_Builder*) clone;

- (CMsgGC_Halloween_GrantItem*) build;
- (CMsgGC_Halloween_GrantItem*) buildPartial;

- (CMsgGC_Halloween_GrantItem_Builder*) mergeFrom:(CMsgGC_Halloween_GrantItem*) other;
- (CMsgGC_Halloween_GrantItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_Halloween_GrantItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRecipientAccountId;
- (uint32_t) recipientAccountId;
- (CMsgGC_Halloween_GrantItem_Builder*) setRecipientAccountId:(uint32_t) value;
- (CMsgGC_Halloween_GrantItem_Builder*) clearRecipientAccountId;

- (BOOL) hasLevelId;
- (uint32_t) levelId;
- (CMsgGC_Halloween_GrantItem_Builder*) setLevelId:(uint32_t) value;
- (CMsgGC_Halloween_GrantItem_Builder*) clearLevelId;

- (BOOL) hasFlagged;
- (BOOL) flagged;
- (CMsgGC_Halloween_GrantItem_Builder*) setFlagged:(BOOL) value;
- (CMsgGC_Halloween_GrantItem_Builder*) clearFlagged;
@end

@interface CMsgGC_Halloween_GrantItemResponse : PBGeneratedMessage {
@private
  BOOL hasRecipientAccountId_:1;
  uint32_t recipientAccountId;
}
- (BOOL) hasRecipientAccountId;
@property (readonly) uint32_t recipientAccountId;

+ (CMsgGC_Halloween_GrantItemResponse*) defaultInstance;
- (CMsgGC_Halloween_GrantItemResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_Halloween_GrantItemResponse_Builder*) builder;
+ (CMsgGC_Halloween_GrantItemResponse_Builder*) builder;
+ (CMsgGC_Halloween_GrantItemResponse_Builder*) builderWithPrototype:(CMsgGC_Halloween_GrantItemResponse*) prototype;
- (CMsgGC_Halloween_GrantItemResponse_Builder*) toBuilder;

+ (CMsgGC_Halloween_GrantItemResponse*) parseFromData:(NSData*) data;
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_Halloween_GrantItemResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_Halloween_GrantItemResponse* _builderResult;
}

- (CMsgGC_Halloween_GrantItemResponse*) defaultInstance;

- (CMsgGC_Halloween_GrantItemResponse_Builder*) clear;
- (CMsgGC_Halloween_GrantItemResponse_Builder*) clone;

- (CMsgGC_Halloween_GrantItemResponse*) build;
- (CMsgGC_Halloween_GrantItemResponse*) buildPartial;

- (CMsgGC_Halloween_GrantItemResponse_Builder*) mergeFrom:(CMsgGC_Halloween_GrantItemResponse*) other;
- (CMsgGC_Halloween_GrantItemResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_Halloween_GrantItemResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRecipientAccountId;
- (uint32_t) recipientAccountId;
- (CMsgGC_Halloween_GrantItemResponse_Builder*) setRecipientAccountId:(uint32_t) value;
- (CMsgGC_Halloween_GrantItemResponse_Builder*) clearRecipientAccountId;
@end

@interface CMsgGC_Halloween_ItemClaimed : PBGeneratedMessage {
@private
}

+ (CMsgGC_Halloween_ItemClaimed*) defaultInstance;
- (CMsgGC_Halloween_ItemClaimed*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_Halloween_ItemClaimed_Builder*) builder;
+ (CMsgGC_Halloween_ItemClaimed_Builder*) builder;
+ (CMsgGC_Halloween_ItemClaimed_Builder*) builderWithPrototype:(CMsgGC_Halloween_ItemClaimed*) prototype;
- (CMsgGC_Halloween_ItemClaimed_Builder*) toBuilder;

+ (CMsgGC_Halloween_ItemClaimed*) parseFromData:(NSData*) data;
+ (CMsgGC_Halloween_ItemClaimed*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_Halloween_ItemClaimed*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_Halloween_ItemClaimed*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_Halloween_ItemClaimed*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_Halloween_ItemClaimed*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_Halloween_ItemClaimed_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_Halloween_ItemClaimed* _builderResult;
}

- (CMsgGC_Halloween_ItemClaimed*) defaultInstance;

- (CMsgGC_Halloween_ItemClaimed_Builder*) clear;
- (CMsgGC_Halloween_ItemClaimed_Builder*) clone;

- (CMsgGC_Halloween_ItemClaimed*) build;
- (CMsgGC_Halloween_ItemClaimed*) buildPartial;

- (CMsgGC_Halloween_ItemClaimed_Builder*) mergeFrom:(CMsgGC_Halloween_ItemClaimed*) other;
- (CMsgGC_Halloween_ItemClaimed_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_Halloween_ItemClaimed_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_PickupItemEligibility_Query : PBGeneratedMessage {
@private
  BOOL hasAccountId_:1;
  BOOL hasSecondsAgo_:1;
  uint32_t accountId;
  uint32_t secondsAgo;
}
- (BOOL) hasAccountId;
- (BOOL) hasSecondsAgo;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t secondsAgo;

+ (CMsgGC_PickupItemEligibility_Query*) defaultInstance;
- (CMsgGC_PickupItemEligibility_Query*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_PickupItemEligibility_Query_Builder*) builder;
+ (CMsgGC_PickupItemEligibility_Query_Builder*) builder;
+ (CMsgGC_PickupItemEligibility_Query_Builder*) builderWithPrototype:(CMsgGC_PickupItemEligibility_Query*) prototype;
- (CMsgGC_PickupItemEligibility_Query_Builder*) toBuilder;

+ (CMsgGC_PickupItemEligibility_Query*) parseFromData:(NSData*) data;
+ (CMsgGC_PickupItemEligibility_Query*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_PickupItemEligibility_Query*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_PickupItemEligibility_Query*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_PickupItemEligibility_Query*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_PickupItemEligibility_Query*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_PickupItemEligibility_Query_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_PickupItemEligibility_Query* _builderResult;
}

- (CMsgGC_PickupItemEligibility_Query*) defaultInstance;

- (CMsgGC_PickupItemEligibility_Query_Builder*) clear;
- (CMsgGC_PickupItemEligibility_Query_Builder*) clone;

- (CMsgGC_PickupItemEligibility_Query*) build;
- (CMsgGC_PickupItemEligibility_Query*) buildPartial;

- (CMsgGC_PickupItemEligibility_Query_Builder*) mergeFrom:(CMsgGC_PickupItemEligibility_Query*) other;
- (CMsgGC_PickupItemEligibility_Query_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_PickupItemEligibility_Query_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgGC_PickupItemEligibility_Query_Builder*) setAccountId:(uint32_t) value;
- (CMsgGC_PickupItemEligibility_Query_Builder*) clearAccountId;

- (BOOL) hasSecondsAgo;
- (uint32_t) secondsAgo;
- (CMsgGC_PickupItemEligibility_Query_Builder*) setSecondsAgo:(uint32_t) value;
- (CMsgGC_PickupItemEligibility_Query_Builder*) clearSecondsAgo;
@end

@interface CMsgGC_PickupItemEligibility_QueryResponse : PBGeneratedMessage {
@private
  BOOL hasWasEligible_:1;
  BOOL hasAccountId_:1;
  BOOL hasLevelId_:1;
  BOOL wasEligible_:1;
  uint32_t accountId;
  uint32_t levelId;
}
- (BOOL) hasAccountId;
- (BOOL) hasWasEligible;
- (BOOL) hasLevelId;
@property (readonly) uint32_t accountId;
- (BOOL) wasEligible;
@property (readonly) uint32_t levelId;

+ (CMsgGC_PickupItemEligibility_QueryResponse*) defaultInstance;
- (CMsgGC_PickupItemEligibility_QueryResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) builder;
+ (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) builder;
+ (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) builderWithPrototype:(CMsgGC_PickupItemEligibility_QueryResponse*) prototype;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) toBuilder;

+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromData:(NSData*) data;
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGC_PickupItemEligibility_QueryResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGC_PickupItemEligibility_QueryResponse* _builderResult;
}

- (CMsgGC_PickupItemEligibility_QueryResponse*) defaultInstance;

- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clear;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clone;

- (CMsgGC_PickupItemEligibility_QueryResponse*) build;
- (CMsgGC_PickupItemEligibility_QueryResponse*) buildPartial;

- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) mergeFrom:(CMsgGC_PickupItemEligibility_QueryResponse*) other;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) setAccountId:(uint32_t) value;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clearAccountId;

- (BOOL) hasWasEligible;
- (BOOL) wasEligible;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) setWasEligible:(BOOL) value;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clearWasEligible;

- (BOOL) hasLevelId;
- (uint32_t) levelId;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) setLevelId:(uint32_t) value;
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clearLevelId;
@end

@interface CSOTFPartyMember : PBGeneratedMessage {
@private
  BOOL hasOwnsTicket_:1;
  BOOL hasSquadSurplus_:1;
  BOOL hasIsBanned_:1;
  BOOL hasCompletedMissions_:1;
  BOOL hasBadgeLevel_:1;
  BOOL ownsTicket_:1;
  BOOL squadSurplus_:1;
  BOOL isBanned_:1;
  uint32_t completedMissions;
  uint32_t badgeLevel;
}
- (BOOL) hasOwnsTicket;
- (BOOL) hasCompletedMissions;
- (BOOL) hasBadgeLevel;
- (BOOL) hasSquadSurplus;
- (BOOL) hasIsBanned;
- (BOOL) ownsTicket;
@property (readonly) uint32_t completedMissions;
@property (readonly) uint32_t badgeLevel;
- (BOOL) squadSurplus;
- (BOOL) isBanned;

+ (CSOTFPartyMember*) defaultInstance;
- (CSOTFPartyMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSOTFPartyMember_Builder*) builder;
+ (CSOTFPartyMember_Builder*) builder;
+ (CSOTFPartyMember_Builder*) builderWithPrototype:(CSOTFPartyMember*) prototype;
- (CSOTFPartyMember_Builder*) toBuilder;

+ (CSOTFPartyMember*) parseFromData:(NSData*) data;
+ (CSOTFPartyMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFPartyMember*) parseFromInputStream:(NSInputStream*) input;
+ (CSOTFPartyMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFPartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSOTFPartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSOTFPartyMember_Builder : PBGeneratedMessage_Builder {
@private
  CSOTFPartyMember* _builderResult;
}

- (CSOTFPartyMember*) defaultInstance;

- (CSOTFPartyMember_Builder*) clear;
- (CSOTFPartyMember_Builder*) clone;

- (CSOTFPartyMember*) build;
- (CSOTFPartyMember*) buildPartial;

- (CSOTFPartyMember_Builder*) mergeFrom:(CSOTFPartyMember*) other;
- (CSOTFPartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSOTFPartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOwnsTicket;
- (BOOL) ownsTicket;
- (CSOTFPartyMember_Builder*) setOwnsTicket:(BOOL) value;
- (CSOTFPartyMember_Builder*) clearOwnsTicket;

- (BOOL) hasCompletedMissions;
- (uint32_t) completedMissions;
- (CSOTFPartyMember_Builder*) setCompletedMissions:(uint32_t) value;
- (CSOTFPartyMember_Builder*) clearCompletedMissions;

- (BOOL) hasBadgeLevel;
- (uint32_t) badgeLevel;
- (CSOTFPartyMember_Builder*) setBadgeLevel:(uint32_t) value;
- (CSOTFPartyMember_Builder*) clearBadgeLevel;

- (BOOL) hasSquadSurplus;
- (BOOL) squadSurplus;
- (CSOTFPartyMember_Builder*) setSquadSurplus:(BOOL) value;
- (CSOTFPartyMember_Builder*) clearSquadSurplus;

- (BOOL) hasIsBanned;
- (BOOL) isBanned;
- (CSOTFPartyMember_Builder*) setIsBanned:(BOOL) value;
- (CSOTFPartyMember_Builder*) clearIsBanned;
@end

@interface CMsgMatchSearchCriteria : PBGeneratedMessage {
@private
  BOOL hasLateJoinOk_:1;
  BOOL hasPlayForBraggingRights_:1;
  BOOL hasMvmMannupTour_:1;
  BOOL hasQuickplayGameType_:1;
  BOOL hasmatchmaking_mode_:1;
  BOOL lateJoinOk_:1;
  BOOL playForBraggingRights_:1;
  NSString* mvmMannupTour;
  uint32_t quickplayGameType;
  TF_MatchmakingMode matchmaking_mode;
  PBAppendableArray * mvmMissionsArray;
}
- (BOOL) hasmatchmaking_mode;
- (BOOL) hasLateJoinOk;
- (BOOL) hasMvmMannupTour;
- (BOOL) hasPlayForBraggingRights;
- (BOOL) hasQuickplayGameType;
@property (readonly) TF_MatchmakingMode matchmaking_mode;
- (BOOL) lateJoinOk;
@property (readonly, retain) NSString* mvmMannupTour;
@property (readonly, retain) PBArray * mvmMissions;
- (BOOL) playForBraggingRights;
@property (readonly) uint32_t quickplayGameType;
- (NSString*)mvmMissionsAtIndex:(NSUInteger)index;

+ (CMsgMatchSearchCriteria*) defaultInstance;
- (CMsgMatchSearchCriteria*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMatchSearchCriteria_Builder*) builder;
+ (CMsgMatchSearchCriteria_Builder*) builder;
+ (CMsgMatchSearchCriteria_Builder*) builderWithPrototype:(CMsgMatchSearchCriteria*) prototype;
- (CMsgMatchSearchCriteria_Builder*) toBuilder;

+ (CMsgMatchSearchCriteria*) parseFromData:(NSData*) data;
+ (CMsgMatchSearchCriteria*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchSearchCriteria*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMatchSearchCriteria*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchSearchCriteria*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMatchSearchCriteria*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMatchSearchCriteria_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMatchSearchCriteria* _builderResult;
}

- (CMsgMatchSearchCriteria*) defaultInstance;

- (CMsgMatchSearchCriteria_Builder*) clear;
- (CMsgMatchSearchCriteria_Builder*) clone;

- (CMsgMatchSearchCriteria*) build;
- (CMsgMatchSearchCriteria*) buildPartial;

- (CMsgMatchSearchCriteria_Builder*) mergeFrom:(CMsgMatchSearchCriteria*) other;
- (CMsgMatchSearchCriteria_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMatchSearchCriteria_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasmatchmaking_mode;
- (TF_MatchmakingMode) matchmaking_mode;
- (CMsgMatchSearchCriteria_Builder*) setmatchmaking_mode:(TF_MatchmakingMode) value;
- (CMsgMatchSearchCriteria_Builder*) clearmatchmaking_mode;

- (BOOL) hasLateJoinOk;
- (BOOL) lateJoinOk;
- (CMsgMatchSearchCriteria_Builder*) setLateJoinOk:(BOOL) value;
- (CMsgMatchSearchCriteria_Builder*) clearLateJoinOk;

- (BOOL) hasMvmMannupTour;
- (NSString*) mvmMannupTour;
- (CMsgMatchSearchCriteria_Builder*) setMvmMannupTour:(NSString*) value;
- (CMsgMatchSearchCriteria_Builder*) clearMvmMannupTour;

- (PBAppendableArray *)mvmMissions;
- (NSString*)mvmMissionsAtIndex:(NSUInteger)index;
- (CMsgMatchSearchCriteria_Builder *)addMvmMissions:(NSString*)value;
- (CMsgMatchSearchCriteria_Builder *)setMvmMissionsArray:(NSArray *)array;
- (CMsgMatchSearchCriteria_Builder *)setMvmMissionsValues:(const NSString* *)values count:(NSUInteger)count;
- (CMsgMatchSearchCriteria_Builder *)clearMvmMissions;

- (BOOL) hasPlayForBraggingRights;
- (BOOL) playForBraggingRights;
- (CMsgMatchSearchCriteria_Builder*) setPlayForBraggingRights:(BOOL) value;
- (CMsgMatchSearchCriteria_Builder*) clearPlayForBraggingRights;

- (BOOL) hasQuickplayGameType;
- (uint32_t) quickplayGameType;
- (CMsgMatchSearchCriteria_Builder*) setQuickplayGameType:(uint32_t) value;
- (CMsgMatchSearchCriteria_Builder*) clearQuickplayGameType;
@end

@interface CMsgCreateOrUpdateParty : PBGeneratedMessage {
@private
  BOOL hasSquadSurplus_:1;
  BOOL hasSteamLobbyId_:1;
  BOOL hasSearchCriteria_:1;
  BOOL hasClientVersion_:1;
  BOOL haswizard_step_:1;
  BOOL squadSurplus_:1;
  uint64_t steamLobbyId;
  CMsgMatchSearchCriteria* searchCriteria;
  uint32_t clientVersion;
  TF_Matchmaking_WizardStep wizard_step;
}
- (BOOL) hasSearchCriteria;
- (BOOL) hasSteamLobbyId;
- (BOOL) hasSquadSurplus;
- (BOOL) haswizard_step;
- (BOOL) hasClientVersion;
@property (readonly, retain) CMsgMatchSearchCriteria* searchCriteria;
@property (readonly) uint64_t steamLobbyId;
- (BOOL) squadSurplus;
@property (readonly) TF_Matchmaking_WizardStep wizard_step;
@property (readonly) uint32_t clientVersion;

+ (CMsgCreateOrUpdateParty*) defaultInstance;
- (CMsgCreateOrUpdateParty*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgCreateOrUpdateParty_Builder*) builder;
+ (CMsgCreateOrUpdateParty_Builder*) builder;
+ (CMsgCreateOrUpdateParty_Builder*) builderWithPrototype:(CMsgCreateOrUpdateParty*) prototype;
- (CMsgCreateOrUpdateParty_Builder*) toBuilder;

+ (CMsgCreateOrUpdateParty*) parseFromData:(NSData*) data;
+ (CMsgCreateOrUpdateParty*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCreateOrUpdateParty*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgCreateOrUpdateParty*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCreateOrUpdateParty*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgCreateOrUpdateParty*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgCreateOrUpdateParty_Builder : PBGeneratedMessage_Builder {
@private
  CMsgCreateOrUpdateParty* _builderResult;
}

- (CMsgCreateOrUpdateParty*) defaultInstance;

- (CMsgCreateOrUpdateParty_Builder*) clear;
- (CMsgCreateOrUpdateParty_Builder*) clone;

- (CMsgCreateOrUpdateParty*) build;
- (CMsgCreateOrUpdateParty*) buildPartial;

- (CMsgCreateOrUpdateParty_Builder*) mergeFrom:(CMsgCreateOrUpdateParty*) other;
- (CMsgCreateOrUpdateParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgCreateOrUpdateParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSearchCriteria;
- (CMsgMatchSearchCriteria*) searchCriteria;
- (CMsgCreateOrUpdateParty_Builder*) setSearchCriteria:(CMsgMatchSearchCriteria*) value;
- (CMsgCreateOrUpdateParty_Builder*) setSearchCriteriaBuilder:(CMsgMatchSearchCriteria_Builder*) builderForValue;
- (CMsgCreateOrUpdateParty_Builder*) mergeSearchCriteria:(CMsgMatchSearchCriteria*) value;
- (CMsgCreateOrUpdateParty_Builder*) clearSearchCriteria;

- (BOOL) hasSteamLobbyId;
- (uint64_t) steamLobbyId;
- (CMsgCreateOrUpdateParty_Builder*) setSteamLobbyId:(uint64_t) value;
- (CMsgCreateOrUpdateParty_Builder*) clearSteamLobbyId;

- (BOOL) hasSquadSurplus;
- (BOOL) squadSurplus;
- (CMsgCreateOrUpdateParty_Builder*) setSquadSurplus:(BOOL) value;
- (CMsgCreateOrUpdateParty_Builder*) clearSquadSurplus;

- (BOOL) haswizard_step;
- (TF_Matchmaking_WizardStep) wizard_step;
- (CMsgCreateOrUpdateParty_Builder*) setwizard_step:(TF_Matchmaking_WizardStep) value;
- (CMsgCreateOrUpdateParty_Builder*) clearwizard_step;

- (BOOL) hasClientVersion;
- (uint32_t) clientVersion;
- (CMsgCreateOrUpdateParty_Builder*) setClientVersion:(uint32_t) value;
- (CMsgCreateOrUpdateParty_Builder*) clearClientVersion;
@end

@interface CMsgCreateOrUpdatePartyReply : PBGeneratedMessage {
@private
  BOOL hasMessage_:1;
  BOOL hasResult_:1;
  BOOL haswizard_step_:1;
  NSString* message;
  uint32_t result;
  TF_Matchmaking_WizardStep wizard_step;
}
- (BOOL) hasResult;
- (BOOL) hasMessage;
- (BOOL) haswizard_step;
@property (readonly) uint32_t result;
@property (readonly, retain) NSString* message;
@property (readonly) TF_Matchmaking_WizardStep wizard_step;

+ (CMsgCreateOrUpdatePartyReply*) defaultInstance;
- (CMsgCreateOrUpdatePartyReply*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgCreateOrUpdatePartyReply_Builder*) builder;
+ (CMsgCreateOrUpdatePartyReply_Builder*) builder;
+ (CMsgCreateOrUpdatePartyReply_Builder*) builderWithPrototype:(CMsgCreateOrUpdatePartyReply*) prototype;
- (CMsgCreateOrUpdatePartyReply_Builder*) toBuilder;

+ (CMsgCreateOrUpdatePartyReply*) parseFromData:(NSData*) data;
+ (CMsgCreateOrUpdatePartyReply*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCreateOrUpdatePartyReply*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgCreateOrUpdatePartyReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgCreateOrUpdatePartyReply*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgCreateOrUpdatePartyReply*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgCreateOrUpdatePartyReply_Builder : PBGeneratedMessage_Builder {
@private
  CMsgCreateOrUpdatePartyReply* _builderResult;
}

- (CMsgCreateOrUpdatePartyReply*) defaultInstance;

- (CMsgCreateOrUpdatePartyReply_Builder*) clear;
- (CMsgCreateOrUpdatePartyReply_Builder*) clone;

- (CMsgCreateOrUpdatePartyReply*) build;
- (CMsgCreateOrUpdatePartyReply*) buildPartial;

- (CMsgCreateOrUpdatePartyReply_Builder*) mergeFrom:(CMsgCreateOrUpdatePartyReply*) other;
- (CMsgCreateOrUpdatePartyReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgCreateOrUpdatePartyReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResult;
- (uint32_t) result;
- (CMsgCreateOrUpdatePartyReply_Builder*) setResult:(uint32_t) value;
- (CMsgCreateOrUpdatePartyReply_Builder*) clearResult;

- (BOOL) hasMessage;
- (NSString*) message;
- (CMsgCreateOrUpdatePartyReply_Builder*) setMessage:(NSString*) value;
- (CMsgCreateOrUpdatePartyReply_Builder*) clearMessage;

- (BOOL) haswizard_step;
- (TF_Matchmaking_WizardStep) wizard_step;
- (CMsgCreateOrUpdatePartyReply_Builder*) setwizard_step:(TF_Matchmaking_WizardStep) value;
- (CMsgCreateOrUpdatePartyReply_Builder*) clearwizard_step;
@end

@interface CSOTFParty : PBGeneratedMessage {
@private
  BOOL hasSearchPlayForBraggingRights_:1;
  BOOL hasSearchLateJoinOk_:1;
  BOOL hasPartyId_:1;
  BOOL hasSteamLobbyId_:1;
  BOOL hasLeaderId_:1;
  BOOL hasSearchMvmMannupTour_:1;
  BOOL hasStartedMatchmakingTime_:1;
  BOOL hasSearchQuickplayGameType_:1;
  BOOL hasPreventMatchUntilDate_:1;
  BOOL hasPreventMatchAccountId_:1;
  BOOL hasstate_:1;
  BOOL haswizard_step_:1;
  BOOL hasmatchmaking_mode_:1;
  BOOL searchPlayForBraggingRights_:1;
  BOOL searchLateJoinOk_:1;
  uint64_t partyId;
  uint64_t steamLobbyId;
  uint64_t leaderId;
  NSString* searchMvmMannupTour;
  uint32_t startedMatchmakingTime;
  uint32_t searchQuickplayGameType;
  uint32_t preventMatchUntilDate;
  uint32_t preventMatchAccountId;
  CSOTFParty_State state;
  TF_Matchmaking_WizardStep wizard_step;
  TF_MatchmakingMode matchmaking_mode;
  PBAppendableArray * pendingInvitesArray;
  PBAppendableArray * memberIdsArray;
  PBAppendableArray * searchMvmMissionsArray;
  PBAppendableArray * membersArray;
  PBAppendableArray * searchingPlayersByGroupArray;
}
- (BOOL) hasPartyId;
- (BOOL) hasLeaderId;
- (BOOL) hasstate;
- (BOOL) haswizard_step;
- (BOOL) hasStartedMatchmakingTime;
- (BOOL) hasSteamLobbyId;
- (BOOL) hasmatchmaking_mode;
- (BOOL) hasSearchLateJoinOk;
- (BOOL) hasSearchMvmMannupTour;
- (BOOL) hasSearchPlayForBraggingRights;
- (BOOL) hasSearchQuickplayGameType;
- (BOOL) hasPreventMatchUntilDate;
- (BOOL) hasPreventMatchAccountId;
@property (readonly) uint64_t partyId;
@property (readonly) uint64_t leaderId;
@property (readonly, retain) PBArray * memberIds;
@property (readonly, retain) PBArray * members;
@property (readonly, retain) PBArray * pendingInvites;
@property (readonly) CSOTFParty_State state;
@property (readonly) TF_Matchmaking_WizardStep wizard_step;
@property (readonly) uint32_t startedMatchmakingTime;
@property (readonly, retain) PBArray * searchingPlayersByGroup;
@property (readonly) uint64_t steamLobbyId;
@property (readonly) TF_MatchmakingMode matchmaking_mode;
- (BOOL) searchLateJoinOk;
@property (readonly, retain) NSString* searchMvmMannupTour;
@property (readonly, retain) PBArray * searchMvmMissions;
- (BOOL) searchPlayForBraggingRights;
@property (readonly) uint32_t searchQuickplayGameType;
@property (readonly) uint32_t preventMatchUntilDate;
@property (readonly) uint32_t preventMatchAccountId;
- (uint64_t)memberIdsAtIndex:(NSUInteger)index;
- (CSOTFPartyMember*)membersAtIndex:(NSUInteger)index;
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index;
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index;
- (NSString*)searchMvmMissionsAtIndex:(NSUInteger)index;

+ (CSOTFParty*) defaultInstance;
- (CSOTFParty*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSOTFParty_Builder*) builder;
+ (CSOTFParty_Builder*) builder;
+ (CSOTFParty_Builder*) builderWithPrototype:(CSOTFParty*) prototype;
- (CSOTFParty_Builder*) toBuilder;

+ (CSOTFParty*) parseFromData:(NSData*) data;
+ (CSOTFParty*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFParty*) parseFromInputStream:(NSInputStream*) input;
+ (CSOTFParty*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFParty*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSOTFParty*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSOTFParty_Builder : PBGeneratedMessage_Builder {
@private
  CSOTFParty* _builderResult;
}

- (CSOTFParty*) defaultInstance;

- (CSOTFParty_Builder*) clear;
- (CSOTFParty_Builder*) clone;

- (CSOTFParty*) build;
- (CSOTFParty*) buildPartial;

- (CSOTFParty_Builder*) mergeFrom:(CSOTFParty*) other;
- (CSOTFParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSOTFParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPartyId;
- (uint64_t) partyId;
- (CSOTFParty_Builder*) setPartyId:(uint64_t) value;
- (CSOTFParty_Builder*) clearPartyId;

- (BOOL) hasLeaderId;
- (uint64_t) leaderId;
- (CSOTFParty_Builder*) setLeaderId:(uint64_t) value;
- (CSOTFParty_Builder*) clearLeaderId;

- (PBAppendableArray *)memberIds;
- (uint64_t)memberIdsAtIndex:(NSUInteger)index;
- (CSOTFParty_Builder *)addMemberIds:(uint64_t)value;
- (CSOTFParty_Builder *)setMemberIdsArray:(NSArray *)array;
- (CSOTFParty_Builder *)setMemberIdsValues:(const uint64_t *)values count:(NSUInteger)count;
- (CSOTFParty_Builder *)clearMemberIds;

- (PBAppendableArray *)members;
- (CSOTFPartyMember*)membersAtIndex:(NSUInteger)index;
- (CSOTFParty_Builder *)addMembers:(CSOTFPartyMember*)value;
- (CSOTFParty_Builder *)setMembersArray:(NSArray *)array;
- (CSOTFParty_Builder *)setMembersValues:(const CSOTFPartyMember* *)values count:(NSUInteger)count;
- (CSOTFParty_Builder *)clearMembers;

- (PBAppendableArray *)pendingInvites;
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index;
- (CSOTFParty_Builder *)addPendingInvites:(uint64_t)value;
- (CSOTFParty_Builder *)setPendingInvitesArray:(NSArray *)array;
- (CSOTFParty_Builder *)setPendingInvitesValues:(const uint64_t *)values count:(NSUInteger)count;
- (CSOTFParty_Builder *)clearPendingInvites;

- (BOOL) hasstate;
- (CSOTFParty_State) state;
- (CSOTFParty_Builder*) setstate:(CSOTFParty_State) value;
- (CSOTFParty_Builder*) clearstate;

- (BOOL) haswizard_step;
- (TF_Matchmaking_WizardStep) wizard_step;
- (CSOTFParty_Builder*) setwizard_step:(TF_Matchmaking_WizardStep) value;
- (CSOTFParty_Builder*) clearwizard_step;

- (BOOL) hasStartedMatchmakingTime;
- (uint32_t) startedMatchmakingTime;
- (CSOTFParty_Builder*) setStartedMatchmakingTime:(uint32_t) value;
- (CSOTFParty_Builder*) clearStartedMatchmakingTime;

- (PBAppendableArray *)searchingPlayersByGroup;
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index;
- (CSOTFParty_Builder *)addSearchingPlayersByGroup:(uint32_t)value;
- (CSOTFParty_Builder *)setSearchingPlayersByGroupArray:(NSArray *)array;
- (CSOTFParty_Builder *)setSearchingPlayersByGroupValues:(const uint32_t *)values count:(NSUInteger)count;
- (CSOTFParty_Builder *)clearSearchingPlayersByGroup;

- (BOOL) hasSteamLobbyId;
- (uint64_t) steamLobbyId;
- (CSOTFParty_Builder*) setSteamLobbyId:(uint64_t) value;
- (CSOTFParty_Builder*) clearSteamLobbyId;

- (BOOL) hasmatchmaking_mode;
- (TF_MatchmakingMode) matchmaking_mode;
- (CSOTFParty_Builder*) setmatchmaking_mode:(TF_MatchmakingMode) value;
- (CSOTFParty_Builder*) clearmatchmaking_mode;

- (BOOL) hasSearchLateJoinOk;
- (BOOL) searchLateJoinOk;
- (CSOTFParty_Builder*) setSearchLateJoinOk:(BOOL) value;
- (CSOTFParty_Builder*) clearSearchLateJoinOk;

- (BOOL) hasSearchMvmMannupTour;
- (NSString*) searchMvmMannupTour;
- (CSOTFParty_Builder*) setSearchMvmMannupTour:(NSString*) value;
- (CSOTFParty_Builder*) clearSearchMvmMannupTour;

- (PBAppendableArray *)searchMvmMissions;
- (NSString*)searchMvmMissionsAtIndex:(NSUInteger)index;
- (CSOTFParty_Builder *)addSearchMvmMissions:(NSString*)value;
- (CSOTFParty_Builder *)setSearchMvmMissionsArray:(NSArray *)array;
- (CSOTFParty_Builder *)setSearchMvmMissionsValues:(const NSString* *)values count:(NSUInteger)count;
- (CSOTFParty_Builder *)clearSearchMvmMissions;

- (BOOL) hasSearchPlayForBraggingRights;
- (BOOL) searchPlayForBraggingRights;
- (CSOTFParty_Builder*) setSearchPlayForBraggingRights:(BOOL) value;
- (CSOTFParty_Builder*) clearSearchPlayForBraggingRights;

- (BOOL) hasSearchQuickplayGameType;
- (uint32_t) searchQuickplayGameType;
- (CSOTFParty_Builder*) setSearchQuickplayGameType:(uint32_t) value;
- (CSOTFParty_Builder*) clearSearchQuickplayGameType;

- (BOOL) hasPreventMatchUntilDate;
- (uint32_t) preventMatchUntilDate;
- (CSOTFParty_Builder*) setPreventMatchUntilDate:(uint32_t) value;
- (CSOTFParty_Builder*) clearPreventMatchUntilDate;

- (BOOL) hasPreventMatchAccountId;
- (uint32_t) preventMatchAccountId;
- (CSOTFParty_Builder*) setPreventMatchAccountId:(uint32_t) value;
- (CSOTFParty_Builder*) clearPreventMatchAccountId;
@end

@interface CSOTFPartyInvite : PBGeneratedMessage {
@private
  BOOL hasGroupId_:1;
  BOOL hasSenderId_:1;
  BOOL hasSenderName_:1;
  uint64_t groupId;
  uint64_t senderId;
  NSString* senderName;
  PBAppendableArray * membersArray;
}
- (BOOL) hasGroupId;
- (BOOL) hasSenderId;
- (BOOL) hasSenderName;
@property (readonly) uint64_t groupId;
@property (readonly) uint64_t senderId;
@property (readonly, retain) NSString* senderName;
@property (readonly, retain) PBArray * members;
- (CSOTFPartyInvite_PartyMember*)membersAtIndex:(NSUInteger)index;

+ (CSOTFPartyInvite*) defaultInstance;
- (CSOTFPartyInvite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSOTFPartyInvite_Builder*) builder;
+ (CSOTFPartyInvite_Builder*) builder;
+ (CSOTFPartyInvite_Builder*) builderWithPrototype:(CSOTFPartyInvite*) prototype;
- (CSOTFPartyInvite_Builder*) toBuilder;

+ (CSOTFPartyInvite*) parseFromData:(NSData*) data;
+ (CSOTFPartyInvite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFPartyInvite*) parseFromInputStream:(NSInputStream*) input;
+ (CSOTFPartyInvite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFPartyInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSOTFPartyInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSOTFPartyInvite_PartyMember : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasName_:1;
  BOOL hasAvatar_:1;
  uint64_t steamId;
  NSString* name;
  uint32_t avatar;
}
- (BOOL) hasName;
- (BOOL) hasSteamId;
- (BOOL) hasAvatar;
@property (readonly, retain) NSString* name;
@property (readonly) uint64_t steamId;
@property (readonly) uint32_t avatar;

+ (CSOTFPartyInvite_PartyMember*) defaultInstance;
- (CSOTFPartyInvite_PartyMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSOTFPartyInvite_PartyMember_Builder*) builder;
+ (CSOTFPartyInvite_PartyMember_Builder*) builder;
+ (CSOTFPartyInvite_PartyMember_Builder*) builderWithPrototype:(CSOTFPartyInvite_PartyMember*) prototype;
- (CSOTFPartyInvite_PartyMember_Builder*) toBuilder;

+ (CSOTFPartyInvite_PartyMember*) parseFromData:(NSData*) data;
+ (CSOTFPartyInvite_PartyMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFPartyInvite_PartyMember*) parseFromInputStream:(NSInputStream*) input;
+ (CSOTFPartyInvite_PartyMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFPartyInvite_PartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSOTFPartyInvite_PartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSOTFPartyInvite_PartyMember_Builder : PBGeneratedMessage_Builder {
@private
  CSOTFPartyInvite_PartyMember* _builderResult;
}

- (CSOTFPartyInvite_PartyMember*) defaultInstance;

- (CSOTFPartyInvite_PartyMember_Builder*) clear;
- (CSOTFPartyInvite_PartyMember_Builder*) clone;

- (CSOTFPartyInvite_PartyMember*) build;
- (CSOTFPartyInvite_PartyMember*) buildPartial;

- (CSOTFPartyInvite_PartyMember_Builder*) mergeFrom:(CSOTFPartyInvite_PartyMember*) other;
- (CSOTFPartyInvite_PartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSOTFPartyInvite_PartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (CSOTFPartyInvite_PartyMember_Builder*) setName:(NSString*) value;
- (CSOTFPartyInvite_PartyMember_Builder*) clearName;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CSOTFPartyInvite_PartyMember_Builder*) setSteamId:(uint64_t) value;
- (CSOTFPartyInvite_PartyMember_Builder*) clearSteamId;

- (BOOL) hasAvatar;
- (uint32_t) avatar;
- (CSOTFPartyInvite_PartyMember_Builder*) setAvatar:(uint32_t) value;
- (CSOTFPartyInvite_PartyMember_Builder*) clearAvatar;
@end

@interface CSOTFPartyInvite_Builder : PBGeneratedMessage_Builder {
@private
  CSOTFPartyInvite* _builderResult;
}

- (CSOTFPartyInvite*) defaultInstance;

- (CSOTFPartyInvite_Builder*) clear;
- (CSOTFPartyInvite_Builder*) clone;

- (CSOTFPartyInvite*) build;
- (CSOTFPartyInvite*) buildPartial;

- (CSOTFPartyInvite_Builder*) mergeFrom:(CSOTFPartyInvite*) other;
- (CSOTFPartyInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSOTFPartyInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGroupId;
- (uint64_t) groupId;
- (CSOTFPartyInvite_Builder*) setGroupId:(uint64_t) value;
- (CSOTFPartyInvite_Builder*) clearGroupId;

- (BOOL) hasSenderId;
- (uint64_t) senderId;
- (CSOTFPartyInvite_Builder*) setSenderId:(uint64_t) value;
- (CSOTFPartyInvite_Builder*) clearSenderId;

- (BOOL) hasSenderName;
- (NSString*) senderName;
- (CSOTFPartyInvite_Builder*) setSenderName:(NSString*) value;
- (CSOTFPartyInvite_Builder*) clearSenderName;

- (PBAppendableArray *)members;
- (CSOTFPartyInvite_PartyMember*)membersAtIndex:(NSUInteger)index;
- (CSOTFPartyInvite_Builder *)addMembers:(CSOTFPartyInvite_PartyMember*)value;
- (CSOTFPartyInvite_Builder *)setMembersArray:(NSArray *)array;
- (CSOTFPartyInvite_Builder *)setMembersValues:(const CSOTFPartyInvite_PartyMember* *)values count:(NSUInteger)count;
- (CSOTFPartyInvite_Builder *)clearMembers;
@end

@interface CTFLobbyMember : PBGeneratedMessage {
@private
  BOOL hasSquadSurplus_:1;
  BOOL hasQuittingResultsInPenalty_:1;
  BOOL hasLatitude_:1;
  BOOL hasLongitude_:1;
  BOOL hasPartyId_:1;
  BOOL hasId_:1;
  BOOL hasName_:1;
  BOOL hasBadgeLevel_:1;
  BOOL hasAbandonTime_:1;
  BOOL hasLastConnectTime_:1;
  BOOL hasteam_:1;
  BOOL hasconnect_state_:1;
  BOOL hasready_state_:1;
  BOOL squadSurplus_:1;
  BOOL quittingResultsInPenalty_:1;
  Float32 latitude;
  Float32 longitude;
  uint64_t partyId;
  uint64_t id;
  NSString* name;
  uint32_t badgeLevel;
  uint32_t abandonTime;
  uint32_t lastConnectTime;
  TF_GC_TEAM team;
  CTFLobbyMember_ConnectState connect_state;
  TFLobbyReadyState ready_state;
}
- (BOOL) hasId;
- (BOOL) hasteam;
- (BOOL) hasconnect_state;
- (BOOL) hasName;
- (BOOL) hasLatitude;
- (BOOL) hasLongitude;
- (BOOL) hasready_state;
- (BOOL) hasPartyId;
- (BOOL) hasSquadSurplus;
- (BOOL) hasBadgeLevel;
- (BOOL) hasAbandonTime;
- (BOOL) hasLastConnectTime;
- (BOOL) hasQuittingResultsInPenalty;
@property (readonly) uint64_t id;
@property (readonly) TF_GC_TEAM team;
@property (readonly) CTFLobbyMember_ConnectState connect_state;
@property (readonly, retain) NSString* name;
@property (readonly) Float32 latitude;
@property (readonly) Float32 longitude;
@property (readonly) TFLobbyReadyState ready_state;
@property (readonly) uint64_t partyId;
- (BOOL) squadSurplus;
@property (readonly) uint32_t badgeLevel;
@property (readonly) uint32_t abandonTime;
@property (readonly) uint32_t lastConnectTime;
- (BOOL) quittingResultsInPenalty;

+ (CTFLobbyMember*) defaultInstance;
- (CTFLobbyMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CTFLobbyMember_Builder*) builder;
+ (CTFLobbyMember_Builder*) builder;
+ (CTFLobbyMember_Builder*) builderWithPrototype:(CTFLobbyMember*) prototype;
- (CTFLobbyMember_Builder*) toBuilder;

+ (CTFLobbyMember*) parseFromData:(NSData*) data;
+ (CTFLobbyMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CTFLobbyMember*) parseFromInputStream:(NSInputStream*) input;
+ (CTFLobbyMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CTFLobbyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CTFLobbyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CTFLobbyMember_Builder : PBGeneratedMessage_Builder {
@private
  CTFLobbyMember* _builderResult;
}

- (CTFLobbyMember*) defaultInstance;

- (CTFLobbyMember_Builder*) clear;
- (CTFLobbyMember_Builder*) clone;

- (CTFLobbyMember*) build;
- (CTFLobbyMember*) buildPartial;

- (CTFLobbyMember_Builder*) mergeFrom:(CTFLobbyMember*) other;
- (CTFLobbyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CTFLobbyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (uint64_t) id;
- (CTFLobbyMember_Builder*) setId:(uint64_t) value;
- (CTFLobbyMember_Builder*) clearId;

- (BOOL) hasteam;
- (TF_GC_TEAM) team;
- (CTFLobbyMember_Builder*) setteam:(TF_GC_TEAM) value;
- (CTFLobbyMember_Builder*) clearteam;

- (BOOL) hasconnect_state;
- (CTFLobbyMember_ConnectState) connect_state;
- (CTFLobbyMember_Builder*) setconnect_state:(CTFLobbyMember_ConnectState) value;
- (CTFLobbyMember_Builder*) clearconnect_state;

- (BOOL) hasName;
- (NSString*) name;
- (CTFLobbyMember_Builder*) setName:(NSString*) value;
- (CTFLobbyMember_Builder*) clearName;

- (BOOL) hasLatitude;
- (Float32) latitude;
- (CTFLobbyMember_Builder*) setLatitude:(Float32) value;
- (CTFLobbyMember_Builder*) clearLatitude;

- (BOOL) hasLongitude;
- (Float32) longitude;
- (CTFLobbyMember_Builder*) setLongitude:(Float32) value;
- (CTFLobbyMember_Builder*) clearLongitude;

- (BOOL) hasready_state;
- (TFLobbyReadyState) ready_state;
- (CTFLobbyMember_Builder*) setready_state:(TFLobbyReadyState) value;
- (CTFLobbyMember_Builder*) clearready_state;

- (BOOL) hasPartyId;
- (uint64_t) partyId;
- (CTFLobbyMember_Builder*) setPartyId:(uint64_t) value;
- (CTFLobbyMember_Builder*) clearPartyId;

- (BOOL) hasSquadSurplus;
- (BOOL) squadSurplus;
- (CTFLobbyMember_Builder*) setSquadSurplus:(BOOL) value;
- (CTFLobbyMember_Builder*) clearSquadSurplus;

- (BOOL) hasBadgeLevel;
- (uint32_t) badgeLevel;
- (CTFLobbyMember_Builder*) setBadgeLevel:(uint32_t) value;
- (CTFLobbyMember_Builder*) clearBadgeLevel;

- (BOOL) hasAbandonTime;
- (uint32_t) abandonTime;
- (CTFLobbyMember_Builder*) setAbandonTime:(uint32_t) value;
- (CTFLobbyMember_Builder*) clearAbandonTime;

- (BOOL) hasLastConnectTime;
- (uint32_t) lastConnectTime;
- (CTFLobbyMember_Builder*) setLastConnectTime:(uint32_t) value;
- (CTFLobbyMember_Builder*) clearLastConnectTime;

- (BOOL) hasQuittingResultsInPenalty;
- (BOOL) quittingResultsInPenalty;
- (CTFLobbyMember_Builder*) setQuittingResultsInPenalty:(BOOL) value;
- (CTFLobbyMember_Builder*) clearQuittingResultsInPenalty;
@end

@interface CLobbyPendingPlayerReport : PBGeneratedMessage {
@private
  BOOL hasDate_:1;
  BOOL hasAccountId_:1;
  uint32_t date;
  uint32_t accountId;
}
- (BOOL) hasAccountId;
- (BOOL) hasDate;
@property (readonly) uint32_t accountId;
@property (readonly) uint32_t date;

+ (CLobbyPendingPlayerReport*) defaultInstance;
- (CLobbyPendingPlayerReport*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CLobbyPendingPlayerReport_Builder*) builder;
+ (CLobbyPendingPlayerReport_Builder*) builder;
+ (CLobbyPendingPlayerReport_Builder*) builderWithPrototype:(CLobbyPendingPlayerReport*) prototype;
- (CLobbyPendingPlayerReport_Builder*) toBuilder;

+ (CLobbyPendingPlayerReport*) parseFromData:(NSData*) data;
+ (CLobbyPendingPlayerReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLobbyPendingPlayerReport*) parseFromInputStream:(NSInputStream*) input;
+ (CLobbyPendingPlayerReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CLobbyPendingPlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CLobbyPendingPlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CLobbyPendingPlayerReport_Builder : PBGeneratedMessage_Builder {
@private
  CLobbyPendingPlayerReport* _builderResult;
}

- (CLobbyPendingPlayerReport*) defaultInstance;

- (CLobbyPendingPlayerReport_Builder*) clear;
- (CLobbyPendingPlayerReport_Builder*) clone;

- (CLobbyPendingPlayerReport*) build;
- (CLobbyPendingPlayerReport*) buildPartial;

- (CLobbyPendingPlayerReport_Builder*) mergeFrom:(CLobbyPendingPlayerReport*) other;
- (CLobbyPendingPlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CLobbyPendingPlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAccountId;
- (uint32_t) accountId;
- (CLobbyPendingPlayerReport_Builder*) setAccountId:(uint32_t) value;
- (CLobbyPendingPlayerReport_Builder*) clearAccountId;

- (BOOL) hasDate;
- (uint32_t) date;
- (CLobbyPendingPlayerReport_Builder*) setDate:(uint32_t) value;
- (CLobbyPendingPlayerReport_Builder*) clearDate;
@end

@interface CMsgGameMatchSignOut : PBGeneratedMessage {
@private
}

+ (CMsgGameMatchSignOut*) defaultInstance;
- (CMsgGameMatchSignOut*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameMatchSignOut_Builder*) builder;
+ (CMsgGameMatchSignOut_Builder*) builder;
+ (CMsgGameMatchSignOut_Builder*) builderWithPrototype:(CMsgGameMatchSignOut*) prototype;
- (CMsgGameMatchSignOut_Builder*) toBuilder;

+ (CMsgGameMatchSignOut*) parseFromData:(NSData*) data;
+ (CMsgGameMatchSignOut*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignOut*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameMatchSignOut*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameMatchSignOut*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameMatchSignOut*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameMatchSignOut_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameMatchSignOut* _builderResult;
}

- (CMsgGameMatchSignOut*) defaultInstance;

- (CMsgGameMatchSignOut_Builder*) clear;
- (CMsgGameMatchSignOut_Builder*) clone;

- (CMsgGameMatchSignOut*) build;
- (CMsgGameMatchSignOut*) buildPartial;

- (CMsgGameMatchSignOut_Builder*) mergeFrom:(CMsgGameMatchSignOut*) other;
- (CMsgGameMatchSignOut_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameMatchSignOut_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSOTFLobby : PBGeneratedMessage {
@private
  BOOL hasAllowSpectating_:1;
  BOOL hasLeaverDetected_:1;
  BOOL hasAllowCheats_:1;
  BOOL hasReadyupRemainingTime_:1;
  BOOL hasLobbyId_:1;
  BOOL hasLoadGameLobbyId_:1;
  BOOL hasLeaderId_:1;
  BOOL hasServerId_:1;
  BOOL hasReplaySalt_:1;
  BOOL hasGameName_:1;
  BOOL hasConnect_:1;
  BOOL hasMannupTourName_:1;
  BOOL hasMapName_:1;
  BOOL hasMissionName_:1;
  BOOL hasServerRegion_:1;
  BOOL hasNumSpectators_:1;
  BOOL hasMatchgroup_:1;
  BOOL hasMatchId_:1;
  BOOL hasMatchGroup_:1;
  BOOL hasLoadGameSaveNumber_:1;
  BOOL haslobby_type_:1;
  BOOL hasgame_state_:1;
  BOOL hasstate_:1;
  BOOL allowSpectating_:1;
  BOOL leaverDetected_:1;
  BOOL allowCheats_:1;
  Float32 readyupRemainingTime;
  uint64_t lobbyId;
  uint64_t loadGameLobbyId;
  uint64_t leaderId;
  uint64_t serverId;
  uint32_t replaySalt;
  NSString* gameName;
  NSString* connect;
  NSString* mannupTourName;
  NSString* mapName;
  NSString* missionName;
  uint32_t serverRegion;
  uint32_t numSpectators;
  uint32_t matchgroup;
  uint32_t matchId;
  uint32_t matchGroup;
  uint32_t loadGameSaveNumber;
  CSOTFLobby_LobbyType lobby_type;
  TF_GC_GameState game_state;
  CSOTFLobby_State state;
  PBAppendableArray * pendingInvitesArray;
  PBAppendableArray * leftMembersArray;
  PBAppendableArray * membersArray;
}
- (BOOL) hasLobbyId;
- (BOOL) hasLeaderId;
- (BOOL) hasServerId;
- (BOOL) hasstate;
- (BOOL) hasConnect;
- (BOOL) haslobby_type;
- (BOOL) hasAllowCheats;
- (BOOL) hasGameName;
- (BOOL) hasServerRegion;
- (BOOL) hasgame_state;
- (BOOL) hasNumSpectators;
- (BOOL) hasMatchgroup;
- (BOOL) hasReadyupRemainingTime;
- (BOOL) hasLeaverDetected;
- (BOOL) hasAllowSpectating;
- (BOOL) hasLoadGameLobbyId;
- (BOOL) hasLoadGameSaveNumber;
- (BOOL) hasMannupTourName;
- (BOOL) hasMapName;
- (BOOL) hasMissionName;
- (BOOL) hasMatchGroup;
- (BOOL) hasMatchId;
- (BOOL) hasReplaySalt;
@property (readonly) uint64_t lobbyId;
@property (readonly, retain) PBArray * members;
@property (readonly, retain) PBArray * leftMembers;
@property (readonly) uint64_t leaderId;
@property (readonly) uint64_t serverId;
@property (readonly, retain) PBArray * pendingInvites;
@property (readonly) CSOTFLobby_State state;
@property (readonly, retain) NSString* connect;
@property (readonly) CSOTFLobby_LobbyType lobby_type;
- (BOOL) allowCheats;
@property (readonly, retain) NSString* gameName;
@property (readonly) uint32_t serverRegion;
@property (readonly) TF_GC_GameState game_state;
@property (readonly) uint32_t numSpectators;
@property (readonly) uint32_t matchgroup;
@property (readonly) Float32 readyupRemainingTime;
- (BOOL) leaverDetected;
- (BOOL) allowSpectating;
@property (readonly) uint64_t loadGameLobbyId;
@property (readonly) uint32_t loadGameSaveNumber;
@property (readonly, retain) NSString* mannupTourName;
@property (readonly, retain) NSString* mapName;
@property (readonly, retain) NSString* missionName;
@property (readonly) uint32_t matchGroup;
@property (readonly) uint32_t matchId;
@property (readonly) uint32_t replaySalt;
- (CTFLobbyMember*)membersAtIndex:(NSUInteger)index;
- (CTFLobbyMember*)leftMembersAtIndex:(NSUInteger)index;
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index;

+ (CSOTFLobby*) defaultInstance;
- (CSOTFLobby*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CSOTFLobby_Builder*) builder;
+ (CSOTFLobby_Builder*) builder;
+ (CSOTFLobby_Builder*) builderWithPrototype:(CSOTFLobby*) prototype;
- (CSOTFLobby_Builder*) toBuilder;

+ (CSOTFLobby*) parseFromData:(NSData*) data;
+ (CSOTFLobby*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFLobby*) parseFromInputStream:(NSInputStream*) input;
+ (CSOTFLobby*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CSOTFLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CSOTFLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CSOTFLobby_Builder : PBGeneratedMessage_Builder {
@private
  CSOTFLobby* _builderResult;
}

- (CSOTFLobby*) defaultInstance;

- (CSOTFLobby_Builder*) clear;
- (CSOTFLobby_Builder*) clone;

- (CSOTFLobby*) build;
- (CSOTFLobby*) buildPartial;

- (CSOTFLobby_Builder*) mergeFrom:(CSOTFLobby*) other;
- (CSOTFLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CSOTFLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CSOTFLobby_Builder*) setLobbyId:(uint64_t) value;
- (CSOTFLobby_Builder*) clearLobbyId;

- (PBAppendableArray *)members;
- (CTFLobbyMember*)membersAtIndex:(NSUInteger)index;
- (CSOTFLobby_Builder *)addMembers:(CTFLobbyMember*)value;
- (CSOTFLobby_Builder *)setMembersArray:(NSArray *)array;
- (CSOTFLobby_Builder *)setMembersValues:(const CTFLobbyMember* *)values count:(NSUInteger)count;
- (CSOTFLobby_Builder *)clearMembers;

- (PBAppendableArray *)leftMembers;
- (CTFLobbyMember*)leftMembersAtIndex:(NSUInteger)index;
- (CSOTFLobby_Builder *)addLeftMembers:(CTFLobbyMember*)value;
- (CSOTFLobby_Builder *)setLeftMembersArray:(NSArray *)array;
- (CSOTFLobby_Builder *)setLeftMembersValues:(const CTFLobbyMember* *)values count:(NSUInteger)count;
- (CSOTFLobby_Builder *)clearLeftMembers;

- (BOOL) hasLeaderId;
- (uint64_t) leaderId;
- (CSOTFLobby_Builder*) setLeaderId:(uint64_t) value;
- (CSOTFLobby_Builder*) clearLeaderId;

- (BOOL) hasServerId;
- (uint64_t) serverId;
- (CSOTFLobby_Builder*) setServerId:(uint64_t) value;
- (CSOTFLobby_Builder*) clearServerId;

- (PBAppendableArray *)pendingInvites;
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index;
- (CSOTFLobby_Builder *)addPendingInvites:(uint64_t)value;
- (CSOTFLobby_Builder *)setPendingInvitesArray:(NSArray *)array;
- (CSOTFLobby_Builder *)setPendingInvitesValues:(const uint64_t *)values count:(NSUInteger)count;
- (CSOTFLobby_Builder *)clearPendingInvites;

- (BOOL) hasstate;
- (CSOTFLobby_State) state;
- (CSOTFLobby_Builder*) setstate:(CSOTFLobby_State) value;
- (CSOTFLobby_Builder*) clearstate;

- (BOOL) hasConnect;
- (NSString*) connect;
- (CSOTFLobby_Builder*) setConnect:(NSString*) value;
- (CSOTFLobby_Builder*) clearConnect;

- (BOOL) haslobby_type;
- (CSOTFLobby_LobbyType) lobby_type;
- (CSOTFLobby_Builder*) setlobby_type:(CSOTFLobby_LobbyType) value;
- (CSOTFLobby_Builder*) clearlobby_type;

- (BOOL) hasAllowCheats;
- (BOOL) allowCheats;
- (CSOTFLobby_Builder*) setAllowCheats:(BOOL) value;
- (CSOTFLobby_Builder*) clearAllowCheats;

- (BOOL) hasGameName;
- (NSString*) gameName;
- (CSOTFLobby_Builder*) setGameName:(NSString*) value;
- (CSOTFLobby_Builder*) clearGameName;

- (BOOL) hasServerRegion;
- (uint32_t) serverRegion;
- (CSOTFLobby_Builder*) setServerRegion:(uint32_t) value;
- (CSOTFLobby_Builder*) clearServerRegion;

- (BOOL) hasgame_state;
- (TF_GC_GameState) game_state;
- (CSOTFLobby_Builder*) setgame_state:(TF_GC_GameState) value;
- (CSOTFLobby_Builder*) cleargame_state;

- (BOOL) hasNumSpectators;
- (uint32_t) numSpectators;
- (CSOTFLobby_Builder*) setNumSpectators:(uint32_t) value;
- (CSOTFLobby_Builder*) clearNumSpectators;

- (BOOL) hasMatchgroup;
- (uint32_t) matchgroup;
- (CSOTFLobby_Builder*) setMatchgroup:(uint32_t) value;
- (CSOTFLobby_Builder*) clearMatchgroup;

- (BOOL) hasReadyupRemainingTime;
- (Float32) readyupRemainingTime;
- (CSOTFLobby_Builder*) setReadyupRemainingTime:(Float32) value;
- (CSOTFLobby_Builder*) clearReadyupRemainingTime;

- (BOOL) hasLeaverDetected;
- (BOOL) leaverDetected;
- (CSOTFLobby_Builder*) setLeaverDetected:(BOOL) value;
- (CSOTFLobby_Builder*) clearLeaverDetected;

- (BOOL) hasAllowSpectating;
- (BOOL) allowSpectating;
- (CSOTFLobby_Builder*) setAllowSpectating:(BOOL) value;
- (CSOTFLobby_Builder*) clearAllowSpectating;

- (BOOL) hasLoadGameLobbyId;
- (uint64_t) loadGameLobbyId;
- (CSOTFLobby_Builder*) setLoadGameLobbyId:(uint64_t) value;
- (CSOTFLobby_Builder*) clearLoadGameLobbyId;

- (BOOL) hasLoadGameSaveNumber;
- (uint32_t) loadGameSaveNumber;
- (CSOTFLobby_Builder*) setLoadGameSaveNumber:(uint32_t) value;
- (CSOTFLobby_Builder*) clearLoadGameSaveNumber;

- (BOOL) hasMannupTourName;
- (NSString*) mannupTourName;
- (CSOTFLobby_Builder*) setMannupTourName:(NSString*) value;
- (CSOTFLobby_Builder*) clearMannupTourName;

- (BOOL) hasMapName;
- (NSString*) mapName;
- (CSOTFLobby_Builder*) setMapName:(NSString*) value;
- (CSOTFLobby_Builder*) clearMapName;

- (BOOL) hasMissionName;
- (NSString*) missionName;
- (CSOTFLobby_Builder*) setMissionName:(NSString*) value;
- (CSOTFLobby_Builder*) clearMissionName;

- (BOOL) hasMatchGroup;
- (uint32_t) matchGroup;
- (CSOTFLobby_Builder*) setMatchGroup:(uint32_t) value;
- (CSOTFLobby_Builder*) clearMatchGroup;

- (BOOL) hasMatchId;
- (uint32_t) matchId;
- (CSOTFLobby_Builder*) setMatchId:(uint32_t) value;
- (CSOTFLobby_Builder*) clearMatchId;

- (BOOL) hasReplaySalt;
- (uint32_t) replaySalt;
- (CSOTFLobby_Builder*) setReplaySalt:(uint32_t) value;
- (CSOTFLobby_Builder*) clearReplaySalt;
@end

@interface CMsgExitMatchmaking : PBGeneratedMessage {
@private
}

+ (CMsgExitMatchmaking*) defaultInstance;
- (CMsgExitMatchmaking*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgExitMatchmaking_Builder*) builder;
+ (CMsgExitMatchmaking_Builder*) builder;
+ (CMsgExitMatchmaking_Builder*) builderWithPrototype:(CMsgExitMatchmaking*) prototype;
- (CMsgExitMatchmaking_Builder*) toBuilder;

+ (CMsgExitMatchmaking*) parseFromData:(NSData*) data;
+ (CMsgExitMatchmaking*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgExitMatchmaking*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgExitMatchmaking*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgExitMatchmaking*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgExitMatchmaking*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgExitMatchmaking_Builder : PBGeneratedMessage_Builder {
@private
  CMsgExitMatchmaking* _builderResult;
}

- (CMsgExitMatchmaking*) defaultInstance;

- (CMsgExitMatchmaking_Builder*) clear;
- (CMsgExitMatchmaking_Builder*) clone;

- (CMsgExitMatchmaking*) build;
- (CMsgExitMatchmaking*) buildPartial;

- (CMsgExitMatchmaking_Builder*) mergeFrom:(CMsgExitMatchmaking*) other;
- (CMsgExitMatchmaking_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgExitMatchmaking_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgAcceptInvite : PBGeneratedMessage {
@private
  BOOL hasPartyId_:1;
  BOOL hasSteamidLobby_:1;
  BOOL hasClientVersion_:1;
  uint64_t partyId;
  uint64_t steamidLobby;
  uint32_t clientVersion;
}
- (BOOL) hasPartyId;
- (BOOL) hasSteamidLobby;
- (BOOL) hasClientVersion;
@property (readonly) uint64_t partyId;
@property (readonly) uint64_t steamidLobby;
@property (readonly) uint32_t clientVersion;

+ (CMsgAcceptInvite*) defaultInstance;
- (CMsgAcceptInvite*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgAcceptInvite_Builder*) builder;
+ (CMsgAcceptInvite_Builder*) builder;
+ (CMsgAcceptInvite_Builder*) builderWithPrototype:(CMsgAcceptInvite*) prototype;
- (CMsgAcceptInvite_Builder*) toBuilder;

+ (CMsgAcceptInvite*) parseFromData:(NSData*) data;
+ (CMsgAcceptInvite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgAcceptInvite*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgAcceptInvite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgAcceptInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgAcceptInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgAcceptInvite_Builder : PBGeneratedMessage_Builder {
@private
  CMsgAcceptInvite* _builderResult;
}

- (CMsgAcceptInvite*) defaultInstance;

- (CMsgAcceptInvite_Builder*) clear;
- (CMsgAcceptInvite_Builder*) clone;

- (CMsgAcceptInvite*) build;
- (CMsgAcceptInvite*) buildPartial;

- (CMsgAcceptInvite_Builder*) mergeFrom:(CMsgAcceptInvite*) other;
- (CMsgAcceptInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgAcceptInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPartyId;
- (uint64_t) partyId;
- (CMsgAcceptInvite_Builder*) setPartyId:(uint64_t) value;
- (CMsgAcceptInvite_Builder*) clearPartyId;

- (BOOL) hasSteamidLobby;
- (uint64_t) steamidLobby;
- (CMsgAcceptInvite_Builder*) setSteamidLobby:(uint64_t) value;
- (CMsgAcceptInvite_Builder*) clearSteamidLobby;

- (BOOL) hasClientVersion;
- (uint32_t) clientVersion;
- (CMsgAcceptInvite_Builder*) setClientVersion:(uint32_t) value;
- (CMsgAcceptInvite_Builder*) clearClientVersion;
@end

@interface CMsgAcceptInviteResponse : PBGeneratedMessage {
@private
  BOOL hasResultCode_:1;
  int32_t resultCode;
}
- (BOOL) hasResultCode;
@property (readonly) int32_t resultCode;

+ (CMsgAcceptInviteResponse*) defaultInstance;
- (CMsgAcceptInviteResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgAcceptInviteResponse_Builder*) builder;
+ (CMsgAcceptInviteResponse_Builder*) builder;
+ (CMsgAcceptInviteResponse_Builder*) builderWithPrototype:(CMsgAcceptInviteResponse*) prototype;
- (CMsgAcceptInviteResponse_Builder*) toBuilder;

+ (CMsgAcceptInviteResponse*) parseFromData:(NSData*) data;
+ (CMsgAcceptInviteResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgAcceptInviteResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgAcceptInviteResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgAcceptInviteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgAcceptInviteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgAcceptInviteResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgAcceptInviteResponse* _builderResult;
}

- (CMsgAcceptInviteResponse*) defaultInstance;

- (CMsgAcceptInviteResponse_Builder*) clear;
- (CMsgAcceptInviteResponse_Builder*) clone;

- (CMsgAcceptInviteResponse*) build;
- (CMsgAcceptInviteResponse*) buildPartial;

- (CMsgAcceptInviteResponse_Builder*) mergeFrom:(CMsgAcceptInviteResponse*) other;
- (CMsgAcceptInviteResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgAcceptInviteResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResultCode;
- (int32_t) resultCode;
- (CMsgAcceptInviteResponse_Builder*) setResultCode:(int32_t) value;
- (CMsgAcceptInviteResponse_Builder*) clearResultCode;
@end

@interface CMsgReadyUp : PBGeneratedMessage {
@private
  BOOL hasstate_:1;
  TFLobbyReadyState state;
}
- (BOOL) hasstate;
@property (readonly) TFLobbyReadyState state;

+ (CMsgReadyUp*) defaultInstance;
- (CMsgReadyUp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgReadyUp_Builder*) builder;
+ (CMsgReadyUp_Builder*) builder;
+ (CMsgReadyUp_Builder*) builderWithPrototype:(CMsgReadyUp*) prototype;
- (CMsgReadyUp_Builder*) toBuilder;

+ (CMsgReadyUp*) parseFromData:(NSData*) data;
+ (CMsgReadyUp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReadyUp*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgReadyUp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgReadyUp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgReadyUp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgReadyUp_Builder : PBGeneratedMessage_Builder {
@private
  CMsgReadyUp* _builderResult;
}

- (CMsgReadyUp*) defaultInstance;

- (CMsgReadyUp_Builder*) clear;
- (CMsgReadyUp_Builder*) clone;

- (CMsgReadyUp*) build;
- (CMsgReadyUp*) buildPartial;

- (CMsgReadyUp_Builder*) mergeFrom:(CMsgReadyUp*) other;
- (CMsgReadyUp_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgReadyUp_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasstate;
- (TFLobbyReadyState) state;
- (CMsgReadyUp_Builder*) setstate:(TFLobbyReadyState) value;
- (CMsgReadyUp_Builder*) clearstate;
@end

@interface CMsgMatchmakingSearchCountRequest : PBGeneratedMessage {
@private
}

+ (CMsgMatchmakingSearchCountRequest*) defaultInstance;
- (CMsgMatchmakingSearchCountRequest*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMatchmakingSearchCountRequest_Builder*) builder;
+ (CMsgMatchmakingSearchCountRequest_Builder*) builder;
+ (CMsgMatchmakingSearchCountRequest_Builder*) builderWithPrototype:(CMsgMatchmakingSearchCountRequest*) prototype;
- (CMsgMatchmakingSearchCountRequest_Builder*) toBuilder;

+ (CMsgMatchmakingSearchCountRequest*) parseFromData:(NSData*) data;
+ (CMsgMatchmakingSearchCountRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingSearchCountRequest*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMatchmakingSearchCountRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingSearchCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMatchmakingSearchCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMatchmakingSearchCountRequest_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMatchmakingSearchCountRequest* _builderResult;
}

- (CMsgMatchmakingSearchCountRequest*) defaultInstance;

- (CMsgMatchmakingSearchCountRequest_Builder*) clear;
- (CMsgMatchmakingSearchCountRequest_Builder*) clone;

- (CMsgMatchmakingSearchCountRequest*) build;
- (CMsgMatchmakingSearchCountRequest*) buildPartial;

- (CMsgMatchmakingSearchCountRequest_Builder*) mergeFrom:(CMsgMatchmakingSearchCountRequest*) other;
- (CMsgMatchmakingSearchCountRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMatchmakingSearchCountRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMatchmakingSearchCountResponse : PBGeneratedMessage {
@private
  PBAppendableArray * searchingPlayersByGroupArray;
}
@property (readonly, retain) PBArray * searchingPlayersByGroup;
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index;

+ (CMsgMatchmakingSearchCountResponse*) defaultInstance;
- (CMsgMatchmakingSearchCountResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMatchmakingSearchCountResponse_Builder*) builder;
+ (CMsgMatchmakingSearchCountResponse_Builder*) builder;
+ (CMsgMatchmakingSearchCountResponse_Builder*) builderWithPrototype:(CMsgMatchmakingSearchCountResponse*) prototype;
- (CMsgMatchmakingSearchCountResponse_Builder*) toBuilder;

+ (CMsgMatchmakingSearchCountResponse*) parseFromData:(NSData*) data;
+ (CMsgMatchmakingSearchCountResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingSearchCountResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMatchmakingSearchCountResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingSearchCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMatchmakingSearchCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMatchmakingSearchCountResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMatchmakingSearchCountResponse* _builderResult;
}

- (CMsgMatchmakingSearchCountResponse*) defaultInstance;

- (CMsgMatchmakingSearchCountResponse_Builder*) clear;
- (CMsgMatchmakingSearchCountResponse_Builder*) clone;

- (CMsgMatchmakingSearchCountResponse*) build;
- (CMsgMatchmakingSearchCountResponse*) buildPartial;

- (CMsgMatchmakingSearchCountResponse_Builder*) mergeFrom:(CMsgMatchmakingSearchCountResponse*) other;
- (CMsgMatchmakingSearchCountResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMatchmakingSearchCountResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)searchingPlayersByGroup;
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index;
- (CMsgMatchmakingSearchCountResponse_Builder *)addSearchingPlayersByGroup:(uint32_t)value;
- (CMsgMatchmakingSearchCountResponse_Builder *)setSearchingPlayersByGroupArray:(NSArray *)array;
- (CMsgMatchmakingSearchCountResponse_Builder *)setSearchingPlayersByGroupValues:(const uint32_t *)values count:(NSUInteger)count;
- (CMsgMatchmakingSearchCountResponse_Builder *)clearSearchingPlayersByGroup;
@end

@interface CMsgKickedFromMatchmakingQueue : PBGeneratedMessage {
@private
}

+ (CMsgKickedFromMatchmakingQueue*) defaultInstance;
- (CMsgKickedFromMatchmakingQueue*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgKickedFromMatchmakingQueue_Builder*) builder;
+ (CMsgKickedFromMatchmakingQueue_Builder*) builder;
+ (CMsgKickedFromMatchmakingQueue_Builder*) builderWithPrototype:(CMsgKickedFromMatchmakingQueue*) prototype;
- (CMsgKickedFromMatchmakingQueue_Builder*) toBuilder;

+ (CMsgKickedFromMatchmakingQueue*) parseFromData:(NSData*) data;
+ (CMsgKickedFromMatchmakingQueue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgKickedFromMatchmakingQueue*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgKickedFromMatchmakingQueue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgKickedFromMatchmakingQueue*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgKickedFromMatchmakingQueue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgKickedFromMatchmakingQueue_Builder : PBGeneratedMessage_Builder {
@private
  CMsgKickedFromMatchmakingQueue* _builderResult;
}

- (CMsgKickedFromMatchmakingQueue*) defaultInstance;

- (CMsgKickedFromMatchmakingQueue_Builder*) clear;
- (CMsgKickedFromMatchmakingQueue_Builder*) clone;

- (CMsgKickedFromMatchmakingQueue*) build;
- (CMsgKickedFromMatchmakingQueue*) buildPartial;

- (CMsgKickedFromMatchmakingQueue_Builder*) mergeFrom:(CMsgKickedFromMatchmakingQueue*) other;
- (CMsgKickedFromMatchmakingQueue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgKickedFromMatchmakingQueue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFPlayerFailedToConnect : PBGeneratedMessage {
@private
  PBAppendableArray * failedLoadersArray;
}
@property (readonly, retain) PBArray * failedLoaders;
- (uint64_t)failedLoadersAtIndex:(NSUInteger)index;

+ (CMsgTFPlayerFailedToConnect*) defaultInstance;
- (CMsgTFPlayerFailedToConnect*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFPlayerFailedToConnect_Builder*) builder;
+ (CMsgTFPlayerFailedToConnect_Builder*) builder;
+ (CMsgTFPlayerFailedToConnect_Builder*) builderWithPrototype:(CMsgTFPlayerFailedToConnect*) prototype;
- (CMsgTFPlayerFailedToConnect_Builder*) toBuilder;

+ (CMsgTFPlayerFailedToConnect*) parseFromData:(NSData*) data;
+ (CMsgTFPlayerFailedToConnect*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFPlayerFailedToConnect*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFPlayerFailedToConnect*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFPlayerFailedToConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFPlayerFailedToConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFPlayerFailedToConnect_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFPlayerFailedToConnect* _builderResult;
}

- (CMsgTFPlayerFailedToConnect*) defaultInstance;

- (CMsgTFPlayerFailedToConnect_Builder*) clear;
- (CMsgTFPlayerFailedToConnect_Builder*) clone;

- (CMsgTFPlayerFailedToConnect*) build;
- (CMsgTFPlayerFailedToConnect*) buildPartial;

- (CMsgTFPlayerFailedToConnect_Builder*) mergeFrom:(CMsgTFPlayerFailedToConnect*) other;
- (CMsgTFPlayerFailedToConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFPlayerFailedToConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)failedLoaders;
- (uint64_t)failedLoadersAtIndex:(NSUInteger)index;
- (CMsgTFPlayerFailedToConnect_Builder *)addFailedLoaders:(uint64_t)value;
- (CMsgTFPlayerFailedToConnect_Builder *)setFailedLoadersArray:(NSArray *)array;
- (CMsgTFPlayerFailedToConnect_Builder *)setFailedLoadersValues:(const uint64_t *)values count:(NSUInteger)count;
- (CMsgTFPlayerFailedToConnect_Builder *)clearFailedLoaders;
@end

@interface CMsgTFJoinChatChannel : PBGeneratedMessage {
@private
  BOOL hasPersonaName_:1;
  BOOL hasChannelName_:1;
  BOOL hasPassword_:1;
  BOOL haschannel_type_:1;
  NSString* personaName;
  NSString* channelName;
  NSString* password;
  ChatChannelType_t channel_type;
}
- (BOOL) hasPersonaName;
- (BOOL) hasChannelName;
- (BOOL) hasPassword;
- (BOOL) haschannel_type;
@property (readonly, retain) NSString* personaName;
@property (readonly, retain) NSString* channelName;
@property (readonly, retain) NSString* password;
@property (readonly) ChatChannelType_t channel_type;

+ (CMsgTFJoinChatChannel*) defaultInstance;
- (CMsgTFJoinChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFJoinChatChannel_Builder*) builder;
+ (CMsgTFJoinChatChannel_Builder*) builder;
+ (CMsgTFJoinChatChannel_Builder*) builderWithPrototype:(CMsgTFJoinChatChannel*) prototype;
- (CMsgTFJoinChatChannel_Builder*) toBuilder;

+ (CMsgTFJoinChatChannel*) parseFromData:(NSData*) data;
+ (CMsgTFJoinChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFJoinChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFJoinChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFJoinChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFJoinChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFJoinChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFJoinChatChannel* _builderResult;
}

- (CMsgTFJoinChatChannel*) defaultInstance;

- (CMsgTFJoinChatChannel_Builder*) clear;
- (CMsgTFJoinChatChannel_Builder*) clone;

- (CMsgTFJoinChatChannel*) build;
- (CMsgTFJoinChatChannel*) buildPartial;

- (CMsgTFJoinChatChannel_Builder*) mergeFrom:(CMsgTFJoinChatChannel*) other;
- (CMsgTFJoinChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFJoinChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPersonaName;
- (NSString*) personaName;
- (CMsgTFJoinChatChannel_Builder*) setPersonaName:(NSString*) value;
- (CMsgTFJoinChatChannel_Builder*) clearPersonaName;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgTFJoinChatChannel_Builder*) setChannelName:(NSString*) value;
- (CMsgTFJoinChatChannel_Builder*) clearChannelName;

- (BOOL) hasPassword;
- (NSString*) password;
- (CMsgTFJoinChatChannel_Builder*) setPassword:(NSString*) value;
- (CMsgTFJoinChatChannel_Builder*) clearPassword;

- (BOOL) haschannel_type;
- (ChatChannelType_t) channel_type;
- (CMsgTFJoinChatChannel_Builder*) setchannel_type:(ChatChannelType_t) value;
- (CMsgTFJoinChatChannel_Builder*) clearchannel_type;
@end

@interface CMsgTFLeaveChatChannel : PBGeneratedMessage {
@private
  BOOL hasChannelName_:1;
  NSString* channelName;
}
- (BOOL) hasChannelName;
@property (readonly, retain) NSString* channelName;

+ (CMsgTFLeaveChatChannel*) defaultInstance;
- (CMsgTFLeaveChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFLeaveChatChannel_Builder*) builder;
+ (CMsgTFLeaveChatChannel_Builder*) builder;
+ (CMsgTFLeaveChatChannel_Builder*) builderWithPrototype:(CMsgTFLeaveChatChannel*) prototype;
- (CMsgTFLeaveChatChannel_Builder*) toBuilder;

+ (CMsgTFLeaveChatChannel*) parseFromData:(NSData*) data;
+ (CMsgTFLeaveChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFLeaveChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFLeaveChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFLeaveChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFLeaveChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFLeaveChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFLeaveChatChannel* _builderResult;
}

- (CMsgTFLeaveChatChannel*) defaultInstance;

- (CMsgTFLeaveChatChannel_Builder*) clear;
- (CMsgTFLeaveChatChannel_Builder*) clone;

- (CMsgTFLeaveChatChannel*) build;
- (CMsgTFLeaveChatChannel*) buildPartial;

- (CMsgTFLeaveChatChannel_Builder*) mergeFrom:(CMsgTFLeaveChatChannel*) other;
- (CMsgTFLeaveChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFLeaveChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgTFLeaveChatChannel_Builder*) setChannelName:(NSString*) value;
- (CMsgTFLeaveChatChannel_Builder*) clearChannelName;
@end

@interface CMsgTFJoinChatChannelResponse : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  BOOL hasChannelName_:1;
  BOOL hasResponse_:1;
  BOOL hasMaxMembers_:1;
  uint64_t channelId;
  NSString* channelName;
  uint32_t response;
  uint32_t maxMembers;
  PBAppendableArray * membersArray;
}
- (BOOL) hasResponse;
- (BOOL) hasChannelName;
- (BOOL) hasChannelId;
- (BOOL) hasMaxMembers;
@property (readonly) uint32_t response;
@property (readonly, retain) NSString* channelName;
@property (readonly) uint64_t channelId;
@property (readonly) uint32_t maxMembers;
@property (readonly, retain) PBArray * members;
- (CMsgTFJoinChatChannelResponse_ChatMember*)membersAtIndex:(NSUInteger)index;

+ (CMsgTFJoinChatChannelResponse*) defaultInstance;
- (CMsgTFJoinChatChannelResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFJoinChatChannelResponse_Builder*) builder;
+ (CMsgTFJoinChatChannelResponse_Builder*) builder;
+ (CMsgTFJoinChatChannelResponse_Builder*) builderWithPrototype:(CMsgTFJoinChatChannelResponse*) prototype;
- (CMsgTFJoinChatChannelResponse_Builder*) toBuilder;

+ (CMsgTFJoinChatChannelResponse*) parseFromData:(NSData*) data;
+ (CMsgTFJoinChatChannelResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFJoinChatChannelResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFJoinChatChannelResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFJoinChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFJoinChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFJoinChatChannelResponse_ChatMember : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasPersonaName_:1;
  uint64_t steamId;
  NSString* personaName;
}
- (BOOL) hasSteamId;
- (BOOL) hasPersonaName;
@property (readonly) uint64_t steamId;
@property (readonly, retain) NSString* personaName;

+ (CMsgTFJoinChatChannelResponse_ChatMember*) defaultInstance;
- (CMsgTFJoinChatChannelResponse_ChatMember*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) builder;
+ (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) builder;
+ (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) builderWithPrototype:(CMsgTFJoinChatChannelResponse_ChatMember*) prototype;
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) toBuilder;

+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromData:(NSData*) data;
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFJoinChatChannelResponse_ChatMember_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFJoinChatChannelResponse_ChatMember* _builderResult;
}

- (CMsgTFJoinChatChannelResponse_ChatMember*) defaultInstance;

- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) clear;
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) clone;

- (CMsgTFJoinChatChannelResponse_ChatMember*) build;
- (CMsgTFJoinChatChannelResponse_ChatMember*) buildPartial;

- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) mergeFrom:(CMsgTFJoinChatChannelResponse_ChatMember*) other;
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) setSteamId:(uint64_t) value;
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) clearSteamId;

- (BOOL) hasPersonaName;
- (NSString*) personaName;
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) setPersonaName:(NSString*) value;
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) clearPersonaName;
@end

@interface CMsgTFJoinChatChannelResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFJoinChatChannelResponse* _builderResult;
}

- (CMsgTFJoinChatChannelResponse*) defaultInstance;

- (CMsgTFJoinChatChannelResponse_Builder*) clear;
- (CMsgTFJoinChatChannelResponse_Builder*) clone;

- (CMsgTFJoinChatChannelResponse*) build;
- (CMsgTFJoinChatChannelResponse*) buildPartial;

- (CMsgTFJoinChatChannelResponse_Builder*) mergeFrom:(CMsgTFJoinChatChannelResponse*) other;
- (CMsgTFJoinChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFJoinChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResponse;
- (uint32_t) response;
- (CMsgTFJoinChatChannelResponse_Builder*) setResponse:(uint32_t) value;
- (CMsgTFJoinChatChannelResponse_Builder*) clearResponse;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgTFJoinChatChannelResponse_Builder*) setChannelName:(NSString*) value;
- (CMsgTFJoinChatChannelResponse_Builder*) clearChannelName;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgTFJoinChatChannelResponse_Builder*) setChannelId:(uint64_t) value;
- (CMsgTFJoinChatChannelResponse_Builder*) clearChannelId;

- (BOOL) hasMaxMembers;
- (uint32_t) maxMembers;
- (CMsgTFJoinChatChannelResponse_Builder*) setMaxMembers:(uint32_t) value;
- (CMsgTFJoinChatChannelResponse_Builder*) clearMaxMembers;

- (PBAppendableArray *)members;
- (CMsgTFJoinChatChannelResponse_ChatMember*)membersAtIndex:(NSUInteger)index;
- (CMsgTFJoinChatChannelResponse_Builder *)addMembers:(CMsgTFJoinChatChannelResponse_ChatMember*)value;
- (CMsgTFJoinChatChannelResponse_Builder *)setMembersArray:(NSArray *)array;
- (CMsgTFJoinChatChannelResponse_Builder *)setMembersValues:(const CMsgTFJoinChatChannelResponse_ChatMember* *)values count:(NSUInteger)count;
- (CMsgTFJoinChatChannelResponse_Builder *)clearMembers;
@end

@interface CMsgTFOtherJoinedChatChannel : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  BOOL hasSteamId_:1;
  BOOL hasPersonaName_:1;
  uint64_t channelId;
  uint64_t steamId;
  NSString* personaName;
}
- (BOOL) hasChannelId;
- (BOOL) hasPersonaName;
- (BOOL) hasSteamId;
@property (readonly) uint64_t channelId;
@property (readonly, retain) NSString* personaName;
@property (readonly) uint64_t steamId;

+ (CMsgTFOtherJoinedChatChannel*) defaultInstance;
- (CMsgTFOtherJoinedChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFOtherJoinedChatChannel_Builder*) builder;
+ (CMsgTFOtherJoinedChatChannel_Builder*) builder;
+ (CMsgTFOtherJoinedChatChannel_Builder*) builderWithPrototype:(CMsgTFOtherJoinedChatChannel*) prototype;
- (CMsgTFOtherJoinedChatChannel_Builder*) toBuilder;

+ (CMsgTFOtherJoinedChatChannel*) parseFromData:(NSData*) data;
+ (CMsgTFOtherJoinedChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFOtherJoinedChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFOtherJoinedChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFOtherJoinedChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFOtherJoinedChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFOtherJoinedChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFOtherJoinedChatChannel* _builderResult;
}

- (CMsgTFOtherJoinedChatChannel*) defaultInstance;

- (CMsgTFOtherJoinedChatChannel_Builder*) clear;
- (CMsgTFOtherJoinedChatChannel_Builder*) clone;

- (CMsgTFOtherJoinedChatChannel*) build;
- (CMsgTFOtherJoinedChatChannel*) buildPartial;

- (CMsgTFOtherJoinedChatChannel_Builder*) mergeFrom:(CMsgTFOtherJoinedChatChannel*) other;
- (CMsgTFOtherJoinedChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFOtherJoinedChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgTFOtherJoinedChatChannel_Builder*) setChannelId:(uint64_t) value;
- (CMsgTFOtherJoinedChatChannel_Builder*) clearChannelId;

- (BOOL) hasPersonaName;
- (NSString*) personaName;
- (CMsgTFOtherJoinedChatChannel_Builder*) setPersonaName:(NSString*) value;
- (CMsgTFOtherJoinedChatChannel_Builder*) clearPersonaName;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgTFOtherJoinedChatChannel_Builder*) setSteamId:(uint64_t) value;
- (CMsgTFOtherJoinedChatChannel_Builder*) clearSteamId;
@end

@interface CMsgTFOtherLeftChatChannel : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  BOOL hasSteamId_:1;
  uint64_t channelId;
  uint64_t steamId;
}
- (BOOL) hasChannelId;
- (BOOL) hasSteamId;
@property (readonly) uint64_t channelId;
@property (readonly) uint64_t steamId;

+ (CMsgTFOtherLeftChatChannel*) defaultInstance;
- (CMsgTFOtherLeftChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFOtherLeftChatChannel_Builder*) builder;
+ (CMsgTFOtherLeftChatChannel_Builder*) builder;
+ (CMsgTFOtherLeftChatChannel_Builder*) builderWithPrototype:(CMsgTFOtherLeftChatChannel*) prototype;
- (CMsgTFOtherLeftChatChannel_Builder*) toBuilder;

+ (CMsgTFOtherLeftChatChannel*) parseFromData:(NSData*) data;
+ (CMsgTFOtherLeftChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFOtherLeftChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFOtherLeftChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFOtherLeftChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFOtherLeftChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFOtherLeftChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFOtherLeftChatChannel* _builderResult;
}

- (CMsgTFOtherLeftChatChannel*) defaultInstance;

- (CMsgTFOtherLeftChatChannel_Builder*) clear;
- (CMsgTFOtherLeftChatChannel_Builder*) clone;

- (CMsgTFOtherLeftChatChannel*) build;
- (CMsgTFOtherLeftChatChannel*) buildPartial;

- (CMsgTFOtherLeftChatChannel_Builder*) mergeFrom:(CMsgTFOtherLeftChatChannel*) other;
- (CMsgTFOtherLeftChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFOtherLeftChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgTFOtherLeftChatChannel_Builder*) setChannelId:(uint64_t) value;
- (CMsgTFOtherLeftChatChannel_Builder*) clearChannelId;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgTFOtherLeftChatChannel_Builder*) setSteamId:(uint64_t) value;
- (CMsgTFOtherLeftChatChannel_Builder*) clearSteamId;
@end

@interface CMsgTFRequestDefaultChatChannel : PBGeneratedMessage {
@private
}

+ (CMsgTFRequestDefaultChatChannel*) defaultInstance;
- (CMsgTFRequestDefaultChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFRequestDefaultChatChannel_Builder*) builder;
+ (CMsgTFRequestDefaultChatChannel_Builder*) builder;
+ (CMsgTFRequestDefaultChatChannel_Builder*) builderWithPrototype:(CMsgTFRequestDefaultChatChannel*) prototype;
- (CMsgTFRequestDefaultChatChannel_Builder*) toBuilder;

+ (CMsgTFRequestDefaultChatChannel*) parseFromData:(NSData*) data;
+ (CMsgTFRequestDefaultChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestDefaultChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFRequestDefaultChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestDefaultChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFRequestDefaultChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFRequestDefaultChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFRequestDefaultChatChannel* _builderResult;
}

- (CMsgTFRequestDefaultChatChannel*) defaultInstance;

- (CMsgTFRequestDefaultChatChannel_Builder*) clear;
- (CMsgTFRequestDefaultChatChannel_Builder*) clone;

- (CMsgTFRequestDefaultChatChannel*) build;
- (CMsgTFRequestDefaultChatChannel*) buildPartial;

- (CMsgTFRequestDefaultChatChannel_Builder*) mergeFrom:(CMsgTFRequestDefaultChatChannel*) other;
- (CMsgTFRequestDefaultChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFRequestDefaultChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFRequestDefaultChatChannelResponse : PBGeneratedMessage {
@private
  BOOL hasChannelId_:1;
  BOOL hasChannelName_:1;
  uint64_t channelId;
  NSString* channelName;
}
- (BOOL) hasChannelName;
- (BOOL) hasChannelId;
@property (readonly, retain) NSString* channelName;
@property (readonly) uint64_t channelId;

+ (CMsgTFRequestDefaultChatChannelResponse*) defaultInstance;
- (CMsgTFRequestDefaultChatChannelResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) builder;
+ (CMsgTFRequestDefaultChatChannelResponse_Builder*) builder;
+ (CMsgTFRequestDefaultChatChannelResponse_Builder*) builderWithPrototype:(CMsgTFRequestDefaultChatChannelResponse*) prototype;
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) toBuilder;

+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromData:(NSData*) data;
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFRequestDefaultChatChannelResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFRequestDefaultChatChannelResponse* _builderResult;
}

- (CMsgTFRequestDefaultChatChannelResponse*) defaultInstance;

- (CMsgTFRequestDefaultChatChannelResponse_Builder*) clear;
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) clone;

- (CMsgTFRequestDefaultChatChannelResponse*) build;
- (CMsgTFRequestDefaultChatChannelResponse*) buildPartial;

- (CMsgTFRequestDefaultChatChannelResponse_Builder*) mergeFrom:(CMsgTFRequestDefaultChatChannelResponse*) other;
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) setChannelName:(NSString*) value;
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) clearChannelName;

- (BOOL) hasChannelId;
- (uint64_t) channelId;
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) setChannelId:(uint64_t) value;
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) clearChannelId;
@end

@interface CMsgTFRequestChatChannelList : PBGeneratedMessage {
@private
}

+ (CMsgTFRequestChatChannelList*) defaultInstance;
- (CMsgTFRequestChatChannelList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFRequestChatChannelList_Builder*) builder;
+ (CMsgTFRequestChatChannelList_Builder*) builder;
+ (CMsgTFRequestChatChannelList_Builder*) builderWithPrototype:(CMsgTFRequestChatChannelList*) prototype;
- (CMsgTFRequestChatChannelList_Builder*) toBuilder;

+ (CMsgTFRequestChatChannelList*) parseFromData:(NSData*) data;
+ (CMsgTFRequestChatChannelList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestChatChannelList*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFRequestChatChannelList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestChatChannelList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFRequestChatChannelList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFRequestChatChannelList_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFRequestChatChannelList* _builderResult;
}

- (CMsgTFRequestChatChannelList*) defaultInstance;

- (CMsgTFRequestChatChannelList_Builder*) clear;
- (CMsgTFRequestChatChannelList_Builder*) clone;

- (CMsgTFRequestChatChannelList*) build;
- (CMsgTFRequestChatChannelList*) buildPartial;

- (CMsgTFRequestChatChannelList_Builder*) mergeFrom:(CMsgTFRequestChatChannelList*) other;
- (CMsgTFRequestChatChannelList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFRequestChatChannelList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFRequestChatChannelListResponse : PBGeneratedMessage {
@private
  PBAppendableArray * channelsArray;
}
@property (readonly, retain) PBArray * channels;
- (CMsgTFRequestChatChannelListResponse_ChatChannel*)channelsAtIndex:(NSUInteger)index;

+ (CMsgTFRequestChatChannelListResponse*) defaultInstance;
- (CMsgTFRequestChatChannelListResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFRequestChatChannelListResponse_Builder*) builder;
+ (CMsgTFRequestChatChannelListResponse_Builder*) builder;
+ (CMsgTFRequestChatChannelListResponse_Builder*) builderWithPrototype:(CMsgTFRequestChatChannelListResponse*) prototype;
- (CMsgTFRequestChatChannelListResponse_Builder*) toBuilder;

+ (CMsgTFRequestChatChannelListResponse*) parseFromData:(NSData*) data;
+ (CMsgTFRequestChatChannelListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestChatChannelListResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFRequestChatChannelListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestChatChannelListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFRequestChatChannelListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFRequestChatChannelListResponse_ChatChannel : PBGeneratedMessage {
@private
  BOOL hasChannelName_:1;
  BOOL hasNumMembers_:1;
  BOOL haschannel_type_:1;
  NSString* channelName;
  uint32_t numMembers;
  ChatChannelType_t channel_type;
}
- (BOOL) hasChannelName;
- (BOOL) hasNumMembers;
- (BOOL) haschannel_type;
@property (readonly, retain) NSString* channelName;
@property (readonly) uint32_t numMembers;
@property (readonly) ChatChannelType_t channel_type;

+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) defaultInstance;
- (CMsgTFRequestChatChannelListResponse_ChatChannel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) builder;
+ (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) builder;
+ (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) builderWithPrototype:(CMsgTFRequestChatChannelListResponse_ChatChannel*) prototype;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) toBuilder;

+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromData:(NSData*) data;
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgTFRequestChatChannelListResponse_ChatChannel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFRequestChatChannelListResponse_ChatChannel* _builderResult;
}

- (CMsgTFRequestChatChannelListResponse_ChatChannel*) defaultInstance;

- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clear;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clone;

- (CMsgTFRequestChatChannelListResponse_ChatChannel*) build;
- (CMsgTFRequestChatChannelListResponse_ChatChannel*) buildPartial;

- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) mergeFrom:(CMsgTFRequestChatChannelListResponse_ChatChannel*) other;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasChannelName;
- (NSString*) channelName;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) setChannelName:(NSString*) value;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clearChannelName;

- (BOOL) hasNumMembers;
- (uint32_t) numMembers;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) setNumMembers:(uint32_t) value;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clearNumMembers;

- (BOOL) haschannel_type;
- (ChatChannelType_t) channel_type;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) setchannel_type:(ChatChannelType_t) value;
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clearchannel_type;
@end

@interface CMsgTFRequestChatChannelListResponse_Builder : PBGeneratedMessage_Builder {
@private
  CMsgTFRequestChatChannelListResponse* _builderResult;
}

- (CMsgTFRequestChatChannelListResponse*) defaultInstance;

- (CMsgTFRequestChatChannelListResponse_Builder*) clear;
- (CMsgTFRequestChatChannelListResponse_Builder*) clone;

- (CMsgTFRequestChatChannelListResponse*) build;
- (CMsgTFRequestChatChannelListResponse*) buildPartial;

- (CMsgTFRequestChatChannelListResponse_Builder*) mergeFrom:(CMsgTFRequestChatChannelListResponse*) other;
- (CMsgTFRequestChatChannelListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgTFRequestChatChannelListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)channels;
- (CMsgTFRequestChatChannelListResponse_ChatChannel*)channelsAtIndex:(NSUInteger)index;
- (CMsgTFRequestChatChannelListResponse_Builder *)addChannels:(CMsgTFRequestChatChannelListResponse_ChatChannel*)value;
- (CMsgTFRequestChatChannelListResponse_Builder *)setChannelsArray:(NSArray *)array;
- (CMsgTFRequestChatChannelListResponse_Builder *)setChannelsValues:(const CMsgTFRequestChatChannelListResponse_ChatChannel* *)values count:(NSUInteger)count;
- (CMsgTFRequestChatChannelListResponse_Builder *)clearChannels;
@end

@interface CMsgGameServerMatchmakingStatus : PBGeneratedMessage {
@private
  BOOL hasServerDedicated_:1;
  BOOL hasServerTrusted_:1;
  BOOL hasServerLoadavg_:1;
  BOOL hasMap_:1;
  BOOL hasTags_:1;
  BOOL hasMvmCreditsDropped_:1;
  BOOL hasMvmCreditsAcquired_:1;
  BOOL hasMvmWave_:1;
  BOOL hasStrict_:1;
  BOOL hasServerRegion_:1;
  BOOL hasSlotsFree_:1;
  BOOL hasMaxPlayers_:1;
  BOOL hasNumSpectators_:1;
  BOOL hasBotCount_:1;
  BOOL hasServerVersion_:1;
  BOOL hasgame_state_:1;
  BOOL hasevent_:1;
  BOOL hasmatchmaking_mode_:1;
  BOOL hasmatchmaking_state_:1;
  BOOL serverDedicated_:1;
  BOOL serverTrusted_:1;
  Float32 serverLoadavg;
  NSString* map;
  NSString* tags;
  uint32_t mvmCreditsDropped;
  uint32_t mvmCreditsAcquired;
  uint32_t mvmWave;
  uint32_t strict;
  uint32_t serverRegion;
  uint32_t slotsFree;
  uint32_t maxPlayers;
  uint32_t numSpectators;
  uint32_t botCount;
  uint32_t serverVersion;
  TF_GC_GameState game_state;
  CMsgGameServerMatchmakingStatus_Event event;
  TF_MatchmakingMode matchmaking_mode;
  ServerMatchmakingState matchmaking_state;
  PBAppendableArray * playersArray;
}
- (BOOL) hasServerVersion;
- (BOOL) hasmatchmaking_state;
- (BOOL) hasmatchmaking_mode;
- (BOOL) hasMap;
- (BOOL) hasTags;
- (BOOL) hasBotCount;
- (BOOL) hasNumSpectators;
- (BOOL) hasMaxPlayers;
- (BOOL) hasSlotsFree;
- (BOOL) hasServerRegion;
- (BOOL) hasServerLoadavg;
- (BOOL) hasServerTrusted;
- (BOOL) hasServerDedicated;
- (BOOL) hasStrict;
- (BOOL) hasgame_state;
- (BOOL) hasevent;
- (BOOL) hasMvmWave;
- (BOOL) hasMvmCreditsAcquired;
- (BOOL) hasMvmCreditsDropped;
@property (readonly) uint32_t serverVersion;
@property (readonly) ServerMatchmakingState matchmaking_state;
@property (readonly) TF_MatchmakingMode matchmaking_mode;
@property (readonly, retain) NSString* map;
@property (readonly, retain) NSString* tags;
@property (readonly) uint32_t botCount;
@property (readonly) uint32_t numSpectators;
@property (readonly) uint32_t maxPlayers;
@property (readonly) uint32_t slotsFree;
@property (readonly) uint32_t serverRegion;
@property (readonly) Float32 serverLoadavg;
- (BOOL) serverTrusted;
- (BOOL) serverDedicated;
@property (readonly) uint32_t strict;
@property (readonly, retain) PBArray * players;
@property (readonly) TF_GC_GameState game_state;
@property (readonly) CMsgGameServerMatchmakingStatus_Event event;
@property (readonly) uint32_t mvmWave;
@property (readonly) uint32_t mvmCreditsAcquired;
@property (readonly) uint32_t mvmCreditsDropped;
- (CMsgGameServerMatchmakingStatus_Player*)playersAtIndex:(NSUInteger)index;

+ (CMsgGameServerMatchmakingStatus*) defaultInstance;
- (CMsgGameServerMatchmakingStatus*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameServerMatchmakingStatus_Builder*) builder;
+ (CMsgGameServerMatchmakingStatus_Builder*) builder;
+ (CMsgGameServerMatchmakingStatus_Builder*) builderWithPrototype:(CMsgGameServerMatchmakingStatus*) prototype;
- (CMsgGameServerMatchmakingStatus_Builder*) toBuilder;

+ (CMsgGameServerMatchmakingStatus*) parseFromData:(NSData*) data;
+ (CMsgGameServerMatchmakingStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerMatchmakingStatus*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameServerMatchmakingStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerMatchmakingStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameServerMatchmakingStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameServerMatchmakingStatus_Player : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasconnect_state_:1;
  uint64_t steamId;
  CMsgGameServerMatchmakingStatus_PlayerConnectState connect_state;
}
- (BOOL) hasSteamId;
- (BOOL) hasconnect_state;
@property (readonly) uint64_t steamId;
@property (readonly) CMsgGameServerMatchmakingStatus_PlayerConnectState connect_state;

+ (CMsgGameServerMatchmakingStatus_Player*) defaultInstance;
- (CMsgGameServerMatchmakingStatus_Player*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameServerMatchmakingStatus_Player_Builder*) builder;
+ (CMsgGameServerMatchmakingStatus_Player_Builder*) builder;
+ (CMsgGameServerMatchmakingStatus_Player_Builder*) builderWithPrototype:(CMsgGameServerMatchmakingStatus_Player*) prototype;
- (CMsgGameServerMatchmakingStatus_Player_Builder*) toBuilder;

+ (CMsgGameServerMatchmakingStatus_Player*) parseFromData:(NSData*) data;
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameServerMatchmakingStatus_Player_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameServerMatchmakingStatus_Player* _builderResult;
}

- (CMsgGameServerMatchmakingStatus_Player*) defaultInstance;

- (CMsgGameServerMatchmakingStatus_Player_Builder*) clear;
- (CMsgGameServerMatchmakingStatus_Player_Builder*) clone;

- (CMsgGameServerMatchmakingStatus_Player*) build;
- (CMsgGameServerMatchmakingStatus_Player*) buildPartial;

- (CMsgGameServerMatchmakingStatus_Player_Builder*) mergeFrom:(CMsgGameServerMatchmakingStatus_Player*) other;
- (CMsgGameServerMatchmakingStatus_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameServerMatchmakingStatus_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgGameServerMatchmakingStatus_Player_Builder*) setSteamId:(uint64_t) value;
- (CMsgGameServerMatchmakingStatus_Player_Builder*) clearSteamId;

- (BOOL) hasconnect_state;
- (CMsgGameServerMatchmakingStatus_PlayerConnectState) connect_state;
- (CMsgGameServerMatchmakingStatus_Player_Builder*) setconnect_state:(CMsgGameServerMatchmakingStatus_PlayerConnectState) value;
- (CMsgGameServerMatchmakingStatus_Player_Builder*) clearconnect_state;
@end

@interface CMsgGameServerMatchmakingStatus_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameServerMatchmakingStatus* _builderResult;
}

- (CMsgGameServerMatchmakingStatus*) defaultInstance;

- (CMsgGameServerMatchmakingStatus_Builder*) clear;
- (CMsgGameServerMatchmakingStatus_Builder*) clone;

- (CMsgGameServerMatchmakingStatus*) build;
- (CMsgGameServerMatchmakingStatus*) buildPartial;

- (CMsgGameServerMatchmakingStatus_Builder*) mergeFrom:(CMsgGameServerMatchmakingStatus*) other;
- (CMsgGameServerMatchmakingStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameServerMatchmakingStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasServerVersion;
- (uint32_t) serverVersion;
- (CMsgGameServerMatchmakingStatus_Builder*) setServerVersion:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerVersion;

- (BOOL) hasmatchmaking_state;
- (ServerMatchmakingState) matchmaking_state;
- (CMsgGameServerMatchmakingStatus_Builder*) setmatchmaking_state:(ServerMatchmakingState) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearmatchmaking_state;

- (BOOL) hasmatchmaking_mode;
- (TF_MatchmakingMode) matchmaking_mode;
- (CMsgGameServerMatchmakingStatus_Builder*) setmatchmaking_mode:(TF_MatchmakingMode) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearmatchmaking_mode;

- (BOOL) hasMap;
- (NSString*) map;
- (CMsgGameServerMatchmakingStatus_Builder*) setMap:(NSString*) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearMap;

- (BOOL) hasTags;
- (NSString*) tags;
- (CMsgGameServerMatchmakingStatus_Builder*) setTags:(NSString*) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearTags;

- (BOOL) hasBotCount;
- (uint32_t) botCount;
- (CMsgGameServerMatchmakingStatus_Builder*) setBotCount:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearBotCount;

- (BOOL) hasNumSpectators;
- (uint32_t) numSpectators;
- (CMsgGameServerMatchmakingStatus_Builder*) setNumSpectators:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearNumSpectators;

- (BOOL) hasMaxPlayers;
- (uint32_t) maxPlayers;
- (CMsgGameServerMatchmakingStatus_Builder*) setMaxPlayers:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearMaxPlayers;

- (BOOL) hasSlotsFree;
- (uint32_t) slotsFree;
- (CMsgGameServerMatchmakingStatus_Builder*) setSlotsFree:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearSlotsFree;

- (BOOL) hasServerRegion;
- (uint32_t) serverRegion;
- (CMsgGameServerMatchmakingStatus_Builder*) setServerRegion:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerRegion;

- (BOOL) hasServerLoadavg;
- (Float32) serverLoadavg;
- (CMsgGameServerMatchmakingStatus_Builder*) setServerLoadavg:(Float32) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerLoadavg;

- (BOOL) hasServerTrusted;
- (BOOL) serverTrusted;
- (CMsgGameServerMatchmakingStatus_Builder*) setServerTrusted:(BOOL) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerTrusted;

- (BOOL) hasServerDedicated;
- (BOOL) serverDedicated;
- (CMsgGameServerMatchmakingStatus_Builder*) setServerDedicated:(BOOL) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerDedicated;

- (BOOL) hasStrict;
- (uint32_t) strict;
- (CMsgGameServerMatchmakingStatus_Builder*) setStrict:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearStrict;

- (PBAppendableArray *)players;
- (CMsgGameServerMatchmakingStatus_Player*)playersAtIndex:(NSUInteger)index;
- (CMsgGameServerMatchmakingStatus_Builder *)addPlayers:(CMsgGameServerMatchmakingStatus_Player*)value;
- (CMsgGameServerMatchmakingStatus_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgGameServerMatchmakingStatus_Builder *)setPlayersValues:(const CMsgGameServerMatchmakingStatus_Player* *)values count:(NSUInteger)count;
- (CMsgGameServerMatchmakingStatus_Builder *)clearPlayers;

- (BOOL) hasgame_state;
- (TF_GC_GameState) game_state;
- (CMsgGameServerMatchmakingStatus_Builder*) setgame_state:(TF_GC_GameState) value;
- (CMsgGameServerMatchmakingStatus_Builder*) cleargame_state;

- (BOOL) hasevent;
- (CMsgGameServerMatchmakingStatus_Event) event;
- (CMsgGameServerMatchmakingStatus_Builder*) setevent:(CMsgGameServerMatchmakingStatus_Event) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearevent;

- (BOOL) hasMvmWave;
- (uint32_t) mvmWave;
- (CMsgGameServerMatchmakingStatus_Builder*) setMvmWave:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearMvmWave;

- (BOOL) hasMvmCreditsAcquired;
- (uint32_t) mvmCreditsAcquired;
- (CMsgGameServerMatchmakingStatus_Builder*) setMvmCreditsAcquired:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearMvmCreditsAcquired;

- (BOOL) hasMvmCreditsDropped;
- (uint32_t) mvmCreditsDropped;
- (CMsgGameServerMatchmakingStatus_Builder*) setMvmCreditsDropped:(uint32_t) value;
- (CMsgGameServerMatchmakingStatus_Builder*) clearMvmCreditsDropped;
@end

@interface CMsgMatchmakingProgress : PBGeneratedMessage {
@private
  BOOL hasAvgWaitTimeNew_:1;
  BOOL hasAvgWaitTimeJoinLate_:1;
  BOOL hasYourWaitTime_:1;
  BOOL hasMatchingWorldwideSearchingPlayers_:1;
  BOOL hasMatchingNearYouSearchingPlayers_:1;
  BOOL hasTotalWorldwideSearchingPlayers_:1;
  BOOL hasTotalNearYouSearchingPlayers_:1;
  BOOL hasMatchingWorldwideActivePlayers_:1;
  BOOL hasMatchingNearYouActivePlayers_:1;
  BOOL hasTotalWorldwideActivePlayers_:1;
  BOOL hasTotalNearYouActivePlayers_:1;
  BOOL hasMatchingWorldwideEmptyGameservers_:1;
  BOOL hasMatchingNearYouEmptyGameservers_:1;
  BOOL hasTotalWorldwideEmptyGameservers_:1;
  BOOL hasTotalNearYouEmptyGameservers_:1;
  BOOL hasUrgencyPct_:1;
  uint32_t avgWaitTimeNew;
  uint32_t avgWaitTimeJoinLate;
  uint32_t yourWaitTime;
  uint32_t matchingWorldwideSearchingPlayers;
  uint32_t matchingNearYouSearchingPlayers;
  uint32_t totalWorldwideSearchingPlayers;
  uint32_t totalNearYouSearchingPlayers;
  uint32_t matchingWorldwideActivePlayers;
  uint32_t matchingNearYouActivePlayers;
  uint32_t totalWorldwideActivePlayers;
  uint32_t totalNearYouActivePlayers;
  uint32_t matchingWorldwideEmptyGameservers;
  uint32_t matchingNearYouEmptyGameservers;
  uint32_t totalWorldwideEmptyGameservers;
  uint32_t totalNearYouEmptyGameservers;
  uint32_t urgencyPct;
}
- (BOOL) hasAvgWaitTimeNew;
- (BOOL) hasAvgWaitTimeJoinLate;
- (BOOL) hasYourWaitTime;
- (BOOL) hasMatchingWorldwideSearchingPlayers;
- (BOOL) hasMatchingNearYouSearchingPlayers;
- (BOOL) hasTotalWorldwideSearchingPlayers;
- (BOOL) hasTotalNearYouSearchingPlayers;
- (BOOL) hasMatchingWorldwideActivePlayers;
- (BOOL) hasMatchingNearYouActivePlayers;
- (BOOL) hasTotalWorldwideActivePlayers;
- (BOOL) hasTotalNearYouActivePlayers;
- (BOOL) hasMatchingWorldwideEmptyGameservers;
- (BOOL) hasMatchingNearYouEmptyGameservers;
- (BOOL) hasTotalWorldwideEmptyGameservers;
- (BOOL) hasTotalNearYouEmptyGameservers;
- (BOOL) hasUrgencyPct;
@property (readonly) uint32_t avgWaitTimeNew;
@property (readonly) uint32_t avgWaitTimeJoinLate;
@property (readonly) uint32_t yourWaitTime;
@property (readonly) uint32_t matchingWorldwideSearchingPlayers;
@property (readonly) uint32_t matchingNearYouSearchingPlayers;
@property (readonly) uint32_t totalWorldwideSearchingPlayers;
@property (readonly) uint32_t totalNearYouSearchingPlayers;
@property (readonly) uint32_t matchingWorldwideActivePlayers;
@property (readonly) uint32_t matchingNearYouActivePlayers;
@property (readonly) uint32_t totalWorldwideActivePlayers;
@property (readonly) uint32_t totalNearYouActivePlayers;
@property (readonly) uint32_t matchingWorldwideEmptyGameservers;
@property (readonly) uint32_t matchingNearYouEmptyGameservers;
@property (readonly) uint32_t totalWorldwideEmptyGameservers;
@property (readonly) uint32_t totalNearYouEmptyGameservers;
@property (readonly) uint32_t urgencyPct;

+ (CMsgMatchmakingProgress*) defaultInstance;
- (CMsgMatchmakingProgress*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMatchmakingProgress_Builder*) builder;
+ (CMsgMatchmakingProgress_Builder*) builder;
+ (CMsgMatchmakingProgress_Builder*) builderWithPrototype:(CMsgMatchmakingProgress*) prototype;
- (CMsgMatchmakingProgress_Builder*) toBuilder;

+ (CMsgMatchmakingProgress*) parseFromData:(NSData*) data;
+ (CMsgMatchmakingProgress*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingProgress*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMatchmakingProgress*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMatchmakingProgress*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMatchmakingProgress*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMatchmakingProgress_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMatchmakingProgress* _builderResult;
}

- (CMsgMatchmakingProgress*) defaultInstance;

- (CMsgMatchmakingProgress_Builder*) clear;
- (CMsgMatchmakingProgress_Builder*) clone;

- (CMsgMatchmakingProgress*) build;
- (CMsgMatchmakingProgress*) buildPartial;

- (CMsgMatchmakingProgress_Builder*) mergeFrom:(CMsgMatchmakingProgress*) other;
- (CMsgMatchmakingProgress_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMatchmakingProgress_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasAvgWaitTimeNew;
- (uint32_t) avgWaitTimeNew;
- (CMsgMatchmakingProgress_Builder*) setAvgWaitTimeNew:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearAvgWaitTimeNew;

- (BOOL) hasAvgWaitTimeJoinLate;
- (uint32_t) avgWaitTimeJoinLate;
- (CMsgMatchmakingProgress_Builder*) setAvgWaitTimeJoinLate:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearAvgWaitTimeJoinLate;

- (BOOL) hasYourWaitTime;
- (uint32_t) yourWaitTime;
- (CMsgMatchmakingProgress_Builder*) setYourWaitTime:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearYourWaitTime;

- (BOOL) hasMatchingWorldwideSearchingPlayers;
- (uint32_t) matchingWorldwideSearchingPlayers;
- (CMsgMatchmakingProgress_Builder*) setMatchingWorldwideSearchingPlayers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearMatchingWorldwideSearchingPlayers;

- (BOOL) hasMatchingNearYouSearchingPlayers;
- (uint32_t) matchingNearYouSearchingPlayers;
- (CMsgMatchmakingProgress_Builder*) setMatchingNearYouSearchingPlayers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearMatchingNearYouSearchingPlayers;

- (BOOL) hasTotalWorldwideSearchingPlayers;
- (uint32_t) totalWorldwideSearchingPlayers;
- (CMsgMatchmakingProgress_Builder*) setTotalWorldwideSearchingPlayers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearTotalWorldwideSearchingPlayers;

- (BOOL) hasTotalNearYouSearchingPlayers;
- (uint32_t) totalNearYouSearchingPlayers;
- (CMsgMatchmakingProgress_Builder*) setTotalNearYouSearchingPlayers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearTotalNearYouSearchingPlayers;

- (BOOL) hasMatchingWorldwideActivePlayers;
- (uint32_t) matchingWorldwideActivePlayers;
- (CMsgMatchmakingProgress_Builder*) setMatchingWorldwideActivePlayers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearMatchingWorldwideActivePlayers;

- (BOOL) hasMatchingNearYouActivePlayers;
- (uint32_t) matchingNearYouActivePlayers;
- (CMsgMatchmakingProgress_Builder*) setMatchingNearYouActivePlayers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearMatchingNearYouActivePlayers;

- (BOOL) hasTotalWorldwideActivePlayers;
- (uint32_t) totalWorldwideActivePlayers;
- (CMsgMatchmakingProgress_Builder*) setTotalWorldwideActivePlayers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearTotalWorldwideActivePlayers;

- (BOOL) hasTotalNearYouActivePlayers;
- (uint32_t) totalNearYouActivePlayers;
- (CMsgMatchmakingProgress_Builder*) setTotalNearYouActivePlayers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearTotalNearYouActivePlayers;

- (BOOL) hasMatchingWorldwideEmptyGameservers;
- (uint32_t) matchingWorldwideEmptyGameservers;
- (CMsgMatchmakingProgress_Builder*) setMatchingWorldwideEmptyGameservers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearMatchingWorldwideEmptyGameservers;

- (BOOL) hasMatchingNearYouEmptyGameservers;
- (uint32_t) matchingNearYouEmptyGameservers;
- (CMsgMatchmakingProgress_Builder*) setMatchingNearYouEmptyGameservers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearMatchingNearYouEmptyGameservers;

- (BOOL) hasTotalWorldwideEmptyGameservers;
- (uint32_t) totalWorldwideEmptyGameservers;
- (CMsgMatchmakingProgress_Builder*) setTotalWorldwideEmptyGameservers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearTotalWorldwideEmptyGameservers;

- (BOOL) hasTotalNearYouEmptyGameservers;
- (uint32_t) totalNearYouEmptyGameservers;
- (CMsgMatchmakingProgress_Builder*) setTotalNearYouEmptyGameservers:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearTotalNearYouEmptyGameservers;

- (BOOL) hasUrgencyPct;
- (uint32_t) urgencyPct;
- (CMsgMatchmakingProgress_Builder*) setUrgencyPct:(uint32_t) value;
- (CMsgMatchmakingProgress_Builder*) clearUrgencyPct;
@end

@interface CMsgMvMVictoryInfo : PBGeneratedMessage {
@private
  BOOL hasTourName_:1;
  BOOL hasMissionName_:1;
  NSString* tourName;
  NSString* missionName;
  PBAppendableArray * playersArray;
}
- (BOOL) hasTourName;
- (BOOL) hasMissionName;
@property (readonly, retain) PBArray * players;
@property (readonly, retain) NSString* tourName;
@property (readonly, retain) NSString* missionName;
- (CMsgMvMVictoryInfo_Player*)playersAtIndex:(NSUInteger)index;

+ (CMsgMvMVictoryInfo*) defaultInstance;
- (CMsgMvMVictoryInfo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMvMVictoryInfo_Builder*) builder;
+ (CMsgMvMVictoryInfo_Builder*) builder;
+ (CMsgMvMVictoryInfo_Builder*) builderWithPrototype:(CMsgMvMVictoryInfo*) prototype;
- (CMsgMvMVictoryInfo_Builder*) toBuilder;

+ (CMsgMvMVictoryInfo*) parseFromData:(NSData*) data;
+ (CMsgMvMVictoryInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictoryInfo*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMvMVictoryInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictoryInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMvMVictoryInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMvMVictoryInfo_Item : PBGeneratedMessage {
@private
  BOOL hasSquadSurplusClaimerSteamId_:1;
  BOOL hasItemData_:1;
  BOOL hasgrant_reason_:1;
  uint64_t squadSurplusClaimerSteamId;
  NSData* itemData;
  CMsgMvMVictoryInfo_GrantReason grant_reason;
}
- (BOOL) hasgrant_reason;
- (BOOL) hasItemData;
- (BOOL) hasSquadSurplusClaimerSteamId;
@property (readonly) CMsgMvMVictoryInfo_GrantReason grant_reason;
@property (readonly, retain) NSData* itemData;
@property (readonly) uint64_t squadSurplusClaimerSteamId;

+ (CMsgMvMVictoryInfo_Item*) defaultInstance;
- (CMsgMvMVictoryInfo_Item*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMvMVictoryInfo_Item_Builder*) builder;
+ (CMsgMvMVictoryInfo_Item_Builder*) builder;
+ (CMsgMvMVictoryInfo_Item_Builder*) builderWithPrototype:(CMsgMvMVictoryInfo_Item*) prototype;
- (CMsgMvMVictoryInfo_Item_Builder*) toBuilder;

+ (CMsgMvMVictoryInfo_Item*) parseFromData:(NSData*) data;
+ (CMsgMvMVictoryInfo_Item*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictoryInfo_Item*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMvMVictoryInfo_Item*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictoryInfo_Item*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMvMVictoryInfo_Item*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMvMVictoryInfo_Item_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMvMVictoryInfo_Item* _builderResult;
}

- (CMsgMvMVictoryInfo_Item*) defaultInstance;

- (CMsgMvMVictoryInfo_Item_Builder*) clear;
- (CMsgMvMVictoryInfo_Item_Builder*) clone;

- (CMsgMvMVictoryInfo_Item*) build;
- (CMsgMvMVictoryInfo_Item*) buildPartial;

- (CMsgMvMVictoryInfo_Item_Builder*) mergeFrom:(CMsgMvMVictoryInfo_Item*) other;
- (CMsgMvMVictoryInfo_Item_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMvMVictoryInfo_Item_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasgrant_reason;
- (CMsgMvMVictoryInfo_GrantReason) grant_reason;
- (CMsgMvMVictoryInfo_Item_Builder*) setgrant_reason:(CMsgMvMVictoryInfo_GrantReason) value;
- (CMsgMvMVictoryInfo_Item_Builder*) cleargrant_reason;

- (BOOL) hasItemData;
- (NSData*) itemData;
- (CMsgMvMVictoryInfo_Item_Builder*) setItemData:(NSData*) value;
- (CMsgMvMVictoryInfo_Item_Builder*) clearItemData;

- (BOOL) hasSquadSurplusClaimerSteamId;
- (uint64_t) squadSurplusClaimerSteamId;
- (CMsgMvMVictoryInfo_Item_Builder*) setSquadSurplusClaimerSteamId:(uint64_t) value;
- (CMsgMvMVictoryInfo_Item_Builder*) clearSquadSurplusClaimerSteamId;
@end

@interface CMsgMvMVictoryInfo_Player : PBGeneratedMessage {
@private
  BOOL hasBadgeGranted_:1;
  BOOL hasBadgeProgressUpdated_:1;
  BOOL hasBadgeLeveled_:1;
  BOOL hasVoucherMissing_:1;
  BOOL hasSteamId_:1;
  BOOL hasBadgeLevel_:1;
  BOOL hasBadgeProgressBits_:1;
  BOOL badgeGranted_:1;
  BOOL badgeProgressUpdated_:1;
  BOOL badgeLeveled_:1;
  BOOL voucherMissing_:1;
  uint64_t steamId;
  uint32_t badgeLevel;
  uint32_t badgeProgressBits;
  PBAppendableArray * itemsArray;
}
- (BOOL) hasSteamId;
- (BOOL) hasBadgeGranted;
- (BOOL) hasBadgeProgressUpdated;
- (BOOL) hasBadgeLeveled;
- (BOOL) hasBadgeLevel;
- (BOOL) hasBadgeProgressBits;
- (BOOL) hasVoucherMissing;
@property (readonly) uint64_t steamId;
- (BOOL) badgeGranted;
- (BOOL) badgeProgressUpdated;
- (BOOL) badgeLeveled;
@property (readonly) uint32_t badgeLevel;
@property (readonly) uint32_t badgeProgressBits;
@property (readonly, retain) PBArray * items;
- (BOOL) voucherMissing;
- (CMsgMvMVictoryInfo_Item*)itemsAtIndex:(NSUInteger)index;

+ (CMsgMvMVictoryInfo_Player*) defaultInstance;
- (CMsgMvMVictoryInfo_Player*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMvMVictoryInfo_Player_Builder*) builder;
+ (CMsgMvMVictoryInfo_Player_Builder*) builder;
+ (CMsgMvMVictoryInfo_Player_Builder*) builderWithPrototype:(CMsgMvMVictoryInfo_Player*) prototype;
- (CMsgMvMVictoryInfo_Player_Builder*) toBuilder;

+ (CMsgMvMVictoryInfo_Player*) parseFromData:(NSData*) data;
+ (CMsgMvMVictoryInfo_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictoryInfo_Player*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMvMVictoryInfo_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictoryInfo_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMvMVictoryInfo_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMvMVictoryInfo_Player_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMvMVictoryInfo_Player* _builderResult;
}

- (CMsgMvMVictoryInfo_Player*) defaultInstance;

- (CMsgMvMVictoryInfo_Player_Builder*) clear;
- (CMsgMvMVictoryInfo_Player_Builder*) clone;

- (CMsgMvMVictoryInfo_Player*) build;
- (CMsgMvMVictoryInfo_Player*) buildPartial;

- (CMsgMvMVictoryInfo_Player_Builder*) mergeFrom:(CMsgMvMVictoryInfo_Player*) other;
- (CMsgMvMVictoryInfo_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMvMVictoryInfo_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgMvMVictoryInfo_Player_Builder*) setSteamId:(uint64_t) value;
- (CMsgMvMVictoryInfo_Player_Builder*) clearSteamId;

- (BOOL) hasBadgeGranted;
- (BOOL) badgeGranted;
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeGranted:(BOOL) value;
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeGranted;

- (BOOL) hasBadgeProgressUpdated;
- (BOOL) badgeProgressUpdated;
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeProgressUpdated:(BOOL) value;
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeProgressUpdated;

- (BOOL) hasBadgeLeveled;
- (BOOL) badgeLeveled;
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeLeveled:(BOOL) value;
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeLeveled;

- (BOOL) hasBadgeLevel;
- (uint32_t) badgeLevel;
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeLevel:(uint32_t) value;
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeLevel;

- (BOOL) hasBadgeProgressBits;
- (uint32_t) badgeProgressBits;
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeProgressBits:(uint32_t) value;
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeProgressBits;

- (PBAppendableArray *)items;
- (CMsgMvMVictoryInfo_Item*)itemsAtIndex:(NSUInteger)index;
- (CMsgMvMVictoryInfo_Player_Builder *)addItems:(CMsgMvMVictoryInfo_Item*)value;
- (CMsgMvMVictoryInfo_Player_Builder *)setItemsArray:(NSArray *)array;
- (CMsgMvMVictoryInfo_Player_Builder *)setItemsValues:(const CMsgMvMVictoryInfo_Item* *)values count:(NSUInteger)count;
- (CMsgMvMVictoryInfo_Player_Builder *)clearItems;

- (BOOL) hasVoucherMissing;
- (BOOL) voucherMissing;
- (CMsgMvMVictoryInfo_Player_Builder*) setVoucherMissing:(BOOL) value;
- (CMsgMvMVictoryInfo_Player_Builder*) clearVoucherMissing;
@end

@interface CMsgMvMVictoryInfo_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMvMVictoryInfo* _builderResult;
}

- (CMsgMvMVictoryInfo*) defaultInstance;

- (CMsgMvMVictoryInfo_Builder*) clear;
- (CMsgMvMVictoryInfo_Builder*) clone;

- (CMsgMvMVictoryInfo*) build;
- (CMsgMvMVictoryInfo*) buildPartial;

- (CMsgMvMVictoryInfo_Builder*) mergeFrom:(CMsgMvMVictoryInfo*) other;
- (CMsgMvMVictoryInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMvMVictoryInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)players;
- (CMsgMvMVictoryInfo_Player*)playersAtIndex:(NSUInteger)index;
- (CMsgMvMVictoryInfo_Builder *)addPlayers:(CMsgMvMVictoryInfo_Player*)value;
- (CMsgMvMVictoryInfo_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgMvMVictoryInfo_Builder *)setPlayersValues:(const CMsgMvMVictoryInfo_Player* *)values count:(NSUInteger)count;
- (CMsgMvMVictoryInfo_Builder *)clearPlayers;

- (BOOL) hasTourName;
- (NSString*) tourName;
- (CMsgMvMVictoryInfo_Builder*) setTourName:(NSString*) value;
- (CMsgMvMVictoryInfo_Builder*) clearTourName;

- (BOOL) hasMissionName;
- (NSString*) missionName;
- (CMsgMvMVictoryInfo_Builder*) setMissionName:(NSString*) value;
- (CMsgMvMVictoryInfo_Builder*) clearMissionName;
@end

@interface CGCMsgTFHelloResponse : PBGeneratedMessage {
@private
  BOOL hasVersionCheck_:1;
  uint32_t versionCheck;
  PBAppendableArray * versionChecksumArray;
}
- (BOOL) hasVersionCheck;
@property (readonly) uint32_t versionCheck;
@property (readonly, retain) PBArray * versionChecksum;
- (uint64_t)versionChecksumAtIndex:(NSUInteger)index;

+ (CGCMsgTFHelloResponse*) defaultInstance;
- (CGCMsgTFHelloResponse*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CGCMsgTFHelloResponse_Builder*) builder;
+ (CGCMsgTFHelloResponse_Builder*) builder;
+ (CGCMsgTFHelloResponse_Builder*) builderWithPrototype:(CGCMsgTFHelloResponse*) prototype;
- (CGCMsgTFHelloResponse_Builder*) toBuilder;

+ (CGCMsgTFHelloResponse*) parseFromData:(NSData*) data;
+ (CGCMsgTFHelloResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CGCMsgTFHelloResponse*) parseFromInputStream:(NSInputStream*) input;
+ (CGCMsgTFHelloResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CGCMsgTFHelloResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CGCMsgTFHelloResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CGCMsgTFHelloResponse_Builder : PBGeneratedMessage_Builder {
@private
  CGCMsgTFHelloResponse* _builderResult;
}

- (CGCMsgTFHelloResponse*) defaultInstance;

- (CGCMsgTFHelloResponse_Builder*) clear;
- (CGCMsgTFHelloResponse_Builder*) clone;

- (CGCMsgTFHelloResponse*) build;
- (CGCMsgTFHelloResponse*) buildPartial;

- (CGCMsgTFHelloResponse_Builder*) mergeFrom:(CGCMsgTFHelloResponse*) other;
- (CGCMsgTFHelloResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CGCMsgTFHelloResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersionCheck;
- (uint32_t) versionCheck;
- (CGCMsgTFHelloResponse_Builder*) setVersionCheck:(uint32_t) value;
- (CGCMsgTFHelloResponse_Builder*) clearVersionCheck;

- (PBAppendableArray *)versionChecksum;
- (uint64_t)versionChecksumAtIndex:(NSUInteger)index;
- (CGCMsgTFHelloResponse_Builder *)addVersionChecksum:(uint64_t)value;
- (CGCMsgTFHelloResponse_Builder *)setVersionChecksumArray:(NSArray *)array;
- (CGCMsgTFHelloResponse_Builder *)setVersionChecksumValues:(const uint64_t *)values count:(NSUInteger)count;
- (CGCMsgTFHelloResponse_Builder *)clearVersionChecksum;
@end

@interface CGCMsgTFSync : PBGeneratedMessage {
@private
  BOOL hasVersionChecksum_:1;
  BOOL hasVersionCheck_:1;
  NSData* versionChecksum;
  uint32_t versionCheck;
}
- (BOOL) hasVersionChecksum;
- (BOOL) hasVersionCheck;
@property (readonly, retain) NSData* versionChecksum;
@property (readonly) uint32_t versionCheck;

+ (CGCMsgTFSync*) defaultInstance;
- (CGCMsgTFSync*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CGCMsgTFSync_Builder*) builder;
+ (CGCMsgTFSync_Builder*) builder;
+ (CGCMsgTFSync_Builder*) builderWithPrototype:(CGCMsgTFSync*) prototype;
- (CGCMsgTFSync_Builder*) toBuilder;

+ (CGCMsgTFSync*) parseFromData:(NSData*) data;
+ (CGCMsgTFSync*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CGCMsgTFSync*) parseFromInputStream:(NSInputStream*) input;
+ (CGCMsgTFSync*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CGCMsgTFSync*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CGCMsgTFSync*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CGCMsgTFSync_Builder : PBGeneratedMessage_Builder {
@private
  CGCMsgTFSync* _builderResult;
}

- (CGCMsgTFSync*) defaultInstance;

- (CGCMsgTFSync_Builder*) clear;
- (CGCMsgTFSync_Builder*) clone;

- (CGCMsgTFSync*) build;
- (CGCMsgTFSync*) buildPartial;

- (CGCMsgTFSync_Builder*) mergeFrom:(CGCMsgTFSync*) other;
- (CGCMsgTFSync_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CGCMsgTFSync_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasVersionChecksum;
- (NSData*) versionChecksum;
- (CGCMsgTFSync_Builder*) setVersionChecksum:(NSData*) value;
- (CGCMsgTFSync_Builder*) clearVersionChecksum;

- (BOOL) hasVersionCheck;
- (uint32_t) versionCheck;
- (CGCMsgTFSync_Builder*) setVersionCheck:(uint32_t) value;
- (CGCMsgTFSync_Builder*) clearVersionCheck;
@end

@interface CMsgMvMVictory : PBGeneratedMessage {
@private
  BOOL hasLobbyId_:1;
  BOOL hasEventTime_:1;
  BOOL hasTourNameMannup_:1;
  BOOL hasMissionName_:1;
  BOOL hasLegacyMissionIndex_:1;
  uint64_t lobbyId;
  uint32_t eventTime;
  NSString* tourNameMannup;
  NSString* missionName;
  uint32_t legacyMissionIndex;
  PBAppendableArray * playersArray;
}
- (BOOL) hasLegacyMissionIndex;
- (BOOL) hasTourNameMannup;
- (BOOL) hasMissionName;
- (BOOL) hasLobbyId;
- (BOOL) hasEventTime;
@property (readonly) uint32_t legacyMissionIndex;
@property (readonly, retain) NSString* tourNameMannup;
@property (readonly, retain) NSString* missionName;
@property (readonly, retain) PBArray * players;
@property (readonly) uint64_t lobbyId;
@property (readonly) uint32_t eventTime;
- (CMsgMvMVictory_Player*)playersAtIndex:(NSUInteger)index;

+ (CMsgMvMVictory*) defaultInstance;
- (CMsgMvMVictory*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMvMVictory_Builder*) builder;
+ (CMsgMvMVictory_Builder*) builder;
+ (CMsgMvMVictory_Builder*) builderWithPrototype:(CMsgMvMVictory*) prototype;
- (CMsgMvMVictory_Builder*) toBuilder;

+ (CMsgMvMVictory*) parseFromData:(NSData*) data;
+ (CMsgMvMVictory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictory*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMvMVictory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictory*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMvMVictory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMvMVictory_Player : PBGeneratedMessage {
@private
  BOOL hasSquadSurplus_:1;
  BOOL hasSteamId_:1;
  BOOL squadSurplus_:1;
  uint64_t steamId;
}
- (BOOL) hasSteamId;
- (BOOL) hasSquadSurplus;
@property (readonly) uint64_t steamId;
- (BOOL) squadSurplus;

+ (CMsgMvMVictory_Player*) defaultInstance;
- (CMsgMvMVictory_Player*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMvMVictory_Player_Builder*) builder;
+ (CMsgMvMVictory_Player_Builder*) builder;
+ (CMsgMvMVictory_Player_Builder*) builderWithPrototype:(CMsgMvMVictory_Player*) prototype;
- (CMsgMvMVictory_Player_Builder*) toBuilder;

+ (CMsgMvMVictory_Player*) parseFromData:(NSData*) data;
+ (CMsgMvMVictory_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictory_Player*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMvMVictory_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMVictory_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMvMVictory_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMvMVictory_Player_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMvMVictory_Player* _builderResult;
}

- (CMsgMvMVictory_Player*) defaultInstance;

- (CMsgMvMVictory_Player_Builder*) clear;
- (CMsgMvMVictory_Player_Builder*) clone;

- (CMsgMvMVictory_Player*) build;
- (CMsgMvMVictory_Player*) buildPartial;

- (CMsgMvMVictory_Player_Builder*) mergeFrom:(CMsgMvMVictory_Player*) other;
- (CMsgMvMVictory_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMvMVictory_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgMvMVictory_Player_Builder*) setSteamId:(uint64_t) value;
- (CMsgMvMVictory_Player_Builder*) clearSteamId;

- (BOOL) hasSquadSurplus;
- (BOOL) squadSurplus;
- (CMsgMvMVictory_Player_Builder*) setSquadSurplus:(BOOL) value;
- (CMsgMvMVictory_Player_Builder*) clearSquadSurplus;
@end

@interface CMsgMvMVictory_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMvMVictory* _builderResult;
}

- (CMsgMvMVictory*) defaultInstance;

- (CMsgMvMVictory_Builder*) clear;
- (CMsgMvMVictory_Builder*) clone;

- (CMsgMvMVictory*) build;
- (CMsgMvMVictory*) buildPartial;

- (CMsgMvMVictory_Builder*) mergeFrom:(CMsgMvMVictory*) other;
- (CMsgMvMVictory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMvMVictory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLegacyMissionIndex;
- (uint32_t) legacyMissionIndex;
- (CMsgMvMVictory_Builder*) setLegacyMissionIndex:(uint32_t) value;
- (CMsgMvMVictory_Builder*) clearLegacyMissionIndex;

- (BOOL) hasTourNameMannup;
- (NSString*) tourNameMannup;
- (CMsgMvMVictory_Builder*) setTourNameMannup:(NSString*) value;
- (CMsgMvMVictory_Builder*) clearTourNameMannup;

- (BOOL) hasMissionName;
- (NSString*) missionName;
- (CMsgMvMVictory_Builder*) setMissionName:(NSString*) value;
- (CMsgMvMVictory_Builder*) clearMissionName;

- (PBAppendableArray *)players;
- (CMsgMvMVictory_Player*)playersAtIndex:(NSUInteger)index;
- (CMsgMvMVictory_Builder *)addPlayers:(CMsgMvMVictory_Player*)value;
- (CMsgMvMVictory_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgMvMVictory_Builder *)setPlayersValues:(const CMsgMvMVictory_Player* *)values count:(NSUInteger)count;
- (CMsgMvMVictory_Builder *)clearPlayers;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgMvMVictory_Builder*) setLobbyId:(uint64_t) value;
- (CMsgMvMVictory_Builder*) clearLobbyId;

- (BOOL) hasEventTime;
- (uint32_t) eventTime;
- (CMsgMvMVictory_Builder*) setEventTime:(uint32_t) value;
- (CMsgMvMVictory_Builder*) clearEventTime;
@end

@interface CMsgMvMMannUpVictoryReply : PBGeneratedMessage {
@private
  BOOL hasResult_:1;
  uint32_t result;
}
- (BOOL) hasResult;
@property (readonly) uint32_t result;

+ (CMsgMvMMannUpVictoryReply*) defaultInstance;
- (CMsgMvMMannUpVictoryReply*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgMvMMannUpVictoryReply_Builder*) builder;
+ (CMsgMvMMannUpVictoryReply_Builder*) builder;
+ (CMsgMvMMannUpVictoryReply_Builder*) builderWithPrototype:(CMsgMvMMannUpVictoryReply*) prototype;
- (CMsgMvMMannUpVictoryReply_Builder*) toBuilder;

+ (CMsgMvMMannUpVictoryReply*) parseFromData:(NSData*) data;
+ (CMsgMvMMannUpVictoryReply*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMMannUpVictoryReply*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgMvMMannUpVictoryReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgMvMMannUpVictoryReply*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgMvMMannUpVictoryReply*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgMvMMannUpVictoryReply_Builder : PBGeneratedMessage_Builder {
@private
  CMsgMvMMannUpVictoryReply* _builderResult;
}

- (CMsgMvMMannUpVictoryReply*) defaultInstance;

- (CMsgMvMMannUpVictoryReply_Builder*) clear;
- (CMsgMvMMannUpVictoryReply_Builder*) clone;

- (CMsgMvMMannUpVictoryReply*) build;
- (CMsgMvMMannUpVictoryReply*) buildPartial;

- (CMsgMvMMannUpVictoryReply_Builder*) mergeFrom:(CMsgMvMMannUpVictoryReply*) other;
- (CMsgMvMMannUpVictoryReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgMvMMannUpVictoryReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResult;
- (uint32_t) result;
- (CMsgMvMMannUpVictoryReply_Builder*) setResult:(uint32_t) value;
- (CMsgMvMMannUpVictoryReply_Builder*) clearResult;
@end

@interface CMsgGameServerKickingLobby : PBGeneratedMessage {
@private
  PBAppendableArray * connectedPlayersArray;
}
@property (readonly, retain) PBArray * connectedPlayers;
- (uint64_t)connectedPlayersAtIndex:(NSUInteger)index;

+ (CMsgGameServerKickingLobby*) defaultInstance;
- (CMsgGameServerKickingLobby*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgGameServerKickingLobby_Builder*) builder;
+ (CMsgGameServerKickingLobby_Builder*) builder;
+ (CMsgGameServerKickingLobby_Builder*) builderWithPrototype:(CMsgGameServerKickingLobby*) prototype;
- (CMsgGameServerKickingLobby_Builder*) toBuilder;

+ (CMsgGameServerKickingLobby*) parseFromData:(NSData*) data;
+ (CMsgGameServerKickingLobby*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerKickingLobby*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgGameServerKickingLobby*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgGameServerKickingLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgGameServerKickingLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgGameServerKickingLobby_Builder : PBGeneratedMessage_Builder {
@private
  CMsgGameServerKickingLobby* _builderResult;
}

- (CMsgGameServerKickingLobby*) defaultInstance;

- (CMsgGameServerKickingLobby_Builder*) clear;
- (CMsgGameServerKickingLobby_Builder*) clone;

- (CMsgGameServerKickingLobby*) build;
- (CMsgGameServerKickingLobby*) buildPartial;

- (CMsgGameServerKickingLobby_Builder*) mergeFrom:(CMsgGameServerKickingLobby*) other;
- (CMsgGameServerKickingLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgGameServerKickingLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)connectedPlayers;
- (uint64_t)connectedPlayersAtIndex:(NSUInteger)index;
- (CMsgGameServerKickingLobby_Builder *)addConnectedPlayers:(uint64_t)value;
- (CMsgGameServerKickingLobby_Builder *)setConnectedPlayersArray:(NSArray *)array;
- (CMsgGameServerKickingLobby_Builder *)setConnectedPlayersValues:(const uint64_t *)values count:(NSUInteger)count;
- (CMsgGameServerKickingLobby_Builder *)clearConnectedPlayers;
@end

@interface CMsgLeaveGameAndPrepareToJoinParty : PBGeneratedMessage {
@private
  BOOL hasPartyId_:1;
  uint64_t partyId;
}
- (BOOL) hasPartyId;
@property (readonly) uint64_t partyId;

+ (CMsgLeaveGameAndPrepareToJoinParty*) defaultInstance;
- (CMsgLeaveGameAndPrepareToJoinParty*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) builder;
+ (CMsgLeaveGameAndPrepareToJoinParty_Builder*) builder;
+ (CMsgLeaveGameAndPrepareToJoinParty_Builder*) builderWithPrototype:(CMsgLeaveGameAndPrepareToJoinParty*) prototype;
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) toBuilder;

+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromData:(NSData*) data;
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgLeaveGameAndPrepareToJoinParty_Builder : PBGeneratedMessage_Builder {
@private
  CMsgLeaveGameAndPrepareToJoinParty* _builderResult;
}

- (CMsgLeaveGameAndPrepareToJoinParty*) defaultInstance;

- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) clear;
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) clone;

- (CMsgLeaveGameAndPrepareToJoinParty*) build;
- (CMsgLeaveGameAndPrepareToJoinParty*) buildPartial;

- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) mergeFrom:(CMsgLeaveGameAndPrepareToJoinParty*) other;
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPartyId;
- (uint64_t) partyId;
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) setPartyId:(uint64_t) value;
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) clearPartyId;
@end

@interface CMsgRemovePlayerFromLobby : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  BOOL hasremove_reason_:1;
  uint64_t steamId;
  CMsgRemovePlayerFromLobby_RemoveReason remove_reason;
}
- (BOOL) hasSteamId;
- (BOOL) hasremove_reason;
@property (readonly) uint64_t steamId;
@property (readonly) CMsgRemovePlayerFromLobby_RemoveReason remove_reason;

+ (CMsgRemovePlayerFromLobby*) defaultInstance;
- (CMsgRemovePlayerFromLobby*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgRemovePlayerFromLobby_Builder*) builder;
+ (CMsgRemovePlayerFromLobby_Builder*) builder;
+ (CMsgRemovePlayerFromLobby_Builder*) builderWithPrototype:(CMsgRemovePlayerFromLobby*) prototype;
- (CMsgRemovePlayerFromLobby_Builder*) toBuilder;

+ (CMsgRemovePlayerFromLobby*) parseFromData:(NSData*) data;
+ (CMsgRemovePlayerFromLobby*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRemovePlayerFromLobby*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgRemovePlayerFromLobby*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgRemovePlayerFromLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgRemovePlayerFromLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgRemovePlayerFromLobby_Builder : PBGeneratedMessage_Builder {
@private
  CMsgRemovePlayerFromLobby* _builderResult;
}

- (CMsgRemovePlayerFromLobby*) defaultInstance;

- (CMsgRemovePlayerFromLobby_Builder*) clear;
- (CMsgRemovePlayerFromLobby_Builder*) clone;

- (CMsgRemovePlayerFromLobby*) build;
- (CMsgRemovePlayerFromLobby*) buildPartial;

- (CMsgRemovePlayerFromLobby_Builder*) mergeFrom:(CMsgRemovePlayerFromLobby*) other;
- (CMsgRemovePlayerFromLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgRemovePlayerFromLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgRemovePlayerFromLobby_Builder*) setSteamId:(uint64_t) value;
- (CMsgRemovePlayerFromLobby_Builder*) clearSteamId;

- (BOOL) hasremove_reason;
- (CMsgRemovePlayerFromLobby_RemoveReason) remove_reason;
- (CMsgRemovePlayerFromLobby_Builder*) setremove_reason:(CMsgRemovePlayerFromLobby_RemoveReason) value;
- (CMsgRemovePlayerFromLobby_Builder*) clearremove_reason;
@end

@interface CMsgSetLobbySafeToLeave : PBGeneratedMessage {
@private
  BOOL hasLobbyId_:1;
  uint64_t lobbyId;
}
- (BOOL) hasLobbyId;
@property (readonly) uint64_t lobbyId;

+ (CMsgSetLobbySafeToLeave*) defaultInstance;
- (CMsgSetLobbySafeToLeave*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgSetLobbySafeToLeave_Builder*) builder;
+ (CMsgSetLobbySafeToLeave_Builder*) builder;
+ (CMsgSetLobbySafeToLeave_Builder*) builderWithPrototype:(CMsgSetLobbySafeToLeave*) prototype;
- (CMsgSetLobbySafeToLeave_Builder*) toBuilder;

+ (CMsgSetLobbySafeToLeave*) parseFromData:(NSData*) data;
+ (CMsgSetLobbySafeToLeave*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSetLobbySafeToLeave*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgSetLobbySafeToLeave*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgSetLobbySafeToLeave*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgSetLobbySafeToLeave*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgSetLobbySafeToLeave_Builder : PBGeneratedMessage_Builder {
@private
  CMsgSetLobbySafeToLeave* _builderResult;
}

- (CMsgSetLobbySafeToLeave*) defaultInstance;

- (CMsgSetLobbySafeToLeave_Builder*) clear;
- (CMsgSetLobbySafeToLeave_Builder*) clone;

- (CMsgSetLobbySafeToLeave*) build;
- (CMsgSetLobbySafeToLeave*) buildPartial;

- (CMsgSetLobbySafeToLeave_Builder*) mergeFrom:(CMsgSetLobbySafeToLeave*) other;
- (CMsgSetLobbySafeToLeave_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgSetLobbySafeToLeave_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLobbyId;
- (uint64_t) lobbyId;
- (CMsgSetLobbySafeToLeave_Builder*) setLobbyId:(uint64_t) value;
- (CMsgSetLobbySafeToLeave_Builder*) clearLobbyId;
@end

@interface CMsgHalloween_ServerBossEvent : PBGeneratedMessage {
@private
  BOOL hasElapsedTime_:1;
  BOOL hasEventCounter_:1;
  BOOL hasTimestamp_:1;
  BOOL hasBossType_:1;
  BOOL hasBossLevel_:1;
  BOOL hasEventType_:1;
  BOOL hasPlayersInvolved_:1;
  Float32 elapsedTime;
  uint32_t eventCounter;
  uint32_t timestamp;
  uint32_t bossType;
  uint32_t bossLevel;
  uint32_t eventType;
  uint32_t playersInvolved;
}
- (BOOL) hasEventCounter;
- (BOOL) hasTimestamp;
- (BOOL) hasBossType;
- (BOOL) hasBossLevel;
- (BOOL) hasEventType;
- (BOOL) hasPlayersInvolved;
- (BOOL) hasElapsedTime;
@property (readonly) uint32_t eventCounter;
@property (readonly) uint32_t timestamp;
@property (readonly) uint32_t bossType;
@property (readonly) uint32_t bossLevel;
@property (readonly) uint32_t eventType;
@property (readonly) uint32_t playersInvolved;
@property (readonly) Float32 elapsedTime;

+ (CMsgHalloween_ServerBossEvent*) defaultInstance;
- (CMsgHalloween_ServerBossEvent*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgHalloween_ServerBossEvent_Builder*) builder;
+ (CMsgHalloween_ServerBossEvent_Builder*) builder;
+ (CMsgHalloween_ServerBossEvent_Builder*) builderWithPrototype:(CMsgHalloween_ServerBossEvent*) prototype;
- (CMsgHalloween_ServerBossEvent_Builder*) toBuilder;

+ (CMsgHalloween_ServerBossEvent*) parseFromData:(NSData*) data;
+ (CMsgHalloween_ServerBossEvent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgHalloween_ServerBossEvent*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgHalloween_ServerBossEvent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgHalloween_ServerBossEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgHalloween_ServerBossEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgHalloween_ServerBossEvent_Builder : PBGeneratedMessage_Builder {
@private
  CMsgHalloween_ServerBossEvent* _builderResult;
}

- (CMsgHalloween_ServerBossEvent*) defaultInstance;

- (CMsgHalloween_ServerBossEvent_Builder*) clear;
- (CMsgHalloween_ServerBossEvent_Builder*) clone;

- (CMsgHalloween_ServerBossEvent*) build;
- (CMsgHalloween_ServerBossEvent*) buildPartial;

- (CMsgHalloween_ServerBossEvent_Builder*) mergeFrom:(CMsgHalloween_ServerBossEvent*) other;
- (CMsgHalloween_ServerBossEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgHalloween_ServerBossEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventCounter;
- (uint32_t) eventCounter;
- (CMsgHalloween_ServerBossEvent_Builder*) setEventCounter:(uint32_t) value;
- (CMsgHalloween_ServerBossEvent_Builder*) clearEventCounter;

- (BOOL) hasTimestamp;
- (uint32_t) timestamp;
- (CMsgHalloween_ServerBossEvent_Builder*) setTimestamp:(uint32_t) value;
- (CMsgHalloween_ServerBossEvent_Builder*) clearTimestamp;

- (BOOL) hasBossType;
- (uint32_t) bossType;
- (CMsgHalloween_ServerBossEvent_Builder*) setBossType:(uint32_t) value;
- (CMsgHalloween_ServerBossEvent_Builder*) clearBossType;

- (BOOL) hasBossLevel;
- (uint32_t) bossLevel;
- (CMsgHalloween_ServerBossEvent_Builder*) setBossLevel:(uint32_t) value;
- (CMsgHalloween_ServerBossEvent_Builder*) clearBossLevel;

- (BOOL) hasEventType;
- (uint32_t) eventType;
- (CMsgHalloween_ServerBossEvent_Builder*) setEventType:(uint32_t) value;
- (CMsgHalloween_ServerBossEvent_Builder*) clearEventType;

- (BOOL) hasPlayersInvolved;
- (uint32_t) playersInvolved;
- (CMsgHalloween_ServerBossEvent_Builder*) setPlayersInvolved:(uint32_t) value;
- (CMsgHalloween_ServerBossEvent_Builder*) clearPlayersInvolved;

- (BOOL) hasElapsedTime;
- (Float32) elapsedTime;
- (CMsgHalloween_ServerBossEvent_Builder*) setElapsedTime:(Float32) value;
- (CMsgHalloween_ServerBossEvent_Builder*) clearElapsedTime;
@end

@interface CMsgHalloween_Merasmus2012 : PBGeneratedMessage {
@private
  BOOL hasIsValveServer_:1;
  BOOL hasTimeSubmitted_:1;
  BOOL hasEngineerCount_:1;
  BOOL hasSpyCount_:1;
  BOOL hasPyroCount_:1;
  BOOL hasHeavyCount_:1;
  BOOL hasMedicCount_:1;
  BOOL hasDemoCount_:1;
  BOOL hasSoliderCount_:1;
  BOOL hasSniperCount_:1;
  BOOL hasScoutCount_:1;
  BOOL hasDmgEngineer_:1;
  BOOL hasDmgSpy_:1;
  BOOL hasDmgPyro_:1;
  BOOL hasDmgHeavy_:1;
  BOOL hasDmgMedic_:1;
  BOOL hasDmgDemo_:1;
  BOOL hasDmgSoldier_:1;
  BOOL hasDmgSniper_:1;
  BOOL hasDmgScout_:1;
  BOOL hasProphuntTime2_:1;
  BOOL hasProphuntTime1_:1;
  BOOL hasPvpKills_:1;
  BOOL hasStaffKills_:1;
  BOOL hasBombKills_:1;
  BOOL hasLifeTime_:1;
  BOOL hasRemainingHealth_:1;
  BOOL hasSpawnedHealth_:1;
  BOOL hasBossLevel_:1;
  BOOL hasEventCounter_:1;
  BOOL isValveServer_:1;
  uint32_t timeSubmitted;
  uint32_t engineerCount;
  uint32_t spyCount;
  uint32_t pyroCount;
  uint32_t heavyCount;
  uint32_t medicCount;
  uint32_t demoCount;
  uint32_t soliderCount;
  uint32_t sniperCount;
  uint32_t scoutCount;
  uint32_t dmgEngineer;
  uint32_t dmgSpy;
  uint32_t dmgPyro;
  uint32_t dmgHeavy;
  uint32_t dmgMedic;
  uint32_t dmgDemo;
  uint32_t dmgSoldier;
  uint32_t dmgSniper;
  uint32_t dmgScout;
  uint32_t prophuntTime2;
  uint32_t prophuntTime1;
  uint32_t pvpKills;
  uint32_t staffKills;
  uint32_t bombKills;
  uint32_t lifeTime;
  uint32_t remainingHealth;
  uint32_t spawnedHealth;
  uint32_t bossLevel;
  uint32_t eventCounter;
}
- (BOOL) hasEventCounter;
- (BOOL) hasTimeSubmitted;
- (BOOL) hasIsValveServer;
- (BOOL) hasBossLevel;
- (BOOL) hasSpawnedHealth;
- (BOOL) hasRemainingHealth;
- (BOOL) hasLifeTime;
- (BOOL) hasBombKills;
- (BOOL) hasStaffKills;
- (BOOL) hasPvpKills;
- (BOOL) hasProphuntTime1;
- (BOOL) hasProphuntTime2;
- (BOOL) hasDmgScout;
- (BOOL) hasDmgSniper;
- (BOOL) hasDmgSoldier;
- (BOOL) hasDmgDemo;
- (BOOL) hasDmgMedic;
- (BOOL) hasDmgHeavy;
- (BOOL) hasDmgPyro;
- (BOOL) hasDmgSpy;
- (BOOL) hasDmgEngineer;
- (BOOL) hasScoutCount;
- (BOOL) hasSniperCount;
- (BOOL) hasSoliderCount;
- (BOOL) hasDemoCount;
- (BOOL) hasMedicCount;
- (BOOL) hasHeavyCount;
- (BOOL) hasPyroCount;
- (BOOL) hasSpyCount;
- (BOOL) hasEngineerCount;
@property (readonly) uint32_t eventCounter;
@property (readonly) uint32_t timeSubmitted;
- (BOOL) isValveServer;
@property (readonly) uint32_t bossLevel;
@property (readonly) uint32_t spawnedHealth;
@property (readonly) uint32_t remainingHealth;
@property (readonly) uint32_t lifeTime;
@property (readonly) uint32_t bombKills;
@property (readonly) uint32_t staffKills;
@property (readonly) uint32_t pvpKills;
@property (readonly) uint32_t prophuntTime1;
@property (readonly) uint32_t prophuntTime2;
@property (readonly) uint32_t dmgScout;
@property (readonly) uint32_t dmgSniper;
@property (readonly) uint32_t dmgSoldier;
@property (readonly) uint32_t dmgDemo;
@property (readonly) uint32_t dmgMedic;
@property (readonly) uint32_t dmgHeavy;
@property (readonly) uint32_t dmgPyro;
@property (readonly) uint32_t dmgSpy;
@property (readonly) uint32_t dmgEngineer;
@property (readonly) uint32_t scoutCount;
@property (readonly) uint32_t sniperCount;
@property (readonly) uint32_t soliderCount;
@property (readonly) uint32_t demoCount;
@property (readonly) uint32_t medicCount;
@property (readonly) uint32_t heavyCount;
@property (readonly) uint32_t pyroCount;
@property (readonly) uint32_t spyCount;
@property (readonly) uint32_t engineerCount;

+ (CMsgHalloween_Merasmus2012*) defaultInstance;
- (CMsgHalloween_Merasmus2012*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgHalloween_Merasmus2012_Builder*) builder;
+ (CMsgHalloween_Merasmus2012_Builder*) builder;
+ (CMsgHalloween_Merasmus2012_Builder*) builderWithPrototype:(CMsgHalloween_Merasmus2012*) prototype;
- (CMsgHalloween_Merasmus2012_Builder*) toBuilder;

+ (CMsgHalloween_Merasmus2012*) parseFromData:(NSData*) data;
+ (CMsgHalloween_Merasmus2012*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgHalloween_Merasmus2012*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgHalloween_Merasmus2012*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgHalloween_Merasmus2012*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgHalloween_Merasmus2012*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgHalloween_Merasmus2012_Builder : PBGeneratedMessage_Builder {
@private
  CMsgHalloween_Merasmus2012* _builderResult;
}

- (CMsgHalloween_Merasmus2012*) defaultInstance;

- (CMsgHalloween_Merasmus2012_Builder*) clear;
- (CMsgHalloween_Merasmus2012_Builder*) clone;

- (CMsgHalloween_Merasmus2012*) build;
- (CMsgHalloween_Merasmus2012*) buildPartial;

- (CMsgHalloween_Merasmus2012_Builder*) mergeFrom:(CMsgHalloween_Merasmus2012*) other;
- (CMsgHalloween_Merasmus2012_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgHalloween_Merasmus2012_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasEventCounter;
- (uint32_t) eventCounter;
- (CMsgHalloween_Merasmus2012_Builder*) setEventCounter:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearEventCounter;

- (BOOL) hasTimeSubmitted;
- (uint32_t) timeSubmitted;
- (CMsgHalloween_Merasmus2012_Builder*) setTimeSubmitted:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearTimeSubmitted;

- (BOOL) hasIsValveServer;
- (BOOL) isValveServer;
- (CMsgHalloween_Merasmus2012_Builder*) setIsValveServer:(BOOL) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearIsValveServer;

- (BOOL) hasBossLevel;
- (uint32_t) bossLevel;
- (CMsgHalloween_Merasmus2012_Builder*) setBossLevel:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearBossLevel;

- (BOOL) hasSpawnedHealth;
- (uint32_t) spawnedHealth;
- (CMsgHalloween_Merasmus2012_Builder*) setSpawnedHealth:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearSpawnedHealth;

- (BOOL) hasRemainingHealth;
- (uint32_t) remainingHealth;
- (CMsgHalloween_Merasmus2012_Builder*) setRemainingHealth:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearRemainingHealth;

- (BOOL) hasLifeTime;
- (uint32_t) lifeTime;
- (CMsgHalloween_Merasmus2012_Builder*) setLifeTime:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearLifeTime;

- (BOOL) hasBombKills;
- (uint32_t) bombKills;
- (CMsgHalloween_Merasmus2012_Builder*) setBombKills:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearBombKills;

- (BOOL) hasStaffKills;
- (uint32_t) staffKills;
- (CMsgHalloween_Merasmus2012_Builder*) setStaffKills:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearStaffKills;

- (BOOL) hasPvpKills;
- (uint32_t) pvpKills;
- (CMsgHalloween_Merasmus2012_Builder*) setPvpKills:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearPvpKills;

- (BOOL) hasProphuntTime1;
- (uint32_t) prophuntTime1;
- (CMsgHalloween_Merasmus2012_Builder*) setProphuntTime1:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearProphuntTime1;

- (BOOL) hasProphuntTime2;
- (uint32_t) prophuntTime2;
- (CMsgHalloween_Merasmus2012_Builder*) setProphuntTime2:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearProphuntTime2;

- (BOOL) hasDmgScout;
- (uint32_t) dmgScout;
- (CMsgHalloween_Merasmus2012_Builder*) setDmgScout:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgScout;

- (BOOL) hasDmgSniper;
- (uint32_t) dmgSniper;
- (CMsgHalloween_Merasmus2012_Builder*) setDmgSniper:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgSniper;

- (BOOL) hasDmgSoldier;
- (uint32_t) dmgSoldier;
- (CMsgHalloween_Merasmus2012_Builder*) setDmgSoldier:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgSoldier;

- (BOOL) hasDmgDemo;
- (uint32_t) dmgDemo;
- (CMsgHalloween_Merasmus2012_Builder*) setDmgDemo:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgDemo;

- (BOOL) hasDmgMedic;
- (uint32_t) dmgMedic;
- (CMsgHalloween_Merasmus2012_Builder*) setDmgMedic:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgMedic;

- (BOOL) hasDmgHeavy;
- (uint32_t) dmgHeavy;
- (CMsgHalloween_Merasmus2012_Builder*) setDmgHeavy:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgHeavy;

- (BOOL) hasDmgPyro;
- (uint32_t) dmgPyro;
- (CMsgHalloween_Merasmus2012_Builder*) setDmgPyro:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgPyro;

- (BOOL) hasDmgSpy;
- (uint32_t) dmgSpy;
- (CMsgHalloween_Merasmus2012_Builder*) setDmgSpy:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgSpy;

- (BOOL) hasDmgEngineer;
- (uint32_t) dmgEngineer;
- (CMsgHalloween_Merasmus2012_Builder*) setDmgEngineer:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgEngineer;

- (BOOL) hasScoutCount;
- (uint32_t) scoutCount;
- (CMsgHalloween_Merasmus2012_Builder*) setScoutCount:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearScoutCount;

- (BOOL) hasSniperCount;
- (uint32_t) sniperCount;
- (CMsgHalloween_Merasmus2012_Builder*) setSniperCount:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearSniperCount;

- (BOOL) hasSoliderCount;
- (uint32_t) soliderCount;
- (CMsgHalloween_Merasmus2012_Builder*) setSoliderCount:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearSoliderCount;

- (BOOL) hasDemoCount;
- (uint32_t) demoCount;
- (CMsgHalloween_Merasmus2012_Builder*) setDemoCount:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearDemoCount;

- (BOOL) hasMedicCount;
- (uint32_t) medicCount;
- (CMsgHalloween_Merasmus2012_Builder*) setMedicCount:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearMedicCount;

- (BOOL) hasHeavyCount;
- (uint32_t) heavyCount;
- (CMsgHalloween_Merasmus2012_Builder*) setHeavyCount:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearHeavyCount;

- (BOOL) hasPyroCount;
- (uint32_t) pyroCount;
- (CMsgHalloween_Merasmus2012_Builder*) setPyroCount:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearPyroCount;

- (BOOL) hasSpyCount;
- (uint32_t) spyCount;
- (CMsgHalloween_Merasmus2012_Builder*) setSpyCount:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearSpyCount;

- (BOOL) hasEngineerCount;
- (uint32_t) engineerCount;
- (CMsgHalloween_Merasmus2012_Builder*) setEngineerCount:(uint32_t) value;
- (CMsgHalloween_Merasmus2012_Builder*) clearEngineerCount;
@end

@interface CMsgUpdateHalloweenMerasmusLootLevel : PBGeneratedMessage {
@private
  BOOL hasMerasmusLevel_:1;
  uint32_t merasmusLevel;
  PBAppendableArray * playersArray;
}
- (BOOL) hasMerasmusLevel;
@property (readonly, retain) PBArray * players;
@property (readonly) uint32_t merasmusLevel;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*)playersAtIndex:(NSUInteger)index;

+ (CMsgUpdateHalloweenMerasmusLootLevel*) defaultInstance;
- (CMsgUpdateHalloweenMerasmusLootLevel*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) builder;
+ (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) builder;
+ (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) builderWithPrototype:(CMsgUpdateHalloweenMerasmusLootLevel*) prototype;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) toBuilder;

+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromData:(NSData*) data;
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgUpdateHalloweenMerasmusLootLevel_Player : PBGeneratedMessage {
@private
  BOOL hasSteamId_:1;
  uint64_t steamId;
}
- (BOOL) hasSteamId;
@property (readonly) uint64_t steamId;

+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) defaultInstance;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) builder;
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) builder;
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) builderWithPrototype:(CMsgUpdateHalloweenMerasmusLootLevel_Player*) prototype;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) toBuilder;

+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromData:(NSData*) data;
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromInputStream:(NSInputStream*) input;
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder : PBGeneratedMessage_Builder {
@private
  CMsgUpdateHalloweenMerasmusLootLevel_Player* _builderResult;
}

- (CMsgUpdateHalloweenMerasmusLootLevel_Player*) defaultInstance;

- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) clear;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) clone;

- (CMsgUpdateHalloweenMerasmusLootLevel_Player*) build;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*) buildPartial;

- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) mergeFrom:(CMsgUpdateHalloweenMerasmusLootLevel_Player*) other;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSteamId;
- (uint64_t) steamId;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) setSteamId:(uint64_t) value;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) clearSteamId;
@end

@interface CMsgUpdateHalloweenMerasmusLootLevel_Builder : PBGeneratedMessage_Builder {
@private
  CMsgUpdateHalloweenMerasmusLootLevel* _builderResult;
}

- (CMsgUpdateHalloweenMerasmusLootLevel*) defaultInstance;

- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) clear;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) clone;

- (CMsgUpdateHalloweenMerasmusLootLevel*) build;
- (CMsgUpdateHalloweenMerasmusLootLevel*) buildPartial;

- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) mergeFrom:(CMsgUpdateHalloweenMerasmusLootLevel*) other;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)players;
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*)playersAtIndex:(NSUInteger)index;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder *)addPlayers:(CMsgUpdateHalloweenMerasmusLootLevel_Player*)value;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder *)setPlayersArray:(NSArray *)array;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder *)setPlayersValues:(const CMsgUpdateHalloweenMerasmusLootLevel_Player* *)values count:(NSUInteger)count;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder *)clearPlayers;

- (BOOL) hasMerasmusLevel;
- (uint32_t) merasmusLevel;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) setMerasmusLevel:(uint32_t) value;
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) clearMerasmusLevel;
@end

