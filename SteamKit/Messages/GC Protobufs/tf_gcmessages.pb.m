// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "tf_gcmessages.pb.h"

@implementation TfGcmessagesRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TfGcmessagesRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [SteammessagesRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL TF_MatchmakingModeIsValidValue(TF_MatchmakingMode value) {
  switch (value) {
    case TF_MatchmakingModeTF_Matchmaking_INVALID:
    case TF_MatchmakingModeTF_Matchmaking_QUICKPLAY:
    case TF_MatchmakingModeTF_Matchmaking_TOBOR:
      return YES;
    default:
      return NO;
  }
}
BOOL TF_Matchmaking_WizardStepIsValidValue(TF_Matchmaking_WizardStep value) {
  switch (value) {
    case TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_INVALID:
    case TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_TOBOR_PLAY_FOR_BRAGGING_RIGHTS:
    case TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_TOBOR_TOUR_OF_DUTY:
    case TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_TOBOR_CHALLENGE:
    case TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_QUICKPLAY:
    case TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_SEARCHING:
      return YES;
    default:
      return NO;
  }
}
BOOL TF_GC_GameStateIsValidValue(TF_GC_GameState value) {
  switch (value) {
    case TF_GC_GameStateTF_GC_GAMESTATE_STATE_INIT:
    case TF_GC_GameStateTF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD:
    case TF_GC_GameStateTF_GC_GAMESTATE_STRATEGY_TIME:
    case TF_GC_GameStateTF_GC_GAMESTATE_GAME_IN_PROGRESS:
    case TF_GC_GameStateTF_GC_GAMESTATE_POST_GAME:
    case TF_GC_GameStateTF_GC_GAMESTATE_DISCONNECT:
    case TF_GC_GameStateTF_GC_GAMESTATE_LAST:
      return YES;
    default:
      return NO;
  }
}
BOOL TF_GC_TEAMIsValidValue(TF_GC_TEAM value) {
  switch (value) {
    case TF_GC_TEAMTF_GC_TEAM_DEFENDERS:
    case TF_GC_TEAMTF_GC_TEAM_BROADCASTER:
    case TF_GC_TEAMTF_GC_TEAM_SPECTATOR:
    case TF_GC_TEAMTF_GC_TEAM_PLAYER_POOL:
    case TF_GC_TEAMTF_GC_TEAM_NOTEAM:
      return YES;
    default:
      return NO;
  }
}
BOOL TFLobbyReadyStateIsValidValue(TFLobbyReadyState value) {
  switch (value) {
    case TFLobbyReadyStateTFLobbyReadyState_UNDECLARED:
    case TFLobbyReadyStateTFLobbyReadyState_ACCEPTED:
    case TFLobbyReadyStateTFLobbyReadyState_DECLINED:
      return YES;
    default:
      return NO;
  }
}
BOOL ChatChannelType_tIsValidValue(ChatChannelType_t value) {
  switch (value) {
    case ChatChannelType_tChatChannelType_Regional:
    case ChatChannelType_tChatChannelType_Custom:
    case ChatChannelType_tChatChannelType_Party:
    case ChatChannelType_tChatChannelType_Lobby:
      return YES;
    default:
      return NO;
  }
}
BOOL ServerMatchmakingStateIsValidValue(ServerMatchmakingState value) {
  switch (value) {
    case ServerMatchmakingStateServerMatchmakingState_INVALID:
    case ServerMatchmakingStateServerMatchmakingState_NOT_PARTICIPATING:
    case ServerMatchmakingStateServerMatchmakingState_EMPTY:
    case ServerMatchmakingStateServerMatchmakingState_ACTIVE_SLOTS_AVAILABLE:
    case ServerMatchmakingStateServerMatchmakingState_ACTIVE_FULL:
      return YES;
    default:
      return NO;
  }
}
@interface CMsgTFGoldenWrenchBroadcast ()
@property int32_t wrenchNumber;
@property BOOL deleted;
@property (retain) NSString* userName;
@end

@implementation CMsgTFGoldenWrenchBroadcast

- (BOOL) hasWrenchNumber {
  return !!hasWrenchNumber_;
}
- (void) setHasWrenchNumber:(BOOL) value_ {
  hasWrenchNumber_ = !!value_;
}
@synthesize wrenchNumber;
- (BOOL) hasDeleted {
  return !!hasDeleted_;
}
- (void) setHasDeleted:(BOOL) value_ {
  hasDeleted_ = !!value_;
}
- (BOOL) deleted {
  return !!deleted_;
}
- (void) setDeleted:(BOOL) value_ {
  deleted_ = !!value_;
}
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) value_ {
  hasUserName_ = !!value_;
}
@synthesize userName;
- (void) dealloc {
  self.userName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.wrenchNumber = 0;
    self.deleted = NO;
    self.userName = @"";
  }
  return self;
}
static CMsgTFGoldenWrenchBroadcast* defaultCMsgTFGoldenWrenchBroadcastInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFGoldenWrenchBroadcast class]) {
    defaultCMsgTFGoldenWrenchBroadcastInstance = [[CMsgTFGoldenWrenchBroadcast alloc] init];
  }
}
+ (CMsgTFGoldenWrenchBroadcast*) defaultInstance {
  return defaultCMsgTFGoldenWrenchBroadcastInstance;
}
- (CMsgTFGoldenWrenchBroadcast*) defaultInstance {
  return defaultCMsgTFGoldenWrenchBroadcastInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasWrenchNumber) {
    [output writeInt32:1 value:self.wrenchNumber];
  }
  if (self.hasDeleted) {
    [output writeBool:2 value:self.deleted];
  }
  if (self.hasUserName) {
    [output writeString:3 value:self.userName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasWrenchNumber) {
    size_ += computeInt32Size(1, self.wrenchNumber);
  }
  if (self.hasDeleted) {
    size_ += computeBoolSize(2, self.deleted);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(3, self.userName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFGoldenWrenchBroadcast*) parseFromData:(NSData*) data {
  return (CMsgTFGoldenWrenchBroadcast*)[[[CMsgTFGoldenWrenchBroadcast builder] mergeFromData:data] build];
}
+ (CMsgTFGoldenWrenchBroadcast*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFGoldenWrenchBroadcast*)[[[CMsgTFGoldenWrenchBroadcast builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFGoldenWrenchBroadcast*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFGoldenWrenchBroadcast*)[[[CMsgTFGoldenWrenchBroadcast builder] mergeFromInputStream:input] build];
}
+ (CMsgTFGoldenWrenchBroadcast*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFGoldenWrenchBroadcast*)[[[CMsgTFGoldenWrenchBroadcast builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFGoldenWrenchBroadcast*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFGoldenWrenchBroadcast*)[[[CMsgTFGoldenWrenchBroadcast builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFGoldenWrenchBroadcast*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFGoldenWrenchBroadcast*)[[[CMsgTFGoldenWrenchBroadcast builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFGoldenWrenchBroadcast_Builder*) builder {
  return [[[CMsgTFGoldenWrenchBroadcast_Builder alloc] init] autorelease];
}
+ (CMsgTFGoldenWrenchBroadcast_Builder*) builderWithPrototype:(CMsgTFGoldenWrenchBroadcast*) prototype {
  return [[CMsgTFGoldenWrenchBroadcast builder] mergeFrom:prototype];
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) builder {
  return [CMsgTFGoldenWrenchBroadcast builder];
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) toBuilder {
  return [CMsgTFGoldenWrenchBroadcast builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasWrenchNumber) {
    [output appendFormat:@"%@%@: %@\n", indent, @"wrenchNumber", [NSNumber numberWithInt:self.wrenchNumber]];
  }
  if (self.hasDeleted) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deleted", [NSNumber numberWithBool:self.deleted]];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFGoldenWrenchBroadcast class]]) {
    return NO;
  }
  CMsgTFGoldenWrenchBroadcast *otherMessage = other;
  return
      self.hasWrenchNumber == otherMessage.hasWrenchNumber &&
      (!self.hasWrenchNumber || self.wrenchNumber == otherMessage.wrenchNumber) &&
      self.hasDeleted == otherMessage.hasDeleted &&
      (!self.hasDeleted || self.deleted == otherMessage.deleted) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasWrenchNumber) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.wrenchNumber] hash];
  }
  if (self.hasDeleted) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.deleted] hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFGoldenWrenchBroadcast_Builder()
@property (retain) CMsgTFGoldenWrenchBroadcast* _builderResult;
@end

@implementation CMsgTFGoldenWrenchBroadcast_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFGoldenWrenchBroadcast alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) clear {
  _builderResult = [[[CMsgTFGoldenWrenchBroadcast alloc] init] autorelease];
  return self;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) clone {
  return [CMsgTFGoldenWrenchBroadcast builderWithPrototype:_builderResult];
}
- (CMsgTFGoldenWrenchBroadcast*) defaultInstance {
  return [CMsgTFGoldenWrenchBroadcast defaultInstance];
}
- (CMsgTFGoldenWrenchBroadcast*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFGoldenWrenchBroadcast*) buildPartial {
  CMsgTFGoldenWrenchBroadcast* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) mergeFrom:(CMsgTFGoldenWrenchBroadcast*) other {
  if (other == [CMsgTFGoldenWrenchBroadcast defaultInstance]) {
    return self;
  }
  if (other.hasWrenchNumber) {
    [self setWrenchNumber:other.wrenchNumber];
  }
  if (other.hasDeleted) {
    [self setDeleted:other.deleted];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setWrenchNumber:[input readInt32]];
        break;
      }
      case 16: {
        [self setDeleted:[input readBool]];
        break;
      }
      case 26: {
        [self setUserName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasWrenchNumber {
  return result.hasWrenchNumber;
}
- (int32_t) wrenchNumber {
  return result.wrenchNumber;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) setWrenchNumber:(int32_t) value {
  result.hasWrenchNumber = YES;
  result.wrenchNumber = value;
  return self;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) clearWrenchNumber {
  result.hasWrenchNumber = NO;
  result.wrenchNumber = 0;
  return self;
}
- (BOOL) hasDeleted {
  return result.hasDeleted;
}
- (BOOL) deleted {
  return result.deleted;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) setDeleted:(BOOL) value {
  result.hasDeleted = YES;
  result.deleted = value;
  return self;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) clearDeleted {
  result.hasDeleted = NO;
  result.deleted = NO;
  return self;
}
- (BOOL) hasUserName {
  return result.hasUserName;
}
- (NSString*) userName {
  return result.userName;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) setUserName:(NSString*) value {
  result.hasUserName = YES;
  result.userName = value;
  return self;
}
- (CMsgTFGoldenWrenchBroadcast_Builder*) clearUserName {
  result.hasUserName = NO;
  result.userName = @"";
  return self;
}
@end

@interface CMsgTFSaxxyBroadcast ()
@property int32_t categoryNumber;
@property (retain) NSString* userName;
@end

@implementation CMsgTFSaxxyBroadcast

- (BOOL) hasCategoryNumber {
  return !!hasCategoryNumber_;
}
- (void) setHasCategoryNumber:(BOOL) value_ {
  hasCategoryNumber_ = !!value_;
}
@synthesize categoryNumber;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) value_ {
  hasUserName_ = !!value_;
}
@synthesize userName;
- (void) dealloc {
  self.userName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.categoryNumber = 0;
    self.userName = @"";
  }
  return self;
}
static CMsgTFSaxxyBroadcast* defaultCMsgTFSaxxyBroadcastInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFSaxxyBroadcast class]) {
    defaultCMsgTFSaxxyBroadcastInstance = [[CMsgTFSaxxyBroadcast alloc] init];
  }
}
+ (CMsgTFSaxxyBroadcast*) defaultInstance {
  return defaultCMsgTFSaxxyBroadcastInstance;
}
- (CMsgTFSaxxyBroadcast*) defaultInstance {
  return defaultCMsgTFSaxxyBroadcastInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCategoryNumber) {
    [output writeInt32:1 value:self.categoryNumber];
  }
  if (self.hasUserName) {
    [output writeString:2 value:self.userName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCategoryNumber) {
    size_ += computeInt32Size(1, self.categoryNumber);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(2, self.userName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFSaxxyBroadcast*) parseFromData:(NSData*) data {
  return (CMsgTFSaxxyBroadcast*)[[[CMsgTFSaxxyBroadcast builder] mergeFromData:data] build];
}
+ (CMsgTFSaxxyBroadcast*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFSaxxyBroadcast*)[[[CMsgTFSaxxyBroadcast builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFSaxxyBroadcast*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFSaxxyBroadcast*)[[[CMsgTFSaxxyBroadcast builder] mergeFromInputStream:input] build];
}
+ (CMsgTFSaxxyBroadcast*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFSaxxyBroadcast*)[[[CMsgTFSaxxyBroadcast builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFSaxxyBroadcast*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFSaxxyBroadcast*)[[[CMsgTFSaxxyBroadcast builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFSaxxyBroadcast*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFSaxxyBroadcast*)[[[CMsgTFSaxxyBroadcast builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFSaxxyBroadcast_Builder*) builder {
  return [[[CMsgTFSaxxyBroadcast_Builder alloc] init] autorelease];
}
+ (CMsgTFSaxxyBroadcast_Builder*) builderWithPrototype:(CMsgTFSaxxyBroadcast*) prototype {
  return [[CMsgTFSaxxyBroadcast builder] mergeFrom:prototype];
}
- (CMsgTFSaxxyBroadcast_Builder*) builder {
  return [CMsgTFSaxxyBroadcast builder];
}
- (CMsgTFSaxxyBroadcast_Builder*) toBuilder {
  return [CMsgTFSaxxyBroadcast builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCategoryNumber) {
    [output appendFormat:@"%@%@: %@\n", indent, @"categoryNumber", [NSNumber numberWithInt:self.categoryNumber]];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFSaxxyBroadcast class]]) {
    return NO;
  }
  CMsgTFSaxxyBroadcast *otherMessage = other;
  return
      self.hasCategoryNumber == otherMessage.hasCategoryNumber &&
      (!self.hasCategoryNumber || self.categoryNumber == otherMessage.categoryNumber) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCategoryNumber) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.categoryNumber] hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFSaxxyBroadcast_Builder()
@property (retain) CMsgTFSaxxyBroadcast* _builderResult;
@end

@implementation CMsgTFSaxxyBroadcast_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFSaxxyBroadcast alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFSaxxyBroadcast_Builder*) clear {
  _builderResult = [[[CMsgTFSaxxyBroadcast alloc] init] autorelease];
  return self;
}
- (CMsgTFSaxxyBroadcast_Builder*) clone {
  return [CMsgTFSaxxyBroadcast builderWithPrototype:_builderResult];
}
- (CMsgTFSaxxyBroadcast*) defaultInstance {
  return [CMsgTFSaxxyBroadcast defaultInstance];
}
- (CMsgTFSaxxyBroadcast*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFSaxxyBroadcast*) buildPartial {
  CMsgTFSaxxyBroadcast* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFSaxxyBroadcast_Builder*) mergeFrom:(CMsgTFSaxxyBroadcast*) other {
  if (other == [CMsgTFSaxxyBroadcast defaultInstance]) {
    return self;
  }
  if (other.hasCategoryNumber) {
    [self setCategoryNumber:other.categoryNumber];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFSaxxyBroadcast_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFSaxxyBroadcast_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCategoryNumber:[input readInt32]];
        break;
      }
      case 18: {
        [self setUserName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCategoryNumber {
  return result.hasCategoryNumber;
}
- (int32_t) categoryNumber {
  return result.categoryNumber;
}
- (CMsgTFSaxxyBroadcast_Builder*) setCategoryNumber:(int32_t) value {
  result.hasCategoryNumber = YES;
  result.categoryNumber = value;
  return self;
}
- (CMsgTFSaxxyBroadcast_Builder*) clearCategoryNumber {
  result.hasCategoryNumber = NO;
  result.categoryNumber = 0;
  return self;
}
- (BOOL) hasUserName {
  return result.hasUserName;
}
- (NSString*) userName {
  return result.userName;
}
- (CMsgTFSaxxyBroadcast_Builder*) setUserName:(NSString*) value {
  result.hasUserName = YES;
  result.userName = value;
  return self;
}
- (CMsgTFSaxxyBroadcast_Builder*) clearUserName {
  result.hasUserName = NO;
  result.userName = @"";
  return self;
}
@end

@interface CSOTFDuelSummary ()
@property uint32_t accountId;
@property uint32_t duelWins;
@property uint32_t duelLosses;
@property uint32_t lastDuelAccountId;
@property uint32_t lastDuelTimestamp;
@property uint32_t lastDuelStatus;
@end

@implementation CSOTFDuelSummary

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) value_ {
  hasAccountId_ = !!value_;
}
@synthesize accountId;
- (BOOL) hasDuelWins {
  return !!hasDuelWins_;
}
- (void) setHasDuelWins:(BOOL) value_ {
  hasDuelWins_ = !!value_;
}
@synthesize duelWins;
- (BOOL) hasDuelLosses {
  return !!hasDuelLosses_;
}
- (void) setHasDuelLosses:(BOOL) value_ {
  hasDuelLosses_ = !!value_;
}
@synthesize duelLosses;
- (BOOL) hasLastDuelAccountId {
  return !!hasLastDuelAccountId_;
}
- (void) setHasLastDuelAccountId:(BOOL) value_ {
  hasLastDuelAccountId_ = !!value_;
}
@synthesize lastDuelAccountId;
- (BOOL) hasLastDuelTimestamp {
  return !!hasLastDuelTimestamp_;
}
- (void) setHasLastDuelTimestamp:(BOOL) value_ {
  hasLastDuelTimestamp_ = !!value_;
}
@synthesize lastDuelTimestamp;
- (BOOL) hasLastDuelStatus {
  return !!hasLastDuelStatus_;
}
- (void) setHasLastDuelStatus:(BOOL) value_ {
  hasLastDuelStatus_ = !!value_;
}
@synthesize lastDuelStatus;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountId = 0;
    self.duelWins = 0;
    self.duelLosses = 0;
    self.lastDuelAccountId = 0;
    self.lastDuelTimestamp = 0;
    self.lastDuelStatus = 0;
  }
  return self;
}
static CSOTFDuelSummary* defaultCSOTFDuelSummaryInstance = nil;
+ (void) initialize {
  if (self == [CSOTFDuelSummary class]) {
    defaultCSOTFDuelSummaryInstance = [[CSOTFDuelSummary alloc] init];
  }
}
+ (CSOTFDuelSummary*) defaultInstance {
  return defaultCSOTFDuelSummaryInstance;
}
- (CSOTFDuelSummary*) defaultInstance {
  return defaultCSOTFDuelSummaryInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeUInt32:1 value:self.accountId];
  }
  if (self.hasDuelWins) {
    [output writeUInt32:2 value:self.duelWins];
  }
  if (self.hasDuelLosses) {
    [output writeUInt32:3 value:self.duelLosses];
  }
  if (self.hasLastDuelAccountId) {
    [output writeUInt32:4 value:self.lastDuelAccountId];
  }
  if (self.hasLastDuelTimestamp) {
    [output writeUInt32:5 value:self.lastDuelTimestamp];
  }
  if (self.hasLastDuelStatus) {
    [output writeUInt32:6 value:self.lastDuelStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountId) {
    size_ += computeUInt32Size(1, self.accountId);
  }
  if (self.hasDuelWins) {
    size_ += computeUInt32Size(2, self.duelWins);
  }
  if (self.hasDuelLosses) {
    size_ += computeUInt32Size(3, self.duelLosses);
  }
  if (self.hasLastDuelAccountId) {
    size_ += computeUInt32Size(4, self.lastDuelAccountId);
  }
  if (self.hasLastDuelTimestamp) {
    size_ += computeUInt32Size(5, self.lastDuelTimestamp);
  }
  if (self.hasLastDuelStatus) {
    size_ += computeUInt32Size(6, self.lastDuelStatus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CSOTFDuelSummary*) parseFromData:(NSData*) data {
  return (CSOTFDuelSummary*)[[[CSOTFDuelSummary builder] mergeFromData:data] build];
}
+ (CSOTFDuelSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFDuelSummary*)[[[CSOTFDuelSummary builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CSOTFDuelSummary*) parseFromInputStream:(NSInputStream*) input {
  return (CSOTFDuelSummary*)[[[CSOTFDuelSummary builder] mergeFromInputStream:input] build];
}
+ (CSOTFDuelSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFDuelSummary*)[[[CSOTFDuelSummary builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFDuelSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CSOTFDuelSummary*)[[[CSOTFDuelSummary builder] mergeFromCodedInputStream:input] build];
}
+ (CSOTFDuelSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFDuelSummary*)[[[CSOTFDuelSummary builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFDuelSummary_Builder*) builder {
  return [[[CSOTFDuelSummary_Builder alloc] init] autorelease];
}
+ (CSOTFDuelSummary_Builder*) builderWithPrototype:(CSOTFDuelSummary*) prototype {
  return [[CSOTFDuelSummary builder] mergeFrom:prototype];
}
- (CSOTFDuelSummary_Builder*) builder {
  return [CSOTFDuelSummary builder];
}
- (CSOTFDuelSummary_Builder*) toBuilder {
  return [CSOTFDuelSummary builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountId", [NSNumber numberWithInt:self.accountId]];
  }
  if (self.hasDuelWins) {
    [output appendFormat:@"%@%@: %@\n", indent, @"duelWins", [NSNumber numberWithInt:self.duelWins]];
  }
  if (self.hasDuelLosses) {
    [output appendFormat:@"%@%@: %@\n", indent, @"duelLosses", [NSNumber numberWithInt:self.duelLosses]];
  }
  if (self.hasLastDuelAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastDuelAccountId", [NSNumber numberWithInt:self.lastDuelAccountId]];
  }
  if (self.hasLastDuelTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastDuelTimestamp", [NSNumber numberWithInt:self.lastDuelTimestamp]];
  }
  if (self.hasLastDuelStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastDuelStatus", [NSNumber numberWithInt:self.lastDuelStatus]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CSOTFDuelSummary class]]) {
    return NO;
  }
  CSOTFDuelSummary *otherMessage = other;
  return
      self.hasAccountId == otherMessage.hasAccountId &&
      (!self.hasAccountId || self.accountId == otherMessage.accountId) &&
      self.hasDuelWins == otherMessage.hasDuelWins &&
      (!self.hasDuelWins || self.duelWins == otherMessage.duelWins) &&
      self.hasDuelLosses == otherMessage.hasDuelLosses &&
      (!self.hasDuelLosses || self.duelLosses == otherMessage.duelLosses) &&
      self.hasLastDuelAccountId == otherMessage.hasLastDuelAccountId &&
      (!self.hasLastDuelAccountId || self.lastDuelAccountId == otherMessage.lastDuelAccountId) &&
      self.hasLastDuelTimestamp == otherMessage.hasLastDuelTimestamp &&
      (!self.hasLastDuelTimestamp || self.lastDuelTimestamp == otherMessage.lastDuelTimestamp) &&
      self.hasLastDuelStatus == otherMessage.hasLastDuelStatus &&
      (!self.hasLastDuelStatus || self.lastDuelStatus == otherMessage.lastDuelStatus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountId] hash];
  }
  if (self.hasDuelWins) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.duelWins] hash];
  }
  if (self.hasDuelLosses) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.duelLosses] hash];
  }
  if (self.hasLastDuelAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.lastDuelAccountId] hash];
  }
  if (self.hasLastDuelTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.lastDuelTimestamp] hash];
  }
  if (self.hasLastDuelStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.lastDuelStatus] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CSOTFDuelSummary_Builder()
@property (retain) CSOTFDuelSummary* _builderResult;
@end

@implementation CSOTFDuelSummary_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CSOTFDuelSummary alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CSOTFDuelSummary_Builder*) clear {
  _builderResult = [[[CSOTFDuelSummary alloc] init] autorelease];
  return self;
}
- (CSOTFDuelSummary_Builder*) clone {
  return [CSOTFDuelSummary builderWithPrototype:_builderResult];
}
- (CSOTFDuelSummary*) defaultInstance {
  return [CSOTFDuelSummary defaultInstance];
}
- (CSOTFDuelSummary*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CSOTFDuelSummary*) buildPartial {
  CSOTFDuelSummary* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CSOTFDuelSummary_Builder*) mergeFrom:(CSOTFDuelSummary*) other {
  if (other == [CSOTFDuelSummary defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  if (other.hasDuelWins) {
    [self setDuelWins:other.duelWins];
  }
  if (other.hasDuelLosses) {
    [self setDuelLosses:other.duelLosses];
  }
  if (other.hasLastDuelAccountId) {
    [self setLastDuelAccountId:other.lastDuelAccountId];
  }
  if (other.hasLastDuelTimestamp) {
    [self setLastDuelTimestamp:other.lastDuelTimestamp];
  }
  if (other.hasLastDuelStatus) {
    [self setLastDuelStatus:other.lastDuelStatus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CSOTFDuelSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CSOTFDuelSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setDuelWins:[input readUInt32]];
        break;
      }
      case 24: {
        [self setDuelLosses:[input readUInt32]];
        break;
      }
      case 32: {
        [self setLastDuelAccountId:[input readUInt32]];
        break;
      }
      case 40: {
        [self setLastDuelTimestamp:[input readUInt32]];
        break;
      }
      case 48: {
        [self setLastDuelStatus:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return result.hasAccountId;
}
- (uint32_t) accountId {
  return result.accountId;
}
- (CSOTFDuelSummary_Builder*) setAccountId:(uint32_t) value {
  result.hasAccountId = YES;
  result.accountId = value;
  return self;
}
- (CSOTFDuelSummary_Builder*) clearAccountId {
  result.hasAccountId = NO;
  result.accountId = 0;
  return self;
}
- (BOOL) hasDuelWins {
  return result.hasDuelWins;
}
- (uint32_t) duelWins {
  return result.duelWins;
}
- (CSOTFDuelSummary_Builder*) setDuelWins:(uint32_t) value {
  result.hasDuelWins = YES;
  result.duelWins = value;
  return self;
}
- (CSOTFDuelSummary_Builder*) clearDuelWins {
  result.hasDuelWins = NO;
  result.duelWins = 0;
  return self;
}
- (BOOL) hasDuelLosses {
  return result.hasDuelLosses;
}
- (uint32_t) duelLosses {
  return result.duelLosses;
}
- (CSOTFDuelSummary_Builder*) setDuelLosses:(uint32_t) value {
  result.hasDuelLosses = YES;
  result.duelLosses = value;
  return self;
}
- (CSOTFDuelSummary_Builder*) clearDuelLosses {
  result.hasDuelLosses = NO;
  result.duelLosses = 0;
  return self;
}
- (BOOL) hasLastDuelAccountId {
  return result.hasLastDuelAccountId;
}
- (uint32_t) lastDuelAccountId {
  return result.lastDuelAccountId;
}
- (CSOTFDuelSummary_Builder*) setLastDuelAccountId:(uint32_t) value {
  result.hasLastDuelAccountId = YES;
  result.lastDuelAccountId = value;
  return self;
}
- (CSOTFDuelSummary_Builder*) clearLastDuelAccountId {
  result.hasLastDuelAccountId = NO;
  result.lastDuelAccountId = 0;
  return self;
}
- (BOOL) hasLastDuelTimestamp {
  return result.hasLastDuelTimestamp;
}
- (uint32_t) lastDuelTimestamp {
  return result.lastDuelTimestamp;
}
- (CSOTFDuelSummary_Builder*) setLastDuelTimestamp:(uint32_t) value {
  result.hasLastDuelTimestamp = YES;
  result.lastDuelTimestamp = value;
  return self;
}
- (CSOTFDuelSummary_Builder*) clearLastDuelTimestamp {
  result.hasLastDuelTimestamp = NO;
  result.lastDuelTimestamp = 0;
  return self;
}
- (BOOL) hasLastDuelStatus {
  return result.hasLastDuelStatus;
}
- (uint32_t) lastDuelStatus {
  return result.lastDuelStatus;
}
- (CSOTFDuelSummary_Builder*) setLastDuelStatus:(uint32_t) value {
  result.hasLastDuelStatus = YES;
  result.lastDuelStatus = value;
  return self;
}
- (CSOTFDuelSummary_Builder*) clearLastDuelStatus {
  result.hasLastDuelStatus = NO;
  result.lastDuelStatus = 0;
  return self;
}
@end

@interface CSOTFMapContribution ()
@property uint32_t accountId;
@property uint32_t defIndex;
@property uint32_t contributionLevel;
@end

@implementation CSOTFMapContribution

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) value_ {
  hasAccountId_ = !!value_;
}
@synthesize accountId;
- (BOOL) hasDefIndex {
  return !!hasDefIndex_;
}
- (void) setHasDefIndex:(BOOL) value_ {
  hasDefIndex_ = !!value_;
}
@synthesize defIndex;
- (BOOL) hasContributionLevel {
  return !!hasContributionLevel_;
}
- (void) setHasContributionLevel:(BOOL) value_ {
  hasContributionLevel_ = !!value_;
}
@synthesize contributionLevel;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountId = 0;
    self.defIndex = 0;
    self.contributionLevel = 0;
  }
  return self;
}
static CSOTFMapContribution* defaultCSOTFMapContributionInstance = nil;
+ (void) initialize {
  if (self == [CSOTFMapContribution class]) {
    defaultCSOTFMapContributionInstance = [[CSOTFMapContribution alloc] init];
  }
}
+ (CSOTFMapContribution*) defaultInstance {
  return defaultCSOTFMapContributionInstance;
}
- (CSOTFMapContribution*) defaultInstance {
  return defaultCSOTFMapContributionInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeUInt32:1 value:self.accountId];
  }
  if (self.hasDefIndex) {
    [output writeUInt32:2 value:self.defIndex];
  }
  if (self.hasContributionLevel) {
    [output writeUInt32:3 value:self.contributionLevel];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountId) {
    size_ += computeUInt32Size(1, self.accountId);
  }
  if (self.hasDefIndex) {
    size_ += computeUInt32Size(2, self.defIndex);
  }
  if (self.hasContributionLevel) {
    size_ += computeUInt32Size(3, self.contributionLevel);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CSOTFMapContribution*) parseFromData:(NSData*) data {
  return (CSOTFMapContribution*)[[[CSOTFMapContribution builder] mergeFromData:data] build];
}
+ (CSOTFMapContribution*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFMapContribution*)[[[CSOTFMapContribution builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CSOTFMapContribution*) parseFromInputStream:(NSInputStream*) input {
  return (CSOTFMapContribution*)[[[CSOTFMapContribution builder] mergeFromInputStream:input] build];
}
+ (CSOTFMapContribution*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFMapContribution*)[[[CSOTFMapContribution builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFMapContribution*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CSOTFMapContribution*)[[[CSOTFMapContribution builder] mergeFromCodedInputStream:input] build];
}
+ (CSOTFMapContribution*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFMapContribution*)[[[CSOTFMapContribution builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFMapContribution_Builder*) builder {
  return [[[CSOTFMapContribution_Builder alloc] init] autorelease];
}
+ (CSOTFMapContribution_Builder*) builderWithPrototype:(CSOTFMapContribution*) prototype {
  return [[CSOTFMapContribution builder] mergeFrom:prototype];
}
- (CSOTFMapContribution_Builder*) builder {
  return [CSOTFMapContribution builder];
}
- (CSOTFMapContribution_Builder*) toBuilder {
  return [CSOTFMapContribution builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountId", [NSNumber numberWithInt:self.accountId]];
  }
  if (self.hasDefIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"defIndex", [NSNumber numberWithInt:self.defIndex]];
  }
  if (self.hasContributionLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contributionLevel", [NSNumber numberWithInt:self.contributionLevel]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CSOTFMapContribution class]]) {
    return NO;
  }
  CSOTFMapContribution *otherMessage = other;
  return
      self.hasAccountId == otherMessage.hasAccountId &&
      (!self.hasAccountId || self.accountId == otherMessage.accountId) &&
      self.hasDefIndex == otherMessage.hasDefIndex &&
      (!self.hasDefIndex || self.defIndex == otherMessage.defIndex) &&
      self.hasContributionLevel == otherMessage.hasContributionLevel &&
      (!self.hasContributionLevel || self.contributionLevel == otherMessage.contributionLevel) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountId] hash];
  }
  if (self.hasDefIndex) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.defIndex] hash];
  }
  if (self.hasContributionLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.contributionLevel] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CSOTFMapContribution_Builder()
@property (retain) CSOTFMapContribution* _builderResult;
@end

@implementation CSOTFMapContribution_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CSOTFMapContribution alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CSOTFMapContribution_Builder*) clear {
  _builderResult = [[[CSOTFMapContribution alloc] init] autorelease];
  return self;
}
- (CSOTFMapContribution_Builder*) clone {
  return [CSOTFMapContribution builderWithPrototype:_builderResult];
}
- (CSOTFMapContribution*) defaultInstance {
  return [CSOTFMapContribution defaultInstance];
}
- (CSOTFMapContribution*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CSOTFMapContribution*) buildPartial {
  CSOTFMapContribution* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CSOTFMapContribution_Builder*) mergeFrom:(CSOTFMapContribution*) other {
  if (other == [CSOTFMapContribution defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  if (other.hasDefIndex) {
    [self setDefIndex:other.defIndex];
  }
  if (other.hasContributionLevel) {
    [self setContributionLevel:other.contributionLevel];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CSOTFMapContribution_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CSOTFMapContribution_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setDefIndex:[input readUInt32]];
        break;
      }
      case 24: {
        [self setContributionLevel:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return result.hasAccountId;
}
- (uint32_t) accountId {
  return result.accountId;
}
- (CSOTFMapContribution_Builder*) setAccountId:(uint32_t) value {
  result.hasAccountId = YES;
  result.accountId = value;
  return self;
}
- (CSOTFMapContribution_Builder*) clearAccountId {
  result.hasAccountId = NO;
  result.accountId = 0;
  return self;
}
- (BOOL) hasDefIndex {
  return result.hasDefIndex;
}
- (uint32_t) defIndex {
  return result.defIndex;
}
- (CSOTFMapContribution_Builder*) setDefIndex:(uint32_t) value {
  result.hasDefIndex = YES;
  result.defIndex = value;
  return self;
}
- (CSOTFMapContribution_Builder*) clearDefIndex {
  result.hasDefIndex = NO;
  result.defIndex = 0;
  return self;
}
- (BOOL) hasContributionLevel {
  return result.hasContributionLevel;
}
- (uint32_t) contributionLevel {
  return result.contributionLevel;
}
- (CSOTFMapContribution_Builder*) setContributionLevel:(uint32_t) value {
  result.hasContributionLevel = YES;
  result.contributionLevel = value;
  return self;
}
- (CSOTFMapContribution_Builder*) clearContributionLevel {
  result.hasContributionLevel = NO;
  result.contributionLevel = 0;
  return self;
}
@end

@interface CMsgTFVoteKickBanPlayer ()
@property uint32_t accountIdSubject;
@property uint32_t kickReason;
@end

@implementation CMsgTFVoteKickBanPlayer

- (BOOL) hasAccountIdSubject {
  return !!hasAccountIdSubject_;
}
- (void) setHasAccountIdSubject:(BOOL) value_ {
  hasAccountIdSubject_ = !!value_;
}
@synthesize accountIdSubject;
- (BOOL) hasKickReason {
  return !!hasKickReason_;
}
- (void) setHasKickReason:(BOOL) value_ {
  hasKickReason_ = !!value_;
}
@synthesize kickReason;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountIdSubject = 0;
    self.kickReason = 0;
  }
  return self;
}
static CMsgTFVoteKickBanPlayer* defaultCMsgTFVoteKickBanPlayerInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFVoteKickBanPlayer class]) {
    defaultCMsgTFVoteKickBanPlayerInstance = [[CMsgTFVoteKickBanPlayer alloc] init];
  }
}
+ (CMsgTFVoteKickBanPlayer*) defaultInstance {
  return defaultCMsgTFVoteKickBanPlayerInstance;
}
- (CMsgTFVoteKickBanPlayer*) defaultInstance {
  return defaultCMsgTFVoteKickBanPlayerInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountIdSubject) {
    [output writeUInt32:1 value:self.accountIdSubject];
  }
  if (self.hasKickReason) {
    [output writeUInt32:2 value:self.kickReason];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountIdSubject) {
    size_ += computeUInt32Size(1, self.accountIdSubject);
  }
  if (self.hasKickReason) {
    size_ += computeUInt32Size(2, self.kickReason);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFVoteKickBanPlayer*) parseFromData:(NSData*) data {
  return (CMsgTFVoteKickBanPlayer*)[[[CMsgTFVoteKickBanPlayer builder] mergeFromData:data] build];
}
+ (CMsgTFVoteKickBanPlayer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFVoteKickBanPlayer*)[[[CMsgTFVoteKickBanPlayer builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFVoteKickBanPlayer*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFVoteKickBanPlayer*)[[[CMsgTFVoteKickBanPlayer builder] mergeFromInputStream:input] build];
}
+ (CMsgTFVoteKickBanPlayer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFVoteKickBanPlayer*)[[[CMsgTFVoteKickBanPlayer builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFVoteKickBanPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFVoteKickBanPlayer*)[[[CMsgTFVoteKickBanPlayer builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFVoteKickBanPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFVoteKickBanPlayer*)[[[CMsgTFVoteKickBanPlayer builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFVoteKickBanPlayer_Builder*) builder {
  return [[[CMsgTFVoteKickBanPlayer_Builder alloc] init] autorelease];
}
+ (CMsgTFVoteKickBanPlayer_Builder*) builderWithPrototype:(CMsgTFVoteKickBanPlayer*) prototype {
  return [[CMsgTFVoteKickBanPlayer builder] mergeFrom:prototype];
}
- (CMsgTFVoteKickBanPlayer_Builder*) builder {
  return [CMsgTFVoteKickBanPlayer builder];
}
- (CMsgTFVoteKickBanPlayer_Builder*) toBuilder {
  return [CMsgTFVoteKickBanPlayer builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountIdSubject) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdSubject", [NSNumber numberWithInt:self.accountIdSubject]];
  }
  if (self.hasKickReason) {
    [output appendFormat:@"%@%@: %@\n", indent, @"kickReason", [NSNumber numberWithInt:self.kickReason]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFVoteKickBanPlayer class]]) {
    return NO;
  }
  CMsgTFVoteKickBanPlayer *otherMessage = other;
  return
      self.hasAccountIdSubject == otherMessage.hasAccountIdSubject &&
      (!self.hasAccountIdSubject || self.accountIdSubject == otherMessage.accountIdSubject) &&
      self.hasKickReason == otherMessage.hasKickReason &&
      (!self.hasKickReason || self.kickReason == otherMessage.kickReason) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountIdSubject) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdSubject] hash];
  }
  if (self.hasKickReason) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.kickReason] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFVoteKickBanPlayer_Builder()
@property (retain) CMsgTFVoteKickBanPlayer* _builderResult;
@end

@implementation CMsgTFVoteKickBanPlayer_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFVoteKickBanPlayer alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFVoteKickBanPlayer_Builder*) clear {
  _builderResult = [[[CMsgTFVoteKickBanPlayer alloc] init] autorelease];
  return self;
}
- (CMsgTFVoteKickBanPlayer_Builder*) clone {
  return [CMsgTFVoteKickBanPlayer builderWithPrototype:_builderResult];
}
- (CMsgTFVoteKickBanPlayer*) defaultInstance {
  return [CMsgTFVoteKickBanPlayer defaultInstance];
}
- (CMsgTFVoteKickBanPlayer*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFVoteKickBanPlayer*) buildPartial {
  CMsgTFVoteKickBanPlayer* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFVoteKickBanPlayer_Builder*) mergeFrom:(CMsgTFVoteKickBanPlayer*) other {
  if (other == [CMsgTFVoteKickBanPlayer defaultInstance]) {
    return self;
  }
  if (other.hasAccountIdSubject) {
    [self setAccountIdSubject:other.accountIdSubject];
  }
  if (other.hasKickReason) {
    [self setKickReason:other.kickReason];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFVoteKickBanPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFVoteKickBanPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountIdSubject:[input readUInt32]];
        break;
      }
      case 16: {
        [self setKickReason:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountIdSubject {
  return result.hasAccountIdSubject;
}
- (uint32_t) accountIdSubject {
  return result.accountIdSubject;
}
- (CMsgTFVoteKickBanPlayer_Builder*) setAccountIdSubject:(uint32_t) value {
  result.hasAccountIdSubject = YES;
  result.accountIdSubject = value;
  return self;
}
- (CMsgTFVoteKickBanPlayer_Builder*) clearAccountIdSubject {
  result.hasAccountIdSubject = NO;
  result.accountIdSubject = 0;
  return self;
}
- (BOOL) hasKickReason {
  return result.hasKickReason;
}
- (uint32_t) kickReason {
  return result.kickReason;
}
- (CMsgTFVoteKickBanPlayer_Builder*) setKickReason:(uint32_t) value {
  result.hasKickReason = YES;
  result.kickReason = value;
  return self;
}
- (CMsgTFVoteKickBanPlayer_Builder*) clearKickReason {
  result.hasKickReason = NO;
  result.kickReason = 0;
  return self;
}
@end

@interface CMsgTFVoteKickBanPlayerResult ()
@property uint32_t accountIdInitiator;
@property uint32_t accountIdSubject;
@property uint32_t kickReason;
@property BOOL kickSuccessful;
@property uint32_t numYesVotes;
@property uint32_t numNoVotes;
@property uint32_t numPossibleVotes;
@end

@implementation CMsgTFVoteKickBanPlayerResult

- (BOOL) hasAccountIdInitiator {
  return !!hasAccountIdInitiator_;
}
- (void) setHasAccountIdInitiator:(BOOL) value_ {
  hasAccountIdInitiator_ = !!value_;
}
@synthesize accountIdInitiator;
- (BOOL) hasAccountIdSubject {
  return !!hasAccountIdSubject_;
}
- (void) setHasAccountIdSubject:(BOOL) value_ {
  hasAccountIdSubject_ = !!value_;
}
@synthesize accountIdSubject;
- (BOOL) hasKickReason {
  return !!hasKickReason_;
}
- (void) setHasKickReason:(BOOL) value_ {
  hasKickReason_ = !!value_;
}
@synthesize kickReason;
- (BOOL) hasKickSuccessful {
  return !!hasKickSuccessful_;
}
- (void) setHasKickSuccessful:(BOOL) value_ {
  hasKickSuccessful_ = !!value_;
}
- (BOOL) kickSuccessful {
  return !!kickSuccessful_;
}
- (void) setKickSuccessful:(BOOL) value_ {
  kickSuccessful_ = !!value_;
}
- (BOOL) hasNumYesVotes {
  return !!hasNumYesVotes_;
}
- (void) setHasNumYesVotes:(BOOL) value_ {
  hasNumYesVotes_ = !!value_;
}
@synthesize numYesVotes;
- (BOOL) hasNumNoVotes {
  return !!hasNumNoVotes_;
}
- (void) setHasNumNoVotes:(BOOL) value_ {
  hasNumNoVotes_ = !!value_;
}
@synthesize numNoVotes;
- (BOOL) hasNumPossibleVotes {
  return !!hasNumPossibleVotes_;
}
- (void) setHasNumPossibleVotes:(BOOL) value_ {
  hasNumPossibleVotes_ = !!value_;
}
@synthesize numPossibleVotes;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountIdInitiator = 0;
    self.accountIdSubject = 0;
    self.kickReason = 0;
    self.kickSuccessful = NO;
    self.numYesVotes = 0;
    self.numNoVotes = 0;
    self.numPossibleVotes = 0;
  }
  return self;
}
static CMsgTFVoteKickBanPlayerResult* defaultCMsgTFVoteKickBanPlayerResultInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFVoteKickBanPlayerResult class]) {
    defaultCMsgTFVoteKickBanPlayerResultInstance = [[CMsgTFVoteKickBanPlayerResult alloc] init];
  }
}
+ (CMsgTFVoteKickBanPlayerResult*) defaultInstance {
  return defaultCMsgTFVoteKickBanPlayerResultInstance;
}
- (CMsgTFVoteKickBanPlayerResult*) defaultInstance {
  return defaultCMsgTFVoteKickBanPlayerResultInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountIdInitiator) {
    [output writeUInt32:1 value:self.accountIdInitiator];
  }
  if (self.hasAccountIdSubject) {
    [output writeUInt32:2 value:self.accountIdSubject];
  }
  if (self.hasKickReason) {
    [output writeUInt32:3 value:self.kickReason];
  }
  if (self.hasKickSuccessful) {
    [output writeBool:4 value:self.kickSuccessful];
  }
  if (self.hasNumYesVotes) {
    [output writeUInt32:5 value:self.numYesVotes];
  }
  if (self.hasNumNoVotes) {
    [output writeUInt32:6 value:self.numNoVotes];
  }
  if (self.hasNumPossibleVotes) {
    [output writeUInt32:7 value:self.numPossibleVotes];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountIdInitiator) {
    size_ += computeUInt32Size(1, self.accountIdInitiator);
  }
  if (self.hasAccountIdSubject) {
    size_ += computeUInt32Size(2, self.accountIdSubject);
  }
  if (self.hasKickReason) {
    size_ += computeUInt32Size(3, self.kickReason);
  }
  if (self.hasKickSuccessful) {
    size_ += computeBoolSize(4, self.kickSuccessful);
  }
  if (self.hasNumYesVotes) {
    size_ += computeUInt32Size(5, self.numYesVotes);
  }
  if (self.hasNumNoVotes) {
    size_ += computeUInt32Size(6, self.numNoVotes);
  }
  if (self.hasNumPossibleVotes) {
    size_ += computeUInt32Size(7, self.numPossibleVotes);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFVoteKickBanPlayerResult*) parseFromData:(NSData*) data {
  return (CMsgTFVoteKickBanPlayerResult*)[[[CMsgTFVoteKickBanPlayerResult builder] mergeFromData:data] build];
}
+ (CMsgTFVoteKickBanPlayerResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFVoteKickBanPlayerResult*)[[[CMsgTFVoteKickBanPlayerResult builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFVoteKickBanPlayerResult*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFVoteKickBanPlayerResult*)[[[CMsgTFVoteKickBanPlayerResult builder] mergeFromInputStream:input] build];
}
+ (CMsgTFVoteKickBanPlayerResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFVoteKickBanPlayerResult*)[[[CMsgTFVoteKickBanPlayerResult builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFVoteKickBanPlayerResult*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFVoteKickBanPlayerResult*)[[[CMsgTFVoteKickBanPlayerResult builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFVoteKickBanPlayerResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFVoteKickBanPlayerResult*)[[[CMsgTFVoteKickBanPlayerResult builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFVoteKickBanPlayerResult_Builder*) builder {
  return [[[CMsgTFVoteKickBanPlayerResult_Builder alloc] init] autorelease];
}
+ (CMsgTFVoteKickBanPlayerResult_Builder*) builderWithPrototype:(CMsgTFVoteKickBanPlayerResult*) prototype {
  return [[CMsgTFVoteKickBanPlayerResult builder] mergeFrom:prototype];
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) builder {
  return [CMsgTFVoteKickBanPlayerResult builder];
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) toBuilder {
  return [CMsgTFVoteKickBanPlayerResult builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountIdInitiator) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdInitiator", [NSNumber numberWithInt:self.accountIdInitiator]];
  }
  if (self.hasAccountIdSubject) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdSubject", [NSNumber numberWithInt:self.accountIdSubject]];
  }
  if (self.hasKickReason) {
    [output appendFormat:@"%@%@: %@\n", indent, @"kickReason", [NSNumber numberWithInt:self.kickReason]];
  }
  if (self.hasKickSuccessful) {
    [output appendFormat:@"%@%@: %@\n", indent, @"kickSuccessful", [NSNumber numberWithBool:self.kickSuccessful]];
  }
  if (self.hasNumYesVotes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numYesVotes", [NSNumber numberWithInt:self.numYesVotes]];
  }
  if (self.hasNumNoVotes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numNoVotes", [NSNumber numberWithInt:self.numNoVotes]];
  }
  if (self.hasNumPossibleVotes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numPossibleVotes", [NSNumber numberWithInt:self.numPossibleVotes]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFVoteKickBanPlayerResult class]]) {
    return NO;
  }
  CMsgTFVoteKickBanPlayerResult *otherMessage = other;
  return
      self.hasAccountIdInitiator == otherMessage.hasAccountIdInitiator &&
      (!self.hasAccountIdInitiator || self.accountIdInitiator == otherMessage.accountIdInitiator) &&
      self.hasAccountIdSubject == otherMessage.hasAccountIdSubject &&
      (!self.hasAccountIdSubject || self.accountIdSubject == otherMessage.accountIdSubject) &&
      self.hasKickReason == otherMessage.hasKickReason &&
      (!self.hasKickReason || self.kickReason == otherMessage.kickReason) &&
      self.hasKickSuccessful == otherMessage.hasKickSuccessful &&
      (!self.hasKickSuccessful || self.kickSuccessful == otherMessage.kickSuccessful) &&
      self.hasNumYesVotes == otherMessage.hasNumYesVotes &&
      (!self.hasNumYesVotes || self.numYesVotes == otherMessage.numYesVotes) &&
      self.hasNumNoVotes == otherMessage.hasNumNoVotes &&
      (!self.hasNumNoVotes || self.numNoVotes == otherMessage.numNoVotes) &&
      self.hasNumPossibleVotes == otherMessage.hasNumPossibleVotes &&
      (!self.hasNumPossibleVotes || self.numPossibleVotes == otherMessage.numPossibleVotes) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountIdInitiator) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdInitiator] hash];
  }
  if (self.hasAccountIdSubject) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdSubject] hash];
  }
  if (self.hasKickReason) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.kickReason] hash];
  }
  if (self.hasKickSuccessful) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.kickSuccessful] hash];
  }
  if (self.hasNumYesVotes) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numYesVotes] hash];
  }
  if (self.hasNumNoVotes) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numNoVotes] hash];
  }
  if (self.hasNumPossibleVotes) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numPossibleVotes] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFVoteKickBanPlayerResult_Builder()
@property (retain) CMsgTFVoteKickBanPlayerResult* _builderResult;
@end

@implementation CMsgTFVoteKickBanPlayerResult_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFVoteKickBanPlayerResult alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) clear {
  _builderResult = [[[CMsgTFVoteKickBanPlayerResult alloc] init] autorelease];
  return self;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) clone {
  return [CMsgTFVoteKickBanPlayerResult builderWithPrototype:_builderResult];
}
- (CMsgTFVoteKickBanPlayerResult*) defaultInstance {
  return [CMsgTFVoteKickBanPlayerResult defaultInstance];
}
- (CMsgTFVoteKickBanPlayerResult*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFVoteKickBanPlayerResult*) buildPartial {
  CMsgTFVoteKickBanPlayerResult* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) mergeFrom:(CMsgTFVoteKickBanPlayerResult*) other {
  if (other == [CMsgTFVoteKickBanPlayerResult defaultInstance]) {
    return self;
  }
  if (other.hasAccountIdInitiator) {
    [self setAccountIdInitiator:other.accountIdInitiator];
  }
  if (other.hasAccountIdSubject) {
    [self setAccountIdSubject:other.accountIdSubject];
  }
  if (other.hasKickReason) {
    [self setKickReason:other.kickReason];
  }
  if (other.hasKickSuccessful) {
    [self setKickSuccessful:other.kickSuccessful];
  }
  if (other.hasNumYesVotes) {
    [self setNumYesVotes:other.numYesVotes];
  }
  if (other.hasNumNoVotes) {
    [self setNumNoVotes:other.numNoVotes];
  }
  if (other.hasNumPossibleVotes) {
    [self setNumPossibleVotes:other.numPossibleVotes];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountIdInitiator:[input readUInt32]];
        break;
      }
      case 16: {
        [self setAccountIdSubject:[input readUInt32]];
        break;
      }
      case 24: {
        [self setKickReason:[input readUInt32]];
        break;
      }
      case 32: {
        [self setKickSuccessful:[input readBool]];
        break;
      }
      case 40: {
        [self setNumYesVotes:[input readUInt32]];
        break;
      }
      case 48: {
        [self setNumNoVotes:[input readUInt32]];
        break;
      }
      case 56: {
        [self setNumPossibleVotes:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountIdInitiator {
  return result.hasAccountIdInitiator;
}
- (uint32_t) accountIdInitiator {
  return result.accountIdInitiator;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) setAccountIdInitiator:(uint32_t) value {
  result.hasAccountIdInitiator = YES;
  result.accountIdInitiator = value;
  return self;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearAccountIdInitiator {
  result.hasAccountIdInitiator = NO;
  result.accountIdInitiator = 0;
  return self;
}
- (BOOL) hasAccountIdSubject {
  return result.hasAccountIdSubject;
}
- (uint32_t) accountIdSubject {
  return result.accountIdSubject;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) setAccountIdSubject:(uint32_t) value {
  result.hasAccountIdSubject = YES;
  result.accountIdSubject = value;
  return self;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearAccountIdSubject {
  result.hasAccountIdSubject = NO;
  result.accountIdSubject = 0;
  return self;
}
- (BOOL) hasKickReason {
  return result.hasKickReason;
}
- (uint32_t) kickReason {
  return result.kickReason;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) setKickReason:(uint32_t) value {
  result.hasKickReason = YES;
  result.kickReason = value;
  return self;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearKickReason {
  result.hasKickReason = NO;
  result.kickReason = 0;
  return self;
}
- (BOOL) hasKickSuccessful {
  return result.hasKickSuccessful;
}
- (BOOL) kickSuccessful {
  return result.kickSuccessful;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) setKickSuccessful:(BOOL) value {
  result.hasKickSuccessful = YES;
  result.kickSuccessful = value;
  return self;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearKickSuccessful {
  result.hasKickSuccessful = NO;
  result.kickSuccessful = NO;
  return self;
}
- (BOOL) hasNumYesVotes {
  return result.hasNumYesVotes;
}
- (uint32_t) numYesVotes {
  return result.numYesVotes;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) setNumYesVotes:(uint32_t) value {
  result.hasNumYesVotes = YES;
  result.numYesVotes = value;
  return self;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearNumYesVotes {
  result.hasNumYesVotes = NO;
  result.numYesVotes = 0;
  return self;
}
- (BOOL) hasNumNoVotes {
  return result.hasNumNoVotes;
}
- (uint32_t) numNoVotes {
  return result.numNoVotes;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) setNumNoVotes:(uint32_t) value {
  result.hasNumNoVotes = YES;
  result.numNoVotes = value;
  return self;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearNumNoVotes {
  result.hasNumNoVotes = NO;
  result.numNoVotes = 0;
  return self;
}
- (BOOL) hasNumPossibleVotes {
  return result.hasNumPossibleVotes;
}
- (uint32_t) numPossibleVotes {
  return result.numPossibleVotes;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) setNumPossibleVotes:(uint32_t) value {
  result.hasNumPossibleVotes = YES;
  result.numPossibleVotes = value;
  return self;
}
- (CMsgTFVoteKickBanPlayerResult_Builder*) clearNumPossibleVotes {
  result.hasNumPossibleVotes = NO;
  result.numPossibleVotes = 0;
  return self;
}
@end

@interface CMsgTFKickPlayer ()
@property uint32_t accountIdPlayer;
@property uint32_t kickReason;
@end

@implementation CMsgTFKickPlayer

- (BOOL) hasAccountIdPlayer {
  return !!hasAccountIdPlayer_;
}
- (void) setHasAccountIdPlayer:(BOOL) value_ {
  hasAccountIdPlayer_ = !!value_;
}
@synthesize accountIdPlayer;
- (BOOL) hasKickReason {
  return !!hasKickReason_;
}
- (void) setHasKickReason:(BOOL) value_ {
  hasKickReason_ = !!value_;
}
@synthesize kickReason;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountIdPlayer = 0;
    self.kickReason = 0;
  }
  return self;
}
static CMsgTFKickPlayer* defaultCMsgTFKickPlayerInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFKickPlayer class]) {
    defaultCMsgTFKickPlayerInstance = [[CMsgTFKickPlayer alloc] init];
  }
}
+ (CMsgTFKickPlayer*) defaultInstance {
  return defaultCMsgTFKickPlayerInstance;
}
- (CMsgTFKickPlayer*) defaultInstance {
  return defaultCMsgTFKickPlayerInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountIdPlayer) {
    [output writeUInt32:1 value:self.accountIdPlayer];
  }
  if (self.hasKickReason) {
    [output writeUInt32:2 value:self.kickReason];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountIdPlayer) {
    size_ += computeUInt32Size(1, self.accountIdPlayer);
  }
  if (self.hasKickReason) {
    size_ += computeUInt32Size(2, self.kickReason);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFKickPlayer*) parseFromData:(NSData*) data {
  return (CMsgTFKickPlayer*)[[[CMsgTFKickPlayer builder] mergeFromData:data] build];
}
+ (CMsgTFKickPlayer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFKickPlayer*)[[[CMsgTFKickPlayer builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFKickPlayer*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFKickPlayer*)[[[CMsgTFKickPlayer builder] mergeFromInputStream:input] build];
}
+ (CMsgTFKickPlayer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFKickPlayer*)[[[CMsgTFKickPlayer builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFKickPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFKickPlayer*)[[[CMsgTFKickPlayer builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFKickPlayer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFKickPlayer*)[[[CMsgTFKickPlayer builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFKickPlayer_Builder*) builder {
  return [[[CMsgTFKickPlayer_Builder alloc] init] autorelease];
}
+ (CMsgTFKickPlayer_Builder*) builderWithPrototype:(CMsgTFKickPlayer*) prototype {
  return [[CMsgTFKickPlayer builder] mergeFrom:prototype];
}
- (CMsgTFKickPlayer_Builder*) builder {
  return [CMsgTFKickPlayer builder];
}
- (CMsgTFKickPlayer_Builder*) toBuilder {
  return [CMsgTFKickPlayer builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountIdPlayer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdPlayer", [NSNumber numberWithInt:self.accountIdPlayer]];
  }
  if (self.hasKickReason) {
    [output appendFormat:@"%@%@: %@\n", indent, @"kickReason", [NSNumber numberWithInt:self.kickReason]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFKickPlayer class]]) {
    return NO;
  }
  CMsgTFKickPlayer *otherMessage = other;
  return
      self.hasAccountIdPlayer == otherMessage.hasAccountIdPlayer &&
      (!self.hasAccountIdPlayer || self.accountIdPlayer == otherMessage.accountIdPlayer) &&
      self.hasKickReason == otherMessage.hasKickReason &&
      (!self.hasKickReason || self.kickReason == otherMessage.kickReason) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountIdPlayer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdPlayer] hash];
  }
  if (self.hasKickReason) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.kickReason] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFKickPlayer_Builder()
@property (retain) CMsgTFKickPlayer* _builderResult;
@end

@implementation CMsgTFKickPlayer_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFKickPlayer alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFKickPlayer_Builder*) clear {
  _builderResult = [[[CMsgTFKickPlayer alloc] init] autorelease];
  return self;
}
- (CMsgTFKickPlayer_Builder*) clone {
  return [CMsgTFKickPlayer builderWithPrototype:_builderResult];
}
- (CMsgTFKickPlayer*) defaultInstance {
  return [CMsgTFKickPlayer defaultInstance];
}
- (CMsgTFKickPlayer*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFKickPlayer*) buildPartial {
  CMsgTFKickPlayer* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFKickPlayer_Builder*) mergeFrom:(CMsgTFKickPlayer*) other {
  if (other == [CMsgTFKickPlayer defaultInstance]) {
    return self;
  }
  if (other.hasAccountIdPlayer) {
    [self setAccountIdPlayer:other.accountIdPlayer];
  }
  if (other.hasKickReason) {
    [self setKickReason:other.kickReason];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFKickPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFKickPlayer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountIdPlayer:[input readUInt32]];
        break;
      }
      case 16: {
        [self setKickReason:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountIdPlayer {
  return result.hasAccountIdPlayer;
}
- (uint32_t) accountIdPlayer {
  return result.accountIdPlayer;
}
- (CMsgTFKickPlayer_Builder*) setAccountIdPlayer:(uint32_t) value {
  result.hasAccountIdPlayer = YES;
  result.accountIdPlayer = value;
  return self;
}
- (CMsgTFKickPlayer_Builder*) clearAccountIdPlayer {
  result.hasAccountIdPlayer = NO;
  result.accountIdPlayer = 0;
  return self;
}
- (BOOL) hasKickReason {
  return result.hasKickReason;
}
- (uint32_t) kickReason {
  return result.kickReason;
}
- (CMsgTFKickPlayer_Builder*) setKickReason:(uint32_t) value {
  result.hasKickReason = YES;
  result.kickReason = value;
  return self;
}
- (CMsgTFKickPlayer_Builder*) clearKickReason {
  result.hasKickReason = NO;
  result.kickReason = 0;
  return self;
}
@end

@interface CMsgTFStartedTraining ()
@end

@implementation CMsgTFStartedTraining

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFStartedTraining* defaultCMsgTFStartedTrainingInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFStartedTraining class]) {
    defaultCMsgTFStartedTrainingInstance = [[CMsgTFStartedTraining alloc] init];
  }
}
+ (CMsgTFStartedTraining*) defaultInstance {
  return defaultCMsgTFStartedTrainingInstance;
}
- (CMsgTFStartedTraining*) defaultInstance {
  return defaultCMsgTFStartedTrainingInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFStartedTraining*) parseFromData:(NSData*) data {
  return (CMsgTFStartedTraining*)[[[CMsgTFStartedTraining builder] mergeFromData:data] build];
}
+ (CMsgTFStartedTraining*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFStartedTraining*)[[[CMsgTFStartedTraining builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFStartedTraining*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFStartedTraining*)[[[CMsgTFStartedTraining builder] mergeFromInputStream:input] build];
}
+ (CMsgTFStartedTraining*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFStartedTraining*)[[[CMsgTFStartedTraining builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFStartedTraining*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFStartedTraining*)[[[CMsgTFStartedTraining builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFStartedTraining*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFStartedTraining*)[[[CMsgTFStartedTraining builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFStartedTraining_Builder*) builder {
  return [[[CMsgTFStartedTraining_Builder alloc] init] autorelease];
}
+ (CMsgTFStartedTraining_Builder*) builderWithPrototype:(CMsgTFStartedTraining*) prototype {
  return [[CMsgTFStartedTraining builder] mergeFrom:prototype];
}
- (CMsgTFStartedTraining_Builder*) builder {
  return [CMsgTFStartedTraining builder];
}
- (CMsgTFStartedTraining_Builder*) toBuilder {
  return [CMsgTFStartedTraining builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFStartedTraining class]]) {
    return NO;
  }
  CMsgTFStartedTraining *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFStartedTraining_Builder()
@property (retain) CMsgTFStartedTraining* _builderResult;
@end

@implementation CMsgTFStartedTraining_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFStartedTraining alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFStartedTraining_Builder*) clear {
  _builderResult = [[[CMsgTFStartedTraining alloc] init] autorelease];
  return self;
}
- (CMsgTFStartedTraining_Builder*) clone {
  return [CMsgTFStartedTraining builderWithPrototype:_builderResult];
}
- (CMsgTFStartedTraining*) defaultInstance {
  return [CMsgTFStartedTraining defaultInstance];
}
- (CMsgTFStartedTraining*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFStartedTraining*) buildPartial {
  CMsgTFStartedTraining* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFStartedTraining_Builder*) mergeFrom:(CMsgTFStartedTraining*) other {
  if (other == [CMsgTFStartedTraining defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFStartedTraining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFStartedTraining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgTFFreeTrialChooseMostHelpfulFriend ()
@property uint32_t accountIdFriend;
@end

@implementation CMsgTFFreeTrialChooseMostHelpfulFriend

- (BOOL) hasAccountIdFriend {
  return !!hasAccountIdFriend_;
}
- (void) setHasAccountIdFriend:(BOOL) value_ {
  hasAccountIdFriend_ = !!value_;
}
@synthesize accountIdFriend;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountIdFriend = 0;
  }
  return self;
}
static CMsgTFFreeTrialChooseMostHelpfulFriend* defaultCMsgTFFreeTrialChooseMostHelpfulFriendInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFFreeTrialChooseMostHelpfulFriend class]) {
    defaultCMsgTFFreeTrialChooseMostHelpfulFriendInstance = [[CMsgTFFreeTrialChooseMostHelpfulFriend alloc] init];
  }
}
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) defaultInstance {
  return defaultCMsgTFFreeTrialChooseMostHelpfulFriendInstance;
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend*) defaultInstance {
  return defaultCMsgTFFreeTrialChooseMostHelpfulFriendInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountIdFriend) {
    [output writeUInt32:1 value:self.accountIdFriend];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountIdFriend) {
    size_ += computeUInt32Size(1, self.accountIdFriend);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromData:(NSData*) data {
  return (CMsgTFFreeTrialChooseMostHelpfulFriend*)[[[CMsgTFFreeTrialChooseMostHelpfulFriend builder] mergeFromData:data] build];
}
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFFreeTrialChooseMostHelpfulFriend*)[[[CMsgTFFreeTrialChooseMostHelpfulFriend builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFFreeTrialChooseMostHelpfulFriend*)[[[CMsgTFFreeTrialChooseMostHelpfulFriend builder] mergeFromInputStream:input] build];
}
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFFreeTrialChooseMostHelpfulFriend*)[[[CMsgTFFreeTrialChooseMostHelpfulFriend builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFFreeTrialChooseMostHelpfulFriend*)[[[CMsgTFFreeTrialChooseMostHelpfulFriend builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFFreeTrialChooseMostHelpfulFriend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFFreeTrialChooseMostHelpfulFriend*)[[[CMsgTFFreeTrialChooseMostHelpfulFriend builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) builder {
  return [[[CMsgTFFreeTrialChooseMostHelpfulFriend_Builder alloc] init] autorelease];
}
+ (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) builderWithPrototype:(CMsgTFFreeTrialChooseMostHelpfulFriend*) prototype {
  return [[CMsgTFFreeTrialChooseMostHelpfulFriend builder] mergeFrom:prototype];
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) builder {
  return [CMsgTFFreeTrialChooseMostHelpfulFriend builder];
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) toBuilder {
  return [CMsgTFFreeTrialChooseMostHelpfulFriend builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountIdFriend) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdFriend", [NSNumber numberWithInt:self.accountIdFriend]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFFreeTrialChooseMostHelpfulFriend class]]) {
    return NO;
  }
  CMsgTFFreeTrialChooseMostHelpfulFriend *otherMessage = other;
  return
      self.hasAccountIdFriend == otherMessage.hasAccountIdFriend &&
      (!self.hasAccountIdFriend || self.accountIdFriend == otherMessage.accountIdFriend) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountIdFriend) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdFriend] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFFreeTrialChooseMostHelpfulFriend_Builder()
@property (retain) CMsgTFFreeTrialChooseMostHelpfulFriend* _builderResult;
@end

@implementation CMsgTFFreeTrialChooseMostHelpfulFriend_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFFreeTrialChooseMostHelpfulFriend alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) clear {
  _builderResult = [[[CMsgTFFreeTrialChooseMostHelpfulFriend alloc] init] autorelease];
  return self;
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) clone {
  return [CMsgTFFreeTrialChooseMostHelpfulFriend builderWithPrototype:_builderResult];
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend*) defaultInstance {
  return [CMsgTFFreeTrialChooseMostHelpfulFriend defaultInstance];
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend*) buildPartial {
  CMsgTFFreeTrialChooseMostHelpfulFriend* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) mergeFrom:(CMsgTFFreeTrialChooseMostHelpfulFriend*) other {
  if (other == [CMsgTFFreeTrialChooseMostHelpfulFriend defaultInstance]) {
    return self;
  }
  if (other.hasAccountIdFriend) {
    [self setAccountIdFriend:other.accountIdFriend];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountIdFriend:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountIdFriend {
  return result.hasAccountIdFriend;
}
- (uint32_t) accountIdFriend {
  return result.accountIdFriend;
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) setAccountIdFriend:(uint32_t) value {
  result.hasAccountIdFriend = YES;
  result.accountIdFriend = value;
  return self;
}
- (CMsgTFFreeTrialChooseMostHelpfulFriend_Builder*) clearAccountIdFriend {
  result.hasAccountIdFriend = NO;
  result.accountIdFriend = 0;
  return self;
}
@end

@interface CMsgTFRequestTF2Friends ()
@property (retain) PBAppendableArray * accountIdsArray;
@end

@implementation CMsgTFRequestTF2Friends

@synthesize accountIdsArray;
@dynamic accountIds;
- (void) dealloc {
  self.accountIdsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFRequestTF2Friends* defaultCMsgTFRequestTF2FriendsInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFRequestTF2Friends class]) {
    defaultCMsgTFRequestTF2FriendsInstance = [[CMsgTFRequestTF2Friends alloc] init];
  }
}
+ (CMsgTFRequestTF2Friends*) defaultInstance {
  return defaultCMsgTFRequestTF2FriendsInstance;
}
- (CMsgTFRequestTF2Friends*) defaultInstance {
  return defaultCMsgTFRequestTF2FriendsInstance;
}
- (PBArray *)accountIds {
  return accountIdsArray;
}
- (uint32_t)accountIdsAtIndex:(NSUInteger)index {
  return [accountIdsArray uint32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger accountIdsArrayCount = self.accountIdsArray.count;
  if (accountIdsArrayCount > 0) {
    const uint32_t *values = (const uint32_t *)self.accountIdsArray.data;
    for (NSUInteger i = 0; i < accountIdsArrayCount; ++i) {
      [output writeUInt32:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.accountIdsArray.count;
    const uint32_t *values = (const uint32_t *)self.accountIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFRequestTF2Friends*) parseFromData:(NSData*) data {
  return (CMsgTFRequestTF2Friends*)[[[CMsgTFRequestTF2Friends builder] mergeFromData:data] build];
}
+ (CMsgTFRequestTF2Friends*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestTF2Friends*)[[[CMsgTFRequestTF2Friends builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestTF2Friends*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFRequestTF2Friends*)[[[CMsgTFRequestTF2Friends builder] mergeFromInputStream:input] build];
}
+ (CMsgTFRequestTF2Friends*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestTF2Friends*)[[[CMsgTFRequestTF2Friends builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestTF2Friends*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFRequestTF2Friends*)[[[CMsgTFRequestTF2Friends builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFRequestTF2Friends*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestTF2Friends*)[[[CMsgTFRequestTF2Friends builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestTF2Friends_Builder*) builder {
  return [[[CMsgTFRequestTF2Friends_Builder alloc] init] autorelease];
}
+ (CMsgTFRequestTF2Friends_Builder*) builderWithPrototype:(CMsgTFRequestTF2Friends*) prototype {
  return [[CMsgTFRequestTF2Friends builder] mergeFrom:prototype];
}
- (CMsgTFRequestTF2Friends_Builder*) builder {
  return [CMsgTFRequestTF2Friends builder];
}
- (CMsgTFRequestTF2Friends_Builder*) toBuilder {
  return [CMsgTFRequestTF2Friends builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (NSNumber* value in self.accountIdsArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIds", value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFRequestTF2Friends class]]) {
    return NO;
  }
  CMsgTFRequestTF2Friends *otherMessage = other;
  return
      [self.accountIdsArray isEqualToArray:otherMessage.accountIdsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (NSNumber* value in self.accountIdsArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFRequestTF2Friends_Builder()
@property (retain) CMsgTFRequestTF2Friends* _builderResult;
@end

@implementation CMsgTFRequestTF2Friends_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFRequestTF2Friends alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFRequestTF2Friends_Builder*) clear {
  _builderResult = [[[CMsgTFRequestTF2Friends alloc] init] autorelease];
  return self;
}
- (CMsgTFRequestTF2Friends_Builder*) clone {
  return [CMsgTFRequestTF2Friends builderWithPrototype:_builderResult];
}
- (CMsgTFRequestTF2Friends*) defaultInstance {
  return [CMsgTFRequestTF2Friends defaultInstance];
}
- (CMsgTFRequestTF2Friends*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFRequestTF2Friends*) buildPartial {
  CMsgTFRequestTF2Friends* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFRequestTF2Friends_Builder*) mergeFrom:(CMsgTFRequestTF2Friends*) other {
  if (other == [CMsgTFRequestTF2Friends defaultInstance]) {
    return self;
  }
  if (other.accountIdsArray.count > 0) {
    if (result.accountIdsArray == nil) {
      result.accountIdsArray = [[other.accountIdsArray copyWithZone:[other.accountIdsArray zone]] autorelease];
    } else {
      [result.accountIdsArray appendArray:other.accountIdsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFRequestTF2Friends_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFRequestTF2Friends_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addAccountIds:[input readUInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)accountIds {
  return result.accountIdsArray;
}
- (uint32_t)accountIdsAtIndex:(NSUInteger)index {
  return [result accountIdsAtIndex:index];
}
- (CMsgTFRequestTF2Friends_Builder *)addAccountIds:(uint32_t)value {
  if (result.accountIdsArray == nil) {
    result.accountIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [result.accountIdsArray addUint32:value];
  return self;
}
- (CMsgTFRequestTF2Friends_Builder *)setAccountIdsArray:(NSArray *)array {
  result.accountIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CMsgTFRequestTF2Friends_Builder *)setAccountIdsValues:(const uint32_t *)values count:(NSUInteger)count {
  result.accountIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CMsgTFRequestTF2Friends_Builder *)clearAccountIds {
  result.accountIdsArray = nil;
  return self;
}
@end

@interface CMsgTFRequestTF2FriendsResponse ()
@property (retain) PBAppendableArray * accountIdsArray;
@end

@implementation CMsgTFRequestTF2FriendsResponse

@synthesize accountIdsArray;
@dynamic accountIds;
- (void) dealloc {
  self.accountIdsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFRequestTF2FriendsResponse* defaultCMsgTFRequestTF2FriendsResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFRequestTF2FriendsResponse class]) {
    defaultCMsgTFRequestTF2FriendsResponseInstance = [[CMsgTFRequestTF2FriendsResponse alloc] init];
  }
}
+ (CMsgTFRequestTF2FriendsResponse*) defaultInstance {
  return defaultCMsgTFRequestTF2FriendsResponseInstance;
}
- (CMsgTFRequestTF2FriendsResponse*) defaultInstance {
  return defaultCMsgTFRequestTF2FriendsResponseInstance;
}
- (PBArray *)accountIds {
  return accountIdsArray;
}
- (uint32_t)accountIdsAtIndex:(NSUInteger)index {
  return [accountIdsArray uint32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger accountIdsArrayCount = self.accountIdsArray.count;
  if (accountIdsArrayCount > 0) {
    const uint32_t *values = (const uint32_t *)self.accountIdsArray.data;
    for (NSUInteger i = 0; i < accountIdsArrayCount; ++i) {
      [output writeUInt32:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.accountIdsArray.count;
    const uint32_t *values = (const uint32_t *)self.accountIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFRequestTF2FriendsResponse*) parseFromData:(NSData*) data {
  return (CMsgTFRequestTF2FriendsResponse*)[[[CMsgTFRequestTF2FriendsResponse builder] mergeFromData:data] build];
}
+ (CMsgTFRequestTF2FriendsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestTF2FriendsResponse*)[[[CMsgTFRequestTF2FriendsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestTF2FriendsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFRequestTF2FriendsResponse*)[[[CMsgTFRequestTF2FriendsResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgTFRequestTF2FriendsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestTF2FriendsResponse*)[[[CMsgTFRequestTF2FriendsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestTF2FriendsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFRequestTF2FriendsResponse*)[[[CMsgTFRequestTF2FriendsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFRequestTF2FriendsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestTF2FriendsResponse*)[[[CMsgTFRequestTF2FriendsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestTF2FriendsResponse_Builder*) builder {
  return [[[CMsgTFRequestTF2FriendsResponse_Builder alloc] init] autorelease];
}
+ (CMsgTFRequestTF2FriendsResponse_Builder*) builderWithPrototype:(CMsgTFRequestTF2FriendsResponse*) prototype {
  return [[CMsgTFRequestTF2FriendsResponse builder] mergeFrom:prototype];
}
- (CMsgTFRequestTF2FriendsResponse_Builder*) builder {
  return [CMsgTFRequestTF2FriendsResponse builder];
}
- (CMsgTFRequestTF2FriendsResponse_Builder*) toBuilder {
  return [CMsgTFRequestTF2FriendsResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (NSNumber* value in self.accountIdsArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIds", value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFRequestTF2FriendsResponse class]]) {
    return NO;
  }
  CMsgTFRequestTF2FriendsResponse *otherMessage = other;
  return
      [self.accountIdsArray isEqualToArray:otherMessage.accountIdsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (NSNumber* value in self.accountIdsArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFRequestTF2FriendsResponse_Builder()
@property (retain) CMsgTFRequestTF2FriendsResponse* _builderResult;
@end

@implementation CMsgTFRequestTF2FriendsResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFRequestTF2FriendsResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFRequestTF2FriendsResponse_Builder*) clear {
  _builderResult = [[[CMsgTFRequestTF2FriendsResponse alloc] init] autorelease];
  return self;
}
- (CMsgTFRequestTF2FriendsResponse_Builder*) clone {
  return [CMsgTFRequestTF2FriendsResponse builderWithPrototype:_builderResult];
}
- (CMsgTFRequestTF2FriendsResponse*) defaultInstance {
  return [CMsgTFRequestTF2FriendsResponse defaultInstance];
}
- (CMsgTFRequestTF2FriendsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFRequestTF2FriendsResponse*) buildPartial {
  CMsgTFRequestTF2FriendsResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFRequestTF2FriendsResponse_Builder*) mergeFrom:(CMsgTFRequestTF2FriendsResponse*) other {
  if (other == [CMsgTFRequestTF2FriendsResponse defaultInstance]) {
    return self;
  }
  if (other.accountIdsArray.count > 0) {
    if (result.accountIdsArray == nil) {
      result.accountIdsArray = [[other.accountIdsArray copyWithZone:[other.accountIdsArray zone]] autorelease];
    } else {
      [result.accountIdsArray appendArray:other.accountIdsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFRequestTF2FriendsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFRequestTF2FriendsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addAccountIds:[input readUInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)accountIds {
  return result.accountIdsArray;
}
- (uint32_t)accountIdsAtIndex:(NSUInteger)index {
  return [result accountIdsAtIndex:index];
}
- (CMsgTFRequestTF2FriendsResponse_Builder *)addAccountIds:(uint32_t)value {
  if (result.accountIdsArray == nil) {
    result.accountIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [result.accountIdsArray addUint32:value];
  return self;
}
- (CMsgTFRequestTF2FriendsResponse_Builder *)setAccountIdsArray:(NSArray *)array {
  result.accountIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CMsgTFRequestTF2FriendsResponse_Builder *)setAccountIdsValues:(const uint32_t *)values count:(NSUInteger)count {
  result.accountIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CMsgTFRequestTF2FriendsResponse_Builder *)clearAccountIds {
  result.accountIdsArray = nil;
  return self;
}
@end

@interface CSOTFPlayerInfo ()
@property uint32_t numNewUsersHelped;
@property BOOL trialAccount;
@end

@implementation CSOTFPlayerInfo

- (BOOL) hasNumNewUsersHelped {
  return !!hasNumNewUsersHelped_;
}
- (void) setHasNumNewUsersHelped:(BOOL) value_ {
  hasNumNewUsersHelped_ = !!value_;
}
@synthesize numNewUsersHelped;
- (BOOL) hasTrialAccount {
  return !!hasTrialAccount_;
}
- (void) setHasTrialAccount:(BOOL) value_ {
  hasTrialAccount_ = !!value_;
}
- (BOOL) trialAccount {
  return !!trialAccount_;
}
- (void) setTrialAccount:(BOOL) value_ {
  trialAccount_ = !!value_;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.numNewUsersHelped = 0;
    self.trialAccount = NO;
  }
  return self;
}
static CSOTFPlayerInfo* defaultCSOTFPlayerInfoInstance = nil;
+ (void) initialize {
  if (self == [CSOTFPlayerInfo class]) {
    defaultCSOTFPlayerInfoInstance = [[CSOTFPlayerInfo alloc] init];
  }
}
+ (CSOTFPlayerInfo*) defaultInstance {
  return defaultCSOTFPlayerInfoInstance;
}
- (CSOTFPlayerInfo*) defaultInstance {
  return defaultCSOTFPlayerInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNumNewUsersHelped) {
    [output writeUInt32:1 value:self.numNewUsersHelped];
  }
  if (self.hasTrialAccount) {
    [output writeBool:2 value:self.trialAccount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNumNewUsersHelped) {
    size_ += computeUInt32Size(1, self.numNewUsersHelped);
  }
  if (self.hasTrialAccount) {
    size_ += computeBoolSize(2, self.trialAccount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CSOTFPlayerInfo*) parseFromData:(NSData*) data {
  return (CSOTFPlayerInfo*)[[[CSOTFPlayerInfo builder] mergeFromData:data] build];
}
+ (CSOTFPlayerInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPlayerInfo*)[[[CSOTFPlayerInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPlayerInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CSOTFPlayerInfo*)[[[CSOTFPlayerInfo builder] mergeFromInputStream:input] build];
}
+ (CSOTFPlayerInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPlayerInfo*)[[[CSOTFPlayerInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPlayerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CSOTFPlayerInfo*)[[[CSOTFPlayerInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CSOTFPlayerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPlayerInfo*)[[[CSOTFPlayerInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPlayerInfo_Builder*) builder {
  return [[[CSOTFPlayerInfo_Builder alloc] init] autorelease];
}
+ (CSOTFPlayerInfo_Builder*) builderWithPrototype:(CSOTFPlayerInfo*) prototype {
  return [[CSOTFPlayerInfo builder] mergeFrom:prototype];
}
- (CSOTFPlayerInfo_Builder*) builder {
  return [CSOTFPlayerInfo builder];
}
- (CSOTFPlayerInfo_Builder*) toBuilder {
  return [CSOTFPlayerInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNumNewUsersHelped) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numNewUsersHelped", [NSNumber numberWithInt:self.numNewUsersHelped]];
  }
  if (self.hasTrialAccount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"trialAccount", [NSNumber numberWithBool:self.trialAccount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CSOTFPlayerInfo class]]) {
    return NO;
  }
  CSOTFPlayerInfo *otherMessage = other;
  return
      self.hasNumNewUsersHelped == otherMessage.hasNumNewUsersHelped &&
      (!self.hasNumNewUsersHelped || self.numNewUsersHelped == otherMessage.numNewUsersHelped) &&
      self.hasTrialAccount == otherMessage.hasTrialAccount &&
      (!self.hasTrialAccount || self.trialAccount == otherMessage.trialAccount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasNumNewUsersHelped) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numNewUsersHelped] hash];
  }
  if (self.hasTrialAccount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.trialAccount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CSOTFPlayerInfo_Builder()
@property (retain) CSOTFPlayerInfo* _builderResult;
@end

@implementation CSOTFPlayerInfo_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CSOTFPlayerInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CSOTFPlayerInfo_Builder*) clear {
  _builderResult = [[[CSOTFPlayerInfo alloc] init] autorelease];
  return self;
}
- (CSOTFPlayerInfo_Builder*) clone {
  return [CSOTFPlayerInfo builderWithPrototype:_builderResult];
}
- (CSOTFPlayerInfo*) defaultInstance {
  return [CSOTFPlayerInfo defaultInstance];
}
- (CSOTFPlayerInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CSOTFPlayerInfo*) buildPartial {
  CSOTFPlayerInfo* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CSOTFPlayerInfo_Builder*) mergeFrom:(CSOTFPlayerInfo*) other {
  if (other == [CSOTFPlayerInfo defaultInstance]) {
    return self;
  }
  if (other.hasNumNewUsersHelped) {
    [self setNumNewUsersHelped:other.numNewUsersHelped];
  }
  if (other.hasTrialAccount) {
    [self setTrialAccount:other.trialAccount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CSOTFPlayerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CSOTFPlayerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setNumNewUsersHelped:[input readUInt32]];
        break;
      }
      case 16: {
        [self setTrialAccount:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasNumNewUsersHelped {
  return result.hasNumNewUsersHelped;
}
- (uint32_t) numNewUsersHelped {
  return result.numNewUsersHelped;
}
- (CSOTFPlayerInfo_Builder*) setNumNewUsersHelped:(uint32_t) value {
  result.hasNumNewUsersHelped = YES;
  result.numNewUsersHelped = value;
  return self;
}
- (CSOTFPlayerInfo_Builder*) clearNumNewUsersHelped {
  result.hasNumNewUsersHelped = NO;
  result.numNewUsersHelped = 0;
  return self;
}
- (BOOL) hasTrialAccount {
  return result.hasTrialAccount;
}
- (BOOL) trialAccount {
  return result.trialAccount;
}
- (CSOTFPlayerInfo_Builder*) setTrialAccount:(BOOL) value {
  result.hasTrialAccount = YES;
  result.trialAccount = value;
  return self;
}
- (CSOTFPlayerInfo_Builder*) clearTrialAccount {
  result.hasTrialAccount = NO;
  result.trialAccount = NO;
  return self;
}
@end

@interface CMsgTFThankedBySomeone ()
@property uint64_t thankerSteamId;
@end

@implementation CMsgTFThankedBySomeone

- (BOOL) hasThankerSteamId {
  return !!hasThankerSteamId_;
}
- (void) setHasThankerSteamId:(BOOL) value_ {
  hasThankerSteamId_ = !!value_;
}
@synthesize thankerSteamId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.thankerSteamId = 0L;
  }
  return self;
}
static CMsgTFThankedBySomeone* defaultCMsgTFThankedBySomeoneInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFThankedBySomeone class]) {
    defaultCMsgTFThankedBySomeoneInstance = [[CMsgTFThankedBySomeone alloc] init];
  }
}
+ (CMsgTFThankedBySomeone*) defaultInstance {
  return defaultCMsgTFThankedBySomeoneInstance;
}
- (CMsgTFThankedBySomeone*) defaultInstance {
  return defaultCMsgTFThankedBySomeoneInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasThankerSteamId) {
    [output writeUInt64:1 value:self.thankerSteamId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasThankerSteamId) {
    size_ += computeUInt64Size(1, self.thankerSteamId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFThankedBySomeone*) parseFromData:(NSData*) data {
  return (CMsgTFThankedBySomeone*)[[[CMsgTFThankedBySomeone builder] mergeFromData:data] build];
}
+ (CMsgTFThankedBySomeone*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFThankedBySomeone*)[[[CMsgTFThankedBySomeone builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFThankedBySomeone*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFThankedBySomeone*)[[[CMsgTFThankedBySomeone builder] mergeFromInputStream:input] build];
}
+ (CMsgTFThankedBySomeone*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFThankedBySomeone*)[[[CMsgTFThankedBySomeone builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFThankedBySomeone*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFThankedBySomeone*)[[[CMsgTFThankedBySomeone builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFThankedBySomeone*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFThankedBySomeone*)[[[CMsgTFThankedBySomeone builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFThankedBySomeone_Builder*) builder {
  return [[[CMsgTFThankedBySomeone_Builder alloc] init] autorelease];
}
+ (CMsgTFThankedBySomeone_Builder*) builderWithPrototype:(CMsgTFThankedBySomeone*) prototype {
  return [[CMsgTFThankedBySomeone builder] mergeFrom:prototype];
}
- (CMsgTFThankedBySomeone_Builder*) builder {
  return [CMsgTFThankedBySomeone builder];
}
- (CMsgTFThankedBySomeone_Builder*) toBuilder {
  return [CMsgTFThankedBySomeone builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasThankerSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"thankerSteamId", [NSNumber numberWithLongLong:self.thankerSteamId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFThankedBySomeone class]]) {
    return NO;
  }
  CMsgTFThankedBySomeone *otherMessage = other;
  return
      self.hasThankerSteamId == otherMessage.hasThankerSteamId &&
      (!self.hasThankerSteamId || self.thankerSteamId == otherMessage.thankerSteamId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasThankerSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.thankerSteamId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFThankedBySomeone_Builder()
@property (retain) CMsgTFThankedBySomeone* _builderResult;
@end

@implementation CMsgTFThankedBySomeone_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFThankedBySomeone alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFThankedBySomeone_Builder*) clear {
  _builderResult = [[[CMsgTFThankedBySomeone alloc] init] autorelease];
  return self;
}
- (CMsgTFThankedBySomeone_Builder*) clone {
  return [CMsgTFThankedBySomeone builderWithPrototype:_builderResult];
}
- (CMsgTFThankedBySomeone*) defaultInstance {
  return [CMsgTFThankedBySomeone defaultInstance];
}
- (CMsgTFThankedBySomeone*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFThankedBySomeone*) buildPartial {
  CMsgTFThankedBySomeone* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFThankedBySomeone_Builder*) mergeFrom:(CMsgTFThankedBySomeone*) other {
  if (other == [CMsgTFThankedBySomeone defaultInstance]) {
    return self;
  }
  if (other.hasThankerSteamId) {
    [self setThankerSteamId:other.thankerSteamId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFThankedBySomeone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFThankedBySomeone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setThankerSteamId:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasThankerSteamId {
  return result.hasThankerSteamId;
}
- (uint64_t) thankerSteamId {
  return result.thankerSteamId;
}
- (CMsgTFThankedBySomeone_Builder*) setThankerSteamId:(uint64_t) value {
  result.hasThankerSteamId = YES;
  result.thankerSteamId = value;
  return self;
}
- (CMsgTFThankedBySomeone_Builder*) clearThankerSteamId {
  result.hasThankerSteamId = NO;
  result.thankerSteamId = 0L;
  return self;
}
@end

@interface CMsgTFThankedSomeone ()
@end

@implementation CMsgTFThankedSomeone

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFThankedSomeone* defaultCMsgTFThankedSomeoneInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFThankedSomeone class]) {
    defaultCMsgTFThankedSomeoneInstance = [[CMsgTFThankedSomeone alloc] init];
  }
}
+ (CMsgTFThankedSomeone*) defaultInstance {
  return defaultCMsgTFThankedSomeoneInstance;
}
- (CMsgTFThankedSomeone*) defaultInstance {
  return defaultCMsgTFThankedSomeoneInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFThankedSomeone*) parseFromData:(NSData*) data {
  return (CMsgTFThankedSomeone*)[[[CMsgTFThankedSomeone builder] mergeFromData:data] build];
}
+ (CMsgTFThankedSomeone*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFThankedSomeone*)[[[CMsgTFThankedSomeone builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFThankedSomeone*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFThankedSomeone*)[[[CMsgTFThankedSomeone builder] mergeFromInputStream:input] build];
}
+ (CMsgTFThankedSomeone*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFThankedSomeone*)[[[CMsgTFThankedSomeone builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFThankedSomeone*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFThankedSomeone*)[[[CMsgTFThankedSomeone builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFThankedSomeone*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFThankedSomeone*)[[[CMsgTFThankedSomeone builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFThankedSomeone_Builder*) builder {
  return [[[CMsgTFThankedSomeone_Builder alloc] init] autorelease];
}
+ (CMsgTFThankedSomeone_Builder*) builderWithPrototype:(CMsgTFThankedSomeone*) prototype {
  return [[CMsgTFThankedSomeone builder] mergeFrom:prototype];
}
- (CMsgTFThankedSomeone_Builder*) builder {
  return [CMsgTFThankedSomeone builder];
}
- (CMsgTFThankedSomeone_Builder*) toBuilder {
  return [CMsgTFThankedSomeone builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFThankedSomeone class]]) {
    return NO;
  }
  CMsgTFThankedSomeone *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFThankedSomeone_Builder()
@property (retain) CMsgTFThankedSomeone* _builderResult;
@end

@implementation CMsgTFThankedSomeone_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFThankedSomeone alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFThankedSomeone_Builder*) clear {
  _builderResult = [[[CMsgTFThankedSomeone alloc] init] autorelease];
  return self;
}
- (CMsgTFThankedSomeone_Builder*) clone {
  return [CMsgTFThankedSomeone builderWithPrototype:_builderResult];
}
- (CMsgTFThankedSomeone*) defaultInstance {
  return [CMsgTFThankedSomeone defaultInstance];
}
- (CMsgTFThankedSomeone*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFThankedSomeone*) buildPartial {
  CMsgTFThankedSomeone* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFThankedSomeone_Builder*) mergeFrom:(CMsgTFThankedSomeone*) other {
  if (other == [CMsgTFThankedSomeone defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFThankedSomeone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFThankedSomeone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgTFFreeTrialConvertedToPremium ()
@end

@implementation CMsgTFFreeTrialConvertedToPremium

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFFreeTrialConvertedToPremium* defaultCMsgTFFreeTrialConvertedToPremiumInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFFreeTrialConvertedToPremium class]) {
    defaultCMsgTFFreeTrialConvertedToPremiumInstance = [[CMsgTFFreeTrialConvertedToPremium alloc] init];
  }
}
+ (CMsgTFFreeTrialConvertedToPremium*) defaultInstance {
  return defaultCMsgTFFreeTrialConvertedToPremiumInstance;
}
- (CMsgTFFreeTrialConvertedToPremium*) defaultInstance {
  return defaultCMsgTFFreeTrialConvertedToPremiumInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromData:(NSData*) data {
  return (CMsgTFFreeTrialConvertedToPremium*)[[[CMsgTFFreeTrialConvertedToPremium builder] mergeFromData:data] build];
}
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFFreeTrialConvertedToPremium*)[[[CMsgTFFreeTrialConvertedToPremium builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFFreeTrialConvertedToPremium*)[[[CMsgTFFreeTrialConvertedToPremium builder] mergeFromInputStream:input] build];
}
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFFreeTrialConvertedToPremium*)[[[CMsgTFFreeTrialConvertedToPremium builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFFreeTrialConvertedToPremium*)[[[CMsgTFFreeTrialConvertedToPremium builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFFreeTrialConvertedToPremium*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFFreeTrialConvertedToPremium*)[[[CMsgTFFreeTrialConvertedToPremium builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFFreeTrialConvertedToPremium_Builder*) builder {
  return [[[CMsgTFFreeTrialConvertedToPremium_Builder alloc] init] autorelease];
}
+ (CMsgTFFreeTrialConvertedToPremium_Builder*) builderWithPrototype:(CMsgTFFreeTrialConvertedToPremium*) prototype {
  return [[CMsgTFFreeTrialConvertedToPremium builder] mergeFrom:prototype];
}
- (CMsgTFFreeTrialConvertedToPremium_Builder*) builder {
  return [CMsgTFFreeTrialConvertedToPremium builder];
}
- (CMsgTFFreeTrialConvertedToPremium_Builder*) toBuilder {
  return [CMsgTFFreeTrialConvertedToPremium builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFFreeTrialConvertedToPremium class]]) {
    return NO;
  }
  CMsgTFFreeTrialConvertedToPremium *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFFreeTrialConvertedToPremium_Builder()
@property (retain) CMsgTFFreeTrialConvertedToPremium* _builderResult;
@end

@implementation CMsgTFFreeTrialConvertedToPremium_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFFreeTrialConvertedToPremium alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFFreeTrialConvertedToPremium_Builder*) clear {
  _builderResult = [[[CMsgTFFreeTrialConvertedToPremium alloc] init] autorelease];
  return self;
}
- (CMsgTFFreeTrialConvertedToPremium_Builder*) clone {
  return [CMsgTFFreeTrialConvertedToPremium builderWithPrototype:_builderResult];
}
- (CMsgTFFreeTrialConvertedToPremium*) defaultInstance {
  return [CMsgTFFreeTrialConvertedToPremium defaultInstance];
}
- (CMsgTFFreeTrialConvertedToPremium*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFFreeTrialConvertedToPremium*) buildPartial {
  CMsgTFFreeTrialConvertedToPremium* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFFreeTrialConvertedToPremium_Builder*) mergeFrom:(CMsgTFFreeTrialConvertedToPremium*) other {
  if (other == [CMsgTFFreeTrialConvertedToPremium defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFFreeTrialConvertedToPremium_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFFreeTrialConvertedToPremium_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgSaxxyAwarded ()
@property uint32_t category;
@property (retain) PBAppendableArray * winnerNamesArray;
@end

@implementation CMsgSaxxyAwarded

- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value_ {
  hasCategory_ = !!value_;
}
@synthesize category;
@synthesize winnerNamesArray;
@dynamic winnerNames;
- (void) dealloc {
  self.winnerNamesArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.category = 0;
  }
  return self;
}
static CMsgSaxxyAwarded* defaultCMsgSaxxyAwardedInstance = nil;
+ (void) initialize {
  if (self == [CMsgSaxxyAwarded class]) {
    defaultCMsgSaxxyAwardedInstance = [[CMsgSaxxyAwarded alloc] init];
  }
}
+ (CMsgSaxxyAwarded*) defaultInstance {
  return defaultCMsgSaxxyAwardedInstance;
}
- (CMsgSaxxyAwarded*) defaultInstance {
  return defaultCMsgSaxxyAwardedInstance;
}
- (PBArray *)winnerNames {
  return winnerNamesArray;
}
- (NSString*)winnerNamesAtIndex:(NSUInteger)index {
  return [winnerNamesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCategory) {
    [output writeUInt32:1 value:self.category];
  }
  const NSUInteger winnerNamesArrayCount = self.winnerNamesArray.count;
  if (winnerNamesArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.winnerNamesArray.data;
    for (NSUInteger i = 0; i < winnerNamesArrayCount; ++i) {
      [output writeString:2 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCategory) {
    size_ += computeUInt32Size(1, self.category);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.winnerNamesArray.count;
    const NSString* *values = (const NSString* *)self.winnerNamesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgSaxxyAwarded*) parseFromData:(NSData*) data {
  return (CMsgSaxxyAwarded*)[[[CMsgSaxxyAwarded builder] mergeFromData:data] build];
}
+ (CMsgSaxxyAwarded*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSaxxyAwarded*)[[[CMsgSaxxyAwarded builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgSaxxyAwarded*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgSaxxyAwarded*)[[[CMsgSaxxyAwarded builder] mergeFromInputStream:input] build];
}
+ (CMsgSaxxyAwarded*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSaxxyAwarded*)[[[CMsgSaxxyAwarded builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgSaxxyAwarded*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgSaxxyAwarded*)[[[CMsgSaxxyAwarded builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgSaxxyAwarded*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSaxxyAwarded*)[[[CMsgSaxxyAwarded builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgSaxxyAwarded_Builder*) builder {
  return [[[CMsgSaxxyAwarded_Builder alloc] init] autorelease];
}
+ (CMsgSaxxyAwarded_Builder*) builderWithPrototype:(CMsgSaxxyAwarded*) prototype {
  return [[CMsgSaxxyAwarded builder] mergeFrom:prototype];
}
- (CMsgSaxxyAwarded_Builder*) builder {
  return [CMsgSaxxyAwarded builder];
}
- (CMsgSaxxyAwarded_Builder*) toBuilder {
  return [CMsgSaxxyAwarded builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCategory) {
    [output appendFormat:@"%@%@: %@\n", indent, @"category", [NSNumber numberWithInt:self.category]];
  }
  for (NSString* element in self.winnerNamesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"winnerNames", element];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgSaxxyAwarded class]]) {
    return NO;
  }
  CMsgSaxxyAwarded *otherMessage = other;
  return
      self.hasCategory == otherMessage.hasCategory &&
      (!self.hasCategory || self.category == otherMessage.category) &&
      [self.winnerNamesArray isEqualToArray:otherMessage.winnerNamesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasCategory) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.category] hash];
  }
  for (NSString* element in self.winnerNamesArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgSaxxyAwarded_Builder()
@property (retain) CMsgSaxxyAwarded* _builderResult;
@end

@implementation CMsgSaxxyAwarded_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgSaxxyAwarded alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgSaxxyAwarded_Builder*) clear {
  _builderResult = [[[CMsgSaxxyAwarded alloc] init] autorelease];
  return self;
}
- (CMsgSaxxyAwarded_Builder*) clone {
  return [CMsgSaxxyAwarded builderWithPrototype:_builderResult];
}
- (CMsgSaxxyAwarded*) defaultInstance {
  return [CMsgSaxxyAwarded defaultInstance];
}
- (CMsgSaxxyAwarded*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgSaxxyAwarded*) buildPartial {
  CMsgSaxxyAwarded* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgSaxxyAwarded_Builder*) mergeFrom:(CMsgSaxxyAwarded*) other {
  if (other == [CMsgSaxxyAwarded defaultInstance]) {
    return self;
  }
  if (other.hasCategory) {
    [self setCategory:other.category];
  }
  if (other.winnerNamesArray.count > 0) {
    if (result.winnerNamesArray == nil) {
      result.winnerNamesArray = [[other.winnerNamesArray copyWithZone:[other.winnerNamesArray zone]] autorelease];
    } else {
      [result.winnerNamesArray appendArray:other.winnerNamesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgSaxxyAwarded_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgSaxxyAwarded_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCategory:[input readUInt32]];
        break;
      }
      case 18: {
        [self addWinnerNames:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (uint32_t) category {
  return result.category;
}
- (CMsgSaxxyAwarded_Builder*) setCategory:(uint32_t) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (CMsgSaxxyAwarded_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = 0;
  return self;
}
- (PBAppendableArray *)winnerNames {
  return result.winnerNamesArray;
}
- (NSString*)winnerNamesAtIndex:(NSUInteger)index {
  return [result winnerNamesAtIndex:index];
}
- (CMsgSaxxyAwarded_Builder *)addWinnerNames:(NSString*)value {
  if (result.winnerNamesArray == nil) {
    result.winnerNamesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.winnerNamesArray addObject:value];
  return self;
}
- (CMsgSaxxyAwarded_Builder *)setWinnerNamesArray:(NSArray *)array {
  result.winnerNamesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgSaxxyAwarded_Builder *)setWinnerNamesValues:(const NSString* *)values count:(NSUInteger)count {
  result.winnerNamesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgSaxxyAwarded_Builder *)clearWinnerNames {
  result.winnerNamesArray = nil;
  return self;
}
@end

@interface CMsgReplaySubmitContestEntry ()
@property (retain) NSString* youtubeUrl;
@property uint32_t category;
@end

@implementation CMsgReplaySubmitContestEntry

- (BOOL) hasYoutubeUrl {
  return !!hasYoutubeUrl_;
}
- (void) setHasYoutubeUrl:(BOOL) value_ {
  hasYoutubeUrl_ = !!value_;
}
@synthesize youtubeUrl;
- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value_ {
  hasCategory_ = !!value_;
}
@synthesize category;
- (void) dealloc {
  self.youtubeUrl = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.youtubeUrl = @"";
    self.category = 0;
  }
  return self;
}
static CMsgReplaySubmitContestEntry* defaultCMsgReplaySubmitContestEntryInstance = nil;
+ (void) initialize {
  if (self == [CMsgReplaySubmitContestEntry class]) {
    defaultCMsgReplaySubmitContestEntryInstance = [[CMsgReplaySubmitContestEntry alloc] init];
  }
}
+ (CMsgReplaySubmitContestEntry*) defaultInstance {
  return defaultCMsgReplaySubmitContestEntryInstance;
}
- (CMsgReplaySubmitContestEntry*) defaultInstance {
  return defaultCMsgReplaySubmitContestEntryInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasYoutubeUrl) {
    [output writeString:1 value:self.youtubeUrl];
  }
  if (self.hasCategory) {
    [output writeUInt32:2 value:self.category];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasYoutubeUrl) {
    size_ += computeStringSize(1, self.youtubeUrl);
  }
  if (self.hasCategory) {
    size_ += computeUInt32Size(2, self.category);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgReplaySubmitContestEntry*) parseFromData:(NSData*) data {
  return (CMsgReplaySubmitContestEntry*)[[[CMsgReplaySubmitContestEntry builder] mergeFromData:data] build];
}
+ (CMsgReplaySubmitContestEntry*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgReplaySubmitContestEntry*)[[[CMsgReplaySubmitContestEntry builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgReplaySubmitContestEntry*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgReplaySubmitContestEntry*)[[[CMsgReplaySubmitContestEntry builder] mergeFromInputStream:input] build];
}
+ (CMsgReplaySubmitContestEntry*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgReplaySubmitContestEntry*)[[[CMsgReplaySubmitContestEntry builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgReplaySubmitContestEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgReplaySubmitContestEntry*)[[[CMsgReplaySubmitContestEntry builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgReplaySubmitContestEntry*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgReplaySubmitContestEntry*)[[[CMsgReplaySubmitContestEntry builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgReplaySubmitContestEntry_Builder*) builder {
  return [[[CMsgReplaySubmitContestEntry_Builder alloc] init] autorelease];
}
+ (CMsgReplaySubmitContestEntry_Builder*) builderWithPrototype:(CMsgReplaySubmitContestEntry*) prototype {
  return [[CMsgReplaySubmitContestEntry builder] mergeFrom:prototype];
}
- (CMsgReplaySubmitContestEntry_Builder*) builder {
  return [CMsgReplaySubmitContestEntry builder];
}
- (CMsgReplaySubmitContestEntry_Builder*) toBuilder {
  return [CMsgReplaySubmitContestEntry builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasYoutubeUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"youtubeUrl", self.youtubeUrl];
  }
  if (self.hasCategory) {
    [output appendFormat:@"%@%@: %@\n", indent, @"category", [NSNumber numberWithInt:self.category]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgReplaySubmitContestEntry class]]) {
    return NO;
  }
  CMsgReplaySubmitContestEntry *otherMessage = other;
  return
      self.hasYoutubeUrl == otherMessage.hasYoutubeUrl &&
      (!self.hasYoutubeUrl || [self.youtubeUrl isEqual:otherMessage.youtubeUrl]) &&
      self.hasCategory == otherMessage.hasCategory &&
      (!self.hasCategory || self.category == otherMessage.category) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasYoutubeUrl) {
    hashCode = hashCode * 31 + [self.youtubeUrl hash];
  }
  if (self.hasCategory) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.category] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgReplaySubmitContestEntry_Builder()
@property (retain) CMsgReplaySubmitContestEntry* _builderResult;
@end

@implementation CMsgReplaySubmitContestEntry_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgReplaySubmitContestEntry alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgReplaySubmitContestEntry_Builder*) clear {
  _builderResult = [[[CMsgReplaySubmitContestEntry alloc] init] autorelease];
  return self;
}
- (CMsgReplaySubmitContestEntry_Builder*) clone {
  return [CMsgReplaySubmitContestEntry builderWithPrototype:_builderResult];
}
- (CMsgReplaySubmitContestEntry*) defaultInstance {
  return [CMsgReplaySubmitContestEntry defaultInstance];
}
- (CMsgReplaySubmitContestEntry*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgReplaySubmitContestEntry*) buildPartial {
  CMsgReplaySubmitContestEntry* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgReplaySubmitContestEntry_Builder*) mergeFrom:(CMsgReplaySubmitContestEntry*) other {
  if (other == [CMsgReplaySubmitContestEntry defaultInstance]) {
    return self;
  }
  if (other.hasYoutubeUrl) {
    [self setYoutubeUrl:other.youtubeUrl];
  }
  if (other.hasCategory) {
    [self setCategory:other.category];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgReplaySubmitContestEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgReplaySubmitContestEntry_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setYoutubeUrl:[input readString]];
        break;
      }
      case 16: {
        [self setCategory:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasYoutubeUrl {
  return result.hasYoutubeUrl;
}
- (NSString*) youtubeUrl {
  return result.youtubeUrl;
}
- (CMsgReplaySubmitContestEntry_Builder*) setYoutubeUrl:(NSString*) value {
  result.hasYoutubeUrl = YES;
  result.youtubeUrl = value;
  return self;
}
- (CMsgReplaySubmitContestEntry_Builder*) clearYoutubeUrl {
  result.hasYoutubeUrl = NO;
  result.youtubeUrl = @"";
  return self;
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (uint32_t) category {
  return result.category;
}
- (CMsgReplaySubmitContestEntry_Builder*) setCategory:(uint32_t) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (CMsgReplaySubmitContestEntry_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = 0;
  return self;
}
@end

@interface CMsgReplaySubmitContestEntryResponse ()
@property BOOL success;
@end

@implementation CMsgReplaySubmitContestEntryResponse

- (BOOL) hasSuccess {
  return !!hasSuccess_;
}
- (void) setHasSuccess:(BOOL) value_ {
  hasSuccess_ = !!value_;
}
- (BOOL) success {
  return !!success_;
}
- (void) setSuccess:(BOOL) value_ {
  success_ = !!value_;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.success = NO;
  }
  return self;
}
static CMsgReplaySubmitContestEntryResponse* defaultCMsgReplaySubmitContestEntryResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgReplaySubmitContestEntryResponse class]) {
    defaultCMsgReplaySubmitContestEntryResponseInstance = [[CMsgReplaySubmitContestEntryResponse alloc] init];
  }
}
+ (CMsgReplaySubmitContestEntryResponse*) defaultInstance {
  return defaultCMsgReplaySubmitContestEntryResponseInstance;
}
- (CMsgReplaySubmitContestEntryResponse*) defaultInstance {
  return defaultCMsgReplaySubmitContestEntryResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSuccess) {
    [output writeBool:1 value:self.success];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSuccess) {
    size_ += computeBoolSize(1, self.success);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgReplaySubmitContestEntryResponse*) parseFromData:(NSData*) data {
  return (CMsgReplaySubmitContestEntryResponse*)[[[CMsgReplaySubmitContestEntryResponse builder] mergeFromData:data] build];
}
+ (CMsgReplaySubmitContestEntryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgReplaySubmitContestEntryResponse*)[[[CMsgReplaySubmitContestEntryResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgReplaySubmitContestEntryResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgReplaySubmitContestEntryResponse*)[[[CMsgReplaySubmitContestEntryResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgReplaySubmitContestEntryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgReplaySubmitContestEntryResponse*)[[[CMsgReplaySubmitContestEntryResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgReplaySubmitContestEntryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgReplaySubmitContestEntryResponse*)[[[CMsgReplaySubmitContestEntryResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgReplaySubmitContestEntryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgReplaySubmitContestEntryResponse*)[[[CMsgReplaySubmitContestEntryResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgReplaySubmitContestEntryResponse_Builder*) builder {
  return [[[CMsgReplaySubmitContestEntryResponse_Builder alloc] init] autorelease];
}
+ (CMsgReplaySubmitContestEntryResponse_Builder*) builderWithPrototype:(CMsgReplaySubmitContestEntryResponse*) prototype {
  return [[CMsgReplaySubmitContestEntryResponse builder] mergeFrom:prototype];
}
- (CMsgReplaySubmitContestEntryResponse_Builder*) builder {
  return [CMsgReplaySubmitContestEntryResponse builder];
}
- (CMsgReplaySubmitContestEntryResponse_Builder*) toBuilder {
  return [CMsgReplaySubmitContestEntryResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSuccess) {
    [output appendFormat:@"%@%@: %@\n", indent, @"success", [NSNumber numberWithBool:self.success]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgReplaySubmitContestEntryResponse class]]) {
    return NO;
  }
  CMsgReplaySubmitContestEntryResponse *otherMessage = other;
  return
      self.hasSuccess == otherMessage.hasSuccess &&
      (!self.hasSuccess || self.success == otherMessage.success) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSuccess) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.success] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgReplaySubmitContestEntryResponse_Builder()
@property (retain) CMsgReplaySubmitContestEntryResponse* _builderResult;
@end

@implementation CMsgReplaySubmitContestEntryResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgReplaySubmitContestEntryResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgReplaySubmitContestEntryResponse_Builder*) clear {
  _builderResult = [[[CMsgReplaySubmitContestEntryResponse alloc] init] autorelease];
  return self;
}
- (CMsgReplaySubmitContestEntryResponse_Builder*) clone {
  return [CMsgReplaySubmitContestEntryResponse builderWithPrototype:_builderResult];
}
- (CMsgReplaySubmitContestEntryResponse*) defaultInstance {
  return [CMsgReplaySubmitContestEntryResponse defaultInstance];
}
- (CMsgReplaySubmitContestEntryResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgReplaySubmitContestEntryResponse*) buildPartial {
  CMsgReplaySubmitContestEntryResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgReplaySubmitContestEntryResponse_Builder*) mergeFrom:(CMsgReplaySubmitContestEntryResponse*) other {
  if (other == [CMsgReplaySubmitContestEntryResponse defaultInstance]) {
    return self;
  }
  if (other.hasSuccess) {
    [self setSuccess:other.success];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgReplaySubmitContestEntryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgReplaySubmitContestEntryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSuccess:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSuccess {
  return result.hasSuccess;
}
- (BOOL) success {
  return result.success;
}
- (CMsgReplaySubmitContestEntryResponse_Builder*) setSuccess:(BOOL) value {
  result.hasSuccess = YES;
  result.success = value;
  return self;
}
- (CMsgReplaySubmitContestEntryResponse_Builder*) clearSuccess {
  result.hasSuccess = NO;
  result.success = NO;
  return self;
}
@end

@interface CReplayCachedContestData ()
@property uint32_t timestamp;
@property uint32_t numVotesLastDay;
@property (retain) PBAppendableArray * videoEntryIdsArray;
@property uint32_t numFlagsLastDay;
@end

@implementation CReplayCachedContestData

- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value_ {
  hasTimestamp_ = !!value_;
}
@synthesize timestamp;
- (BOOL) hasNumVotesLastDay {
  return !!hasNumVotesLastDay_;
}
- (void) setHasNumVotesLastDay:(BOOL) value_ {
  hasNumVotesLastDay_ = !!value_;
}
@synthesize numVotesLastDay;
@synthesize videoEntryIdsArray;
@dynamic videoEntryIds;
- (BOOL) hasNumFlagsLastDay {
  return !!hasNumFlagsLastDay_;
}
- (void) setHasNumFlagsLastDay:(BOOL) value_ {
  hasNumFlagsLastDay_ = !!value_;
}
@synthesize numFlagsLastDay;
- (void) dealloc {
  self.videoEntryIdsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.timestamp = 0;
    self.numVotesLastDay = 0;
    self.numFlagsLastDay = 0;
  }
  return self;
}
static CReplayCachedContestData* defaultCReplayCachedContestDataInstance = nil;
+ (void) initialize {
  if (self == [CReplayCachedContestData class]) {
    defaultCReplayCachedContestDataInstance = [[CReplayCachedContestData alloc] init];
  }
}
+ (CReplayCachedContestData*) defaultInstance {
  return defaultCReplayCachedContestDataInstance;
}
- (CReplayCachedContestData*) defaultInstance {
  return defaultCReplayCachedContestDataInstance;
}
- (PBArray *)videoEntryIds {
  return videoEntryIdsArray;
}
- (uint32_t)videoEntryIdsAtIndex:(NSUInteger)index {
  return [videoEntryIdsArray uint32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTimestamp) {
    [output writeFixed32:1 value:self.timestamp];
  }
  if (self.hasNumVotesLastDay) {
    [output writeUInt32:2 value:self.numVotesLastDay];
  }
  const NSUInteger videoEntryIdsArrayCount = self.videoEntryIdsArray.count;
  if (videoEntryIdsArrayCount > 0) {
    const uint32_t *values = (const uint32_t *)self.videoEntryIdsArray.data;
    for (NSUInteger i = 0; i < videoEntryIdsArrayCount; ++i) {
      [output writeUInt32:3 value:values[i]];
    }
  }
  if (self.hasNumFlagsLastDay) {
    [output writeUInt32:4 value:self.numFlagsLastDay];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTimestamp) {
    size_ += computeFixed32Size(1, self.timestamp);
  }
  if (self.hasNumVotesLastDay) {
    size_ += computeUInt32Size(2, self.numVotesLastDay);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.videoEntryIdsArray.count;
    const uint32_t *values = (const uint32_t *)self.videoEntryIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  if (self.hasNumFlagsLastDay) {
    size_ += computeUInt32Size(4, self.numFlagsLastDay);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CReplayCachedContestData*) parseFromData:(NSData*) data {
  return (CReplayCachedContestData*)[[[CReplayCachedContestData builder] mergeFromData:data] build];
}
+ (CReplayCachedContestData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CReplayCachedContestData*)[[[CReplayCachedContestData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CReplayCachedContestData*) parseFromInputStream:(NSInputStream*) input {
  return (CReplayCachedContestData*)[[[CReplayCachedContestData builder] mergeFromInputStream:input] build];
}
+ (CReplayCachedContestData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CReplayCachedContestData*)[[[CReplayCachedContestData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CReplayCachedContestData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CReplayCachedContestData*)[[[CReplayCachedContestData builder] mergeFromCodedInputStream:input] build];
}
+ (CReplayCachedContestData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CReplayCachedContestData*)[[[CReplayCachedContestData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CReplayCachedContestData_Builder*) builder {
  return [[[CReplayCachedContestData_Builder alloc] init] autorelease];
}
+ (CReplayCachedContestData_Builder*) builderWithPrototype:(CReplayCachedContestData*) prototype {
  return [[CReplayCachedContestData builder] mergeFrom:prototype];
}
- (CReplayCachedContestData_Builder*) builder {
  return [CReplayCachedContestData builder];
}
- (CReplayCachedContestData_Builder*) toBuilder {
  return [CReplayCachedContestData builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timestamp", [NSNumber numberWithInt:self.timestamp]];
  }
  if (self.hasNumVotesLastDay) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numVotesLastDay", [NSNumber numberWithInt:self.numVotesLastDay]];
  }
  for (NSNumber* value in self.videoEntryIdsArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"videoEntryIds", value];
  }
  if (self.hasNumFlagsLastDay) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numFlagsLastDay", [NSNumber numberWithInt:self.numFlagsLastDay]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CReplayCachedContestData class]]) {
    return NO;
  }
  CReplayCachedContestData *otherMessage = other;
  return
      self.hasTimestamp == otherMessage.hasTimestamp &&
      (!self.hasTimestamp || self.timestamp == otherMessage.timestamp) &&
      self.hasNumVotesLastDay == otherMessage.hasNumVotesLastDay &&
      (!self.hasNumVotesLastDay || self.numVotesLastDay == otherMessage.numVotesLastDay) &&
      [self.videoEntryIdsArray isEqualToArray:otherMessage.videoEntryIdsArray] &&
      self.hasNumFlagsLastDay == otherMessage.hasNumFlagsLastDay &&
      (!self.hasNumFlagsLastDay || self.numFlagsLastDay == otherMessage.numFlagsLastDay) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.timestamp] hash];
  }
  if (self.hasNumVotesLastDay) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numVotesLastDay] hash];
  }
  for (NSNumber* value in self.videoEntryIdsArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  if (self.hasNumFlagsLastDay) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numFlagsLastDay] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CReplayCachedContestData_Builder()
@property (retain) CReplayCachedContestData* _builderResult;
@end

@implementation CReplayCachedContestData_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CReplayCachedContestData alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CReplayCachedContestData_Builder*) clear {
  _builderResult = [[[CReplayCachedContestData alloc] init] autorelease];
  return self;
}
- (CReplayCachedContestData_Builder*) clone {
  return [CReplayCachedContestData builderWithPrototype:_builderResult];
}
- (CReplayCachedContestData*) defaultInstance {
  return [CReplayCachedContestData defaultInstance];
}
- (CReplayCachedContestData*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CReplayCachedContestData*) buildPartial {
  CReplayCachedContestData* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CReplayCachedContestData_Builder*) mergeFrom:(CReplayCachedContestData*) other {
  if (other == [CReplayCachedContestData defaultInstance]) {
    return self;
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasNumVotesLastDay) {
    [self setNumVotesLastDay:other.numVotesLastDay];
  }
  if (other.videoEntryIdsArray.count > 0) {
    if (result.videoEntryIdsArray == nil) {
      result.videoEntryIdsArray = [[other.videoEntryIdsArray copyWithZone:[other.videoEntryIdsArray zone]] autorelease];
    } else {
      [result.videoEntryIdsArray appendArray:other.videoEntryIdsArray];
    }
  }
  if (other.hasNumFlagsLastDay) {
    [self setNumFlagsLastDay:other.numFlagsLastDay];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CReplayCachedContestData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CReplayCachedContestData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setTimestamp:[input readFixed32]];
        break;
      }
      case 16: {
        [self setNumVotesLastDay:[input readUInt32]];
        break;
      }
      case 24: {
        [self addVideoEntryIds:[input readUInt32]];
        break;
      }
      case 32: {
        [self setNumFlagsLastDay:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (uint32_t) timestamp {
  return result.timestamp;
}
- (CReplayCachedContestData_Builder*) setTimestamp:(uint32_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (CReplayCachedContestData_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0;
  return self;
}
- (BOOL) hasNumVotesLastDay {
  return result.hasNumVotesLastDay;
}
- (uint32_t) numVotesLastDay {
  return result.numVotesLastDay;
}
- (CReplayCachedContestData_Builder*) setNumVotesLastDay:(uint32_t) value {
  result.hasNumVotesLastDay = YES;
  result.numVotesLastDay = value;
  return self;
}
- (CReplayCachedContestData_Builder*) clearNumVotesLastDay {
  result.hasNumVotesLastDay = NO;
  result.numVotesLastDay = 0;
  return self;
}
- (PBAppendableArray *)videoEntryIds {
  return result.videoEntryIdsArray;
}
- (uint32_t)videoEntryIdsAtIndex:(NSUInteger)index {
  return [result videoEntryIdsAtIndex:index];
}
- (CReplayCachedContestData_Builder *)addVideoEntryIds:(uint32_t)value {
  if (result.videoEntryIdsArray == nil) {
    result.videoEntryIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [result.videoEntryIdsArray addUint32:value];
  return self;
}
- (CReplayCachedContestData_Builder *)setVideoEntryIdsArray:(NSArray *)array {
  result.videoEntryIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CReplayCachedContestData_Builder *)setVideoEntryIdsValues:(const uint32_t *)values count:(NSUInteger)count {
  result.videoEntryIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CReplayCachedContestData_Builder *)clearVideoEntryIds {
  result.videoEntryIdsArray = nil;
  return self;
}
- (BOOL) hasNumFlagsLastDay {
  return result.hasNumFlagsLastDay;
}
- (uint32_t) numFlagsLastDay {
  return result.numFlagsLastDay;
}
- (CReplayCachedContestData_Builder*) setNumFlagsLastDay:(uint32_t) value {
  result.hasNumFlagsLastDay = YES;
  result.numFlagsLastDay = value;
  return self;
}
- (CReplayCachedContestData_Builder*) clearNumFlagsLastDay {
  result.hasNumFlagsLastDay = NO;
  result.numFlagsLastDay = 0;
  return self;
}
@end

@interface CMsgTFCoaching_AddToCoaches ()
@end

@implementation CMsgTFCoaching_AddToCoaches

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFCoaching_AddToCoaches* defaultCMsgTFCoaching_AddToCoachesInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_AddToCoaches class]) {
    defaultCMsgTFCoaching_AddToCoachesInstance = [[CMsgTFCoaching_AddToCoaches alloc] init];
  }
}
+ (CMsgTFCoaching_AddToCoaches*) defaultInstance {
  return defaultCMsgTFCoaching_AddToCoachesInstance;
}
- (CMsgTFCoaching_AddToCoaches*) defaultInstance {
  return defaultCMsgTFCoaching_AddToCoachesInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_AddToCoaches*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_AddToCoaches*)[[[CMsgTFCoaching_AddToCoaches builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_AddToCoaches*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_AddToCoaches*)[[[CMsgTFCoaching_AddToCoaches builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_AddToCoaches*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_AddToCoaches*)[[[CMsgTFCoaching_AddToCoaches builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_AddToCoaches*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_AddToCoaches*)[[[CMsgTFCoaching_AddToCoaches builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_AddToCoaches*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_AddToCoaches*)[[[CMsgTFCoaching_AddToCoaches builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_AddToCoaches*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_AddToCoaches*)[[[CMsgTFCoaching_AddToCoaches builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_AddToCoaches_Builder*) builder {
  return [[[CMsgTFCoaching_AddToCoaches_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_AddToCoaches_Builder*) builderWithPrototype:(CMsgTFCoaching_AddToCoaches*) prototype {
  return [[CMsgTFCoaching_AddToCoaches builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_AddToCoaches_Builder*) builder {
  return [CMsgTFCoaching_AddToCoaches builder];
}
- (CMsgTFCoaching_AddToCoaches_Builder*) toBuilder {
  return [CMsgTFCoaching_AddToCoaches builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_AddToCoaches class]]) {
    return NO;
  }
  CMsgTFCoaching_AddToCoaches *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_AddToCoaches_Builder()
@property (retain) CMsgTFCoaching_AddToCoaches* _builderResult;
@end

@implementation CMsgTFCoaching_AddToCoaches_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_AddToCoaches alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_AddToCoaches_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_AddToCoaches alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_AddToCoaches_Builder*) clone {
  return [CMsgTFCoaching_AddToCoaches builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_AddToCoaches*) defaultInstance {
  return [CMsgTFCoaching_AddToCoaches defaultInstance];
}
- (CMsgTFCoaching_AddToCoaches*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_AddToCoaches*) buildPartial {
  CMsgTFCoaching_AddToCoaches* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_AddToCoaches_Builder*) mergeFrom:(CMsgTFCoaching_AddToCoaches*) other {
  if (other == [CMsgTFCoaching_AddToCoaches defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_AddToCoaches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_AddToCoaches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgTFCoaching_RemoveFromCoaches ()
@end

@implementation CMsgTFCoaching_RemoveFromCoaches

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFCoaching_RemoveFromCoaches* defaultCMsgTFCoaching_RemoveFromCoachesInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_RemoveFromCoaches class]) {
    defaultCMsgTFCoaching_RemoveFromCoachesInstance = [[CMsgTFCoaching_RemoveFromCoaches alloc] init];
  }
}
+ (CMsgTFCoaching_RemoveFromCoaches*) defaultInstance {
  return defaultCMsgTFCoaching_RemoveFromCoachesInstance;
}
- (CMsgTFCoaching_RemoveFromCoaches*) defaultInstance {
  return defaultCMsgTFCoaching_RemoveFromCoachesInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_RemoveFromCoaches*)[[[CMsgTFCoaching_RemoveFromCoaches builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_RemoveFromCoaches*)[[[CMsgTFCoaching_RemoveFromCoaches builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_RemoveFromCoaches*)[[[CMsgTFCoaching_RemoveFromCoaches builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_RemoveFromCoaches*)[[[CMsgTFCoaching_RemoveFromCoaches builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_RemoveFromCoaches*)[[[CMsgTFCoaching_RemoveFromCoaches builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_RemoveFromCoaches*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_RemoveFromCoaches*)[[[CMsgTFCoaching_RemoveFromCoaches builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_RemoveFromCoaches_Builder*) builder {
  return [[[CMsgTFCoaching_RemoveFromCoaches_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_RemoveFromCoaches_Builder*) builderWithPrototype:(CMsgTFCoaching_RemoveFromCoaches*) prototype {
  return [[CMsgTFCoaching_RemoveFromCoaches builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) builder {
  return [CMsgTFCoaching_RemoveFromCoaches builder];
}
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) toBuilder {
  return [CMsgTFCoaching_RemoveFromCoaches builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_RemoveFromCoaches class]]) {
    return NO;
  }
  CMsgTFCoaching_RemoveFromCoaches *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_RemoveFromCoaches_Builder()
@property (retain) CMsgTFCoaching_RemoveFromCoaches* _builderResult;
@end

@implementation CMsgTFCoaching_RemoveFromCoaches_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_RemoveFromCoaches alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_RemoveFromCoaches alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) clone {
  return [CMsgTFCoaching_RemoveFromCoaches builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_RemoveFromCoaches*) defaultInstance {
  return [CMsgTFCoaching_RemoveFromCoaches defaultInstance];
}
- (CMsgTFCoaching_RemoveFromCoaches*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_RemoveFromCoaches*) buildPartial {
  CMsgTFCoaching_RemoveFromCoaches* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) mergeFrom:(CMsgTFCoaching_RemoveFromCoaches*) other {
  if (other == [CMsgTFCoaching_RemoveFromCoaches defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_RemoveFromCoaches_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgTFCoaching_FindCoach ()
@property uint32_t accountIdFriendAsCoach;
@end

@implementation CMsgTFCoaching_FindCoach

- (BOOL) hasAccountIdFriendAsCoach {
  return !!hasAccountIdFriendAsCoach_;
}
- (void) setHasAccountIdFriendAsCoach:(BOOL) value_ {
  hasAccountIdFriendAsCoach_ = !!value_;
}
@synthesize accountIdFriendAsCoach;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountIdFriendAsCoach = 0;
  }
  return self;
}
static CMsgTFCoaching_FindCoach* defaultCMsgTFCoaching_FindCoachInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_FindCoach class]) {
    defaultCMsgTFCoaching_FindCoachInstance = [[CMsgTFCoaching_FindCoach alloc] init];
  }
}
+ (CMsgTFCoaching_FindCoach*) defaultInstance {
  return defaultCMsgTFCoaching_FindCoachInstance;
}
- (CMsgTFCoaching_FindCoach*) defaultInstance {
  return defaultCMsgTFCoaching_FindCoachInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountIdFriendAsCoach) {
    [output writeUInt32:1 value:self.accountIdFriendAsCoach];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountIdFriendAsCoach) {
    size_ += computeUInt32Size(1, self.accountIdFriendAsCoach);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_FindCoach*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_FindCoach*)[[[CMsgTFCoaching_FindCoach builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_FindCoach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_FindCoach*)[[[CMsgTFCoaching_FindCoach builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_FindCoach*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_FindCoach*)[[[CMsgTFCoaching_FindCoach builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_FindCoach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_FindCoach*)[[[CMsgTFCoaching_FindCoach builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_FindCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_FindCoach*)[[[CMsgTFCoaching_FindCoach builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_FindCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_FindCoach*)[[[CMsgTFCoaching_FindCoach builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_FindCoach_Builder*) builder {
  return [[[CMsgTFCoaching_FindCoach_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_FindCoach_Builder*) builderWithPrototype:(CMsgTFCoaching_FindCoach*) prototype {
  return [[CMsgTFCoaching_FindCoach builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_FindCoach_Builder*) builder {
  return [CMsgTFCoaching_FindCoach builder];
}
- (CMsgTFCoaching_FindCoach_Builder*) toBuilder {
  return [CMsgTFCoaching_FindCoach builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountIdFriendAsCoach) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdFriendAsCoach", [NSNumber numberWithInt:self.accountIdFriendAsCoach]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_FindCoach class]]) {
    return NO;
  }
  CMsgTFCoaching_FindCoach *otherMessage = other;
  return
      self.hasAccountIdFriendAsCoach == otherMessage.hasAccountIdFriendAsCoach &&
      (!self.hasAccountIdFriendAsCoach || self.accountIdFriendAsCoach == otherMessage.accountIdFriendAsCoach) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountIdFriendAsCoach) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdFriendAsCoach] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_FindCoach_Builder()
@property (retain) CMsgTFCoaching_FindCoach* _builderResult;
@end

@implementation CMsgTFCoaching_FindCoach_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_FindCoach alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_FindCoach_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_FindCoach alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_FindCoach_Builder*) clone {
  return [CMsgTFCoaching_FindCoach builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_FindCoach*) defaultInstance {
  return [CMsgTFCoaching_FindCoach defaultInstance];
}
- (CMsgTFCoaching_FindCoach*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_FindCoach*) buildPartial {
  CMsgTFCoaching_FindCoach* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_FindCoach_Builder*) mergeFrom:(CMsgTFCoaching_FindCoach*) other {
  if (other == [CMsgTFCoaching_FindCoach defaultInstance]) {
    return self;
  }
  if (other.hasAccountIdFriendAsCoach) {
    [self setAccountIdFriendAsCoach:other.accountIdFriendAsCoach];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_FindCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_FindCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountIdFriendAsCoach:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountIdFriendAsCoach {
  return result.hasAccountIdFriendAsCoach;
}
- (uint32_t) accountIdFriendAsCoach {
  return result.accountIdFriendAsCoach;
}
- (CMsgTFCoaching_FindCoach_Builder*) setAccountIdFriendAsCoach:(uint32_t) value {
  result.hasAccountIdFriendAsCoach = YES;
  result.accountIdFriendAsCoach = value;
  return self;
}
- (CMsgTFCoaching_FindCoach_Builder*) clearAccountIdFriendAsCoach {
  result.hasAccountIdFriendAsCoach = NO;
  result.accountIdFriendAsCoach = 0;
  return self;
}
@end

@interface CMsgTFCoaching_FindCoachResponse ()
@property BOOL foundCoach;
@property uint32_t numLikes;
@property (retain) NSString* coachName;
@end

@implementation CMsgTFCoaching_FindCoachResponse

- (BOOL) hasFoundCoach {
  return !!hasFoundCoach_;
}
- (void) setHasFoundCoach:(BOOL) value_ {
  hasFoundCoach_ = !!value_;
}
- (BOOL) foundCoach {
  return !!foundCoach_;
}
- (void) setFoundCoach:(BOOL) value_ {
  foundCoach_ = !!value_;
}
- (BOOL) hasNumLikes {
  return !!hasNumLikes_;
}
- (void) setHasNumLikes:(BOOL) value_ {
  hasNumLikes_ = !!value_;
}
@synthesize numLikes;
- (BOOL) hasCoachName {
  return !!hasCoachName_;
}
- (void) setHasCoachName:(BOOL) value_ {
  hasCoachName_ = !!value_;
}
@synthesize coachName;
- (void) dealloc {
  self.coachName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.foundCoach = NO;
    self.numLikes = 0;
    self.coachName = @"";
  }
  return self;
}
static CMsgTFCoaching_FindCoachResponse* defaultCMsgTFCoaching_FindCoachResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_FindCoachResponse class]) {
    defaultCMsgTFCoaching_FindCoachResponseInstance = [[CMsgTFCoaching_FindCoachResponse alloc] init];
  }
}
+ (CMsgTFCoaching_FindCoachResponse*) defaultInstance {
  return defaultCMsgTFCoaching_FindCoachResponseInstance;
}
- (CMsgTFCoaching_FindCoachResponse*) defaultInstance {
  return defaultCMsgTFCoaching_FindCoachResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFoundCoach) {
    [output writeBool:1 value:self.foundCoach];
  }
  if (self.hasNumLikes) {
    [output writeUInt32:2 value:self.numLikes];
  }
  if (self.hasCoachName) {
    [output writeString:3 value:self.coachName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFoundCoach) {
    size_ += computeBoolSize(1, self.foundCoach);
  }
  if (self.hasNumLikes) {
    size_ += computeUInt32Size(2, self.numLikes);
  }
  if (self.hasCoachName) {
    size_ += computeStringSize(3, self.coachName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_FindCoachResponse*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_FindCoachResponse*)[[[CMsgTFCoaching_FindCoachResponse builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_FindCoachResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_FindCoachResponse*)[[[CMsgTFCoaching_FindCoachResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_FindCoachResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_FindCoachResponse*)[[[CMsgTFCoaching_FindCoachResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_FindCoachResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_FindCoachResponse*)[[[CMsgTFCoaching_FindCoachResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_FindCoachResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_FindCoachResponse*)[[[CMsgTFCoaching_FindCoachResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_FindCoachResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_FindCoachResponse*)[[[CMsgTFCoaching_FindCoachResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_FindCoachResponse_Builder*) builder {
  return [[[CMsgTFCoaching_FindCoachResponse_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_FindCoachResponse_Builder*) builderWithPrototype:(CMsgTFCoaching_FindCoachResponse*) prototype {
  return [[CMsgTFCoaching_FindCoachResponse builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) builder {
  return [CMsgTFCoaching_FindCoachResponse builder];
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) toBuilder {
  return [CMsgTFCoaching_FindCoachResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFoundCoach) {
    [output appendFormat:@"%@%@: %@\n", indent, @"foundCoach", [NSNumber numberWithBool:self.foundCoach]];
  }
  if (self.hasNumLikes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numLikes", [NSNumber numberWithInt:self.numLikes]];
  }
  if (self.hasCoachName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"coachName", self.coachName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_FindCoachResponse class]]) {
    return NO;
  }
  CMsgTFCoaching_FindCoachResponse *otherMessage = other;
  return
      self.hasFoundCoach == otherMessage.hasFoundCoach &&
      (!self.hasFoundCoach || self.foundCoach == otherMessage.foundCoach) &&
      self.hasNumLikes == otherMessage.hasNumLikes &&
      (!self.hasNumLikes || self.numLikes == otherMessage.numLikes) &&
      self.hasCoachName == otherMessage.hasCoachName &&
      (!self.hasCoachName || [self.coachName isEqual:otherMessage.coachName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasFoundCoach) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.foundCoach] hash];
  }
  if (self.hasNumLikes) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numLikes] hash];
  }
  if (self.hasCoachName) {
    hashCode = hashCode * 31 + [self.coachName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_FindCoachResponse_Builder()
@property (retain) CMsgTFCoaching_FindCoachResponse* _builderResult;
@end

@implementation CMsgTFCoaching_FindCoachResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_FindCoachResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_FindCoachResponse alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) clone {
  return [CMsgTFCoaching_FindCoachResponse builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_FindCoachResponse*) defaultInstance {
  return [CMsgTFCoaching_FindCoachResponse defaultInstance];
}
- (CMsgTFCoaching_FindCoachResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_FindCoachResponse*) buildPartial {
  CMsgTFCoaching_FindCoachResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) mergeFrom:(CMsgTFCoaching_FindCoachResponse*) other {
  if (other == [CMsgTFCoaching_FindCoachResponse defaultInstance]) {
    return self;
  }
  if (other.hasFoundCoach) {
    [self setFoundCoach:other.foundCoach];
  }
  if (other.hasNumLikes) {
    [self setNumLikes:other.numLikes];
  }
  if (other.hasCoachName) {
    [self setCoachName:other.coachName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFoundCoach:[input readBool]];
        break;
      }
      case 16: {
        [self setNumLikes:[input readUInt32]];
        break;
      }
      case 26: {
        [self setCoachName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFoundCoach {
  return result.hasFoundCoach;
}
- (BOOL) foundCoach {
  return result.foundCoach;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) setFoundCoach:(BOOL) value {
  result.hasFoundCoach = YES;
  result.foundCoach = value;
  return self;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) clearFoundCoach {
  result.hasFoundCoach = NO;
  result.foundCoach = NO;
  return self;
}
- (BOOL) hasNumLikes {
  return result.hasNumLikes;
}
- (uint32_t) numLikes {
  return result.numLikes;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) setNumLikes:(uint32_t) value {
  result.hasNumLikes = YES;
  result.numLikes = value;
  return self;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) clearNumLikes {
  result.hasNumLikes = NO;
  result.numLikes = 0;
  return self;
}
- (BOOL) hasCoachName {
  return result.hasCoachName;
}
- (NSString*) coachName {
  return result.coachName;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) setCoachName:(NSString*) value {
  result.hasCoachName = YES;
  result.coachName = value;
  return self;
}
- (CMsgTFCoaching_FindCoachResponse_Builder*) clearCoachName {
  result.hasCoachName = NO;
  result.coachName = @"";
  return self;
}
@end

@interface CMsgTFCoaching_AskCoach ()
@property uint32_t accountIdStudent;
@property BOOL studentIsFriend;
@end

@implementation CMsgTFCoaching_AskCoach

- (BOOL) hasAccountIdStudent {
  return !!hasAccountIdStudent_;
}
- (void) setHasAccountIdStudent:(BOOL) value_ {
  hasAccountIdStudent_ = !!value_;
}
@synthesize accountIdStudent;
- (BOOL) hasStudentIsFriend {
  return !!hasStudentIsFriend_;
}
- (void) setHasStudentIsFriend:(BOOL) value_ {
  hasStudentIsFriend_ = !!value_;
}
- (BOOL) studentIsFriend {
  return !!studentIsFriend_;
}
- (void) setStudentIsFriend:(BOOL) value_ {
  studentIsFriend_ = !!value_;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountIdStudent = 0;
    self.studentIsFriend = NO;
  }
  return self;
}
static CMsgTFCoaching_AskCoach* defaultCMsgTFCoaching_AskCoachInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_AskCoach class]) {
    defaultCMsgTFCoaching_AskCoachInstance = [[CMsgTFCoaching_AskCoach alloc] init];
  }
}
+ (CMsgTFCoaching_AskCoach*) defaultInstance {
  return defaultCMsgTFCoaching_AskCoachInstance;
}
- (CMsgTFCoaching_AskCoach*) defaultInstance {
  return defaultCMsgTFCoaching_AskCoachInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountIdStudent) {
    [output writeUInt32:1 value:self.accountIdStudent];
  }
  if (self.hasStudentIsFriend) {
    [output writeBool:2 value:self.studentIsFriend];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountIdStudent) {
    size_ += computeUInt32Size(1, self.accountIdStudent);
  }
  if (self.hasStudentIsFriend) {
    size_ += computeBoolSize(2, self.studentIsFriend);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_AskCoach*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_AskCoach*)[[[CMsgTFCoaching_AskCoach builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_AskCoach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_AskCoach*)[[[CMsgTFCoaching_AskCoach builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_AskCoach*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_AskCoach*)[[[CMsgTFCoaching_AskCoach builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_AskCoach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_AskCoach*)[[[CMsgTFCoaching_AskCoach builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_AskCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_AskCoach*)[[[CMsgTFCoaching_AskCoach builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_AskCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_AskCoach*)[[[CMsgTFCoaching_AskCoach builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_AskCoach_Builder*) builder {
  return [[[CMsgTFCoaching_AskCoach_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_AskCoach_Builder*) builderWithPrototype:(CMsgTFCoaching_AskCoach*) prototype {
  return [[CMsgTFCoaching_AskCoach builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_AskCoach_Builder*) builder {
  return [CMsgTFCoaching_AskCoach builder];
}
- (CMsgTFCoaching_AskCoach_Builder*) toBuilder {
  return [CMsgTFCoaching_AskCoach builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountIdStudent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdStudent", [NSNumber numberWithInt:self.accountIdStudent]];
  }
  if (self.hasStudentIsFriend) {
    [output appendFormat:@"%@%@: %@\n", indent, @"studentIsFriend", [NSNumber numberWithBool:self.studentIsFriend]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_AskCoach class]]) {
    return NO;
  }
  CMsgTFCoaching_AskCoach *otherMessage = other;
  return
      self.hasAccountIdStudent == otherMessage.hasAccountIdStudent &&
      (!self.hasAccountIdStudent || self.accountIdStudent == otherMessage.accountIdStudent) &&
      self.hasStudentIsFriend == otherMessage.hasStudentIsFriend &&
      (!self.hasStudentIsFriend || self.studentIsFriend == otherMessage.studentIsFriend) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountIdStudent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdStudent] hash];
  }
  if (self.hasStudentIsFriend) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.studentIsFriend] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_AskCoach_Builder()
@property (retain) CMsgTFCoaching_AskCoach* _builderResult;
@end

@implementation CMsgTFCoaching_AskCoach_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_AskCoach alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_AskCoach_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_AskCoach alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_AskCoach_Builder*) clone {
  return [CMsgTFCoaching_AskCoach builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_AskCoach*) defaultInstance {
  return [CMsgTFCoaching_AskCoach defaultInstance];
}
- (CMsgTFCoaching_AskCoach*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_AskCoach*) buildPartial {
  CMsgTFCoaching_AskCoach* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_AskCoach_Builder*) mergeFrom:(CMsgTFCoaching_AskCoach*) other {
  if (other == [CMsgTFCoaching_AskCoach defaultInstance]) {
    return self;
  }
  if (other.hasAccountIdStudent) {
    [self setAccountIdStudent:other.accountIdStudent];
  }
  if (other.hasStudentIsFriend) {
    [self setStudentIsFriend:other.studentIsFriend];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_AskCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_AskCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountIdStudent:[input readUInt32]];
        break;
      }
      case 16: {
        [self setStudentIsFriend:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountIdStudent {
  return result.hasAccountIdStudent;
}
- (uint32_t) accountIdStudent {
  return result.accountIdStudent;
}
- (CMsgTFCoaching_AskCoach_Builder*) setAccountIdStudent:(uint32_t) value {
  result.hasAccountIdStudent = YES;
  result.accountIdStudent = value;
  return self;
}
- (CMsgTFCoaching_AskCoach_Builder*) clearAccountIdStudent {
  result.hasAccountIdStudent = NO;
  result.accountIdStudent = 0;
  return self;
}
- (BOOL) hasStudentIsFriend {
  return result.hasStudentIsFriend;
}
- (BOOL) studentIsFriend {
  return result.studentIsFriend;
}
- (CMsgTFCoaching_AskCoach_Builder*) setStudentIsFriend:(BOOL) value {
  result.hasStudentIsFriend = YES;
  result.studentIsFriend = value;
  return self;
}
- (CMsgTFCoaching_AskCoach_Builder*) clearStudentIsFriend {
  result.hasStudentIsFriend = NO;
  result.studentIsFriend = NO;
  return self;
}
@end

@interface CMsgTFCoaching_AskCoachResponse ()
@property BOOL acceptCoachingAssignment;
@end

@implementation CMsgTFCoaching_AskCoachResponse

- (BOOL) hasAcceptCoachingAssignment {
  return !!hasAcceptCoachingAssignment_;
}
- (void) setHasAcceptCoachingAssignment:(BOOL) value_ {
  hasAcceptCoachingAssignment_ = !!value_;
}
- (BOOL) acceptCoachingAssignment {
  return !!acceptCoachingAssignment_;
}
- (void) setAcceptCoachingAssignment:(BOOL) value_ {
  acceptCoachingAssignment_ = !!value_;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.acceptCoachingAssignment = NO;
  }
  return self;
}
static CMsgTFCoaching_AskCoachResponse* defaultCMsgTFCoaching_AskCoachResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_AskCoachResponse class]) {
    defaultCMsgTFCoaching_AskCoachResponseInstance = [[CMsgTFCoaching_AskCoachResponse alloc] init];
  }
}
+ (CMsgTFCoaching_AskCoachResponse*) defaultInstance {
  return defaultCMsgTFCoaching_AskCoachResponseInstance;
}
- (CMsgTFCoaching_AskCoachResponse*) defaultInstance {
  return defaultCMsgTFCoaching_AskCoachResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAcceptCoachingAssignment) {
    [output writeBool:1 value:self.acceptCoachingAssignment];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAcceptCoachingAssignment) {
    size_ += computeBoolSize(1, self.acceptCoachingAssignment);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_AskCoachResponse*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_AskCoachResponse*)[[[CMsgTFCoaching_AskCoachResponse builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_AskCoachResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_AskCoachResponse*)[[[CMsgTFCoaching_AskCoachResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_AskCoachResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_AskCoachResponse*)[[[CMsgTFCoaching_AskCoachResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_AskCoachResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_AskCoachResponse*)[[[CMsgTFCoaching_AskCoachResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_AskCoachResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_AskCoachResponse*)[[[CMsgTFCoaching_AskCoachResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_AskCoachResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_AskCoachResponse*)[[[CMsgTFCoaching_AskCoachResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_AskCoachResponse_Builder*) builder {
  return [[[CMsgTFCoaching_AskCoachResponse_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_AskCoachResponse_Builder*) builderWithPrototype:(CMsgTFCoaching_AskCoachResponse*) prototype {
  return [[CMsgTFCoaching_AskCoachResponse builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_AskCoachResponse_Builder*) builder {
  return [CMsgTFCoaching_AskCoachResponse builder];
}
- (CMsgTFCoaching_AskCoachResponse_Builder*) toBuilder {
  return [CMsgTFCoaching_AskCoachResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAcceptCoachingAssignment) {
    [output appendFormat:@"%@%@: %@\n", indent, @"acceptCoachingAssignment", [NSNumber numberWithBool:self.acceptCoachingAssignment]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_AskCoachResponse class]]) {
    return NO;
  }
  CMsgTFCoaching_AskCoachResponse *otherMessage = other;
  return
      self.hasAcceptCoachingAssignment == otherMessage.hasAcceptCoachingAssignment &&
      (!self.hasAcceptCoachingAssignment || self.acceptCoachingAssignment == otherMessage.acceptCoachingAssignment) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAcceptCoachingAssignment) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.acceptCoachingAssignment] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_AskCoachResponse_Builder()
@property (retain) CMsgTFCoaching_AskCoachResponse* _builderResult;
@end

@implementation CMsgTFCoaching_AskCoachResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_AskCoachResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_AskCoachResponse_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_AskCoachResponse alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_AskCoachResponse_Builder*) clone {
  return [CMsgTFCoaching_AskCoachResponse builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_AskCoachResponse*) defaultInstance {
  return [CMsgTFCoaching_AskCoachResponse defaultInstance];
}
- (CMsgTFCoaching_AskCoachResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_AskCoachResponse*) buildPartial {
  CMsgTFCoaching_AskCoachResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_AskCoachResponse_Builder*) mergeFrom:(CMsgTFCoaching_AskCoachResponse*) other {
  if (other == [CMsgTFCoaching_AskCoachResponse defaultInstance]) {
    return self;
  }
  if (other.hasAcceptCoachingAssignment) {
    [self setAcceptCoachingAssignment:other.acceptCoachingAssignment];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_AskCoachResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_AskCoachResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAcceptCoachingAssignment:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasAcceptCoachingAssignment {
  return result.hasAcceptCoachingAssignment;
}
- (BOOL) acceptCoachingAssignment {
  return result.acceptCoachingAssignment;
}
- (CMsgTFCoaching_AskCoachResponse_Builder*) setAcceptCoachingAssignment:(BOOL) value {
  result.hasAcceptCoachingAssignment = YES;
  result.acceptCoachingAssignment = value;
  return self;
}
- (CMsgTFCoaching_AskCoachResponse_Builder*) clearAcceptCoachingAssignment {
  result.hasAcceptCoachingAssignment = NO;
  result.acceptCoachingAssignment = NO;
  return self;
}
@end

@interface CMsgTFCoaching_CoachJoinGame ()
@property BOOL joinGame;
@property uint32_t serverAddress;
@property uint32_t serverPort;
@property uint32_t accountIdStudent;
@end

@implementation CMsgTFCoaching_CoachJoinGame

- (BOOL) hasJoinGame {
  return !!hasJoinGame_;
}
- (void) setHasJoinGame:(BOOL) value_ {
  hasJoinGame_ = !!value_;
}
- (BOOL) joinGame {
  return !!joinGame_;
}
- (void) setJoinGame:(BOOL) value_ {
  joinGame_ = !!value_;
}
- (BOOL) hasServerAddress {
  return !!hasServerAddress_;
}
- (void) setHasServerAddress:(BOOL) value_ {
  hasServerAddress_ = !!value_;
}
@synthesize serverAddress;
- (BOOL) hasServerPort {
  return !!hasServerPort_;
}
- (void) setHasServerPort:(BOOL) value_ {
  hasServerPort_ = !!value_;
}
@synthesize serverPort;
- (BOOL) hasAccountIdStudent {
  return !!hasAccountIdStudent_;
}
- (void) setHasAccountIdStudent:(BOOL) value_ {
  hasAccountIdStudent_ = !!value_;
}
@synthesize accountIdStudent;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.joinGame = NO;
    self.serverAddress = 0;
    self.serverPort = 0;
    self.accountIdStudent = 0;
  }
  return self;
}
static CMsgTFCoaching_CoachJoinGame* defaultCMsgTFCoaching_CoachJoinGameInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_CoachJoinGame class]) {
    defaultCMsgTFCoaching_CoachJoinGameInstance = [[CMsgTFCoaching_CoachJoinGame alloc] init];
  }
}
+ (CMsgTFCoaching_CoachJoinGame*) defaultInstance {
  return defaultCMsgTFCoaching_CoachJoinGameInstance;
}
- (CMsgTFCoaching_CoachJoinGame*) defaultInstance {
  return defaultCMsgTFCoaching_CoachJoinGameInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJoinGame) {
    [output writeBool:1 value:self.joinGame];
  }
  if (self.hasServerAddress) {
    [output writeUInt32:2 value:self.serverAddress];
  }
  if (self.hasServerPort) {
    [output writeUInt32:3 value:self.serverPort];
  }
  if (self.hasAccountIdStudent) {
    [output writeUInt32:4 value:self.accountIdStudent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasJoinGame) {
    size_ += computeBoolSize(1, self.joinGame);
  }
  if (self.hasServerAddress) {
    size_ += computeUInt32Size(2, self.serverAddress);
  }
  if (self.hasServerPort) {
    size_ += computeUInt32Size(3, self.serverPort);
  }
  if (self.hasAccountIdStudent) {
    size_ += computeUInt32Size(4, self.accountIdStudent);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_CoachJoinGame*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_CoachJoinGame*)[[[CMsgTFCoaching_CoachJoinGame builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_CoachJoinGame*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_CoachJoinGame*)[[[CMsgTFCoaching_CoachJoinGame builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_CoachJoinGame*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_CoachJoinGame*)[[[CMsgTFCoaching_CoachJoinGame builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_CoachJoinGame*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_CoachJoinGame*)[[[CMsgTFCoaching_CoachJoinGame builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_CoachJoinGame*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_CoachJoinGame*)[[[CMsgTFCoaching_CoachJoinGame builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_CoachJoinGame*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_CoachJoinGame*)[[[CMsgTFCoaching_CoachJoinGame builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_CoachJoinGame_Builder*) builder {
  return [[[CMsgTFCoaching_CoachJoinGame_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_CoachJoinGame_Builder*) builderWithPrototype:(CMsgTFCoaching_CoachJoinGame*) prototype {
  return [[CMsgTFCoaching_CoachJoinGame builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) builder {
  return [CMsgTFCoaching_CoachJoinGame builder];
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) toBuilder {
  return [CMsgTFCoaching_CoachJoinGame builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasJoinGame) {
    [output appendFormat:@"%@%@: %@\n", indent, @"joinGame", [NSNumber numberWithBool:self.joinGame]];
  }
  if (self.hasServerAddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverAddress", [NSNumber numberWithInt:self.serverAddress]];
  }
  if (self.hasServerPort) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverPort", [NSNumber numberWithInt:self.serverPort]];
  }
  if (self.hasAccountIdStudent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdStudent", [NSNumber numberWithInt:self.accountIdStudent]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_CoachJoinGame class]]) {
    return NO;
  }
  CMsgTFCoaching_CoachJoinGame *otherMessage = other;
  return
      self.hasJoinGame == otherMessage.hasJoinGame &&
      (!self.hasJoinGame || self.joinGame == otherMessage.joinGame) &&
      self.hasServerAddress == otherMessage.hasServerAddress &&
      (!self.hasServerAddress || self.serverAddress == otherMessage.serverAddress) &&
      self.hasServerPort == otherMessage.hasServerPort &&
      (!self.hasServerPort || self.serverPort == otherMessage.serverPort) &&
      self.hasAccountIdStudent == otherMessage.hasAccountIdStudent &&
      (!self.hasAccountIdStudent || self.accountIdStudent == otherMessage.accountIdStudent) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasJoinGame) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.joinGame] hash];
  }
  if (self.hasServerAddress) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverAddress] hash];
  }
  if (self.hasServerPort) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverPort] hash];
  }
  if (self.hasAccountIdStudent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdStudent] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_CoachJoinGame_Builder()
@property (retain) CMsgTFCoaching_CoachJoinGame* _builderResult;
@end

@implementation CMsgTFCoaching_CoachJoinGame_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_CoachJoinGame alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_CoachJoinGame alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) clone {
  return [CMsgTFCoaching_CoachJoinGame builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_CoachJoinGame*) defaultInstance {
  return [CMsgTFCoaching_CoachJoinGame defaultInstance];
}
- (CMsgTFCoaching_CoachJoinGame*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_CoachJoinGame*) buildPartial {
  CMsgTFCoaching_CoachJoinGame* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) mergeFrom:(CMsgTFCoaching_CoachJoinGame*) other {
  if (other == [CMsgTFCoaching_CoachJoinGame defaultInstance]) {
    return self;
  }
  if (other.hasJoinGame) {
    [self setJoinGame:other.joinGame];
  }
  if (other.hasServerAddress) {
    [self setServerAddress:other.serverAddress];
  }
  if (other.hasServerPort) {
    [self setServerPort:other.serverPort];
  }
  if (other.hasAccountIdStudent) {
    [self setAccountIdStudent:other.accountIdStudent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setJoinGame:[input readBool]];
        break;
      }
      case 16: {
        [self setServerAddress:[input readUInt32]];
        break;
      }
      case 24: {
        [self setServerPort:[input readUInt32]];
        break;
      }
      case 32: {
        [self setAccountIdStudent:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasJoinGame {
  return result.hasJoinGame;
}
- (BOOL) joinGame {
  return result.joinGame;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) setJoinGame:(BOOL) value {
  result.hasJoinGame = YES;
  result.joinGame = value;
  return self;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) clearJoinGame {
  result.hasJoinGame = NO;
  result.joinGame = NO;
  return self;
}
- (BOOL) hasServerAddress {
  return result.hasServerAddress;
}
- (uint32_t) serverAddress {
  return result.serverAddress;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) setServerAddress:(uint32_t) value {
  result.hasServerAddress = YES;
  result.serverAddress = value;
  return self;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) clearServerAddress {
  result.hasServerAddress = NO;
  result.serverAddress = 0;
  return self;
}
- (BOOL) hasServerPort {
  return result.hasServerPort;
}
- (uint32_t) serverPort {
  return result.serverPort;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) setServerPort:(uint32_t) value {
  result.hasServerPort = YES;
  result.serverPort = value;
  return self;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) clearServerPort {
  result.hasServerPort = NO;
  result.serverPort = 0;
  return self;
}
- (BOOL) hasAccountIdStudent {
  return result.hasAccountIdStudent;
}
- (uint32_t) accountIdStudent {
  return result.accountIdStudent;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) setAccountIdStudent:(uint32_t) value {
  result.hasAccountIdStudent = YES;
  result.accountIdStudent = value;
  return self;
}
- (CMsgTFCoaching_CoachJoinGame_Builder*) clearAccountIdStudent {
  result.hasAccountIdStudent = NO;
  result.accountIdStudent = 0;
  return self;
}
@end

@interface CMsgTFCoaching_CoachJoining ()
@property uint32_t accountIdCoach;
@property uint32_t accountIdStudent;
@end

@implementation CMsgTFCoaching_CoachJoining

- (BOOL) hasAccountIdCoach {
  return !!hasAccountIdCoach_;
}
- (void) setHasAccountIdCoach:(BOOL) value_ {
  hasAccountIdCoach_ = !!value_;
}
@synthesize accountIdCoach;
- (BOOL) hasAccountIdStudent {
  return !!hasAccountIdStudent_;
}
- (void) setHasAccountIdStudent:(BOOL) value_ {
  hasAccountIdStudent_ = !!value_;
}
@synthesize accountIdStudent;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountIdCoach = 0;
    self.accountIdStudent = 0;
  }
  return self;
}
static CMsgTFCoaching_CoachJoining* defaultCMsgTFCoaching_CoachJoiningInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_CoachJoining class]) {
    defaultCMsgTFCoaching_CoachJoiningInstance = [[CMsgTFCoaching_CoachJoining alloc] init];
  }
}
+ (CMsgTFCoaching_CoachJoining*) defaultInstance {
  return defaultCMsgTFCoaching_CoachJoiningInstance;
}
- (CMsgTFCoaching_CoachJoining*) defaultInstance {
  return defaultCMsgTFCoaching_CoachJoiningInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountIdCoach) {
    [output writeUInt32:1 value:self.accountIdCoach];
  }
  if (self.hasAccountIdStudent) {
    [output writeUInt32:2 value:self.accountIdStudent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountIdCoach) {
    size_ += computeUInt32Size(1, self.accountIdCoach);
  }
  if (self.hasAccountIdStudent) {
    size_ += computeUInt32Size(2, self.accountIdStudent);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_CoachJoining*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_CoachJoining*)[[[CMsgTFCoaching_CoachJoining builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_CoachJoining*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_CoachJoining*)[[[CMsgTFCoaching_CoachJoining builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_CoachJoining*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_CoachJoining*)[[[CMsgTFCoaching_CoachJoining builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_CoachJoining*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_CoachJoining*)[[[CMsgTFCoaching_CoachJoining builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_CoachJoining*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_CoachJoining*)[[[CMsgTFCoaching_CoachJoining builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_CoachJoining*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_CoachJoining*)[[[CMsgTFCoaching_CoachJoining builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_CoachJoining_Builder*) builder {
  return [[[CMsgTFCoaching_CoachJoining_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_CoachJoining_Builder*) builderWithPrototype:(CMsgTFCoaching_CoachJoining*) prototype {
  return [[CMsgTFCoaching_CoachJoining builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_CoachJoining_Builder*) builder {
  return [CMsgTFCoaching_CoachJoining builder];
}
- (CMsgTFCoaching_CoachJoining_Builder*) toBuilder {
  return [CMsgTFCoaching_CoachJoining builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountIdCoach) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdCoach", [NSNumber numberWithInt:self.accountIdCoach]];
  }
  if (self.hasAccountIdStudent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdStudent", [NSNumber numberWithInt:self.accountIdStudent]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_CoachJoining class]]) {
    return NO;
  }
  CMsgTFCoaching_CoachJoining *otherMessage = other;
  return
      self.hasAccountIdCoach == otherMessage.hasAccountIdCoach &&
      (!self.hasAccountIdCoach || self.accountIdCoach == otherMessage.accountIdCoach) &&
      self.hasAccountIdStudent == otherMessage.hasAccountIdStudent &&
      (!self.hasAccountIdStudent || self.accountIdStudent == otherMessage.accountIdStudent) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountIdCoach) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdCoach] hash];
  }
  if (self.hasAccountIdStudent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdStudent] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_CoachJoining_Builder()
@property (retain) CMsgTFCoaching_CoachJoining* _builderResult;
@end

@implementation CMsgTFCoaching_CoachJoining_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_CoachJoining alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_CoachJoining_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_CoachJoining alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_CoachJoining_Builder*) clone {
  return [CMsgTFCoaching_CoachJoining builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_CoachJoining*) defaultInstance {
  return [CMsgTFCoaching_CoachJoining defaultInstance];
}
- (CMsgTFCoaching_CoachJoining*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_CoachJoining*) buildPartial {
  CMsgTFCoaching_CoachJoining* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_CoachJoining_Builder*) mergeFrom:(CMsgTFCoaching_CoachJoining*) other {
  if (other == [CMsgTFCoaching_CoachJoining defaultInstance]) {
    return self;
  }
  if (other.hasAccountIdCoach) {
    [self setAccountIdCoach:other.accountIdCoach];
  }
  if (other.hasAccountIdStudent) {
    [self setAccountIdStudent:other.accountIdStudent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_CoachJoining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_CoachJoining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountIdCoach:[input readUInt32]];
        break;
      }
      case 16: {
        [self setAccountIdStudent:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountIdCoach {
  return result.hasAccountIdCoach;
}
- (uint32_t) accountIdCoach {
  return result.accountIdCoach;
}
- (CMsgTFCoaching_CoachJoining_Builder*) setAccountIdCoach:(uint32_t) value {
  result.hasAccountIdCoach = YES;
  result.accountIdCoach = value;
  return self;
}
- (CMsgTFCoaching_CoachJoining_Builder*) clearAccountIdCoach {
  result.hasAccountIdCoach = NO;
  result.accountIdCoach = 0;
  return self;
}
- (BOOL) hasAccountIdStudent {
  return result.hasAccountIdStudent;
}
- (uint32_t) accountIdStudent {
  return result.accountIdStudent;
}
- (CMsgTFCoaching_CoachJoining_Builder*) setAccountIdStudent:(uint32_t) value {
  result.hasAccountIdStudent = YES;
  result.accountIdStudent = value;
  return self;
}
- (CMsgTFCoaching_CoachJoining_Builder*) clearAccountIdStudent {
  result.hasAccountIdStudent = NO;
  result.accountIdStudent = 0;
  return self;
}
@end

@interface CMsgTFCoaching_CoachJoined ()
@property uint32_t accountIdCoach;
@end

@implementation CMsgTFCoaching_CoachJoined

- (BOOL) hasAccountIdCoach {
  return !!hasAccountIdCoach_;
}
- (void) setHasAccountIdCoach:(BOOL) value_ {
  hasAccountIdCoach_ = !!value_;
}
@synthesize accountIdCoach;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountIdCoach = 0;
  }
  return self;
}
static CMsgTFCoaching_CoachJoined* defaultCMsgTFCoaching_CoachJoinedInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_CoachJoined class]) {
    defaultCMsgTFCoaching_CoachJoinedInstance = [[CMsgTFCoaching_CoachJoined alloc] init];
  }
}
+ (CMsgTFCoaching_CoachJoined*) defaultInstance {
  return defaultCMsgTFCoaching_CoachJoinedInstance;
}
- (CMsgTFCoaching_CoachJoined*) defaultInstance {
  return defaultCMsgTFCoaching_CoachJoinedInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountIdCoach) {
    [output writeUInt32:1 value:self.accountIdCoach];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountIdCoach) {
    size_ += computeUInt32Size(1, self.accountIdCoach);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_CoachJoined*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_CoachJoined*)[[[CMsgTFCoaching_CoachJoined builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_CoachJoined*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_CoachJoined*)[[[CMsgTFCoaching_CoachJoined builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_CoachJoined*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_CoachJoined*)[[[CMsgTFCoaching_CoachJoined builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_CoachJoined*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_CoachJoined*)[[[CMsgTFCoaching_CoachJoined builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_CoachJoined*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_CoachJoined*)[[[CMsgTFCoaching_CoachJoined builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_CoachJoined*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_CoachJoined*)[[[CMsgTFCoaching_CoachJoined builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_CoachJoined_Builder*) builder {
  return [[[CMsgTFCoaching_CoachJoined_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_CoachJoined_Builder*) builderWithPrototype:(CMsgTFCoaching_CoachJoined*) prototype {
  return [[CMsgTFCoaching_CoachJoined builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_CoachJoined_Builder*) builder {
  return [CMsgTFCoaching_CoachJoined builder];
}
- (CMsgTFCoaching_CoachJoined_Builder*) toBuilder {
  return [CMsgTFCoaching_CoachJoined builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountIdCoach) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdCoach", [NSNumber numberWithInt:self.accountIdCoach]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_CoachJoined class]]) {
    return NO;
  }
  CMsgTFCoaching_CoachJoined *otherMessage = other;
  return
      self.hasAccountIdCoach == otherMessage.hasAccountIdCoach &&
      (!self.hasAccountIdCoach || self.accountIdCoach == otherMessage.accountIdCoach) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountIdCoach) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdCoach] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_CoachJoined_Builder()
@property (retain) CMsgTFCoaching_CoachJoined* _builderResult;
@end

@implementation CMsgTFCoaching_CoachJoined_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_CoachJoined alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_CoachJoined_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_CoachJoined alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_CoachJoined_Builder*) clone {
  return [CMsgTFCoaching_CoachJoined builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_CoachJoined*) defaultInstance {
  return [CMsgTFCoaching_CoachJoined defaultInstance];
}
- (CMsgTFCoaching_CoachJoined*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_CoachJoined*) buildPartial {
  CMsgTFCoaching_CoachJoined* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_CoachJoined_Builder*) mergeFrom:(CMsgTFCoaching_CoachJoined*) other {
  if (other == [CMsgTFCoaching_CoachJoined defaultInstance]) {
    return self;
  }
  if (other.hasAccountIdCoach) {
    [self setAccountIdCoach:other.accountIdCoach];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_CoachJoined_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_CoachJoined_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountIdCoach:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountIdCoach {
  return result.hasAccountIdCoach;
}
- (uint32_t) accountIdCoach {
  return result.accountIdCoach;
}
- (CMsgTFCoaching_CoachJoined_Builder*) setAccountIdCoach:(uint32_t) value {
  result.hasAccountIdCoach = YES;
  result.accountIdCoach = value;
  return self;
}
- (CMsgTFCoaching_CoachJoined_Builder*) clearAccountIdCoach {
  result.hasAccountIdCoach = NO;
  result.accountIdCoach = 0;
  return self;
}
@end

@interface CMsgTFCoaching_LikeCurrentCoach ()
@property BOOL likeCoach;
@end

@implementation CMsgTFCoaching_LikeCurrentCoach

- (BOOL) hasLikeCoach {
  return !!hasLikeCoach_;
}
- (void) setHasLikeCoach:(BOOL) value_ {
  hasLikeCoach_ = !!value_;
}
- (BOOL) likeCoach {
  return !!likeCoach_;
}
- (void) setLikeCoach:(BOOL) value_ {
  likeCoach_ = !!value_;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.likeCoach = NO;
  }
  return self;
}
static CMsgTFCoaching_LikeCurrentCoach* defaultCMsgTFCoaching_LikeCurrentCoachInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_LikeCurrentCoach class]) {
    defaultCMsgTFCoaching_LikeCurrentCoachInstance = [[CMsgTFCoaching_LikeCurrentCoach alloc] init];
  }
}
+ (CMsgTFCoaching_LikeCurrentCoach*) defaultInstance {
  return defaultCMsgTFCoaching_LikeCurrentCoachInstance;
}
- (CMsgTFCoaching_LikeCurrentCoach*) defaultInstance {
  return defaultCMsgTFCoaching_LikeCurrentCoachInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLikeCoach) {
    [output writeBool:1 value:self.likeCoach];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLikeCoach) {
    size_ += computeBoolSize(1, self.likeCoach);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_LikeCurrentCoach*)[[[CMsgTFCoaching_LikeCurrentCoach builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_LikeCurrentCoach*)[[[CMsgTFCoaching_LikeCurrentCoach builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_LikeCurrentCoach*)[[[CMsgTFCoaching_LikeCurrentCoach builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_LikeCurrentCoach*)[[[CMsgTFCoaching_LikeCurrentCoach builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_LikeCurrentCoach*)[[[CMsgTFCoaching_LikeCurrentCoach builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_LikeCurrentCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_LikeCurrentCoach*)[[[CMsgTFCoaching_LikeCurrentCoach builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_LikeCurrentCoach_Builder*) builder {
  return [[[CMsgTFCoaching_LikeCurrentCoach_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_LikeCurrentCoach_Builder*) builderWithPrototype:(CMsgTFCoaching_LikeCurrentCoach*) prototype {
  return [[CMsgTFCoaching_LikeCurrentCoach builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) builder {
  return [CMsgTFCoaching_LikeCurrentCoach builder];
}
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) toBuilder {
  return [CMsgTFCoaching_LikeCurrentCoach builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLikeCoach) {
    [output appendFormat:@"%@%@: %@\n", indent, @"likeCoach", [NSNumber numberWithBool:self.likeCoach]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_LikeCurrentCoach class]]) {
    return NO;
  }
  CMsgTFCoaching_LikeCurrentCoach *otherMessage = other;
  return
      self.hasLikeCoach == otherMessage.hasLikeCoach &&
      (!self.hasLikeCoach || self.likeCoach == otherMessage.likeCoach) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasLikeCoach) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.likeCoach] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_LikeCurrentCoach_Builder()
@property (retain) CMsgTFCoaching_LikeCurrentCoach* _builderResult;
@end

@implementation CMsgTFCoaching_LikeCurrentCoach_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_LikeCurrentCoach alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_LikeCurrentCoach alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) clone {
  return [CMsgTFCoaching_LikeCurrentCoach builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_LikeCurrentCoach*) defaultInstance {
  return [CMsgTFCoaching_LikeCurrentCoach defaultInstance];
}
- (CMsgTFCoaching_LikeCurrentCoach*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_LikeCurrentCoach*) buildPartial {
  CMsgTFCoaching_LikeCurrentCoach* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) mergeFrom:(CMsgTFCoaching_LikeCurrentCoach*) other {
  if (other == [CMsgTFCoaching_LikeCurrentCoach defaultInstance]) {
    return self;
  }
  if (other.hasLikeCoach) {
    [self setLikeCoach:other.likeCoach];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLikeCoach:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasLikeCoach {
  return result.hasLikeCoach;
}
- (BOOL) likeCoach {
  return result.likeCoach;
}
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) setLikeCoach:(BOOL) value {
  result.hasLikeCoach = YES;
  result.likeCoach = value;
  return self;
}
- (CMsgTFCoaching_LikeCurrentCoach_Builder*) clearLikeCoach {
  result.hasLikeCoach = NO;
  result.likeCoach = NO;
  return self;
}
@end

@interface CMsgTFCoaching_RemoveCurrentCoach ()
@property uint32_t accountIdCoach;
@end

@implementation CMsgTFCoaching_RemoveCurrentCoach

- (BOOL) hasAccountIdCoach {
  return !!hasAccountIdCoach_;
}
- (void) setHasAccountIdCoach:(BOOL) value_ {
  hasAccountIdCoach_ = !!value_;
}
@synthesize accountIdCoach;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountIdCoach = 0;
  }
  return self;
}
static CMsgTFCoaching_RemoveCurrentCoach* defaultCMsgTFCoaching_RemoveCurrentCoachInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFCoaching_RemoveCurrentCoach class]) {
    defaultCMsgTFCoaching_RemoveCurrentCoachInstance = [[CMsgTFCoaching_RemoveCurrentCoach alloc] init];
  }
}
+ (CMsgTFCoaching_RemoveCurrentCoach*) defaultInstance {
  return defaultCMsgTFCoaching_RemoveCurrentCoachInstance;
}
- (CMsgTFCoaching_RemoveCurrentCoach*) defaultInstance {
  return defaultCMsgTFCoaching_RemoveCurrentCoachInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountIdCoach) {
    [output writeUInt32:1 value:self.accountIdCoach];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountIdCoach) {
    size_ += computeUInt32Size(1, self.accountIdCoach);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromData:(NSData*) data {
  return (CMsgTFCoaching_RemoveCurrentCoach*)[[[CMsgTFCoaching_RemoveCurrentCoach builder] mergeFromData:data] build];
}
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_RemoveCurrentCoach*)[[[CMsgTFCoaching_RemoveCurrentCoach builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFCoaching_RemoveCurrentCoach*)[[[CMsgTFCoaching_RemoveCurrentCoach builder] mergeFromInputStream:input] build];
}
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_RemoveCurrentCoach*)[[[CMsgTFCoaching_RemoveCurrentCoach builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFCoaching_RemoveCurrentCoach*)[[[CMsgTFCoaching_RemoveCurrentCoach builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFCoaching_RemoveCurrentCoach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFCoaching_RemoveCurrentCoach*)[[[CMsgTFCoaching_RemoveCurrentCoach builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFCoaching_RemoveCurrentCoach_Builder*) builder {
  return [[[CMsgTFCoaching_RemoveCurrentCoach_Builder alloc] init] autorelease];
}
+ (CMsgTFCoaching_RemoveCurrentCoach_Builder*) builderWithPrototype:(CMsgTFCoaching_RemoveCurrentCoach*) prototype {
  return [[CMsgTFCoaching_RemoveCurrentCoach builder] mergeFrom:prototype];
}
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) builder {
  return [CMsgTFCoaching_RemoveCurrentCoach builder];
}
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) toBuilder {
  return [CMsgTFCoaching_RemoveCurrentCoach builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountIdCoach) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountIdCoach", [NSNumber numberWithInt:self.accountIdCoach]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFCoaching_RemoveCurrentCoach class]]) {
    return NO;
  }
  CMsgTFCoaching_RemoveCurrentCoach *otherMessage = other;
  return
      self.hasAccountIdCoach == otherMessage.hasAccountIdCoach &&
      (!self.hasAccountIdCoach || self.accountIdCoach == otherMessage.accountIdCoach) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountIdCoach) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountIdCoach] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFCoaching_RemoveCurrentCoach_Builder()
@property (retain) CMsgTFCoaching_RemoveCurrentCoach* _builderResult;
@end

@implementation CMsgTFCoaching_RemoveCurrentCoach_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFCoaching_RemoveCurrentCoach alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) clear {
  _builderResult = [[[CMsgTFCoaching_RemoveCurrentCoach alloc] init] autorelease];
  return self;
}
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) clone {
  return [CMsgTFCoaching_RemoveCurrentCoach builderWithPrototype:_builderResult];
}
- (CMsgTFCoaching_RemoveCurrentCoach*) defaultInstance {
  return [CMsgTFCoaching_RemoveCurrentCoach defaultInstance];
}
- (CMsgTFCoaching_RemoveCurrentCoach*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFCoaching_RemoveCurrentCoach*) buildPartial {
  CMsgTFCoaching_RemoveCurrentCoach* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) mergeFrom:(CMsgTFCoaching_RemoveCurrentCoach*) other {
  if (other == [CMsgTFCoaching_RemoveCurrentCoach defaultInstance]) {
    return self;
  }
  if (other.hasAccountIdCoach) {
    [self setAccountIdCoach:other.accountIdCoach];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountIdCoach:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountIdCoach {
  return result.hasAccountIdCoach;
}
- (uint32_t) accountIdCoach {
  return result.accountIdCoach;
}
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) setAccountIdCoach:(uint32_t) value {
  result.hasAccountIdCoach = YES;
  result.accountIdCoach = value;
  return self;
}
- (CMsgTFCoaching_RemoveCurrentCoach_Builder*) clearAccountIdCoach {
  result.hasAccountIdCoach = NO;
  result.accountIdCoach = 0;
  return self;
}
@end

@interface CMsgTFQuickplay_ScoreServers ()
@property (retain) PBAppendableArray * serversArray;
@end

@implementation CMsgTFQuickplay_ScoreServers

@synthesize serversArray;
@dynamic servers;
- (void) dealloc {
  self.serversArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFQuickplay_ScoreServers* defaultCMsgTFQuickplay_ScoreServersInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFQuickplay_ScoreServers class]) {
    defaultCMsgTFQuickplay_ScoreServersInstance = [[CMsgTFQuickplay_ScoreServers alloc] init];
  }
}
+ (CMsgTFQuickplay_ScoreServers*) defaultInstance {
  return defaultCMsgTFQuickplay_ScoreServersInstance;
}
- (CMsgTFQuickplay_ScoreServers*) defaultInstance {
  return defaultCMsgTFQuickplay_ScoreServersInstance;
}
- (PBArray *)servers {
  return serversArray;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo*)serversAtIndex:(NSUInteger)index {
  return [serversArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CMsgTFQuickplay_ScoreServers_ServerInfo *element in self.serversArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (CMsgTFQuickplay_ScoreServers_ServerInfo *element in self.serversArray) {
    size_ += computeMessageSize(1, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFQuickplay_ScoreServers*) parseFromData:(NSData*) data {
  return (CMsgTFQuickplay_ScoreServers*)[[[CMsgTFQuickplay_ScoreServers builder] mergeFromData:data] build];
}
+ (CMsgTFQuickplay_ScoreServers*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServers*)[[[CMsgTFQuickplay_ScoreServers builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServers*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFQuickplay_ScoreServers*)[[[CMsgTFQuickplay_ScoreServers builder] mergeFromInputStream:input] build];
}
+ (CMsgTFQuickplay_ScoreServers*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServers*)[[[CMsgTFQuickplay_ScoreServers builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServers*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFQuickplay_ScoreServers*)[[[CMsgTFQuickplay_ScoreServers builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFQuickplay_ScoreServers*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServers*)[[[CMsgTFQuickplay_ScoreServers builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServers_Builder*) builder {
  return [[[CMsgTFQuickplay_ScoreServers_Builder alloc] init] autorelease];
}
+ (CMsgTFQuickplay_ScoreServers_Builder*) builderWithPrototype:(CMsgTFQuickplay_ScoreServers*) prototype {
  return [[CMsgTFQuickplay_ScoreServers builder] mergeFrom:prototype];
}
- (CMsgTFQuickplay_ScoreServers_Builder*) builder {
  return [CMsgTFQuickplay_ScoreServers builder];
}
- (CMsgTFQuickplay_ScoreServers_Builder*) toBuilder {
  return [CMsgTFQuickplay_ScoreServers builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (CMsgTFQuickplay_ScoreServers_ServerInfo* element in self.serversArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"servers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFQuickplay_ScoreServers class]]) {
    return NO;
  }
  CMsgTFQuickplay_ScoreServers *otherMessage = other;
  return
      [self.serversArray isEqualToArray:otherMessage.serversArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (CMsgTFQuickplay_ScoreServers_ServerInfo* element in self.serversArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFQuickplay_ScoreServers_ServerInfo ()
@property uint32_t serverAddress;
@property uint32_t serverPort;
@property uint32_t numUsers;
@property uint64_t steamId;
@property uint32_t maxUsers;
@property Float32 userScore;
@end

@implementation CMsgTFQuickplay_ScoreServers_ServerInfo

- (BOOL) hasServerAddress {
  return !!hasServerAddress_;
}
- (void) setHasServerAddress:(BOOL) value_ {
  hasServerAddress_ = !!value_;
}
@synthesize serverAddress;
- (BOOL) hasServerPort {
  return !!hasServerPort_;
}
- (void) setHasServerPort:(BOOL) value_ {
  hasServerPort_ = !!value_;
}
@synthesize serverPort;
- (BOOL) hasNumUsers {
  return !!hasNumUsers_;
}
- (void) setHasNumUsers:(BOOL) value_ {
  hasNumUsers_ = !!value_;
}
@synthesize numUsers;
- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (BOOL) hasMaxUsers {
  return !!hasMaxUsers_;
}
- (void) setHasMaxUsers:(BOOL) value_ {
  hasMaxUsers_ = !!value_;
}
@synthesize maxUsers;
- (BOOL) hasUserScore {
  return !!hasUserScore_;
}
- (void) setHasUserScore:(BOOL) value_ {
  hasUserScore_ = !!value_;
}
@synthesize userScore;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.serverAddress = 0;
    self.serverPort = 0;
    self.numUsers = 0;
    self.steamId = 0L;
    self.maxUsers = 0;
    self.userScore = 0;
  }
  return self;
}
static CMsgTFQuickplay_ScoreServers_ServerInfo* defaultCMsgTFQuickplay_ScoreServers_ServerInfoInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFQuickplay_ScoreServers_ServerInfo class]) {
    defaultCMsgTFQuickplay_ScoreServers_ServerInfoInstance = [[CMsgTFQuickplay_ScoreServers_ServerInfo alloc] init];
  }
}
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) defaultInstance {
  return defaultCMsgTFQuickplay_ScoreServers_ServerInfoInstance;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo*) defaultInstance {
  return defaultCMsgTFQuickplay_ScoreServers_ServerInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasServerAddress) {
    [output writeUInt32:1 value:self.serverAddress];
  }
  if (self.hasServerPort) {
    [output writeUInt32:2 value:self.serverPort];
  }
  if (self.hasNumUsers) {
    [output writeUInt32:3 value:self.numUsers];
  }
  if (self.hasSteamId) {
    [output writeUInt64:4 value:self.steamId];
  }
  if (self.hasMaxUsers) {
    [output writeUInt32:5 value:self.maxUsers];
  }
  if (self.hasUserScore) {
    [output writeFloat:6 value:self.userScore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasServerAddress) {
    size_ += computeUInt32Size(1, self.serverAddress);
  }
  if (self.hasServerPort) {
    size_ += computeUInt32Size(2, self.serverPort);
  }
  if (self.hasNumUsers) {
    size_ += computeUInt32Size(3, self.numUsers);
  }
  if (self.hasSteamId) {
    size_ += computeUInt64Size(4, self.steamId);
  }
  if (self.hasMaxUsers) {
    size_ += computeUInt32Size(5, self.maxUsers);
  }
  if (self.hasUserScore) {
    size_ += computeFloatSize(6, self.userScore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromData:(NSData*) data {
  return (CMsgTFQuickplay_ScoreServers_ServerInfo*)[[[CMsgTFQuickplay_ScoreServers_ServerInfo builder] mergeFromData:data] build];
}
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServers_ServerInfo*)[[[CMsgTFQuickplay_ScoreServers_ServerInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFQuickplay_ScoreServers_ServerInfo*)[[[CMsgTFQuickplay_ScoreServers_ServerInfo builder] mergeFromInputStream:input] build];
}
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServers_ServerInfo*)[[[CMsgTFQuickplay_ScoreServers_ServerInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFQuickplay_ScoreServers_ServerInfo*)[[[CMsgTFQuickplay_ScoreServers_ServerInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFQuickplay_ScoreServers_ServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServers_ServerInfo*)[[[CMsgTFQuickplay_ScoreServers_ServerInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) builder {
  return [[[CMsgTFQuickplay_ScoreServers_ServerInfo_Builder alloc] init] autorelease];
}
+ (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) builderWithPrototype:(CMsgTFQuickplay_ScoreServers_ServerInfo*) prototype {
  return [[CMsgTFQuickplay_ScoreServers_ServerInfo builder] mergeFrom:prototype];
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) builder {
  return [CMsgTFQuickplay_ScoreServers_ServerInfo builder];
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) toBuilder {
  return [CMsgTFQuickplay_ScoreServers_ServerInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasServerAddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverAddress", [NSNumber numberWithInt:self.serverAddress]];
  }
  if (self.hasServerPort) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverPort", [NSNumber numberWithInt:self.serverPort]];
  }
  if (self.hasNumUsers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numUsers", [NSNumber numberWithInt:self.numUsers]];
  }
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  if (self.hasMaxUsers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxUsers", [NSNumber numberWithInt:self.maxUsers]];
  }
  if (self.hasUserScore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userScore", [NSNumber numberWithFloat:self.userScore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFQuickplay_ScoreServers_ServerInfo class]]) {
    return NO;
  }
  CMsgTFQuickplay_ScoreServers_ServerInfo *otherMessage = other;
  return
      self.hasServerAddress == otherMessage.hasServerAddress &&
      (!self.hasServerAddress || self.serverAddress == otherMessage.serverAddress) &&
      self.hasServerPort == otherMessage.hasServerPort &&
      (!self.hasServerPort || self.serverPort == otherMessage.serverPort) &&
      self.hasNumUsers == otherMessage.hasNumUsers &&
      (!self.hasNumUsers || self.numUsers == otherMessage.numUsers) &&
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      self.hasMaxUsers == otherMessage.hasMaxUsers &&
      (!self.hasMaxUsers || self.maxUsers == otherMessage.maxUsers) &&
      self.hasUserScore == otherMessage.hasUserScore &&
      (!self.hasUserScore || self.userScore == otherMessage.userScore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasServerAddress) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverAddress] hash];
  }
  if (self.hasServerPort) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverPort] hash];
  }
  if (self.hasNumUsers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numUsers] hash];
  }
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  if (self.hasMaxUsers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.maxUsers] hash];
  }
  if (self.hasUserScore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.userScore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFQuickplay_ScoreServers_ServerInfo_Builder()
@property (retain) CMsgTFQuickplay_ScoreServers_ServerInfo* _builderResult;
@end

@implementation CMsgTFQuickplay_ScoreServers_ServerInfo_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFQuickplay_ScoreServers_ServerInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clear {
  _builderResult = [[[CMsgTFQuickplay_ScoreServers_ServerInfo alloc] init] autorelease];
  return self;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clone {
  return [CMsgTFQuickplay_ScoreServers_ServerInfo builderWithPrototype:_builderResult];
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo*) defaultInstance {
  return [CMsgTFQuickplay_ScoreServers_ServerInfo defaultInstance];
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo*) buildPartial {
  CMsgTFQuickplay_ScoreServers_ServerInfo* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) mergeFrom:(CMsgTFQuickplay_ScoreServers_ServerInfo*) other {
  if (other == [CMsgTFQuickplay_ScoreServers_ServerInfo defaultInstance]) {
    return self;
  }
  if (other.hasServerAddress) {
    [self setServerAddress:other.serverAddress];
  }
  if (other.hasServerPort) {
    [self setServerPort:other.serverPort];
  }
  if (other.hasNumUsers) {
    [self setNumUsers:other.numUsers];
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  if (other.hasMaxUsers) {
    [self setMaxUsers:other.maxUsers];
  }
  if (other.hasUserScore) {
    [self setUserScore:other.userScore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setServerAddress:[input readUInt32]];
        break;
      }
      case 16: {
        [self setServerPort:[input readUInt32]];
        break;
      }
      case 24: {
        [self setNumUsers:[input readUInt32]];
        break;
      }
      case 32: {
        [self setSteamId:[input readUInt64]];
        break;
      }
      case 40: {
        [self setMaxUsers:[input readUInt32]];
        break;
      }
      case 53: {
        [self setUserScore:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasServerAddress {
  return result.hasServerAddress;
}
- (uint32_t) serverAddress {
  return result.serverAddress;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setServerAddress:(uint32_t) value {
  result.hasServerAddress = YES;
  result.serverAddress = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearServerAddress {
  result.hasServerAddress = NO;
  result.serverAddress = 0;
  return self;
}
- (BOOL) hasServerPort {
  return result.hasServerPort;
}
- (uint32_t) serverPort {
  return result.serverPort;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setServerPort:(uint32_t) value {
  result.hasServerPort = YES;
  result.serverPort = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearServerPort {
  result.hasServerPort = NO;
  result.serverPort = 0;
  return self;
}
- (BOOL) hasNumUsers {
  return result.hasNumUsers;
}
- (uint32_t) numUsers {
  return result.numUsers;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setNumUsers:(uint32_t) value {
  result.hasNumUsers = YES;
  result.numUsers = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearNumUsers {
  result.hasNumUsers = NO;
  result.numUsers = 0;
  return self;
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
- (BOOL) hasMaxUsers {
  return result.hasMaxUsers;
}
- (uint32_t) maxUsers {
  return result.maxUsers;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setMaxUsers:(uint32_t) value {
  result.hasMaxUsers = YES;
  result.maxUsers = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearMaxUsers {
  result.hasMaxUsers = NO;
  result.maxUsers = 0;
  return self;
}
- (BOOL) hasUserScore {
  return result.hasUserScore;
}
- (Float32) userScore {
  return result.userScore;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) setUserScore:(Float32) value {
  result.hasUserScore = YES;
  result.userScore = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo_Builder*) clearUserScore {
  result.hasUserScore = NO;
  result.userScore = 0;
  return self;
}
@end

@interface CMsgTFQuickplay_ScoreServers_Builder()
@property (retain) CMsgTFQuickplay_ScoreServers* _builderResult;
@end

@implementation CMsgTFQuickplay_ScoreServers_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFQuickplay_ScoreServers alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFQuickplay_ScoreServers_Builder*) clear {
  _builderResult = [[[CMsgTFQuickplay_ScoreServers alloc] init] autorelease];
  return self;
}
- (CMsgTFQuickplay_ScoreServers_Builder*) clone {
  return [CMsgTFQuickplay_ScoreServers builderWithPrototype:_builderResult];
}
- (CMsgTFQuickplay_ScoreServers*) defaultInstance {
  return [CMsgTFQuickplay_ScoreServers defaultInstance];
}
- (CMsgTFQuickplay_ScoreServers*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFQuickplay_ScoreServers*) buildPartial {
  CMsgTFQuickplay_ScoreServers* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFQuickplay_ScoreServers_Builder*) mergeFrom:(CMsgTFQuickplay_ScoreServers*) other {
  if (other == [CMsgTFQuickplay_ScoreServers defaultInstance]) {
    return self;
  }
  if (other.serversArray.count > 0) {
    if (result.serversArray == nil) {
      result.serversArray = [[other.serversArray copyWithZone:[other.serversArray zone]] autorelease];
    } else {
      [result.serversArray appendArray:other.serversArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFQuickplay_ScoreServers_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFQuickplay_ScoreServers_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgTFQuickplay_ScoreServers_ServerInfo_Builder* subBuilder = [CMsgTFQuickplay_ScoreServers_ServerInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addServers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)servers {
  return result.serversArray;
}
- (CMsgTFQuickplay_ScoreServers_ServerInfo*)serversAtIndex:(NSUInteger)index {
  return [result serversAtIndex:index];
}
- (CMsgTFQuickplay_ScoreServers_Builder *)addServers:(CMsgTFQuickplay_ScoreServers_ServerInfo*)value {
  if (result.serversArray == nil) {
    result.serversArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.serversArray addObject:value];
  return self;
}
- (CMsgTFQuickplay_ScoreServers_Builder *)setServersArray:(NSArray *)array {
  result.serversArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgTFQuickplay_ScoreServers_Builder *)setServersValues:(const CMsgTFQuickplay_ScoreServers_ServerInfo* *)values count:(NSUInteger)count {
  result.serversArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgTFQuickplay_ScoreServers_Builder *)clearServers {
  result.serversArray = nil;
  return self;
}
@end

@interface CMsgTFQuickplay_ScoreServersResponse ()
@property (retain) PBAppendableArray * serversArray;
@end

@implementation CMsgTFQuickplay_ScoreServersResponse

@synthesize serversArray;
@dynamic servers;
- (void) dealloc {
  self.serversArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFQuickplay_ScoreServersResponse* defaultCMsgTFQuickplay_ScoreServersResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFQuickplay_ScoreServersResponse class]) {
    defaultCMsgTFQuickplay_ScoreServersResponseInstance = [[CMsgTFQuickplay_ScoreServersResponse alloc] init];
  }
}
+ (CMsgTFQuickplay_ScoreServersResponse*) defaultInstance {
  return defaultCMsgTFQuickplay_ScoreServersResponseInstance;
}
- (CMsgTFQuickplay_ScoreServersResponse*) defaultInstance {
  return defaultCMsgTFQuickplay_ScoreServersResponseInstance;
}
- (PBArray *)servers {
  return serversArray;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)serversAtIndex:(NSUInteger)index {
  return [serversArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CMsgTFQuickplay_ScoreServersResponse_ServerInfo *element in self.serversArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (CMsgTFQuickplay_ScoreServersResponse_ServerInfo *element in self.serversArray) {
    size_ += computeMessageSize(1, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromData:(NSData*) data {
  return (CMsgTFQuickplay_ScoreServersResponse*)[[[CMsgTFQuickplay_ScoreServersResponse builder] mergeFromData:data] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServersResponse*)[[[CMsgTFQuickplay_ScoreServersResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFQuickplay_ScoreServersResponse*)[[[CMsgTFQuickplay_ScoreServersResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServersResponse*)[[[CMsgTFQuickplay_ScoreServersResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFQuickplay_ScoreServersResponse*)[[[CMsgTFQuickplay_ScoreServersResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServersResponse*)[[[CMsgTFQuickplay_ScoreServersResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse_Builder*) builder {
  return [[[CMsgTFQuickplay_ScoreServersResponse_Builder alloc] init] autorelease];
}
+ (CMsgTFQuickplay_ScoreServersResponse_Builder*) builderWithPrototype:(CMsgTFQuickplay_ScoreServersResponse*) prototype {
  return [[CMsgTFQuickplay_ScoreServersResponse builder] mergeFrom:prototype];
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) builder {
  return [CMsgTFQuickplay_ScoreServersResponse builder];
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) toBuilder {
  return [CMsgTFQuickplay_ScoreServersResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (CMsgTFQuickplay_ScoreServersResponse_ServerInfo* element in self.serversArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"servers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFQuickplay_ScoreServersResponse class]]) {
    return NO;
  }
  CMsgTFQuickplay_ScoreServersResponse *otherMessage = other;
  return
      [self.serversArray isEqualToArray:otherMessage.serversArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (CMsgTFQuickplay_ScoreServersResponse_ServerInfo* element in self.serversArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFQuickplay_ScoreServersResponse_ServerInfo ()
@property uint32_t serverAddress;
@property uint32_t serverPort;
@property Float32 totalScore;
@property uint64_t steamId;
@end

@implementation CMsgTFQuickplay_ScoreServersResponse_ServerInfo

- (BOOL) hasServerAddress {
  return !!hasServerAddress_;
}
- (void) setHasServerAddress:(BOOL) value_ {
  hasServerAddress_ = !!value_;
}
@synthesize serverAddress;
- (BOOL) hasServerPort {
  return !!hasServerPort_;
}
- (void) setHasServerPort:(BOOL) value_ {
  hasServerPort_ = !!value_;
}
@synthesize serverPort;
- (BOOL) hasTotalScore {
  return !!hasTotalScore_;
}
- (void) setHasTotalScore:(BOOL) value_ {
  hasTotalScore_ = !!value_;
}
@synthesize totalScore;
- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.serverAddress = 0;
    self.serverPort = 0;
    self.totalScore = 0;
    self.steamId = 0L;
  }
  return self;
}
static CMsgTFQuickplay_ScoreServersResponse_ServerInfo* defaultCMsgTFQuickplay_ScoreServersResponse_ServerInfoInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFQuickplay_ScoreServersResponse_ServerInfo class]) {
    defaultCMsgTFQuickplay_ScoreServersResponse_ServerInfoInstance = [[CMsgTFQuickplay_ScoreServersResponse_ServerInfo alloc] init];
  }
}
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) defaultInstance {
  return defaultCMsgTFQuickplay_ScoreServersResponse_ServerInfoInstance;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) defaultInstance {
  return defaultCMsgTFQuickplay_ScoreServersResponse_ServerInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasServerAddress) {
    [output writeUInt32:1 value:self.serverAddress];
  }
  if (self.hasServerPort) {
    [output writeUInt32:2 value:self.serverPort];
  }
  if (self.hasTotalScore) {
    [output writeFloat:3 value:self.totalScore];
  }
  if (self.hasSteamId) {
    [output writeUInt64:4 value:self.steamId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasServerAddress) {
    size_ += computeUInt32Size(1, self.serverAddress);
  }
  if (self.hasServerPort) {
    size_ += computeUInt32Size(2, self.serverPort);
  }
  if (self.hasTotalScore) {
    size_ += computeFloatSize(3, self.totalScore);
  }
  if (self.hasSteamId) {
    size_ += computeUInt64Size(4, self.steamId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromData:(NSData*) data {
  return (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)[[[CMsgTFQuickplay_ScoreServersResponse_ServerInfo builder] mergeFromData:data] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)[[[CMsgTFQuickplay_ScoreServersResponse_ServerInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)[[[CMsgTFQuickplay_ScoreServersResponse_ServerInfo builder] mergeFromInputStream:input] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)[[[CMsgTFQuickplay_ScoreServersResponse_ServerInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)[[[CMsgTFQuickplay_ScoreServersResponse_ServerInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)[[[CMsgTFQuickplay_ScoreServersResponse_ServerInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) builder {
  return [[[CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder alloc] init] autorelease];
}
+ (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) builderWithPrototype:(CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) prototype {
  return [[CMsgTFQuickplay_ScoreServersResponse_ServerInfo builder] mergeFrom:prototype];
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) builder {
  return [CMsgTFQuickplay_ScoreServersResponse_ServerInfo builder];
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) toBuilder {
  return [CMsgTFQuickplay_ScoreServersResponse_ServerInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasServerAddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverAddress", [NSNumber numberWithInt:self.serverAddress]];
  }
  if (self.hasServerPort) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverPort", [NSNumber numberWithInt:self.serverPort]];
  }
  if (self.hasTotalScore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalScore", [NSNumber numberWithFloat:self.totalScore]];
  }
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFQuickplay_ScoreServersResponse_ServerInfo class]]) {
    return NO;
  }
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo *otherMessage = other;
  return
      self.hasServerAddress == otherMessage.hasServerAddress &&
      (!self.hasServerAddress || self.serverAddress == otherMessage.serverAddress) &&
      self.hasServerPort == otherMessage.hasServerPort &&
      (!self.hasServerPort || self.serverPort == otherMessage.serverPort) &&
      self.hasTotalScore == otherMessage.hasTotalScore &&
      (!self.hasTotalScore || self.totalScore == otherMessage.totalScore) &&
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasServerAddress) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverAddress] hash];
  }
  if (self.hasServerPort) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverPort] hash];
  }
  if (self.hasTotalScore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.totalScore] hash];
  }
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder()
@property (retain) CMsgTFQuickplay_ScoreServersResponse_ServerInfo* _builderResult;
@end

@implementation CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFQuickplay_ScoreServersResponse_ServerInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clear {
  _builderResult = [[[CMsgTFQuickplay_ScoreServersResponse_ServerInfo alloc] init] autorelease];
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clone {
  return [CMsgTFQuickplay_ScoreServersResponse_ServerInfo builderWithPrototype:_builderResult];
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) defaultInstance {
  return [CMsgTFQuickplay_ScoreServersResponse_ServerInfo defaultInstance];
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) buildPartial {
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) mergeFrom:(CMsgTFQuickplay_ScoreServersResponse_ServerInfo*) other {
  if (other == [CMsgTFQuickplay_ScoreServersResponse_ServerInfo defaultInstance]) {
    return self;
  }
  if (other.hasServerAddress) {
    [self setServerAddress:other.serverAddress];
  }
  if (other.hasServerPort) {
    [self setServerPort:other.serverPort];
  }
  if (other.hasTotalScore) {
    [self setTotalScore:other.totalScore];
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setServerAddress:[input readUInt32]];
        break;
      }
      case 16: {
        [self setServerPort:[input readUInt32]];
        break;
      }
      case 29: {
        [self setTotalScore:[input readFloat]];
        break;
      }
      case 32: {
        [self setSteamId:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasServerAddress {
  return result.hasServerAddress;
}
- (uint32_t) serverAddress {
  return result.serverAddress;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) setServerAddress:(uint32_t) value {
  result.hasServerAddress = YES;
  result.serverAddress = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clearServerAddress {
  result.hasServerAddress = NO;
  result.serverAddress = 0;
  return self;
}
- (BOOL) hasServerPort {
  return result.hasServerPort;
}
- (uint32_t) serverPort {
  return result.serverPort;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) setServerPort:(uint32_t) value {
  result.hasServerPort = YES;
  result.serverPort = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clearServerPort {
  result.hasServerPort = NO;
  result.serverPort = 0;
  return self;
}
- (BOOL) hasTotalScore {
  return result.hasTotalScore;
}
- (Float32) totalScore {
  return result.totalScore;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) setTotalScore:(Float32) value {
  result.hasTotalScore = YES;
  result.totalScore = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clearTotalScore {
  result.hasTotalScore = NO;
  result.totalScore = 0;
  return self;
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
@end

@interface CMsgTFQuickplay_ScoreServersResponse_Builder()
@property (retain) CMsgTFQuickplay_ScoreServersResponse* _builderResult;
@end

@implementation CMsgTFQuickplay_ScoreServersResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFQuickplay_ScoreServersResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) clear {
  _builderResult = [[[CMsgTFQuickplay_ScoreServersResponse alloc] init] autorelease];
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) clone {
  return [CMsgTFQuickplay_ScoreServersResponse builderWithPrototype:_builderResult];
}
- (CMsgTFQuickplay_ScoreServersResponse*) defaultInstance {
  return [CMsgTFQuickplay_ScoreServersResponse defaultInstance];
}
- (CMsgTFQuickplay_ScoreServersResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFQuickplay_ScoreServersResponse*) buildPartial {
  CMsgTFQuickplay_ScoreServersResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) mergeFrom:(CMsgTFQuickplay_ScoreServersResponse*) other {
  if (other == [CMsgTFQuickplay_ScoreServersResponse defaultInstance]) {
    return self;
  }
  if (other.serversArray.count > 0) {
    if (result.serversArray == nil) {
      result.serversArray = [[other.serversArray copyWithZone:[other.serversArray zone]] autorelease];
    } else {
      [result.serversArray appendArray:other.serversArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgTFQuickplay_ScoreServersResponse_ServerInfo_Builder* subBuilder = [CMsgTFQuickplay_ScoreServersResponse_ServerInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addServers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)servers {
  return result.serversArray;
}
- (CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)serversAtIndex:(NSUInteger)index {
  return [result serversAtIndex:index];
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder *)addServers:(CMsgTFQuickplay_ScoreServersResponse_ServerInfo*)value {
  if (result.serversArray == nil) {
    result.serversArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.serversArray addObject:value];
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder *)setServersArray:(NSArray *)array {
  result.serversArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder *)setServersValues:(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo* *)values count:(NSUInteger)count {
  result.serversArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgTFQuickplay_ScoreServersResponse_Builder *)clearServers {
  result.serversArray = nil;
  return self;
}
@end

@interface CMsgTFQuickplay_PlayerJoining ()
@property uint32_t accountId;
@end

@implementation CMsgTFQuickplay_PlayerJoining

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) value_ {
  hasAccountId_ = !!value_;
}
@synthesize accountId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountId = 0;
  }
  return self;
}
static CMsgTFQuickplay_PlayerJoining* defaultCMsgTFQuickplay_PlayerJoiningInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFQuickplay_PlayerJoining class]) {
    defaultCMsgTFQuickplay_PlayerJoiningInstance = [[CMsgTFQuickplay_PlayerJoining alloc] init];
  }
}
+ (CMsgTFQuickplay_PlayerJoining*) defaultInstance {
  return defaultCMsgTFQuickplay_PlayerJoiningInstance;
}
- (CMsgTFQuickplay_PlayerJoining*) defaultInstance {
  return defaultCMsgTFQuickplay_PlayerJoiningInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeUInt32:1 value:self.accountId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountId) {
    size_ += computeUInt32Size(1, self.accountId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFQuickplay_PlayerJoining*) parseFromData:(NSData*) data {
  return (CMsgTFQuickplay_PlayerJoining*)[[[CMsgTFQuickplay_PlayerJoining builder] mergeFromData:data] build];
}
+ (CMsgTFQuickplay_PlayerJoining*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_PlayerJoining*)[[[CMsgTFQuickplay_PlayerJoining builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_PlayerJoining*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFQuickplay_PlayerJoining*)[[[CMsgTFQuickplay_PlayerJoining builder] mergeFromInputStream:input] build];
}
+ (CMsgTFQuickplay_PlayerJoining*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_PlayerJoining*)[[[CMsgTFQuickplay_PlayerJoining builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_PlayerJoining*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFQuickplay_PlayerJoining*)[[[CMsgTFQuickplay_PlayerJoining builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFQuickplay_PlayerJoining*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFQuickplay_PlayerJoining*)[[[CMsgTFQuickplay_PlayerJoining builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFQuickplay_PlayerJoining_Builder*) builder {
  return [[[CMsgTFQuickplay_PlayerJoining_Builder alloc] init] autorelease];
}
+ (CMsgTFQuickplay_PlayerJoining_Builder*) builderWithPrototype:(CMsgTFQuickplay_PlayerJoining*) prototype {
  return [[CMsgTFQuickplay_PlayerJoining builder] mergeFrom:prototype];
}
- (CMsgTFQuickplay_PlayerJoining_Builder*) builder {
  return [CMsgTFQuickplay_PlayerJoining builder];
}
- (CMsgTFQuickplay_PlayerJoining_Builder*) toBuilder {
  return [CMsgTFQuickplay_PlayerJoining builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountId", [NSNumber numberWithInt:self.accountId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFQuickplay_PlayerJoining class]]) {
    return NO;
  }
  CMsgTFQuickplay_PlayerJoining *otherMessage = other;
  return
      self.hasAccountId == otherMessage.hasAccountId &&
      (!self.hasAccountId || self.accountId == otherMessage.accountId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFQuickplay_PlayerJoining_Builder()
@property (retain) CMsgTFQuickplay_PlayerJoining* _builderResult;
@end

@implementation CMsgTFQuickplay_PlayerJoining_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFQuickplay_PlayerJoining alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFQuickplay_PlayerJoining_Builder*) clear {
  _builderResult = [[[CMsgTFQuickplay_PlayerJoining alloc] init] autorelease];
  return self;
}
- (CMsgTFQuickplay_PlayerJoining_Builder*) clone {
  return [CMsgTFQuickplay_PlayerJoining builderWithPrototype:_builderResult];
}
- (CMsgTFQuickplay_PlayerJoining*) defaultInstance {
  return [CMsgTFQuickplay_PlayerJoining defaultInstance];
}
- (CMsgTFQuickplay_PlayerJoining*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFQuickplay_PlayerJoining*) buildPartial {
  CMsgTFQuickplay_PlayerJoining* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFQuickplay_PlayerJoining_Builder*) mergeFrom:(CMsgTFQuickplay_PlayerJoining*) other {
  if (other == [CMsgTFQuickplay_PlayerJoining defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFQuickplay_PlayerJoining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFQuickplay_PlayerJoining_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return result.hasAccountId;
}
- (uint32_t) accountId {
  return result.accountId;
}
- (CMsgTFQuickplay_PlayerJoining_Builder*) setAccountId:(uint32_t) value {
  result.hasAccountId = YES;
  result.accountId = value;
  return self;
}
- (CMsgTFQuickplay_PlayerJoining_Builder*) clearAccountId {
  result.hasAccountId = NO;
  result.accountId = 0;
  return self;
}
@end

@interface CMsgGC_GameServer_LevelInfo ()
@property BOOL levelLoaded;
@property (retain) NSString* levelName;
@end

@implementation CMsgGC_GameServer_LevelInfo

- (BOOL) hasLevelLoaded {
  return !!hasLevelLoaded_;
}
- (void) setHasLevelLoaded:(BOOL) value_ {
  hasLevelLoaded_ = !!value_;
}
- (BOOL) levelLoaded {
  return !!levelLoaded_;
}
- (void) setLevelLoaded:(BOOL) value_ {
  levelLoaded_ = !!value_;
}
- (BOOL) hasLevelName {
  return !!hasLevelName_;
}
- (void) setHasLevelName:(BOOL) value_ {
  hasLevelName_ = !!value_;
}
@synthesize levelName;
- (void) dealloc {
  self.levelName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.levelLoaded = NO;
    self.levelName = @"";
  }
  return self;
}
static CMsgGC_GameServer_LevelInfo* defaultCMsgGC_GameServer_LevelInfoInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_LevelInfo class]) {
    defaultCMsgGC_GameServer_LevelInfoInstance = [[CMsgGC_GameServer_LevelInfo alloc] init];
  }
}
+ (CMsgGC_GameServer_LevelInfo*) defaultInstance {
  return defaultCMsgGC_GameServer_LevelInfoInstance;
}
- (CMsgGC_GameServer_LevelInfo*) defaultInstance {
  return defaultCMsgGC_GameServer_LevelInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLevelLoaded) {
    [output writeBool:1 value:self.levelLoaded];
  }
  if (self.hasLevelName) {
    [output writeString:2 value:self.levelName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLevelLoaded) {
    size_ += computeBoolSize(1, self.levelLoaded);
  }
  if (self.hasLevelName) {
    size_ += computeStringSize(2, self.levelName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_LevelInfo*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_LevelInfo*)[[[CMsgGC_GameServer_LevelInfo builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_LevelInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_LevelInfo*)[[[CMsgGC_GameServer_LevelInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_LevelInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_LevelInfo*)[[[CMsgGC_GameServer_LevelInfo builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_LevelInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_LevelInfo*)[[[CMsgGC_GameServer_LevelInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_LevelInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_LevelInfo*)[[[CMsgGC_GameServer_LevelInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_LevelInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_LevelInfo*)[[[CMsgGC_GameServer_LevelInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_LevelInfo_Builder*) builder {
  return [[[CMsgGC_GameServer_LevelInfo_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_LevelInfo_Builder*) builderWithPrototype:(CMsgGC_GameServer_LevelInfo*) prototype {
  return [[CMsgGC_GameServer_LevelInfo builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_LevelInfo_Builder*) builder {
  return [CMsgGC_GameServer_LevelInfo builder];
}
- (CMsgGC_GameServer_LevelInfo_Builder*) toBuilder {
  return [CMsgGC_GameServer_LevelInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLevelLoaded) {
    [output appendFormat:@"%@%@: %@\n", indent, @"levelLoaded", [NSNumber numberWithBool:self.levelLoaded]];
  }
  if (self.hasLevelName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"levelName", self.levelName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_LevelInfo class]]) {
    return NO;
  }
  CMsgGC_GameServer_LevelInfo *otherMessage = other;
  return
      self.hasLevelLoaded == otherMessage.hasLevelLoaded &&
      (!self.hasLevelLoaded || self.levelLoaded == otherMessage.levelLoaded) &&
      self.hasLevelName == otherMessage.hasLevelName &&
      (!self.hasLevelName || [self.levelName isEqual:otherMessage.levelName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasLevelLoaded) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.levelLoaded] hash];
  }
  if (self.hasLevelName) {
    hashCode = hashCode * 31 + [self.levelName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_LevelInfo_Builder()
@property (retain) CMsgGC_GameServer_LevelInfo* _builderResult;
@end

@implementation CMsgGC_GameServer_LevelInfo_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_LevelInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_LevelInfo_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_LevelInfo alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_LevelInfo_Builder*) clone {
  return [CMsgGC_GameServer_LevelInfo builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_LevelInfo*) defaultInstance {
  return [CMsgGC_GameServer_LevelInfo defaultInstance];
}
- (CMsgGC_GameServer_LevelInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_LevelInfo*) buildPartial {
  CMsgGC_GameServer_LevelInfo* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_LevelInfo_Builder*) mergeFrom:(CMsgGC_GameServer_LevelInfo*) other {
  if (other == [CMsgGC_GameServer_LevelInfo defaultInstance]) {
    return self;
  }
  if (other.hasLevelLoaded) {
    [self setLevelLoaded:other.levelLoaded];
  }
  if (other.hasLevelName) {
    [self setLevelName:other.levelName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_LevelInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_LevelInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLevelLoaded:[input readBool]];
        break;
      }
      case 18: {
        [self setLevelName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLevelLoaded {
  return result.hasLevelLoaded;
}
- (BOOL) levelLoaded {
  return result.levelLoaded;
}
- (CMsgGC_GameServer_LevelInfo_Builder*) setLevelLoaded:(BOOL) value {
  result.hasLevelLoaded = YES;
  result.levelLoaded = value;
  return self;
}
- (CMsgGC_GameServer_LevelInfo_Builder*) clearLevelLoaded {
  result.hasLevelLoaded = NO;
  result.levelLoaded = NO;
  return self;
}
- (BOOL) hasLevelName {
  return result.hasLevelName;
}
- (NSString*) levelName {
  return result.levelName;
}
- (CMsgGC_GameServer_LevelInfo_Builder*) setLevelName:(NSString*) value {
  result.hasLevelName = YES;
  result.levelName = value;
  return self;
}
- (CMsgGC_GameServer_LevelInfo_Builder*) clearLevelName {
  result.hasLevelName = NO;
  result.levelName = @"";
  return self;
}
@end

@interface CMsgGC_GameServer_AuthChallenge ()
@property (retain) NSString* challengeString;
@end

@implementation CMsgGC_GameServer_AuthChallenge

- (BOOL) hasChallengeString {
  return !!hasChallengeString_;
}
- (void) setHasChallengeString:(BOOL) value_ {
  hasChallengeString_ = !!value_;
}
@synthesize challengeString;
- (void) dealloc {
  self.challengeString = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.challengeString = @"";
  }
  return self;
}
static CMsgGC_GameServer_AuthChallenge* defaultCMsgGC_GameServer_AuthChallengeInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_AuthChallenge class]) {
    defaultCMsgGC_GameServer_AuthChallengeInstance = [[CMsgGC_GameServer_AuthChallenge alloc] init];
  }
}
+ (CMsgGC_GameServer_AuthChallenge*) defaultInstance {
  return defaultCMsgGC_GameServer_AuthChallengeInstance;
}
- (CMsgGC_GameServer_AuthChallenge*) defaultInstance {
  return defaultCMsgGC_GameServer_AuthChallengeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChallengeString) {
    [output writeString:1 value:self.challengeString];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChallengeString) {
    size_ += computeStringSize(1, self.challengeString);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_AuthChallenge*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_AuthChallenge*)[[[CMsgGC_GameServer_AuthChallenge builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_AuthChallenge*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_AuthChallenge*)[[[CMsgGC_GameServer_AuthChallenge builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_AuthChallenge*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_AuthChallenge*)[[[CMsgGC_GameServer_AuthChallenge builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_AuthChallenge*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_AuthChallenge*)[[[CMsgGC_GameServer_AuthChallenge builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_AuthChallenge*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_AuthChallenge*)[[[CMsgGC_GameServer_AuthChallenge builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_AuthChallenge*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_AuthChallenge*)[[[CMsgGC_GameServer_AuthChallenge builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_AuthChallenge_Builder*) builder {
  return [[[CMsgGC_GameServer_AuthChallenge_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_AuthChallenge_Builder*) builderWithPrototype:(CMsgGC_GameServer_AuthChallenge*) prototype {
  return [[CMsgGC_GameServer_AuthChallenge builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_AuthChallenge_Builder*) builder {
  return [CMsgGC_GameServer_AuthChallenge builder];
}
- (CMsgGC_GameServer_AuthChallenge_Builder*) toBuilder {
  return [CMsgGC_GameServer_AuthChallenge builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChallengeString) {
    [output appendFormat:@"%@%@: %@\n", indent, @"challengeString", self.challengeString];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_AuthChallenge class]]) {
    return NO;
  }
  CMsgGC_GameServer_AuthChallenge *otherMessage = other;
  return
      self.hasChallengeString == otherMessage.hasChallengeString &&
      (!self.hasChallengeString || [self.challengeString isEqual:otherMessage.challengeString]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasChallengeString) {
    hashCode = hashCode * 31 + [self.challengeString hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_AuthChallenge_Builder()
@property (retain) CMsgGC_GameServer_AuthChallenge* _builderResult;
@end

@implementation CMsgGC_GameServer_AuthChallenge_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_AuthChallenge alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_AuthChallenge_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_AuthChallenge alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_AuthChallenge_Builder*) clone {
  return [CMsgGC_GameServer_AuthChallenge builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_AuthChallenge*) defaultInstance {
  return [CMsgGC_GameServer_AuthChallenge defaultInstance];
}
- (CMsgGC_GameServer_AuthChallenge*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_AuthChallenge*) buildPartial {
  CMsgGC_GameServer_AuthChallenge* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_AuthChallenge_Builder*) mergeFrom:(CMsgGC_GameServer_AuthChallenge*) other {
  if (other == [CMsgGC_GameServer_AuthChallenge defaultInstance]) {
    return self;
  }
  if (other.hasChallengeString) {
    [self setChallengeString:other.challengeString];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_AuthChallenge_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_AuthChallenge_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setChallengeString:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasChallengeString {
  return result.hasChallengeString;
}
- (NSString*) challengeString {
  return result.challengeString;
}
- (CMsgGC_GameServer_AuthChallenge_Builder*) setChallengeString:(NSString*) value {
  result.hasChallengeString = YES;
  result.challengeString = value;
  return self;
}
- (CMsgGC_GameServer_AuthChallenge_Builder*) clearChallengeString {
  result.hasChallengeString = NO;
  result.challengeString = @"";
  return self;
}
@end

@interface CMsgGC_GameServer_AuthResult ()
@property BOOL authenticated;
@property int32_t gameServerStanding;
@property int32_t gameServerStandingTrend;
@property BOOL isValveServer;
@property (retain) NSString* message;
@end

@implementation CMsgGC_GameServer_AuthResult

- (BOOL) hasAuthenticated {
  return !!hasAuthenticated_;
}
- (void) setHasAuthenticated:(BOOL) value_ {
  hasAuthenticated_ = !!value_;
}
- (BOOL) authenticated {
  return !!authenticated_;
}
- (void) setAuthenticated:(BOOL) value_ {
  authenticated_ = !!value_;
}
- (BOOL) hasGameServerStanding {
  return !!hasGameServerStanding_;
}
- (void) setHasGameServerStanding:(BOOL) value_ {
  hasGameServerStanding_ = !!value_;
}
@synthesize gameServerStanding;
- (BOOL) hasGameServerStandingTrend {
  return !!hasGameServerStandingTrend_;
}
- (void) setHasGameServerStandingTrend:(BOOL) value_ {
  hasGameServerStandingTrend_ = !!value_;
}
@synthesize gameServerStandingTrend;
- (BOOL) hasIsValveServer {
  return !!hasIsValveServer_;
}
- (void) setHasIsValveServer:(BOOL) value_ {
  hasIsValveServer_ = !!value_;
}
- (BOOL) isValveServer {
  return !!isValveServer_;
}
- (void) setIsValveServer:(BOOL) value_ {
  isValveServer_ = !!value_;
}
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value_ {
  hasMessage_ = !!value_;
}
@synthesize message;
- (void) dealloc {
  self.message = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.authenticated = NO;
    self.gameServerStanding = 0;
    self.gameServerStandingTrend = 0;
    self.isValveServer = NO;
    self.message = @"";
  }
  return self;
}
static CMsgGC_GameServer_AuthResult* defaultCMsgGC_GameServer_AuthResultInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_AuthResult class]) {
    defaultCMsgGC_GameServer_AuthResultInstance = [[CMsgGC_GameServer_AuthResult alloc] init];
  }
}
+ (CMsgGC_GameServer_AuthResult*) defaultInstance {
  return defaultCMsgGC_GameServer_AuthResultInstance;
}
- (CMsgGC_GameServer_AuthResult*) defaultInstance {
  return defaultCMsgGC_GameServer_AuthResultInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAuthenticated) {
    [output writeBool:1 value:self.authenticated];
  }
  if (self.hasGameServerStanding) {
    [output writeInt32:2 value:self.gameServerStanding];
  }
  if (self.hasGameServerStandingTrend) {
    [output writeInt32:3 value:self.gameServerStandingTrend];
  }
  if (self.hasIsValveServer) {
    [output writeBool:4 value:self.isValveServer];
  }
  if (self.hasMessage) {
    [output writeString:5 value:self.message];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAuthenticated) {
    size_ += computeBoolSize(1, self.authenticated);
  }
  if (self.hasGameServerStanding) {
    size_ += computeInt32Size(2, self.gameServerStanding);
  }
  if (self.hasGameServerStandingTrend) {
    size_ += computeInt32Size(3, self.gameServerStandingTrend);
  }
  if (self.hasIsValveServer) {
    size_ += computeBoolSize(4, self.isValveServer);
  }
  if (self.hasMessage) {
    size_ += computeStringSize(5, self.message);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_AuthResult*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_AuthResult*)[[[CMsgGC_GameServer_AuthResult builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_AuthResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_AuthResult*)[[[CMsgGC_GameServer_AuthResult builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_AuthResult*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_AuthResult*)[[[CMsgGC_GameServer_AuthResult builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_AuthResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_AuthResult*)[[[CMsgGC_GameServer_AuthResult builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_AuthResult*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_AuthResult*)[[[CMsgGC_GameServer_AuthResult builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_AuthResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_AuthResult*)[[[CMsgGC_GameServer_AuthResult builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_AuthResult_Builder*) builder {
  return [[[CMsgGC_GameServer_AuthResult_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_AuthResult_Builder*) builderWithPrototype:(CMsgGC_GameServer_AuthResult*) prototype {
  return [[CMsgGC_GameServer_AuthResult builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_AuthResult_Builder*) builder {
  return [CMsgGC_GameServer_AuthResult builder];
}
- (CMsgGC_GameServer_AuthResult_Builder*) toBuilder {
  return [CMsgGC_GameServer_AuthResult builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAuthenticated) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authenticated", [NSNumber numberWithBool:self.authenticated]];
  }
  if (self.hasGameServerStanding) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerStanding", [NSNumber numberWithInt:self.gameServerStanding]];
  }
  if (self.hasGameServerStandingTrend) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerStandingTrend", [NSNumber numberWithInt:self.gameServerStandingTrend]];
  }
  if (self.hasIsValveServer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isValveServer", [NSNumber numberWithBool:self.isValveServer]];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"message", self.message];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_AuthResult class]]) {
    return NO;
  }
  CMsgGC_GameServer_AuthResult *otherMessage = other;
  return
      self.hasAuthenticated == otherMessage.hasAuthenticated &&
      (!self.hasAuthenticated || self.authenticated == otherMessage.authenticated) &&
      self.hasGameServerStanding == otherMessage.hasGameServerStanding &&
      (!self.hasGameServerStanding || self.gameServerStanding == otherMessage.gameServerStanding) &&
      self.hasGameServerStandingTrend == otherMessage.hasGameServerStandingTrend &&
      (!self.hasGameServerStandingTrend || self.gameServerStandingTrend == otherMessage.gameServerStandingTrend) &&
      self.hasIsValveServer == otherMessage.hasIsValveServer &&
      (!self.hasIsValveServer || self.isValveServer == otherMessage.isValveServer) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAuthenticated) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.authenticated] hash];
  }
  if (self.hasGameServerStanding) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.gameServerStanding] hash];
  }
  if (self.hasGameServerStandingTrend) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.gameServerStandingTrend] hash];
  }
  if (self.hasIsValveServer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isValveServer] hash];
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_AuthResult_Builder()
@property (retain) CMsgGC_GameServer_AuthResult* _builderResult;
@end

@implementation CMsgGC_GameServer_AuthResult_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_AuthResult alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_AuthResult_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_AuthResult alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_AuthResult_Builder*) clone {
  return [CMsgGC_GameServer_AuthResult builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_AuthResult*) defaultInstance {
  return [CMsgGC_GameServer_AuthResult defaultInstance];
}
- (CMsgGC_GameServer_AuthResult*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_AuthResult*) buildPartial {
  CMsgGC_GameServer_AuthResult* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_AuthResult_Builder*) mergeFrom:(CMsgGC_GameServer_AuthResult*) other {
  if (other == [CMsgGC_GameServer_AuthResult defaultInstance]) {
    return self;
  }
  if (other.hasAuthenticated) {
    [self setAuthenticated:other.authenticated];
  }
  if (other.hasGameServerStanding) {
    [self setGameServerStanding:other.gameServerStanding];
  }
  if (other.hasGameServerStandingTrend) {
    [self setGameServerStandingTrend:other.gameServerStandingTrend];
  }
  if (other.hasIsValveServer) {
    [self setIsValveServer:other.isValveServer];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_AuthResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_AuthResult_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAuthenticated:[input readBool]];
        break;
      }
      case 16: {
        [self setGameServerStanding:[input readInt32]];
        break;
      }
      case 24: {
        [self setGameServerStandingTrend:[input readInt32]];
        break;
      }
      case 32: {
        [self setIsValveServer:[input readBool]];
        break;
      }
      case 42: {
        [self setMessage:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAuthenticated {
  return result.hasAuthenticated;
}
- (BOOL) authenticated {
  return result.authenticated;
}
- (CMsgGC_GameServer_AuthResult_Builder*) setAuthenticated:(BOOL) value {
  result.hasAuthenticated = YES;
  result.authenticated = value;
  return self;
}
- (CMsgGC_GameServer_AuthResult_Builder*) clearAuthenticated {
  result.hasAuthenticated = NO;
  result.authenticated = NO;
  return self;
}
- (BOOL) hasGameServerStanding {
  return result.hasGameServerStanding;
}
- (int32_t) gameServerStanding {
  return result.gameServerStanding;
}
- (CMsgGC_GameServer_AuthResult_Builder*) setGameServerStanding:(int32_t) value {
  result.hasGameServerStanding = YES;
  result.gameServerStanding = value;
  return self;
}
- (CMsgGC_GameServer_AuthResult_Builder*) clearGameServerStanding {
  result.hasGameServerStanding = NO;
  result.gameServerStanding = 0;
  return self;
}
- (BOOL) hasGameServerStandingTrend {
  return result.hasGameServerStandingTrend;
}
- (int32_t) gameServerStandingTrend {
  return result.gameServerStandingTrend;
}
- (CMsgGC_GameServer_AuthResult_Builder*) setGameServerStandingTrend:(int32_t) value {
  result.hasGameServerStandingTrend = YES;
  result.gameServerStandingTrend = value;
  return self;
}
- (CMsgGC_GameServer_AuthResult_Builder*) clearGameServerStandingTrend {
  result.hasGameServerStandingTrend = NO;
  result.gameServerStandingTrend = 0;
  return self;
}
- (BOOL) hasIsValveServer {
  return result.hasIsValveServer;
}
- (BOOL) isValveServer {
  return result.isValveServer;
}
- (CMsgGC_GameServer_AuthResult_Builder*) setIsValveServer:(BOOL) value {
  result.hasIsValveServer = YES;
  result.isValveServer = value;
  return self;
}
- (CMsgGC_GameServer_AuthResult_Builder*) clearIsValveServer {
  result.hasIsValveServer = NO;
  result.isValveServer = NO;
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSString*) message {
  return result.message;
}
- (CMsgGC_GameServer_AuthResult_Builder*) setMessage:(NSString*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (CMsgGC_GameServer_AuthResult_Builder*) clearMessage {
  result.hasMessage = NO;
  result.message = @"";
  return self;
}
@end

@interface CMsgGC_GameServer_AuthChallengeResponse ()
@property uint32_t gameServerAccountId;
@property (retain) NSData* hashedChallengeString;
@end

@implementation CMsgGC_GameServer_AuthChallengeResponse

- (BOOL) hasGameServerAccountId {
  return !!hasGameServerAccountId_;
}
- (void) setHasGameServerAccountId:(BOOL) value_ {
  hasGameServerAccountId_ = !!value_;
}
@synthesize gameServerAccountId;
- (BOOL) hasHashedChallengeString {
  return !!hasHashedChallengeString_;
}
- (void) setHasHashedChallengeString:(BOOL) value_ {
  hasHashedChallengeString_ = !!value_;
}
@synthesize hashedChallengeString;
- (void) dealloc {
  self.hashedChallengeString = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.gameServerAccountId = 0;
    self.hashedChallengeString = [NSData data];
  }
  return self;
}
static CMsgGC_GameServer_AuthChallengeResponse* defaultCMsgGC_GameServer_AuthChallengeResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_AuthChallengeResponse class]) {
    defaultCMsgGC_GameServer_AuthChallengeResponseInstance = [[CMsgGC_GameServer_AuthChallengeResponse alloc] init];
  }
}
+ (CMsgGC_GameServer_AuthChallengeResponse*) defaultInstance {
  return defaultCMsgGC_GameServer_AuthChallengeResponseInstance;
}
- (CMsgGC_GameServer_AuthChallengeResponse*) defaultInstance {
  return defaultCMsgGC_GameServer_AuthChallengeResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGameServerAccountId) {
    [output writeUInt32:1 value:self.gameServerAccountId];
  }
  if (self.hasHashedChallengeString) {
    [output writeData:2 value:self.hashedChallengeString];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGameServerAccountId) {
    size_ += computeUInt32Size(1, self.gameServerAccountId);
  }
  if (self.hasHashedChallengeString) {
    size_ += computeDataSize(2, self.hashedChallengeString);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_AuthChallengeResponse*)[[[CMsgGC_GameServer_AuthChallengeResponse builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_AuthChallengeResponse*)[[[CMsgGC_GameServer_AuthChallengeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_AuthChallengeResponse*)[[[CMsgGC_GameServer_AuthChallengeResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_AuthChallengeResponse*)[[[CMsgGC_GameServer_AuthChallengeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_AuthChallengeResponse*)[[[CMsgGC_GameServer_AuthChallengeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_AuthChallengeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_AuthChallengeResponse*)[[[CMsgGC_GameServer_AuthChallengeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_AuthChallengeResponse_Builder*) builder {
  return [[[CMsgGC_GameServer_AuthChallengeResponse_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_AuthChallengeResponse_Builder*) builderWithPrototype:(CMsgGC_GameServer_AuthChallengeResponse*) prototype {
  return [[CMsgGC_GameServer_AuthChallengeResponse builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) builder {
  return [CMsgGC_GameServer_AuthChallengeResponse builder];
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) toBuilder {
  return [CMsgGC_GameServer_AuthChallengeResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGameServerAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerAccountId", [NSNumber numberWithInt:self.gameServerAccountId]];
  }
  if (self.hasHashedChallengeString) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hashedChallengeString", self.hashedChallengeString];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_AuthChallengeResponse class]]) {
    return NO;
  }
  CMsgGC_GameServer_AuthChallengeResponse *otherMessage = other;
  return
      self.hasGameServerAccountId == otherMessage.hasGameServerAccountId &&
      (!self.hasGameServerAccountId || self.gameServerAccountId == otherMessage.gameServerAccountId) &&
      self.hasHashedChallengeString == otherMessage.hasHashedChallengeString &&
      (!self.hasHashedChallengeString || [self.hashedChallengeString isEqual:otherMessage.hashedChallengeString]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGameServerAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.gameServerAccountId] hash];
  }
  if (self.hasHashedChallengeString) {
    hashCode = hashCode * 31 + [self.hashedChallengeString hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_AuthChallengeResponse_Builder()
@property (retain) CMsgGC_GameServer_AuthChallengeResponse* _builderResult;
@end

@implementation CMsgGC_GameServer_AuthChallengeResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_AuthChallengeResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_AuthChallengeResponse alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) clone {
  return [CMsgGC_GameServer_AuthChallengeResponse builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_AuthChallengeResponse*) defaultInstance {
  return [CMsgGC_GameServer_AuthChallengeResponse defaultInstance];
}
- (CMsgGC_GameServer_AuthChallengeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_AuthChallengeResponse*) buildPartial {
  CMsgGC_GameServer_AuthChallengeResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) mergeFrom:(CMsgGC_GameServer_AuthChallengeResponse*) other {
  if (other == [CMsgGC_GameServer_AuthChallengeResponse defaultInstance]) {
    return self;
  }
  if (other.hasGameServerAccountId) {
    [self setGameServerAccountId:other.gameServerAccountId];
  }
  if (other.hasHashedChallengeString) {
    [self setHashedChallengeString:other.hashedChallengeString];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGameServerAccountId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setHashedChallengeString:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasGameServerAccountId {
  return result.hasGameServerAccountId;
}
- (uint32_t) gameServerAccountId {
  return result.gameServerAccountId;
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) setGameServerAccountId:(uint32_t) value {
  result.hasGameServerAccountId = YES;
  result.gameServerAccountId = value;
  return self;
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) clearGameServerAccountId {
  result.hasGameServerAccountId = NO;
  result.gameServerAccountId = 0;
  return self;
}
- (BOOL) hasHashedChallengeString {
  return result.hasHashedChallengeString;
}
- (NSData*) hashedChallengeString {
  return result.hashedChallengeString;
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) setHashedChallengeString:(NSData*) value {
  result.hasHashedChallengeString = YES;
  result.hashedChallengeString = value;
  return self;
}
- (CMsgGC_GameServer_AuthChallengeResponse_Builder*) clearHashedChallengeString {
  result.hasHashedChallengeString = NO;
  result.hashedChallengeString = [NSData data];
  return self;
}
@end

@interface CMsgGC_GameServer_CreateIdentity ()
@property uint32_t accountId;
@end

@implementation CMsgGC_GameServer_CreateIdentity

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) value_ {
  hasAccountId_ = !!value_;
}
@synthesize accountId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountId = 0;
  }
  return self;
}
static CMsgGC_GameServer_CreateIdentity* defaultCMsgGC_GameServer_CreateIdentityInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_CreateIdentity class]) {
    defaultCMsgGC_GameServer_CreateIdentityInstance = [[CMsgGC_GameServer_CreateIdentity alloc] init];
  }
}
+ (CMsgGC_GameServer_CreateIdentity*) defaultInstance {
  return defaultCMsgGC_GameServer_CreateIdentityInstance;
}
- (CMsgGC_GameServer_CreateIdentity*) defaultInstance {
  return defaultCMsgGC_GameServer_CreateIdentityInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeUInt32:1 value:self.accountId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountId) {
    size_ += computeUInt32Size(1, self.accountId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_CreateIdentity*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_CreateIdentity*)[[[CMsgGC_GameServer_CreateIdentity builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_CreateIdentity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_CreateIdentity*)[[[CMsgGC_GameServer_CreateIdentity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_CreateIdentity*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_CreateIdentity*)[[[CMsgGC_GameServer_CreateIdentity builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_CreateIdentity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_CreateIdentity*)[[[CMsgGC_GameServer_CreateIdentity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_CreateIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_CreateIdentity*)[[[CMsgGC_GameServer_CreateIdentity builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_CreateIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_CreateIdentity*)[[[CMsgGC_GameServer_CreateIdentity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_CreateIdentity_Builder*) builder {
  return [[[CMsgGC_GameServer_CreateIdentity_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_CreateIdentity_Builder*) builderWithPrototype:(CMsgGC_GameServer_CreateIdentity*) prototype {
  return [[CMsgGC_GameServer_CreateIdentity builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_CreateIdentity_Builder*) builder {
  return [CMsgGC_GameServer_CreateIdentity builder];
}
- (CMsgGC_GameServer_CreateIdentity_Builder*) toBuilder {
  return [CMsgGC_GameServer_CreateIdentity builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountId", [NSNumber numberWithInt:self.accountId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_CreateIdentity class]]) {
    return NO;
  }
  CMsgGC_GameServer_CreateIdentity *otherMessage = other;
  return
      self.hasAccountId == otherMessage.hasAccountId &&
      (!self.hasAccountId || self.accountId == otherMessage.accountId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_CreateIdentity_Builder()
@property (retain) CMsgGC_GameServer_CreateIdentity* _builderResult;
@end

@implementation CMsgGC_GameServer_CreateIdentity_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_CreateIdentity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_CreateIdentity_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_CreateIdentity alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_CreateIdentity_Builder*) clone {
  return [CMsgGC_GameServer_CreateIdentity builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_CreateIdentity*) defaultInstance {
  return [CMsgGC_GameServer_CreateIdentity defaultInstance];
}
- (CMsgGC_GameServer_CreateIdentity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_CreateIdentity*) buildPartial {
  CMsgGC_GameServer_CreateIdentity* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_CreateIdentity_Builder*) mergeFrom:(CMsgGC_GameServer_CreateIdentity*) other {
  if (other == [CMsgGC_GameServer_CreateIdentity defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_CreateIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_CreateIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return result.hasAccountId;
}
- (uint32_t) accountId {
  return result.accountId;
}
- (CMsgGC_GameServer_CreateIdentity_Builder*) setAccountId:(uint32_t) value {
  result.hasAccountId = YES;
  result.accountId = value;
  return self;
}
- (CMsgGC_GameServer_CreateIdentity_Builder*) clearAccountId {
  result.hasAccountId = NO;
  result.accountId = 0;
  return self;
}
@end

@interface CMsgGC_GameServer_CreateIdentityResponse ()
@property BOOL accountCreated;
@property uint32_t gameServerAccountId;
@property (retain) NSString* gameServerIdentityToken;
@property CMsgGC_GameServer_CreateIdentityResponse_EStatus status;
@end

@implementation CMsgGC_GameServer_CreateIdentityResponse

- (BOOL) hasAccountCreated {
  return !!hasAccountCreated_;
}
- (void) setHasAccountCreated:(BOOL) value_ {
  hasAccountCreated_ = !!value_;
}
- (BOOL) accountCreated {
  return !!accountCreated_;
}
- (void) setAccountCreated:(BOOL) value_ {
  accountCreated_ = !!value_;
}
- (BOOL) hasGameServerAccountId {
  return !!hasGameServerAccountId_;
}
- (void) setHasGameServerAccountId:(BOOL) value_ {
  hasGameServerAccountId_ = !!value_;
}
@synthesize gameServerAccountId;
- (BOOL) hasGameServerIdentityToken {
  return !!hasGameServerIdentityToken_;
}
- (void) setHasGameServerIdentityToken:(BOOL) value_ {
  hasGameServerIdentityToken_ = !!value_;
}
@synthesize gameServerIdentityToken;
- (BOOL) hasstatus {
  return !!hasstatus_;
}
- (void) setHasstatus:(BOOL) value_ {
  hasstatus_ = !!value_;
}
@synthesize status;
- (void) dealloc {
  self.gameServerIdentityToken = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountCreated = NO;
    self.gameServerAccountId = 0;
    self.gameServerIdentityToken = @"";
    self.status = CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_GenericFailure;
  }
  return self;
}
static CMsgGC_GameServer_CreateIdentityResponse* defaultCMsgGC_GameServer_CreateIdentityResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_CreateIdentityResponse class]) {
    defaultCMsgGC_GameServer_CreateIdentityResponseInstance = [[CMsgGC_GameServer_CreateIdentityResponse alloc] init];
  }
}
+ (CMsgGC_GameServer_CreateIdentityResponse*) defaultInstance {
  return defaultCMsgGC_GameServer_CreateIdentityResponseInstance;
}
- (CMsgGC_GameServer_CreateIdentityResponse*) defaultInstance {
  return defaultCMsgGC_GameServer_CreateIdentityResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountCreated) {
    [output writeBool:1 value:self.accountCreated];
  }
  if (self.hasGameServerAccountId) {
    [output writeUInt32:2 value:self.gameServerAccountId];
  }
  if (self.hasGameServerIdentityToken) {
    [output writeString:3 value:self.gameServerIdentityToken];
  }
  if (self.hasstatus) {
    [output writeEnum:4 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountCreated) {
    size_ += computeBoolSize(1, self.accountCreated);
  }
  if (self.hasGameServerAccountId) {
    size_ += computeUInt32Size(2, self.gameServerAccountId);
  }
  if (self.hasGameServerIdentityToken) {
    size_ += computeStringSize(3, self.gameServerIdentityToken);
  }
  if (self.hasstatus) {
    size_ += computeEnumSize(4, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_CreateIdentityResponse*)[[[CMsgGC_GameServer_CreateIdentityResponse builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_CreateIdentityResponse*)[[[CMsgGC_GameServer_CreateIdentityResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_CreateIdentityResponse*)[[[CMsgGC_GameServer_CreateIdentityResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_CreateIdentityResponse*)[[[CMsgGC_GameServer_CreateIdentityResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_CreateIdentityResponse*)[[[CMsgGC_GameServer_CreateIdentityResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_CreateIdentityResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_CreateIdentityResponse*)[[[CMsgGC_GameServer_CreateIdentityResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_CreateIdentityResponse_Builder*) builder {
  return [[[CMsgGC_GameServer_CreateIdentityResponse_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_CreateIdentityResponse_Builder*) builderWithPrototype:(CMsgGC_GameServer_CreateIdentityResponse*) prototype {
  return [[CMsgGC_GameServer_CreateIdentityResponse builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) builder {
  return [CMsgGC_GameServer_CreateIdentityResponse builder];
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) toBuilder {
  return [CMsgGC_GameServer_CreateIdentityResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountCreated) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountCreated", [NSNumber numberWithBool:self.accountCreated]];
  }
  if (self.hasGameServerAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerAccountId", [NSNumber numberWithInt:self.gameServerAccountId]];
  }
  if (self.hasGameServerIdentityToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerIdentityToken", self.gameServerIdentityToken];
  }
  if (self.hasstatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_CreateIdentityResponse class]]) {
    return NO;
  }
  CMsgGC_GameServer_CreateIdentityResponse *otherMessage = other;
  return
      self.hasAccountCreated == otherMessage.hasAccountCreated &&
      (!self.hasAccountCreated || self.accountCreated == otherMessage.accountCreated) &&
      self.hasGameServerAccountId == otherMessage.hasGameServerAccountId &&
      (!self.hasGameServerAccountId || self.gameServerAccountId == otherMessage.gameServerAccountId) &&
      self.hasGameServerIdentityToken == otherMessage.hasGameServerIdentityToken &&
      (!self.hasGameServerIdentityToken || [self.gameServerIdentityToken isEqual:otherMessage.gameServerIdentityToken]) &&
      self.hasstatus == otherMessage.hasstatus &&
      (!self.hasstatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountCreated) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.accountCreated] hash];
  }
  if (self.hasGameServerAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.gameServerAccountId] hash];
  }
  if (self.hasGameServerIdentityToken) {
    hashCode = hashCode * 31 + [self.gameServerIdentityToken hash];
  }
  if (self.hasstatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CMsgGC_GameServer_CreateIdentityResponse_EStatusIsValidValue(CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  switch (value) {
    case CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_GenericFailure:
    case CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_TooMany:
    case CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_NoPrivs:
    case CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_Created:
      return YES;
    default:
      return NO;
  }
}
@interface CMsgGC_GameServer_CreateIdentityResponse_Builder()
@property (retain) CMsgGC_GameServer_CreateIdentityResponse* _builderResult;
@end

@implementation CMsgGC_GameServer_CreateIdentityResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_CreateIdentityResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_CreateIdentityResponse alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clone {
  return [CMsgGC_GameServer_CreateIdentityResponse builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_CreateIdentityResponse*) defaultInstance {
  return [CMsgGC_GameServer_CreateIdentityResponse defaultInstance];
}
- (CMsgGC_GameServer_CreateIdentityResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_CreateIdentityResponse*) buildPartial {
  CMsgGC_GameServer_CreateIdentityResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) mergeFrom:(CMsgGC_GameServer_CreateIdentityResponse*) other {
  if (other == [CMsgGC_GameServer_CreateIdentityResponse defaultInstance]) {
    return self;
  }
  if (other.hasAccountCreated) {
    [self setAccountCreated:other.accountCreated];
  }
  if (other.hasGameServerAccountId) {
    [self setGameServerAccountId:other.gameServerAccountId];
  }
  if (other.hasGameServerIdentityToken) {
    [self setGameServerIdentityToken:other.gameServerIdentityToken];
  }
  if (other.hasstatus) {
    [self setstatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountCreated:[input readBool]];
        break;
      }
      case 16: {
        [self setGameServerAccountId:[input readUInt32]];
        break;
      }
      case 26: {
        [self setGameServerIdentityToken:[input readString]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (CMsgGC_GameServer_CreateIdentityResponse_EStatusIsValidValue(value)) {
          [self setstatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasAccountCreated {
  return result.hasAccountCreated;
}
- (BOOL) accountCreated {
  return result.accountCreated;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) setAccountCreated:(BOOL) value {
  result.hasAccountCreated = YES;
  result.accountCreated = value;
  return self;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clearAccountCreated {
  result.hasAccountCreated = NO;
  result.accountCreated = NO;
  return self;
}
- (BOOL) hasGameServerAccountId {
  return result.hasGameServerAccountId;
}
- (uint32_t) gameServerAccountId {
  return result.gameServerAccountId;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) setGameServerAccountId:(uint32_t) value {
  result.hasGameServerAccountId = YES;
  result.gameServerAccountId = value;
  return self;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clearGameServerAccountId {
  result.hasGameServerAccountId = NO;
  result.gameServerAccountId = 0;
  return self;
}
- (BOOL) hasGameServerIdentityToken {
  return result.hasGameServerIdentityToken;
}
- (NSString*) gameServerIdentityToken {
  return result.gameServerIdentityToken;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) setGameServerIdentityToken:(NSString*) value {
  result.hasGameServerIdentityToken = YES;
  result.gameServerIdentityToken = value;
  return self;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clearGameServerIdentityToken {
  result.hasGameServerIdentityToken = NO;
  result.gameServerIdentityToken = @"";
  return self;
}
- (BOOL) hasstatus {
  return result.hasstatus;
}
- (CMsgGC_GameServer_CreateIdentityResponse_EStatus) status {
  return result.status;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) setstatus:(CMsgGC_GameServer_CreateIdentityResponse_EStatus) value {
  result.hasstatus = YES;
  result.status = value;
  return self;
}
- (CMsgGC_GameServer_CreateIdentityResponse_Builder*) clearstatus {
  result.hasstatus = NO;
  result.status = CMsgGC_GameServer_CreateIdentityResponse_EStatuskStatus_GenericFailure;
  return self;
}
@end

@interface CMsgGC_GameServer_List ()
@property uint32_t accountId;
@end

@implementation CMsgGC_GameServer_List

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) value_ {
  hasAccountId_ = !!value_;
}
@synthesize accountId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountId = 0;
  }
  return self;
}
static CMsgGC_GameServer_List* defaultCMsgGC_GameServer_ListInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_List class]) {
    defaultCMsgGC_GameServer_ListInstance = [[CMsgGC_GameServer_List alloc] init];
  }
}
+ (CMsgGC_GameServer_List*) defaultInstance {
  return defaultCMsgGC_GameServer_ListInstance;
}
- (CMsgGC_GameServer_List*) defaultInstance {
  return defaultCMsgGC_GameServer_ListInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeUInt32:1 value:self.accountId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountId) {
    size_ += computeUInt32Size(1, self.accountId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_List*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_List*)[[[CMsgGC_GameServer_List builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_List*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_List*)[[[CMsgGC_GameServer_List builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_List*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_List*)[[[CMsgGC_GameServer_List builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_List*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_List*)[[[CMsgGC_GameServer_List builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_List*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_List*)[[[CMsgGC_GameServer_List builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_List*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_List*)[[[CMsgGC_GameServer_List builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_List_Builder*) builder {
  return [[[CMsgGC_GameServer_List_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_List_Builder*) builderWithPrototype:(CMsgGC_GameServer_List*) prototype {
  return [[CMsgGC_GameServer_List builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_List_Builder*) builder {
  return [CMsgGC_GameServer_List builder];
}
- (CMsgGC_GameServer_List_Builder*) toBuilder {
  return [CMsgGC_GameServer_List builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountId", [NSNumber numberWithInt:self.accountId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_List class]]) {
    return NO;
  }
  CMsgGC_GameServer_List *otherMessage = other;
  return
      self.hasAccountId == otherMessage.hasAccountId &&
      (!self.hasAccountId || self.accountId == otherMessage.accountId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_List_Builder()
@property (retain) CMsgGC_GameServer_List* _builderResult;
@end

@implementation CMsgGC_GameServer_List_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_List alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_List_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_List alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_List_Builder*) clone {
  return [CMsgGC_GameServer_List builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_List*) defaultInstance {
  return [CMsgGC_GameServer_List defaultInstance];
}
- (CMsgGC_GameServer_List*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_List*) buildPartial {
  CMsgGC_GameServer_List* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_List_Builder*) mergeFrom:(CMsgGC_GameServer_List*) other {
  if (other == [CMsgGC_GameServer_List defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_List_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_List_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return result.hasAccountId;
}
- (uint32_t) accountId {
  return result.accountId;
}
- (CMsgGC_GameServer_List_Builder*) setAccountId:(uint32_t) value {
  result.hasAccountId = YES;
  result.accountId = value;
  return self;
}
- (CMsgGC_GameServer_List_Builder*) clearAccountId {
  result.hasAccountId = NO;
  result.accountId = 0;
  return self;
}
@end

@interface CMsgGC_GameServer_ListResponse ()
@property (retain) PBAppendableArray * ownedGameServersArray;
@end

@implementation CMsgGC_GameServer_ListResponse

@synthesize ownedGameServersArray;
@dynamic ownedGameServers;
- (void) dealloc {
  self.ownedGameServersArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgGC_GameServer_ListResponse* defaultCMsgGC_GameServer_ListResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_ListResponse class]) {
    defaultCMsgGC_GameServer_ListResponseInstance = [[CMsgGC_GameServer_ListResponse alloc] init];
  }
}
+ (CMsgGC_GameServer_ListResponse*) defaultInstance {
  return defaultCMsgGC_GameServer_ListResponseInstance;
}
- (CMsgGC_GameServer_ListResponse*) defaultInstance {
  return defaultCMsgGC_GameServer_ListResponseInstance;
}
- (PBArray *)ownedGameServers {
  return ownedGameServersArray;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*)ownedGameServersAtIndex:(NSUInteger)index {
  return [ownedGameServersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CMsgGC_GameServer_ListResponse_GameServerIdentity *element in self.ownedGameServersArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (CMsgGC_GameServer_ListResponse_GameServerIdentity *element in self.ownedGameServersArray) {
    size_ += computeMessageSize(1, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_ListResponse*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_ListResponse*)[[[CMsgGC_GameServer_ListResponse builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_ListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ListResponse*)[[[CMsgGC_GameServer_ListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_ListResponse*)[[[CMsgGC_GameServer_ListResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_ListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ListResponse*)[[[CMsgGC_GameServer_ListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_ListResponse*)[[[CMsgGC_GameServer_ListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_ListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ListResponse*)[[[CMsgGC_GameServer_ListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ListResponse_Builder*) builder {
  return [[[CMsgGC_GameServer_ListResponse_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_ListResponse_Builder*) builderWithPrototype:(CMsgGC_GameServer_ListResponse*) prototype {
  return [[CMsgGC_GameServer_ListResponse builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_ListResponse_Builder*) builder {
  return [CMsgGC_GameServer_ListResponse builder];
}
- (CMsgGC_GameServer_ListResponse_Builder*) toBuilder {
  return [CMsgGC_GameServer_ListResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (CMsgGC_GameServer_ListResponse_GameServerIdentity* element in self.ownedGameServersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"ownedGameServers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_ListResponse class]]) {
    return NO;
  }
  CMsgGC_GameServer_ListResponse *otherMessage = other;
  return
      [self.ownedGameServersArray isEqualToArray:otherMessage.ownedGameServersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (CMsgGC_GameServer_ListResponse_GameServerIdentity* element in self.ownedGameServersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_ListResponse_GameServerIdentity ()
@property uint32_t gameServerAccountId;
@property (retain) NSString* gameServerIdentityToken;
@property int32_t gameServerStanding;
@property int32_t gameServerStandingTrend;
@end

@implementation CMsgGC_GameServer_ListResponse_GameServerIdentity

- (BOOL) hasGameServerAccountId {
  return !!hasGameServerAccountId_;
}
- (void) setHasGameServerAccountId:(BOOL) value_ {
  hasGameServerAccountId_ = !!value_;
}
@synthesize gameServerAccountId;
- (BOOL) hasGameServerIdentityToken {
  return !!hasGameServerIdentityToken_;
}
- (void) setHasGameServerIdentityToken:(BOOL) value_ {
  hasGameServerIdentityToken_ = !!value_;
}
@synthesize gameServerIdentityToken;
- (BOOL) hasGameServerStanding {
  return !!hasGameServerStanding_;
}
- (void) setHasGameServerStanding:(BOOL) value_ {
  hasGameServerStanding_ = !!value_;
}
@synthesize gameServerStanding;
- (BOOL) hasGameServerStandingTrend {
  return !!hasGameServerStandingTrend_;
}
- (void) setHasGameServerStandingTrend:(BOOL) value_ {
  hasGameServerStandingTrend_ = !!value_;
}
@synthesize gameServerStandingTrend;
- (void) dealloc {
  self.gameServerIdentityToken = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.gameServerAccountId = 0;
    self.gameServerIdentityToken = @"";
    self.gameServerStanding = 0;
    self.gameServerStandingTrend = 0;
  }
  return self;
}
static CMsgGC_GameServer_ListResponse_GameServerIdentity* defaultCMsgGC_GameServer_ListResponse_GameServerIdentityInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_ListResponse_GameServerIdentity class]) {
    defaultCMsgGC_GameServer_ListResponse_GameServerIdentityInstance = [[CMsgGC_GameServer_ListResponse_GameServerIdentity alloc] init];
  }
}
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) defaultInstance {
  return defaultCMsgGC_GameServer_ListResponse_GameServerIdentityInstance;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*) defaultInstance {
  return defaultCMsgGC_GameServer_ListResponse_GameServerIdentityInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGameServerAccountId) {
    [output writeUInt32:1 value:self.gameServerAccountId];
  }
  if (self.hasGameServerIdentityToken) {
    [output writeString:2 value:self.gameServerIdentityToken];
  }
  if (self.hasGameServerStanding) {
    [output writeInt32:3 value:self.gameServerStanding];
  }
  if (self.hasGameServerStandingTrend) {
    [output writeInt32:4 value:self.gameServerStandingTrend];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGameServerAccountId) {
    size_ += computeUInt32Size(1, self.gameServerAccountId);
  }
  if (self.hasGameServerIdentityToken) {
    size_ += computeStringSize(2, self.gameServerIdentityToken);
  }
  if (self.hasGameServerStanding) {
    size_ += computeInt32Size(3, self.gameServerStanding);
  }
  if (self.hasGameServerStandingTrend) {
    size_ += computeInt32Size(4, self.gameServerStandingTrend);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_ListResponse_GameServerIdentity*)[[[CMsgGC_GameServer_ListResponse_GameServerIdentity builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ListResponse_GameServerIdentity*)[[[CMsgGC_GameServer_ListResponse_GameServerIdentity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_ListResponse_GameServerIdentity*)[[[CMsgGC_GameServer_ListResponse_GameServerIdentity builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ListResponse_GameServerIdentity*)[[[CMsgGC_GameServer_ListResponse_GameServerIdentity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_ListResponse_GameServerIdentity*)[[[CMsgGC_GameServer_ListResponse_GameServerIdentity builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ListResponse_GameServerIdentity*)[[[CMsgGC_GameServer_ListResponse_GameServerIdentity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) builder {
  return [[[CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) builderWithPrototype:(CMsgGC_GameServer_ListResponse_GameServerIdentity*) prototype {
  return [[CMsgGC_GameServer_ListResponse_GameServerIdentity builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) builder {
  return [CMsgGC_GameServer_ListResponse_GameServerIdentity builder];
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) toBuilder {
  return [CMsgGC_GameServer_ListResponse_GameServerIdentity builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGameServerAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerAccountId", [NSNumber numberWithInt:self.gameServerAccountId]];
  }
  if (self.hasGameServerIdentityToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerIdentityToken", self.gameServerIdentityToken];
  }
  if (self.hasGameServerStanding) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerStanding", [NSNumber numberWithInt:self.gameServerStanding]];
  }
  if (self.hasGameServerStandingTrend) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerStandingTrend", [NSNumber numberWithInt:self.gameServerStandingTrend]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_ListResponse_GameServerIdentity class]]) {
    return NO;
  }
  CMsgGC_GameServer_ListResponse_GameServerIdentity *otherMessage = other;
  return
      self.hasGameServerAccountId == otherMessage.hasGameServerAccountId &&
      (!self.hasGameServerAccountId || self.gameServerAccountId == otherMessage.gameServerAccountId) &&
      self.hasGameServerIdentityToken == otherMessage.hasGameServerIdentityToken &&
      (!self.hasGameServerIdentityToken || [self.gameServerIdentityToken isEqual:otherMessage.gameServerIdentityToken]) &&
      self.hasGameServerStanding == otherMessage.hasGameServerStanding &&
      (!self.hasGameServerStanding || self.gameServerStanding == otherMessage.gameServerStanding) &&
      self.hasGameServerStandingTrend == otherMessage.hasGameServerStandingTrend &&
      (!self.hasGameServerStandingTrend || self.gameServerStandingTrend == otherMessage.gameServerStandingTrend) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGameServerAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.gameServerAccountId] hash];
  }
  if (self.hasGameServerIdentityToken) {
    hashCode = hashCode * 31 + [self.gameServerIdentityToken hash];
  }
  if (self.hasGameServerStanding) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.gameServerStanding] hash];
  }
  if (self.hasGameServerStandingTrend) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.gameServerStandingTrend] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder()
@property (retain) CMsgGC_GameServer_ListResponse_GameServerIdentity* _builderResult;
@end

@implementation CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_ListResponse_GameServerIdentity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_ListResponse_GameServerIdentity alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clone {
  return [CMsgGC_GameServer_ListResponse_GameServerIdentity builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*) defaultInstance {
  return [CMsgGC_GameServer_ListResponse_GameServerIdentity defaultInstance];
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*) buildPartial {
  CMsgGC_GameServer_ListResponse_GameServerIdentity* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) mergeFrom:(CMsgGC_GameServer_ListResponse_GameServerIdentity*) other {
  if (other == [CMsgGC_GameServer_ListResponse_GameServerIdentity defaultInstance]) {
    return self;
  }
  if (other.hasGameServerAccountId) {
    [self setGameServerAccountId:other.gameServerAccountId];
  }
  if (other.hasGameServerIdentityToken) {
    [self setGameServerIdentityToken:other.gameServerIdentityToken];
  }
  if (other.hasGameServerStanding) {
    [self setGameServerStanding:other.gameServerStanding];
  }
  if (other.hasGameServerStandingTrend) {
    [self setGameServerStandingTrend:other.gameServerStandingTrend];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGameServerAccountId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setGameServerIdentityToken:[input readString]];
        break;
      }
      case 24: {
        [self setGameServerStanding:[input readInt32]];
        break;
      }
      case 32: {
        [self setGameServerStandingTrend:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGameServerAccountId {
  return result.hasGameServerAccountId;
}
- (uint32_t) gameServerAccountId {
  return result.gameServerAccountId;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) setGameServerAccountId:(uint32_t) value {
  result.hasGameServerAccountId = YES;
  result.gameServerAccountId = value;
  return self;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clearGameServerAccountId {
  result.hasGameServerAccountId = NO;
  result.gameServerAccountId = 0;
  return self;
}
- (BOOL) hasGameServerIdentityToken {
  return result.hasGameServerIdentityToken;
}
- (NSString*) gameServerIdentityToken {
  return result.gameServerIdentityToken;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) setGameServerIdentityToken:(NSString*) value {
  result.hasGameServerIdentityToken = YES;
  result.gameServerIdentityToken = value;
  return self;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clearGameServerIdentityToken {
  result.hasGameServerIdentityToken = NO;
  result.gameServerIdentityToken = @"";
  return self;
}
- (BOOL) hasGameServerStanding {
  return result.hasGameServerStanding;
}
- (int32_t) gameServerStanding {
  return result.gameServerStanding;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) setGameServerStanding:(int32_t) value {
  result.hasGameServerStanding = YES;
  result.gameServerStanding = value;
  return self;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clearGameServerStanding {
  result.hasGameServerStanding = NO;
  result.gameServerStanding = 0;
  return self;
}
- (BOOL) hasGameServerStandingTrend {
  return result.hasGameServerStandingTrend;
}
- (int32_t) gameServerStandingTrend {
  return result.gameServerStandingTrend;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) setGameServerStandingTrend:(int32_t) value {
  result.hasGameServerStandingTrend = YES;
  result.gameServerStandingTrend = value;
  return self;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder*) clearGameServerStandingTrend {
  result.hasGameServerStandingTrend = NO;
  result.gameServerStandingTrend = 0;
  return self;
}
@end

@interface CMsgGC_GameServer_ListResponse_Builder()
@property (retain) CMsgGC_GameServer_ListResponse* _builderResult;
@end

@implementation CMsgGC_GameServer_ListResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_ListResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_ListResponse_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_ListResponse alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_ListResponse_Builder*) clone {
  return [CMsgGC_GameServer_ListResponse builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_ListResponse*) defaultInstance {
  return [CMsgGC_GameServer_ListResponse defaultInstance];
}
- (CMsgGC_GameServer_ListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_ListResponse*) buildPartial {
  CMsgGC_GameServer_ListResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_ListResponse_Builder*) mergeFrom:(CMsgGC_GameServer_ListResponse*) other {
  if (other == [CMsgGC_GameServer_ListResponse defaultInstance]) {
    return self;
  }
  if (other.ownedGameServersArray.count > 0) {
    if (result.ownedGameServersArray == nil) {
      result.ownedGameServersArray = [[other.ownedGameServersArray copyWithZone:[other.ownedGameServersArray zone]] autorelease];
    } else {
      [result.ownedGameServersArray appendArray:other.ownedGameServersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_ListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_ListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgGC_GameServer_ListResponse_GameServerIdentity_Builder* subBuilder = [CMsgGC_GameServer_ListResponse_GameServerIdentity builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addOwnedGameServers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)ownedGameServers {
  return result.ownedGameServersArray;
}
- (CMsgGC_GameServer_ListResponse_GameServerIdentity*)ownedGameServersAtIndex:(NSUInteger)index {
  return [result ownedGameServersAtIndex:index];
}
- (CMsgGC_GameServer_ListResponse_Builder *)addOwnedGameServers:(CMsgGC_GameServer_ListResponse_GameServerIdentity*)value {
  if (result.ownedGameServersArray == nil) {
    result.ownedGameServersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.ownedGameServersArray addObject:value];
  return self;
}
- (CMsgGC_GameServer_ListResponse_Builder *)setOwnedGameServersArray:(NSArray *)array {
  result.ownedGameServersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgGC_GameServer_ListResponse_Builder *)setOwnedGameServersValues:(const CMsgGC_GameServer_ListResponse_GameServerIdentity* *)values count:(NSUInteger)count {
  result.ownedGameServersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgGC_GameServer_ListResponse_Builder *)clearOwnedGameServers {
  result.ownedGameServersArray = nil;
  return self;
}
@end

@interface CMsgGC_GameServer_ResetIdentity ()
@property uint32_t gameServerAccountId;
@end

@implementation CMsgGC_GameServer_ResetIdentity

- (BOOL) hasGameServerAccountId {
  return !!hasGameServerAccountId_;
}
- (void) setHasGameServerAccountId:(BOOL) value_ {
  hasGameServerAccountId_ = !!value_;
}
@synthesize gameServerAccountId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.gameServerAccountId = 0;
  }
  return self;
}
static CMsgGC_GameServer_ResetIdentity* defaultCMsgGC_GameServer_ResetIdentityInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_ResetIdentity class]) {
    defaultCMsgGC_GameServer_ResetIdentityInstance = [[CMsgGC_GameServer_ResetIdentity alloc] init];
  }
}
+ (CMsgGC_GameServer_ResetIdentity*) defaultInstance {
  return defaultCMsgGC_GameServer_ResetIdentityInstance;
}
- (CMsgGC_GameServer_ResetIdentity*) defaultInstance {
  return defaultCMsgGC_GameServer_ResetIdentityInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGameServerAccountId) {
    [output writeUInt32:1 value:self.gameServerAccountId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGameServerAccountId) {
    size_ += computeUInt32Size(1, self.gameServerAccountId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_ResetIdentity*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_ResetIdentity*)[[[CMsgGC_GameServer_ResetIdentity builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_ResetIdentity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ResetIdentity*)[[[CMsgGC_GameServer_ResetIdentity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ResetIdentity*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_ResetIdentity*)[[[CMsgGC_GameServer_ResetIdentity builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_ResetIdentity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ResetIdentity*)[[[CMsgGC_GameServer_ResetIdentity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ResetIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_ResetIdentity*)[[[CMsgGC_GameServer_ResetIdentity builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_ResetIdentity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ResetIdentity*)[[[CMsgGC_GameServer_ResetIdentity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ResetIdentity_Builder*) builder {
  return [[[CMsgGC_GameServer_ResetIdentity_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_ResetIdentity_Builder*) builderWithPrototype:(CMsgGC_GameServer_ResetIdentity*) prototype {
  return [[CMsgGC_GameServer_ResetIdentity builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_ResetIdentity_Builder*) builder {
  return [CMsgGC_GameServer_ResetIdentity builder];
}
- (CMsgGC_GameServer_ResetIdentity_Builder*) toBuilder {
  return [CMsgGC_GameServer_ResetIdentity builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGameServerAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerAccountId", [NSNumber numberWithInt:self.gameServerAccountId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_ResetIdentity class]]) {
    return NO;
  }
  CMsgGC_GameServer_ResetIdentity *otherMessage = other;
  return
      self.hasGameServerAccountId == otherMessage.hasGameServerAccountId &&
      (!self.hasGameServerAccountId || self.gameServerAccountId == otherMessage.gameServerAccountId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGameServerAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.gameServerAccountId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_ResetIdentity_Builder()
@property (retain) CMsgGC_GameServer_ResetIdentity* _builderResult;
@end

@implementation CMsgGC_GameServer_ResetIdentity_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_ResetIdentity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_ResetIdentity_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_ResetIdentity alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_ResetIdentity_Builder*) clone {
  return [CMsgGC_GameServer_ResetIdentity builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_ResetIdentity*) defaultInstance {
  return [CMsgGC_GameServer_ResetIdentity defaultInstance];
}
- (CMsgGC_GameServer_ResetIdentity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_ResetIdentity*) buildPartial {
  CMsgGC_GameServer_ResetIdentity* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_ResetIdentity_Builder*) mergeFrom:(CMsgGC_GameServer_ResetIdentity*) other {
  if (other == [CMsgGC_GameServer_ResetIdentity defaultInstance]) {
    return self;
  }
  if (other.hasGameServerAccountId) {
    [self setGameServerAccountId:other.gameServerAccountId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_ResetIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_ResetIdentity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGameServerAccountId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasGameServerAccountId {
  return result.hasGameServerAccountId;
}
- (uint32_t) gameServerAccountId {
  return result.gameServerAccountId;
}
- (CMsgGC_GameServer_ResetIdentity_Builder*) setGameServerAccountId:(uint32_t) value {
  result.hasGameServerAccountId = YES;
  result.gameServerAccountId = value;
  return self;
}
- (CMsgGC_GameServer_ResetIdentity_Builder*) clearGameServerAccountId {
  result.hasGameServerAccountId = NO;
  result.gameServerAccountId = 0;
  return self;
}
@end

@interface CMsgGC_GameServer_ResetIdentityResponse ()
@property BOOL gameServerIdentityTokenReset;
@property uint32_t gameServerAccountId;
@property (retain) NSString* gameServerIdentityToken;
@end

@implementation CMsgGC_GameServer_ResetIdentityResponse

- (BOOL) hasGameServerIdentityTokenReset {
  return !!hasGameServerIdentityTokenReset_;
}
- (void) setHasGameServerIdentityTokenReset:(BOOL) value_ {
  hasGameServerIdentityTokenReset_ = !!value_;
}
- (BOOL) gameServerIdentityTokenReset {
  return !!gameServerIdentityTokenReset_;
}
- (void) setGameServerIdentityTokenReset:(BOOL) value_ {
  gameServerIdentityTokenReset_ = !!value_;
}
- (BOOL) hasGameServerAccountId {
  return !!hasGameServerAccountId_;
}
- (void) setHasGameServerAccountId:(BOOL) value_ {
  hasGameServerAccountId_ = !!value_;
}
@synthesize gameServerAccountId;
- (BOOL) hasGameServerIdentityToken {
  return !!hasGameServerIdentityToken_;
}
- (void) setHasGameServerIdentityToken:(BOOL) value_ {
  hasGameServerIdentityToken_ = !!value_;
}
@synthesize gameServerIdentityToken;
- (void) dealloc {
  self.gameServerIdentityToken = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.gameServerIdentityTokenReset = NO;
    self.gameServerAccountId = 0;
    self.gameServerIdentityToken = @"";
  }
  return self;
}
static CMsgGC_GameServer_ResetIdentityResponse* defaultCMsgGC_GameServer_ResetIdentityResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_GameServer_ResetIdentityResponse class]) {
    defaultCMsgGC_GameServer_ResetIdentityResponseInstance = [[CMsgGC_GameServer_ResetIdentityResponse alloc] init];
  }
}
+ (CMsgGC_GameServer_ResetIdentityResponse*) defaultInstance {
  return defaultCMsgGC_GameServer_ResetIdentityResponseInstance;
}
- (CMsgGC_GameServer_ResetIdentityResponse*) defaultInstance {
  return defaultCMsgGC_GameServer_ResetIdentityResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGameServerIdentityTokenReset) {
    [output writeBool:1 value:self.gameServerIdentityTokenReset];
  }
  if (self.hasGameServerAccountId) {
    [output writeUInt32:2 value:self.gameServerAccountId];
  }
  if (self.hasGameServerIdentityToken) {
    [output writeString:3 value:self.gameServerIdentityToken];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGameServerIdentityTokenReset) {
    size_ += computeBoolSize(1, self.gameServerIdentityTokenReset);
  }
  if (self.hasGameServerAccountId) {
    size_ += computeUInt32Size(2, self.gameServerAccountId);
  }
  if (self.hasGameServerIdentityToken) {
    size_ += computeStringSize(3, self.gameServerIdentityToken);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromData:(NSData*) data {
  return (CMsgGC_GameServer_ResetIdentityResponse*)[[[CMsgGC_GameServer_ResetIdentityResponse builder] mergeFromData:data] build];
}
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ResetIdentityResponse*)[[[CMsgGC_GameServer_ResetIdentityResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_GameServer_ResetIdentityResponse*)[[[CMsgGC_GameServer_ResetIdentityResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ResetIdentityResponse*)[[[CMsgGC_GameServer_ResetIdentityResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_GameServer_ResetIdentityResponse*)[[[CMsgGC_GameServer_ResetIdentityResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_GameServer_ResetIdentityResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_GameServer_ResetIdentityResponse*)[[[CMsgGC_GameServer_ResetIdentityResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_GameServer_ResetIdentityResponse_Builder*) builder {
  return [[[CMsgGC_GameServer_ResetIdentityResponse_Builder alloc] init] autorelease];
}
+ (CMsgGC_GameServer_ResetIdentityResponse_Builder*) builderWithPrototype:(CMsgGC_GameServer_ResetIdentityResponse*) prototype {
  return [[CMsgGC_GameServer_ResetIdentityResponse builder] mergeFrom:prototype];
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) builder {
  return [CMsgGC_GameServer_ResetIdentityResponse builder];
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) toBuilder {
  return [CMsgGC_GameServer_ResetIdentityResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGameServerIdentityTokenReset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerIdentityTokenReset", [NSNumber numberWithBool:self.gameServerIdentityTokenReset]];
  }
  if (self.hasGameServerAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerAccountId", [NSNumber numberWithInt:self.gameServerAccountId]];
  }
  if (self.hasGameServerIdentityToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameServerIdentityToken", self.gameServerIdentityToken];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_GameServer_ResetIdentityResponse class]]) {
    return NO;
  }
  CMsgGC_GameServer_ResetIdentityResponse *otherMessage = other;
  return
      self.hasGameServerIdentityTokenReset == otherMessage.hasGameServerIdentityTokenReset &&
      (!self.hasGameServerIdentityTokenReset || self.gameServerIdentityTokenReset == otherMessage.gameServerIdentityTokenReset) &&
      self.hasGameServerAccountId == otherMessage.hasGameServerAccountId &&
      (!self.hasGameServerAccountId || self.gameServerAccountId == otherMessage.gameServerAccountId) &&
      self.hasGameServerIdentityToken == otherMessage.hasGameServerIdentityToken &&
      (!self.hasGameServerIdentityToken || [self.gameServerIdentityToken isEqual:otherMessage.gameServerIdentityToken]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGameServerIdentityTokenReset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.gameServerIdentityTokenReset] hash];
  }
  if (self.hasGameServerAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.gameServerAccountId] hash];
  }
  if (self.hasGameServerIdentityToken) {
    hashCode = hashCode * 31 + [self.gameServerIdentityToken hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_GameServer_ResetIdentityResponse_Builder()
@property (retain) CMsgGC_GameServer_ResetIdentityResponse* _builderResult;
@end

@implementation CMsgGC_GameServer_ResetIdentityResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_GameServer_ResetIdentityResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clear {
  _builderResult = [[[CMsgGC_GameServer_ResetIdentityResponse alloc] init] autorelease];
  return self;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clone {
  return [CMsgGC_GameServer_ResetIdentityResponse builderWithPrototype:_builderResult];
}
- (CMsgGC_GameServer_ResetIdentityResponse*) defaultInstance {
  return [CMsgGC_GameServer_ResetIdentityResponse defaultInstance];
}
- (CMsgGC_GameServer_ResetIdentityResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_GameServer_ResetIdentityResponse*) buildPartial {
  CMsgGC_GameServer_ResetIdentityResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) mergeFrom:(CMsgGC_GameServer_ResetIdentityResponse*) other {
  if (other == [CMsgGC_GameServer_ResetIdentityResponse defaultInstance]) {
    return self;
  }
  if (other.hasGameServerIdentityTokenReset) {
    [self setGameServerIdentityTokenReset:other.gameServerIdentityTokenReset];
  }
  if (other.hasGameServerAccountId) {
    [self setGameServerAccountId:other.gameServerAccountId];
  }
  if (other.hasGameServerIdentityToken) {
    [self setGameServerIdentityToken:other.gameServerIdentityToken];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGameServerIdentityTokenReset:[input readBool]];
        break;
      }
      case 16: {
        [self setGameServerAccountId:[input readUInt32]];
        break;
      }
      case 26: {
        [self setGameServerIdentityToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGameServerIdentityTokenReset {
  return result.hasGameServerIdentityTokenReset;
}
- (BOOL) gameServerIdentityTokenReset {
  return result.gameServerIdentityTokenReset;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) setGameServerIdentityTokenReset:(BOOL) value {
  result.hasGameServerIdentityTokenReset = YES;
  result.gameServerIdentityTokenReset = value;
  return self;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clearGameServerIdentityTokenReset {
  result.hasGameServerIdentityTokenReset = NO;
  result.gameServerIdentityTokenReset = NO;
  return self;
}
- (BOOL) hasGameServerAccountId {
  return result.hasGameServerAccountId;
}
- (uint32_t) gameServerAccountId {
  return result.gameServerAccountId;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) setGameServerAccountId:(uint32_t) value {
  result.hasGameServerAccountId = YES;
  result.gameServerAccountId = value;
  return self;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clearGameServerAccountId {
  result.hasGameServerAccountId = NO;
  result.gameServerAccountId = 0;
  return self;
}
- (BOOL) hasGameServerIdentityToken {
  return result.hasGameServerIdentityToken;
}
- (NSString*) gameServerIdentityToken {
  return result.gameServerIdentityToken;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) setGameServerIdentityToken:(NSString*) value {
  result.hasGameServerIdentityToken = YES;
  result.gameServerIdentityToken = value;
  return self;
}
- (CMsgGC_GameServer_ResetIdentityResponse_Builder*) clearGameServerIdentityToken {
  result.hasGameServerIdentityToken = NO;
  result.gameServerIdentityToken = @"";
  return self;
}
@end

@interface CMsgGC_Halloween_ReservedItem ()
@property (retain) PBAppendableArray * xArray;
@property (retain) PBAppendableArray * yArray;
@property (retain) PBAppendableArray * zArray;
@property uint32_t spawnMetaInfo;
@end

@implementation CMsgGC_Halloween_ReservedItem

@synthesize xArray;
@dynamic x;
@synthesize yArray;
@dynamic y;
@synthesize zArray;
@dynamic z;
- (BOOL) hasSpawnMetaInfo {
  return !!hasSpawnMetaInfo_;
}
- (void) setHasSpawnMetaInfo:(BOOL) value_ {
  hasSpawnMetaInfo_ = !!value_;
}
@synthesize spawnMetaInfo;
- (void) dealloc {
  self.xArray = nil;
  self.yArray = nil;
  self.zArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.spawnMetaInfo = 0;
  }
  return self;
}
static CMsgGC_Halloween_ReservedItem* defaultCMsgGC_Halloween_ReservedItemInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_Halloween_ReservedItem class]) {
    defaultCMsgGC_Halloween_ReservedItemInstance = [[CMsgGC_Halloween_ReservedItem alloc] init];
  }
}
+ (CMsgGC_Halloween_ReservedItem*) defaultInstance {
  return defaultCMsgGC_Halloween_ReservedItemInstance;
}
- (CMsgGC_Halloween_ReservedItem*) defaultInstance {
  return defaultCMsgGC_Halloween_ReservedItemInstance;
}
- (PBArray *)x {
  return xArray;
}
- (Float32)xAtIndex:(NSUInteger)index {
  return [xArray floatAtIndex:index];
}
- (PBArray *)y {
  return yArray;
}
- (Float32)yAtIndex:(NSUInteger)index {
  return [yArray floatAtIndex:index];
}
- (PBArray *)z {
  return zArray;
}
- (Float32)zAtIndex:(NSUInteger)index {
  return [zArray floatAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger xArrayCount = self.xArray.count;
  if (xArrayCount > 0) {
    const Float32 *values = (const Float32 *)self.xArray.data;
    for (NSUInteger i = 0; i < xArrayCount; ++i) {
      [output writeFloat:1 value:values[i]];
    }
  }
  const NSUInteger yArrayCount = self.yArray.count;
  if (yArrayCount > 0) {
    const Float32 *values = (const Float32 *)self.yArray.data;
    for (NSUInteger i = 0; i < yArrayCount; ++i) {
      [output writeFloat:2 value:values[i]];
    }
  }
  const NSUInteger zArrayCount = self.zArray.count;
  if (zArrayCount > 0) {
    const Float32 *values = (const Float32 *)self.zArray.data;
    for (NSUInteger i = 0; i < zArrayCount; ++i) {
      [output writeFloat:3 value:values[i]];
    }
  }
  if (self.hasSpawnMetaInfo) {
    [output writeUInt32:7 value:self.spawnMetaInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.xArray.count;
    dataSize = 4 * count;
    size_ += dataSize;
    size_ += 1 * count;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.yArray.count;
    dataSize = 4 * count;
    size_ += dataSize;
    size_ += 1 * count;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.zArray.count;
    dataSize = 4 * count;
    size_ += dataSize;
    size_ += 1 * count;
  }
  if (self.hasSpawnMetaInfo) {
    size_ += computeUInt32Size(7, self.spawnMetaInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_Halloween_ReservedItem*) parseFromData:(NSData*) data {
  return (CMsgGC_Halloween_ReservedItem*)[[[CMsgGC_Halloween_ReservedItem builder] mergeFromData:data] build];
}
+ (CMsgGC_Halloween_ReservedItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_ReservedItem*)[[[CMsgGC_Halloween_ReservedItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_ReservedItem*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_Halloween_ReservedItem*)[[[CMsgGC_Halloween_ReservedItem builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_Halloween_ReservedItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_ReservedItem*)[[[CMsgGC_Halloween_ReservedItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_ReservedItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_Halloween_ReservedItem*)[[[CMsgGC_Halloween_ReservedItem builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_Halloween_ReservedItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_ReservedItem*)[[[CMsgGC_Halloween_ReservedItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_ReservedItem_Builder*) builder {
  return [[[CMsgGC_Halloween_ReservedItem_Builder alloc] init] autorelease];
}
+ (CMsgGC_Halloween_ReservedItem_Builder*) builderWithPrototype:(CMsgGC_Halloween_ReservedItem*) prototype {
  return [[CMsgGC_Halloween_ReservedItem builder] mergeFrom:prototype];
}
- (CMsgGC_Halloween_ReservedItem_Builder*) builder {
  return [CMsgGC_Halloween_ReservedItem builder];
}
- (CMsgGC_Halloween_ReservedItem_Builder*) toBuilder {
  return [CMsgGC_Halloween_ReservedItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (NSNumber* value in self.xArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"x", value];
  }
  for (NSNumber* value in self.yArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"y", value];
  }
  for (NSNumber* value in self.zArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"z", value];
  }
  if (self.hasSpawnMetaInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"spawnMetaInfo", [NSNumber numberWithInt:self.spawnMetaInfo]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_Halloween_ReservedItem class]]) {
    return NO;
  }
  CMsgGC_Halloween_ReservedItem *otherMessage = other;
  return
      [self.xArray isEqualToArray:otherMessage.xArray] &&
      [self.yArray isEqualToArray:otherMessage.yArray] &&
      [self.zArray isEqualToArray:otherMessage.zArray] &&
      self.hasSpawnMetaInfo == otherMessage.hasSpawnMetaInfo &&
      (!self.hasSpawnMetaInfo || self.spawnMetaInfo == otherMessage.spawnMetaInfo) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (NSNumber* value in self.xArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (NSNumber* value in self.yArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (NSNumber* value in self.zArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  if (self.hasSpawnMetaInfo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.spawnMetaInfo] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_Halloween_ReservedItem_Builder()
@property (retain) CMsgGC_Halloween_ReservedItem* _builderResult;
@end

@implementation CMsgGC_Halloween_ReservedItem_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_Halloween_ReservedItem alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_Halloween_ReservedItem_Builder*) clear {
  _builderResult = [[[CMsgGC_Halloween_ReservedItem alloc] init] autorelease];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder*) clone {
  return [CMsgGC_Halloween_ReservedItem builderWithPrototype:_builderResult];
}
- (CMsgGC_Halloween_ReservedItem*) defaultInstance {
  return [CMsgGC_Halloween_ReservedItem defaultInstance];
}
- (CMsgGC_Halloween_ReservedItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_Halloween_ReservedItem*) buildPartial {
  CMsgGC_Halloween_ReservedItem* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_Halloween_ReservedItem_Builder*) mergeFrom:(CMsgGC_Halloween_ReservedItem*) other {
  if (other == [CMsgGC_Halloween_ReservedItem defaultInstance]) {
    return self;
  }
  if (other.xArray.count > 0) {
    if (result.xArray == nil) {
      result.xArray = [[other.xArray copyWithZone:[other.xArray zone]] autorelease];
    } else {
      [result.xArray appendArray:other.xArray];
    }
  }
  if (other.yArray.count > 0) {
    if (result.yArray == nil) {
      result.yArray = [[other.yArray copyWithZone:[other.yArray zone]] autorelease];
    } else {
      [result.yArray appendArray:other.yArray];
    }
  }
  if (other.zArray.count > 0) {
    if (result.zArray == nil) {
      result.zArray = [[other.zArray copyWithZone:[other.zArray zone]] autorelease];
    } else {
      [result.zArray appendArray:other.zArray];
    }
  }
  if (other.hasSpawnMetaInfo) {
    [self setSpawnMetaInfo:other.spawnMetaInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_Halloween_ReservedItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self addX:[input readFloat]];
        break;
      }
      case 21: {
        [self addY:[input readFloat]];
        break;
      }
      case 29: {
        [self addZ:[input readFloat]];
        break;
      }
      case 56: {
        [self setSpawnMetaInfo:[input readUInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)x {
  return result.xArray;
}
- (Float32)xAtIndex:(NSUInteger)index {
  return [result xAtIndex:index];
}
- (CMsgGC_Halloween_ReservedItem_Builder *)addX:(Float32)value {
  if (result.xArray == nil) {
    result.xArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeFloat];
  }
  [result.xArray addFloat:value];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder *)setXArray:(NSArray *)array {
  result.xArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeFloat];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder *)setXValues:(const Float32 *)values count:(NSUInteger)count {
  result.xArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeFloat];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder *)clearX {
  result.xArray = nil;
  return self;
}
- (PBAppendableArray *)y {
  return result.yArray;
}
- (Float32)yAtIndex:(NSUInteger)index {
  return [result yAtIndex:index];
}
- (CMsgGC_Halloween_ReservedItem_Builder *)addY:(Float32)value {
  if (result.yArray == nil) {
    result.yArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeFloat];
  }
  [result.yArray addFloat:value];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder *)setYArray:(NSArray *)array {
  result.yArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeFloat];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder *)setYValues:(const Float32 *)values count:(NSUInteger)count {
  result.yArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeFloat];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder *)clearY {
  result.yArray = nil;
  return self;
}
- (PBAppendableArray *)z {
  return result.zArray;
}
- (Float32)zAtIndex:(NSUInteger)index {
  return [result zAtIndex:index];
}
- (CMsgGC_Halloween_ReservedItem_Builder *)addZ:(Float32)value {
  if (result.zArray == nil) {
    result.zArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeFloat];
  }
  [result.zArray addFloat:value];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder *)setZArray:(NSArray *)array {
  result.zArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeFloat];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder *)setZValues:(const Float32 *)values count:(NSUInteger)count {
  result.zArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeFloat];
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder *)clearZ {
  result.zArray = nil;
  return self;
}
- (BOOL) hasSpawnMetaInfo {
  return result.hasSpawnMetaInfo;
}
- (uint32_t) spawnMetaInfo {
  return result.spawnMetaInfo;
}
- (CMsgGC_Halloween_ReservedItem_Builder*) setSpawnMetaInfo:(uint32_t) value {
  result.hasSpawnMetaInfo = YES;
  result.spawnMetaInfo = value;
  return self;
}
- (CMsgGC_Halloween_ReservedItem_Builder*) clearSpawnMetaInfo {
  result.hasSpawnMetaInfo = NO;
  result.spawnMetaInfo = 0;
  return self;
}
@end

@interface CMsgGC_Halloween_GrantItem ()
@property uint32_t recipientAccountId;
@property uint32_t levelId;
@property BOOL flagged;
@end

@implementation CMsgGC_Halloween_GrantItem

- (BOOL) hasRecipientAccountId {
  return !!hasRecipientAccountId_;
}
- (void) setHasRecipientAccountId:(BOOL) value_ {
  hasRecipientAccountId_ = !!value_;
}
@synthesize recipientAccountId;
- (BOOL) hasLevelId {
  return !!hasLevelId_;
}
- (void) setHasLevelId:(BOOL) value_ {
  hasLevelId_ = !!value_;
}
@synthesize levelId;
- (BOOL) hasFlagged {
  return !!hasFlagged_;
}
- (void) setHasFlagged:(BOOL) value_ {
  hasFlagged_ = !!value_;
}
- (BOOL) flagged {
  return !!flagged_;
}
- (void) setFlagged:(BOOL) value_ {
  flagged_ = !!value_;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.recipientAccountId = 0;
    self.levelId = 0;
    self.flagged = NO;
  }
  return self;
}
static CMsgGC_Halloween_GrantItem* defaultCMsgGC_Halloween_GrantItemInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_Halloween_GrantItem class]) {
    defaultCMsgGC_Halloween_GrantItemInstance = [[CMsgGC_Halloween_GrantItem alloc] init];
  }
}
+ (CMsgGC_Halloween_GrantItem*) defaultInstance {
  return defaultCMsgGC_Halloween_GrantItemInstance;
}
- (CMsgGC_Halloween_GrantItem*) defaultInstance {
  return defaultCMsgGC_Halloween_GrantItemInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecipientAccountId) {
    [output writeUInt32:1 value:self.recipientAccountId];
  }
  if (self.hasLevelId) {
    [output writeUInt32:2 value:self.levelId];
  }
  if (self.hasFlagged) {
    [output writeBool:3 value:self.flagged];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRecipientAccountId) {
    size_ += computeUInt32Size(1, self.recipientAccountId);
  }
  if (self.hasLevelId) {
    size_ += computeUInt32Size(2, self.levelId);
  }
  if (self.hasFlagged) {
    size_ += computeBoolSize(3, self.flagged);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_Halloween_GrantItem*) parseFromData:(NSData*) data {
  return (CMsgGC_Halloween_GrantItem*)[[[CMsgGC_Halloween_GrantItem builder] mergeFromData:data] build];
}
+ (CMsgGC_Halloween_GrantItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_GrantItem*)[[[CMsgGC_Halloween_GrantItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_GrantItem*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_Halloween_GrantItem*)[[[CMsgGC_Halloween_GrantItem builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_Halloween_GrantItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_GrantItem*)[[[CMsgGC_Halloween_GrantItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_GrantItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_Halloween_GrantItem*)[[[CMsgGC_Halloween_GrantItem builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_Halloween_GrantItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_GrantItem*)[[[CMsgGC_Halloween_GrantItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_GrantItem_Builder*) builder {
  return [[[CMsgGC_Halloween_GrantItem_Builder alloc] init] autorelease];
}
+ (CMsgGC_Halloween_GrantItem_Builder*) builderWithPrototype:(CMsgGC_Halloween_GrantItem*) prototype {
  return [[CMsgGC_Halloween_GrantItem builder] mergeFrom:prototype];
}
- (CMsgGC_Halloween_GrantItem_Builder*) builder {
  return [CMsgGC_Halloween_GrantItem builder];
}
- (CMsgGC_Halloween_GrantItem_Builder*) toBuilder {
  return [CMsgGC_Halloween_GrantItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRecipientAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recipientAccountId", [NSNumber numberWithInt:self.recipientAccountId]];
  }
  if (self.hasLevelId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"levelId", [NSNumber numberWithInt:self.levelId]];
  }
  if (self.hasFlagged) {
    [output appendFormat:@"%@%@: %@\n", indent, @"flagged", [NSNumber numberWithBool:self.flagged]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_Halloween_GrantItem class]]) {
    return NO;
  }
  CMsgGC_Halloween_GrantItem *otherMessage = other;
  return
      self.hasRecipientAccountId == otherMessage.hasRecipientAccountId &&
      (!self.hasRecipientAccountId || self.recipientAccountId == otherMessage.recipientAccountId) &&
      self.hasLevelId == otherMessage.hasLevelId &&
      (!self.hasLevelId || self.levelId == otherMessage.levelId) &&
      self.hasFlagged == otherMessage.hasFlagged &&
      (!self.hasFlagged || self.flagged == otherMessage.flagged) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasRecipientAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.recipientAccountId] hash];
  }
  if (self.hasLevelId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.levelId] hash];
  }
  if (self.hasFlagged) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.flagged] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_Halloween_GrantItem_Builder()
@property (retain) CMsgGC_Halloween_GrantItem* _builderResult;
@end

@implementation CMsgGC_Halloween_GrantItem_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_Halloween_GrantItem alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_Halloween_GrantItem_Builder*) clear {
  _builderResult = [[[CMsgGC_Halloween_GrantItem alloc] init] autorelease];
  return self;
}
- (CMsgGC_Halloween_GrantItem_Builder*) clone {
  return [CMsgGC_Halloween_GrantItem builderWithPrototype:_builderResult];
}
- (CMsgGC_Halloween_GrantItem*) defaultInstance {
  return [CMsgGC_Halloween_GrantItem defaultInstance];
}
- (CMsgGC_Halloween_GrantItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_Halloween_GrantItem*) buildPartial {
  CMsgGC_Halloween_GrantItem* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_Halloween_GrantItem_Builder*) mergeFrom:(CMsgGC_Halloween_GrantItem*) other {
  if (other == [CMsgGC_Halloween_GrantItem defaultInstance]) {
    return self;
  }
  if (other.hasRecipientAccountId) {
    [self setRecipientAccountId:other.recipientAccountId];
  }
  if (other.hasLevelId) {
    [self setLevelId:other.levelId];
  }
  if (other.hasFlagged) {
    [self setFlagged:other.flagged];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_Halloween_GrantItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_Halloween_GrantItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRecipientAccountId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setLevelId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setFlagged:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasRecipientAccountId {
  return result.hasRecipientAccountId;
}
- (uint32_t) recipientAccountId {
  return result.recipientAccountId;
}
- (CMsgGC_Halloween_GrantItem_Builder*) setRecipientAccountId:(uint32_t) value {
  result.hasRecipientAccountId = YES;
  result.recipientAccountId = value;
  return self;
}
- (CMsgGC_Halloween_GrantItem_Builder*) clearRecipientAccountId {
  result.hasRecipientAccountId = NO;
  result.recipientAccountId = 0;
  return self;
}
- (BOOL) hasLevelId {
  return result.hasLevelId;
}
- (uint32_t) levelId {
  return result.levelId;
}
- (CMsgGC_Halloween_GrantItem_Builder*) setLevelId:(uint32_t) value {
  result.hasLevelId = YES;
  result.levelId = value;
  return self;
}
- (CMsgGC_Halloween_GrantItem_Builder*) clearLevelId {
  result.hasLevelId = NO;
  result.levelId = 0;
  return self;
}
- (BOOL) hasFlagged {
  return result.hasFlagged;
}
- (BOOL) flagged {
  return result.flagged;
}
- (CMsgGC_Halloween_GrantItem_Builder*) setFlagged:(BOOL) value {
  result.hasFlagged = YES;
  result.flagged = value;
  return self;
}
- (CMsgGC_Halloween_GrantItem_Builder*) clearFlagged {
  result.hasFlagged = NO;
  result.flagged = NO;
  return self;
}
@end

@interface CMsgGC_Halloween_GrantItemResponse ()
@property uint32_t recipientAccountId;
@end

@implementation CMsgGC_Halloween_GrantItemResponse

- (BOOL) hasRecipientAccountId {
  return !!hasRecipientAccountId_;
}
- (void) setHasRecipientAccountId:(BOOL) value_ {
  hasRecipientAccountId_ = !!value_;
}
@synthesize recipientAccountId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.recipientAccountId = 0;
  }
  return self;
}
static CMsgGC_Halloween_GrantItemResponse* defaultCMsgGC_Halloween_GrantItemResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_Halloween_GrantItemResponse class]) {
    defaultCMsgGC_Halloween_GrantItemResponseInstance = [[CMsgGC_Halloween_GrantItemResponse alloc] init];
  }
}
+ (CMsgGC_Halloween_GrantItemResponse*) defaultInstance {
  return defaultCMsgGC_Halloween_GrantItemResponseInstance;
}
- (CMsgGC_Halloween_GrantItemResponse*) defaultInstance {
  return defaultCMsgGC_Halloween_GrantItemResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRecipientAccountId) {
    [output writeUInt32:1 value:self.recipientAccountId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRecipientAccountId) {
    size_ += computeUInt32Size(1, self.recipientAccountId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromData:(NSData*) data {
  return (CMsgGC_Halloween_GrantItemResponse*)[[[CMsgGC_Halloween_GrantItemResponse builder] mergeFromData:data] build];
}
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_GrantItemResponse*)[[[CMsgGC_Halloween_GrantItemResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_Halloween_GrantItemResponse*)[[[CMsgGC_Halloween_GrantItemResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_GrantItemResponse*)[[[CMsgGC_Halloween_GrantItemResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_Halloween_GrantItemResponse*)[[[CMsgGC_Halloween_GrantItemResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_Halloween_GrantItemResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_GrantItemResponse*)[[[CMsgGC_Halloween_GrantItemResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_GrantItemResponse_Builder*) builder {
  return [[[CMsgGC_Halloween_GrantItemResponse_Builder alloc] init] autorelease];
}
+ (CMsgGC_Halloween_GrantItemResponse_Builder*) builderWithPrototype:(CMsgGC_Halloween_GrantItemResponse*) prototype {
  return [[CMsgGC_Halloween_GrantItemResponse builder] mergeFrom:prototype];
}
- (CMsgGC_Halloween_GrantItemResponse_Builder*) builder {
  return [CMsgGC_Halloween_GrantItemResponse builder];
}
- (CMsgGC_Halloween_GrantItemResponse_Builder*) toBuilder {
  return [CMsgGC_Halloween_GrantItemResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRecipientAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recipientAccountId", [NSNumber numberWithInt:self.recipientAccountId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_Halloween_GrantItemResponse class]]) {
    return NO;
  }
  CMsgGC_Halloween_GrantItemResponse *otherMessage = other;
  return
      self.hasRecipientAccountId == otherMessage.hasRecipientAccountId &&
      (!self.hasRecipientAccountId || self.recipientAccountId == otherMessage.recipientAccountId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasRecipientAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.recipientAccountId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_Halloween_GrantItemResponse_Builder()
@property (retain) CMsgGC_Halloween_GrantItemResponse* _builderResult;
@end

@implementation CMsgGC_Halloween_GrantItemResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_Halloween_GrantItemResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_Halloween_GrantItemResponse_Builder*) clear {
  _builderResult = [[[CMsgGC_Halloween_GrantItemResponse alloc] init] autorelease];
  return self;
}
- (CMsgGC_Halloween_GrantItemResponse_Builder*) clone {
  return [CMsgGC_Halloween_GrantItemResponse builderWithPrototype:_builderResult];
}
- (CMsgGC_Halloween_GrantItemResponse*) defaultInstance {
  return [CMsgGC_Halloween_GrantItemResponse defaultInstance];
}
- (CMsgGC_Halloween_GrantItemResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_Halloween_GrantItemResponse*) buildPartial {
  CMsgGC_Halloween_GrantItemResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_Halloween_GrantItemResponse_Builder*) mergeFrom:(CMsgGC_Halloween_GrantItemResponse*) other {
  if (other == [CMsgGC_Halloween_GrantItemResponse defaultInstance]) {
    return self;
  }
  if (other.hasRecipientAccountId) {
    [self setRecipientAccountId:other.recipientAccountId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_Halloween_GrantItemResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_Halloween_GrantItemResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRecipientAccountId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRecipientAccountId {
  return result.hasRecipientAccountId;
}
- (uint32_t) recipientAccountId {
  return result.recipientAccountId;
}
- (CMsgGC_Halloween_GrantItemResponse_Builder*) setRecipientAccountId:(uint32_t) value {
  result.hasRecipientAccountId = YES;
  result.recipientAccountId = value;
  return self;
}
- (CMsgGC_Halloween_GrantItemResponse_Builder*) clearRecipientAccountId {
  result.hasRecipientAccountId = NO;
  result.recipientAccountId = 0;
  return self;
}
@end

@interface CMsgGC_Halloween_ItemClaimed ()
@end

@implementation CMsgGC_Halloween_ItemClaimed

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgGC_Halloween_ItemClaimed* defaultCMsgGC_Halloween_ItemClaimedInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_Halloween_ItemClaimed class]) {
    defaultCMsgGC_Halloween_ItemClaimedInstance = [[CMsgGC_Halloween_ItemClaimed alloc] init];
  }
}
+ (CMsgGC_Halloween_ItemClaimed*) defaultInstance {
  return defaultCMsgGC_Halloween_ItemClaimedInstance;
}
- (CMsgGC_Halloween_ItemClaimed*) defaultInstance {
  return defaultCMsgGC_Halloween_ItemClaimedInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_Halloween_ItemClaimed*) parseFromData:(NSData*) data {
  return (CMsgGC_Halloween_ItemClaimed*)[[[CMsgGC_Halloween_ItemClaimed builder] mergeFromData:data] build];
}
+ (CMsgGC_Halloween_ItemClaimed*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_ItemClaimed*)[[[CMsgGC_Halloween_ItemClaimed builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_ItemClaimed*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_Halloween_ItemClaimed*)[[[CMsgGC_Halloween_ItemClaimed builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_Halloween_ItemClaimed*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_ItemClaimed*)[[[CMsgGC_Halloween_ItemClaimed builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_ItemClaimed*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_Halloween_ItemClaimed*)[[[CMsgGC_Halloween_ItemClaimed builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_Halloween_ItemClaimed*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_Halloween_ItemClaimed*)[[[CMsgGC_Halloween_ItemClaimed builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_Halloween_ItemClaimed_Builder*) builder {
  return [[[CMsgGC_Halloween_ItemClaimed_Builder alloc] init] autorelease];
}
+ (CMsgGC_Halloween_ItemClaimed_Builder*) builderWithPrototype:(CMsgGC_Halloween_ItemClaimed*) prototype {
  return [[CMsgGC_Halloween_ItemClaimed builder] mergeFrom:prototype];
}
- (CMsgGC_Halloween_ItemClaimed_Builder*) builder {
  return [CMsgGC_Halloween_ItemClaimed builder];
}
- (CMsgGC_Halloween_ItemClaimed_Builder*) toBuilder {
  return [CMsgGC_Halloween_ItemClaimed builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_Halloween_ItemClaimed class]]) {
    return NO;
  }
  CMsgGC_Halloween_ItemClaimed *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_Halloween_ItemClaimed_Builder()
@property (retain) CMsgGC_Halloween_ItemClaimed* _builderResult;
@end

@implementation CMsgGC_Halloween_ItemClaimed_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_Halloween_ItemClaimed alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_Halloween_ItemClaimed_Builder*) clear {
  _builderResult = [[[CMsgGC_Halloween_ItemClaimed alloc] init] autorelease];
  return self;
}
- (CMsgGC_Halloween_ItemClaimed_Builder*) clone {
  return [CMsgGC_Halloween_ItemClaimed builderWithPrototype:_builderResult];
}
- (CMsgGC_Halloween_ItemClaimed*) defaultInstance {
  return [CMsgGC_Halloween_ItemClaimed defaultInstance];
}
- (CMsgGC_Halloween_ItemClaimed*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_Halloween_ItemClaimed*) buildPartial {
  CMsgGC_Halloween_ItemClaimed* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_Halloween_ItemClaimed_Builder*) mergeFrom:(CMsgGC_Halloween_ItemClaimed*) other {
  if (other == [CMsgGC_Halloween_ItemClaimed defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_Halloween_ItemClaimed_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_Halloween_ItemClaimed_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgGC_PickupItemEligibility_Query ()
@property uint32_t accountId;
@property uint32_t secondsAgo;
@end

@implementation CMsgGC_PickupItemEligibility_Query

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) value_ {
  hasAccountId_ = !!value_;
}
@synthesize accountId;
- (BOOL) hasSecondsAgo {
  return !!hasSecondsAgo_;
}
- (void) setHasSecondsAgo:(BOOL) value_ {
  hasSecondsAgo_ = !!value_;
}
@synthesize secondsAgo;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountId = 0;
    self.secondsAgo = 0;
  }
  return self;
}
static CMsgGC_PickupItemEligibility_Query* defaultCMsgGC_PickupItemEligibility_QueryInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_PickupItemEligibility_Query class]) {
    defaultCMsgGC_PickupItemEligibility_QueryInstance = [[CMsgGC_PickupItemEligibility_Query alloc] init];
  }
}
+ (CMsgGC_PickupItemEligibility_Query*) defaultInstance {
  return defaultCMsgGC_PickupItemEligibility_QueryInstance;
}
- (CMsgGC_PickupItemEligibility_Query*) defaultInstance {
  return defaultCMsgGC_PickupItemEligibility_QueryInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeUInt32:1 value:self.accountId];
  }
  if (self.hasSecondsAgo) {
    [output writeUInt32:2 value:self.secondsAgo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountId) {
    size_ += computeUInt32Size(1, self.accountId);
  }
  if (self.hasSecondsAgo) {
    size_ += computeUInt32Size(2, self.secondsAgo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_PickupItemEligibility_Query*) parseFromData:(NSData*) data {
  return (CMsgGC_PickupItemEligibility_Query*)[[[CMsgGC_PickupItemEligibility_Query builder] mergeFromData:data] build];
}
+ (CMsgGC_PickupItemEligibility_Query*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_PickupItemEligibility_Query*)[[[CMsgGC_PickupItemEligibility_Query builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_PickupItemEligibility_Query*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_PickupItemEligibility_Query*)[[[CMsgGC_PickupItemEligibility_Query builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_PickupItemEligibility_Query*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_PickupItemEligibility_Query*)[[[CMsgGC_PickupItemEligibility_Query builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_PickupItemEligibility_Query*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_PickupItemEligibility_Query*)[[[CMsgGC_PickupItemEligibility_Query builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_PickupItemEligibility_Query*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_PickupItemEligibility_Query*)[[[CMsgGC_PickupItemEligibility_Query builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_PickupItemEligibility_Query_Builder*) builder {
  return [[[CMsgGC_PickupItemEligibility_Query_Builder alloc] init] autorelease];
}
+ (CMsgGC_PickupItemEligibility_Query_Builder*) builderWithPrototype:(CMsgGC_PickupItemEligibility_Query*) prototype {
  return [[CMsgGC_PickupItemEligibility_Query builder] mergeFrom:prototype];
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) builder {
  return [CMsgGC_PickupItemEligibility_Query builder];
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) toBuilder {
  return [CMsgGC_PickupItemEligibility_Query builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountId", [NSNumber numberWithInt:self.accountId]];
  }
  if (self.hasSecondsAgo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"secondsAgo", [NSNumber numberWithInt:self.secondsAgo]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_PickupItemEligibility_Query class]]) {
    return NO;
  }
  CMsgGC_PickupItemEligibility_Query *otherMessage = other;
  return
      self.hasAccountId == otherMessage.hasAccountId &&
      (!self.hasAccountId || self.accountId == otherMessage.accountId) &&
      self.hasSecondsAgo == otherMessage.hasSecondsAgo &&
      (!self.hasSecondsAgo || self.secondsAgo == otherMessage.secondsAgo) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountId] hash];
  }
  if (self.hasSecondsAgo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.secondsAgo] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_PickupItemEligibility_Query_Builder()
@property (retain) CMsgGC_PickupItemEligibility_Query* _builderResult;
@end

@implementation CMsgGC_PickupItemEligibility_Query_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_PickupItemEligibility_Query alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) clear {
  _builderResult = [[[CMsgGC_PickupItemEligibility_Query alloc] init] autorelease];
  return self;
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) clone {
  return [CMsgGC_PickupItemEligibility_Query builderWithPrototype:_builderResult];
}
- (CMsgGC_PickupItemEligibility_Query*) defaultInstance {
  return [CMsgGC_PickupItemEligibility_Query defaultInstance];
}
- (CMsgGC_PickupItemEligibility_Query*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_PickupItemEligibility_Query*) buildPartial {
  CMsgGC_PickupItemEligibility_Query* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) mergeFrom:(CMsgGC_PickupItemEligibility_Query*) other {
  if (other == [CMsgGC_PickupItemEligibility_Query defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  if (other.hasSecondsAgo) {
    [self setSecondsAgo:other.secondsAgo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setSecondsAgo:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return result.hasAccountId;
}
- (uint32_t) accountId {
  return result.accountId;
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) setAccountId:(uint32_t) value {
  result.hasAccountId = YES;
  result.accountId = value;
  return self;
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) clearAccountId {
  result.hasAccountId = NO;
  result.accountId = 0;
  return self;
}
- (BOOL) hasSecondsAgo {
  return result.hasSecondsAgo;
}
- (uint32_t) secondsAgo {
  return result.secondsAgo;
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) setSecondsAgo:(uint32_t) value {
  result.hasSecondsAgo = YES;
  result.secondsAgo = value;
  return self;
}
- (CMsgGC_PickupItemEligibility_Query_Builder*) clearSecondsAgo {
  result.hasSecondsAgo = NO;
  result.secondsAgo = 0;
  return self;
}
@end

@interface CMsgGC_PickupItemEligibility_QueryResponse ()
@property uint32_t accountId;
@property BOOL wasEligible;
@property uint32_t levelId;
@end

@implementation CMsgGC_PickupItemEligibility_QueryResponse

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) value_ {
  hasAccountId_ = !!value_;
}
@synthesize accountId;
- (BOOL) hasWasEligible {
  return !!hasWasEligible_;
}
- (void) setHasWasEligible:(BOOL) value_ {
  hasWasEligible_ = !!value_;
}
- (BOOL) wasEligible {
  return !!wasEligible_;
}
- (void) setWasEligible:(BOOL) value_ {
  wasEligible_ = !!value_;
}
- (BOOL) hasLevelId {
  return !!hasLevelId_;
}
- (void) setHasLevelId:(BOOL) value_ {
  hasLevelId_ = !!value_;
}
@synthesize levelId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountId = 0;
    self.wasEligible = NO;
    self.levelId = 0;
  }
  return self;
}
static CMsgGC_PickupItemEligibility_QueryResponse* defaultCMsgGC_PickupItemEligibility_QueryResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgGC_PickupItemEligibility_QueryResponse class]) {
    defaultCMsgGC_PickupItemEligibility_QueryResponseInstance = [[CMsgGC_PickupItemEligibility_QueryResponse alloc] init];
  }
}
+ (CMsgGC_PickupItemEligibility_QueryResponse*) defaultInstance {
  return defaultCMsgGC_PickupItemEligibility_QueryResponseInstance;
}
- (CMsgGC_PickupItemEligibility_QueryResponse*) defaultInstance {
  return defaultCMsgGC_PickupItemEligibility_QueryResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeUInt32:1 value:self.accountId];
  }
  if (self.hasWasEligible) {
    [output writeBool:2 value:self.wasEligible];
  }
  if (self.hasLevelId) {
    [output writeUInt32:3 value:self.levelId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountId) {
    size_ += computeUInt32Size(1, self.accountId);
  }
  if (self.hasWasEligible) {
    size_ += computeBoolSize(2, self.wasEligible);
  }
  if (self.hasLevelId) {
    size_ += computeUInt32Size(3, self.levelId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromData:(NSData*) data {
  return (CMsgGC_PickupItemEligibility_QueryResponse*)[[[CMsgGC_PickupItemEligibility_QueryResponse builder] mergeFromData:data] build];
}
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_PickupItemEligibility_QueryResponse*)[[[CMsgGC_PickupItemEligibility_QueryResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGC_PickupItemEligibility_QueryResponse*)[[[CMsgGC_PickupItemEligibility_QueryResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_PickupItemEligibility_QueryResponse*)[[[CMsgGC_PickupItemEligibility_QueryResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGC_PickupItemEligibility_QueryResponse*)[[[CMsgGC_PickupItemEligibility_QueryResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGC_PickupItemEligibility_QueryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGC_PickupItemEligibility_QueryResponse*)[[[CMsgGC_PickupItemEligibility_QueryResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) builder {
  return [[[CMsgGC_PickupItemEligibility_QueryResponse_Builder alloc] init] autorelease];
}
+ (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) builderWithPrototype:(CMsgGC_PickupItemEligibility_QueryResponse*) prototype {
  return [[CMsgGC_PickupItemEligibility_QueryResponse builder] mergeFrom:prototype];
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) builder {
  return [CMsgGC_PickupItemEligibility_QueryResponse builder];
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) toBuilder {
  return [CMsgGC_PickupItemEligibility_QueryResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountId", [NSNumber numberWithInt:self.accountId]];
  }
  if (self.hasWasEligible) {
    [output appendFormat:@"%@%@: %@\n", indent, @"wasEligible", [NSNumber numberWithBool:self.wasEligible]];
  }
  if (self.hasLevelId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"levelId", [NSNumber numberWithInt:self.levelId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGC_PickupItemEligibility_QueryResponse class]]) {
    return NO;
  }
  CMsgGC_PickupItemEligibility_QueryResponse *otherMessage = other;
  return
      self.hasAccountId == otherMessage.hasAccountId &&
      (!self.hasAccountId || self.accountId == otherMessage.accountId) &&
      self.hasWasEligible == otherMessage.hasWasEligible &&
      (!self.hasWasEligible || self.wasEligible == otherMessage.wasEligible) &&
      self.hasLevelId == otherMessage.hasLevelId &&
      (!self.hasLevelId || self.levelId == otherMessage.levelId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountId] hash];
  }
  if (self.hasWasEligible) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.wasEligible] hash];
  }
  if (self.hasLevelId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.levelId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGC_PickupItemEligibility_QueryResponse_Builder()
@property (retain) CMsgGC_PickupItemEligibility_QueryResponse* _builderResult;
@end

@implementation CMsgGC_PickupItemEligibility_QueryResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGC_PickupItemEligibility_QueryResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clear {
  _builderResult = [[[CMsgGC_PickupItemEligibility_QueryResponse alloc] init] autorelease];
  return self;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clone {
  return [CMsgGC_PickupItemEligibility_QueryResponse builderWithPrototype:_builderResult];
}
- (CMsgGC_PickupItemEligibility_QueryResponse*) defaultInstance {
  return [CMsgGC_PickupItemEligibility_QueryResponse defaultInstance];
}
- (CMsgGC_PickupItemEligibility_QueryResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGC_PickupItemEligibility_QueryResponse*) buildPartial {
  CMsgGC_PickupItemEligibility_QueryResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) mergeFrom:(CMsgGC_PickupItemEligibility_QueryResponse*) other {
  if (other == [CMsgGC_PickupItemEligibility_QueryResponse defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  if (other.hasWasEligible) {
    [self setWasEligible:other.wasEligible];
  }
  if (other.hasLevelId) {
    [self setLevelId:other.levelId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setWasEligible:[input readBool]];
        break;
      }
      case 24: {
        [self setLevelId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return result.hasAccountId;
}
- (uint32_t) accountId {
  return result.accountId;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) setAccountId:(uint32_t) value {
  result.hasAccountId = YES;
  result.accountId = value;
  return self;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clearAccountId {
  result.hasAccountId = NO;
  result.accountId = 0;
  return self;
}
- (BOOL) hasWasEligible {
  return result.hasWasEligible;
}
- (BOOL) wasEligible {
  return result.wasEligible;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) setWasEligible:(BOOL) value {
  result.hasWasEligible = YES;
  result.wasEligible = value;
  return self;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clearWasEligible {
  result.hasWasEligible = NO;
  result.wasEligible = NO;
  return self;
}
- (BOOL) hasLevelId {
  return result.hasLevelId;
}
- (uint32_t) levelId {
  return result.levelId;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) setLevelId:(uint32_t) value {
  result.hasLevelId = YES;
  result.levelId = value;
  return self;
}
- (CMsgGC_PickupItemEligibility_QueryResponse_Builder*) clearLevelId {
  result.hasLevelId = NO;
  result.levelId = 0;
  return self;
}
@end

@interface CSOTFPartyMember ()
@property BOOL ownsTicket;
@property uint32_t completedMissions;
@property uint32_t badgeLevel;
@property BOOL squadSurplus;
@property BOOL isBanned;
@end

@implementation CSOTFPartyMember

- (BOOL) hasOwnsTicket {
  return !!hasOwnsTicket_;
}
- (void) setHasOwnsTicket:(BOOL) value_ {
  hasOwnsTicket_ = !!value_;
}
- (BOOL) ownsTicket {
  return !!ownsTicket_;
}
- (void) setOwnsTicket:(BOOL) value_ {
  ownsTicket_ = !!value_;
}
- (BOOL) hasCompletedMissions {
  return !!hasCompletedMissions_;
}
- (void) setHasCompletedMissions:(BOOL) value_ {
  hasCompletedMissions_ = !!value_;
}
@synthesize completedMissions;
- (BOOL) hasBadgeLevel {
  return !!hasBadgeLevel_;
}
- (void) setHasBadgeLevel:(BOOL) value_ {
  hasBadgeLevel_ = !!value_;
}
@synthesize badgeLevel;
- (BOOL) hasSquadSurplus {
  return !!hasSquadSurplus_;
}
- (void) setHasSquadSurplus:(BOOL) value_ {
  hasSquadSurplus_ = !!value_;
}
- (BOOL) squadSurplus {
  return !!squadSurplus_;
}
- (void) setSquadSurplus:(BOOL) value_ {
  squadSurplus_ = !!value_;
}
- (BOOL) hasIsBanned {
  return !!hasIsBanned_;
}
- (void) setHasIsBanned:(BOOL) value_ {
  hasIsBanned_ = !!value_;
}
- (BOOL) isBanned {
  return !!isBanned_;
}
- (void) setIsBanned:(BOOL) value_ {
  isBanned_ = !!value_;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.ownsTicket = NO;
    self.completedMissions = 0;
    self.badgeLevel = 0;
    self.squadSurplus = NO;
    self.isBanned = NO;
  }
  return self;
}
static CSOTFPartyMember* defaultCSOTFPartyMemberInstance = nil;
+ (void) initialize {
  if (self == [CSOTFPartyMember class]) {
    defaultCSOTFPartyMemberInstance = [[CSOTFPartyMember alloc] init];
  }
}
+ (CSOTFPartyMember*) defaultInstance {
  return defaultCSOTFPartyMemberInstance;
}
- (CSOTFPartyMember*) defaultInstance {
  return defaultCSOTFPartyMemberInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOwnsTicket) {
    [output writeBool:2 value:self.ownsTicket];
  }
  if (self.hasCompletedMissions) {
    [output writeUInt32:3 value:self.completedMissions];
  }
  if (self.hasBadgeLevel) {
    [output writeUInt32:4 value:self.badgeLevel];
  }
  if (self.hasSquadSurplus) {
    [output writeBool:5 value:self.squadSurplus];
  }
  if (self.hasIsBanned) {
    [output writeBool:8 value:self.isBanned];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOwnsTicket) {
    size_ += computeBoolSize(2, self.ownsTicket);
  }
  if (self.hasCompletedMissions) {
    size_ += computeUInt32Size(3, self.completedMissions);
  }
  if (self.hasBadgeLevel) {
    size_ += computeUInt32Size(4, self.badgeLevel);
  }
  if (self.hasSquadSurplus) {
    size_ += computeBoolSize(5, self.squadSurplus);
  }
  if (self.hasIsBanned) {
    size_ += computeBoolSize(8, self.isBanned);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CSOTFPartyMember*) parseFromData:(NSData*) data {
  return (CSOTFPartyMember*)[[[CSOTFPartyMember builder] mergeFromData:data] build];
}
+ (CSOTFPartyMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPartyMember*)[[[CSOTFPartyMember builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPartyMember*) parseFromInputStream:(NSInputStream*) input {
  return (CSOTFPartyMember*)[[[CSOTFPartyMember builder] mergeFromInputStream:input] build];
}
+ (CSOTFPartyMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPartyMember*)[[[CSOTFPartyMember builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CSOTFPartyMember*)[[[CSOTFPartyMember builder] mergeFromCodedInputStream:input] build];
}
+ (CSOTFPartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPartyMember*)[[[CSOTFPartyMember builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPartyMember_Builder*) builder {
  return [[[CSOTFPartyMember_Builder alloc] init] autorelease];
}
+ (CSOTFPartyMember_Builder*) builderWithPrototype:(CSOTFPartyMember*) prototype {
  return [[CSOTFPartyMember builder] mergeFrom:prototype];
}
- (CSOTFPartyMember_Builder*) builder {
  return [CSOTFPartyMember builder];
}
- (CSOTFPartyMember_Builder*) toBuilder {
  return [CSOTFPartyMember builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasOwnsTicket) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ownsTicket", [NSNumber numberWithBool:self.ownsTicket]];
  }
  if (self.hasCompletedMissions) {
    [output appendFormat:@"%@%@: %@\n", indent, @"completedMissions", [NSNumber numberWithInt:self.completedMissions]];
  }
  if (self.hasBadgeLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"badgeLevel", [NSNumber numberWithInt:self.badgeLevel]];
  }
  if (self.hasSquadSurplus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"squadSurplus", [NSNumber numberWithBool:self.squadSurplus]];
  }
  if (self.hasIsBanned) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isBanned", [NSNumber numberWithBool:self.isBanned]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CSOTFPartyMember class]]) {
    return NO;
  }
  CSOTFPartyMember *otherMessage = other;
  return
      self.hasOwnsTicket == otherMessage.hasOwnsTicket &&
      (!self.hasOwnsTicket || self.ownsTicket == otherMessage.ownsTicket) &&
      self.hasCompletedMissions == otherMessage.hasCompletedMissions &&
      (!self.hasCompletedMissions || self.completedMissions == otherMessage.completedMissions) &&
      self.hasBadgeLevel == otherMessage.hasBadgeLevel &&
      (!self.hasBadgeLevel || self.badgeLevel == otherMessage.badgeLevel) &&
      self.hasSquadSurplus == otherMessage.hasSquadSurplus &&
      (!self.hasSquadSurplus || self.squadSurplus == otherMessage.squadSurplus) &&
      self.hasIsBanned == otherMessage.hasIsBanned &&
      (!self.hasIsBanned || self.isBanned == otherMessage.isBanned) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasOwnsTicket) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.ownsTicket] hash];
  }
  if (self.hasCompletedMissions) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.completedMissions] hash];
  }
  if (self.hasBadgeLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.badgeLevel] hash];
  }
  if (self.hasSquadSurplus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.squadSurplus] hash];
  }
  if (self.hasIsBanned) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isBanned] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CSOTFPartyMember_Builder()
@property (retain) CSOTFPartyMember* _builderResult;
@end

@implementation CSOTFPartyMember_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CSOTFPartyMember alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CSOTFPartyMember_Builder*) clear {
  _builderResult = [[[CSOTFPartyMember alloc] init] autorelease];
  return self;
}
- (CSOTFPartyMember_Builder*) clone {
  return [CSOTFPartyMember builderWithPrototype:_builderResult];
}
- (CSOTFPartyMember*) defaultInstance {
  return [CSOTFPartyMember defaultInstance];
}
- (CSOTFPartyMember*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CSOTFPartyMember*) buildPartial {
  CSOTFPartyMember* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CSOTFPartyMember_Builder*) mergeFrom:(CSOTFPartyMember*) other {
  if (other == [CSOTFPartyMember defaultInstance]) {
    return self;
  }
  if (other.hasOwnsTicket) {
    [self setOwnsTicket:other.ownsTicket];
  }
  if (other.hasCompletedMissions) {
    [self setCompletedMissions:other.completedMissions];
  }
  if (other.hasBadgeLevel) {
    [self setBadgeLevel:other.badgeLevel];
  }
  if (other.hasSquadSurplus) {
    [self setSquadSurplus:other.squadSurplus];
  }
  if (other.hasIsBanned) {
    [self setIsBanned:other.isBanned];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CSOTFPartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CSOTFPartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 16: {
        [self setOwnsTicket:[input readBool]];
        break;
      }
      case 24: {
        [self setCompletedMissions:[input readUInt32]];
        break;
      }
      case 32: {
        [self setBadgeLevel:[input readUInt32]];
        break;
      }
      case 40: {
        [self setSquadSurplus:[input readBool]];
        break;
      }
      case 64: {
        [self setIsBanned:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasOwnsTicket {
  return result.hasOwnsTicket;
}
- (BOOL) ownsTicket {
  return result.ownsTicket;
}
- (CSOTFPartyMember_Builder*) setOwnsTicket:(BOOL) value {
  result.hasOwnsTicket = YES;
  result.ownsTicket = value;
  return self;
}
- (CSOTFPartyMember_Builder*) clearOwnsTicket {
  result.hasOwnsTicket = NO;
  result.ownsTicket = NO;
  return self;
}
- (BOOL) hasCompletedMissions {
  return result.hasCompletedMissions;
}
- (uint32_t) completedMissions {
  return result.completedMissions;
}
- (CSOTFPartyMember_Builder*) setCompletedMissions:(uint32_t) value {
  result.hasCompletedMissions = YES;
  result.completedMissions = value;
  return self;
}
- (CSOTFPartyMember_Builder*) clearCompletedMissions {
  result.hasCompletedMissions = NO;
  result.completedMissions = 0;
  return self;
}
- (BOOL) hasBadgeLevel {
  return result.hasBadgeLevel;
}
- (uint32_t) badgeLevel {
  return result.badgeLevel;
}
- (CSOTFPartyMember_Builder*) setBadgeLevel:(uint32_t) value {
  result.hasBadgeLevel = YES;
  result.badgeLevel = value;
  return self;
}
- (CSOTFPartyMember_Builder*) clearBadgeLevel {
  result.hasBadgeLevel = NO;
  result.badgeLevel = 0;
  return self;
}
- (BOOL) hasSquadSurplus {
  return result.hasSquadSurplus;
}
- (BOOL) squadSurplus {
  return result.squadSurplus;
}
- (CSOTFPartyMember_Builder*) setSquadSurplus:(BOOL) value {
  result.hasSquadSurplus = YES;
  result.squadSurplus = value;
  return self;
}
- (CSOTFPartyMember_Builder*) clearSquadSurplus {
  result.hasSquadSurplus = NO;
  result.squadSurplus = NO;
  return self;
}
- (BOOL) hasIsBanned {
  return result.hasIsBanned;
}
- (BOOL) isBanned {
  return result.isBanned;
}
- (CSOTFPartyMember_Builder*) setIsBanned:(BOOL) value {
  result.hasIsBanned = YES;
  result.isBanned = value;
  return self;
}
- (CSOTFPartyMember_Builder*) clearIsBanned {
  result.hasIsBanned = NO;
  result.isBanned = NO;
  return self;
}
@end

@interface CMsgMatchSearchCriteria ()
@property TF_MatchmakingMode matchmaking_mode;
@property BOOL lateJoinOk;
@property (retain) NSString* mvmMannupTour;
@property (retain) PBAppendableArray * mvmMissionsArray;
@property BOOL playForBraggingRights;
@property uint32_t quickplayGameType;
@end

@implementation CMsgMatchSearchCriteria

- (BOOL) hasmatchmaking_mode {
  return !!hasmatchmaking_mode_;
}
- (void) setHasmatchmaking_mode:(BOOL) value_ {
  hasmatchmaking_mode_ = !!value_;
}
@synthesize matchmaking_mode;
- (BOOL) hasLateJoinOk {
  return !!hasLateJoinOk_;
}
- (void) setHasLateJoinOk:(BOOL) value_ {
  hasLateJoinOk_ = !!value_;
}
- (BOOL) lateJoinOk {
  return !!lateJoinOk_;
}
- (void) setLateJoinOk:(BOOL) value_ {
  lateJoinOk_ = !!value_;
}
- (BOOL) hasMvmMannupTour {
  return !!hasMvmMannupTour_;
}
- (void) setHasMvmMannupTour:(BOOL) value_ {
  hasMvmMannupTour_ = !!value_;
}
@synthesize mvmMannupTour;
@synthesize mvmMissionsArray;
@dynamic mvmMissions;
- (BOOL) hasPlayForBraggingRights {
  return !!hasPlayForBraggingRights_;
}
- (void) setHasPlayForBraggingRights:(BOOL) value_ {
  hasPlayForBraggingRights_ = !!value_;
}
- (BOOL) playForBraggingRights {
  return !!playForBraggingRights_;
}
- (void) setPlayForBraggingRights:(BOOL) value_ {
  playForBraggingRights_ = !!value_;
}
- (BOOL) hasQuickplayGameType {
  return !!hasQuickplayGameType_;
}
- (void) setHasQuickplayGameType:(BOOL) value_ {
  hasQuickplayGameType_ = !!value_;
}
@synthesize quickplayGameType;
- (void) dealloc {
  self.mvmMannupTour = nil;
  self.mvmMissionsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.matchmaking_mode = TF_MatchmakingModeTF_Matchmaking_INVALID;
    self.lateJoinOk = NO;
    self.mvmMannupTour = @"";
    self.playForBraggingRights = NO;
    self.quickplayGameType = 0;
  }
  return self;
}
static CMsgMatchSearchCriteria* defaultCMsgMatchSearchCriteriaInstance = nil;
+ (void) initialize {
  if (self == [CMsgMatchSearchCriteria class]) {
    defaultCMsgMatchSearchCriteriaInstance = [[CMsgMatchSearchCriteria alloc] init];
  }
}
+ (CMsgMatchSearchCriteria*) defaultInstance {
  return defaultCMsgMatchSearchCriteriaInstance;
}
- (CMsgMatchSearchCriteria*) defaultInstance {
  return defaultCMsgMatchSearchCriteriaInstance;
}
- (PBArray *)mvmMissions {
  return mvmMissionsArray;
}
- (NSString*)mvmMissionsAtIndex:(NSUInteger)index {
  return [mvmMissionsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLateJoinOk) {
    [output writeBool:5 value:self.lateJoinOk];
  }
  if (self.hasPlayForBraggingRights) {
    [output writeBool:6 value:self.playForBraggingRights];
  }
  if (self.hasmatchmaking_mode) {
    [output writeEnum:7 value:self.matchmaking_mode];
  }
  if (self.hasQuickplayGameType) {
    [output writeUInt32:8 value:self.quickplayGameType];
  }
  const NSUInteger mvmMissionsArrayCount = self.mvmMissionsArray.count;
  if (mvmMissionsArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.mvmMissionsArray.data;
    for (NSUInteger i = 0; i < mvmMissionsArrayCount; ++i) {
      [output writeString:9 value:values[i]];
    }
  }
  if (self.hasMvmMannupTour) {
    [output writeString:10 value:self.mvmMannupTour];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLateJoinOk) {
    size_ += computeBoolSize(5, self.lateJoinOk);
  }
  if (self.hasPlayForBraggingRights) {
    size_ += computeBoolSize(6, self.playForBraggingRights);
  }
  if (self.hasmatchmaking_mode) {
    size_ += computeEnumSize(7, self.matchmaking_mode);
  }
  if (self.hasQuickplayGameType) {
    size_ += computeUInt32Size(8, self.quickplayGameType);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.mvmMissionsArray.count;
    const NSString* *values = (const NSString* *)self.mvmMissionsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  if (self.hasMvmMannupTour) {
    size_ += computeStringSize(10, self.mvmMannupTour);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMatchSearchCriteria*) parseFromData:(NSData*) data {
  return (CMsgMatchSearchCriteria*)[[[CMsgMatchSearchCriteria builder] mergeFromData:data] build];
}
+ (CMsgMatchSearchCriteria*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchSearchCriteria*)[[[CMsgMatchSearchCriteria builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchSearchCriteria*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMatchSearchCriteria*)[[[CMsgMatchSearchCriteria builder] mergeFromInputStream:input] build];
}
+ (CMsgMatchSearchCriteria*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchSearchCriteria*)[[[CMsgMatchSearchCriteria builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchSearchCriteria*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMatchSearchCriteria*)[[[CMsgMatchSearchCriteria builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMatchSearchCriteria*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchSearchCriteria*)[[[CMsgMatchSearchCriteria builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchSearchCriteria_Builder*) builder {
  return [[[CMsgMatchSearchCriteria_Builder alloc] init] autorelease];
}
+ (CMsgMatchSearchCriteria_Builder*) builderWithPrototype:(CMsgMatchSearchCriteria*) prototype {
  return [[CMsgMatchSearchCriteria builder] mergeFrom:prototype];
}
- (CMsgMatchSearchCriteria_Builder*) builder {
  return [CMsgMatchSearchCriteria builder];
}
- (CMsgMatchSearchCriteria_Builder*) toBuilder {
  return [CMsgMatchSearchCriteria builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLateJoinOk) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lateJoinOk", [NSNumber numberWithBool:self.lateJoinOk]];
  }
  if (self.hasPlayForBraggingRights) {
    [output appendFormat:@"%@%@: %@\n", indent, @"playForBraggingRights", [NSNumber numberWithBool:self.playForBraggingRights]];
  }
  if (self.hasmatchmaking_mode) {
    [output appendFormat:@"%@%@: %d\n", indent, @"matchmaking_mode", self.matchmaking_mode];
  }
  if (self.hasQuickplayGameType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"quickplayGameType", [NSNumber numberWithInt:self.quickplayGameType]];
  }
  for (NSString* element in self.mvmMissionsArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mvmMissions", element];
  }
  if (self.hasMvmMannupTour) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mvmMannupTour", self.mvmMannupTour];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMatchSearchCriteria class]]) {
    return NO;
  }
  CMsgMatchSearchCriteria *otherMessage = other;
  return
      self.hasLateJoinOk == otherMessage.hasLateJoinOk &&
      (!self.hasLateJoinOk || self.lateJoinOk == otherMessage.lateJoinOk) &&
      self.hasPlayForBraggingRights == otherMessage.hasPlayForBraggingRights &&
      (!self.hasPlayForBraggingRights || self.playForBraggingRights == otherMessage.playForBraggingRights) &&
      self.hasmatchmaking_mode == otherMessage.hasmatchmaking_mode &&
      (!self.hasmatchmaking_mode || self.matchmaking_mode == otherMessage.matchmaking_mode) &&
      self.hasQuickplayGameType == otherMessage.hasQuickplayGameType &&
      (!self.hasQuickplayGameType || self.quickplayGameType == otherMessage.quickplayGameType) &&
      [self.mvmMissionsArray isEqualToArray:otherMessage.mvmMissionsArray] &&
      self.hasMvmMannupTour == otherMessage.hasMvmMannupTour &&
      (!self.hasMvmMannupTour || [self.mvmMannupTour isEqual:otherMessage.mvmMannupTour]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasLateJoinOk) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.lateJoinOk] hash];
  }
  if (self.hasPlayForBraggingRights) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.playForBraggingRights] hash];
  }
  if (self.hasmatchmaking_mode) {
    hashCode = hashCode * 31 + self.matchmaking_mode;
  }
  if (self.hasQuickplayGameType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.quickplayGameType] hash];
  }
  for (NSString* element in self.mvmMissionsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasMvmMannupTour) {
    hashCode = hashCode * 31 + [self.mvmMannupTour hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMatchSearchCriteria_Builder()
@property (retain) CMsgMatchSearchCriteria* _builderResult;
@end

@implementation CMsgMatchSearchCriteria_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMatchSearchCriteria alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMatchSearchCriteria_Builder*) clear {
  _builderResult = [[[CMsgMatchSearchCriteria alloc] init] autorelease];
  return self;
}
- (CMsgMatchSearchCriteria_Builder*) clone {
  return [CMsgMatchSearchCriteria builderWithPrototype:_builderResult];
}
- (CMsgMatchSearchCriteria*) defaultInstance {
  return [CMsgMatchSearchCriteria defaultInstance];
}
- (CMsgMatchSearchCriteria*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMatchSearchCriteria*) buildPartial {
  CMsgMatchSearchCriteria* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMatchSearchCriteria_Builder*) mergeFrom:(CMsgMatchSearchCriteria*) other {
  if (other == [CMsgMatchSearchCriteria defaultInstance]) {
    return self;
  }
  if (other.hasmatchmaking_mode) {
    [self setmatchmaking_mode:other.matchmaking_mode];
  }
  if (other.hasLateJoinOk) {
    [self setLateJoinOk:other.lateJoinOk];
  }
  if (other.hasMvmMannupTour) {
    [self setMvmMannupTour:other.mvmMannupTour];
  }
  if (other.mvmMissionsArray.count > 0) {
    if (result.mvmMissionsArray == nil) {
      result.mvmMissionsArray = [[other.mvmMissionsArray copyWithZone:[other.mvmMissionsArray zone]] autorelease];
    } else {
      [result.mvmMissionsArray appendArray:other.mvmMissionsArray];
    }
  }
  if (other.hasPlayForBraggingRights) {
    [self setPlayForBraggingRights:other.playForBraggingRights];
  }
  if (other.hasQuickplayGameType) {
    [self setQuickplayGameType:other.quickplayGameType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMatchSearchCriteria_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMatchSearchCriteria_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 40: {
        [self setLateJoinOk:[input readBool]];
        break;
      }
      case 48: {
        [self setPlayForBraggingRights:[input readBool]];
        break;
      }
      case 56: {
        int32_t value = [input readEnum];
        if (TF_MatchmakingModeIsValidValue(value)) {
          [self setmatchmaking_mode:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 64: {
        [self setQuickplayGameType:[input readUInt32]];
        break;
      }
      case 74: {
        [self addMvmMissions:[input readString]];
        break;
      }
      case 82: {
        [self setMvmMannupTour:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasmatchmaking_mode {
  return result.hasmatchmaking_mode;
}
- (TF_MatchmakingMode) matchmaking_mode {
  return result.matchmaking_mode;
}
- (CMsgMatchSearchCriteria_Builder*) setmatchmaking_mode:(TF_MatchmakingMode) value {
  result.hasmatchmaking_mode = YES;
  result.matchmaking_mode = value;
  return self;
}
- (CMsgMatchSearchCriteria_Builder*) clearmatchmaking_mode {
  result.hasmatchmaking_mode = NO;
  result.matchmaking_mode = TF_MatchmakingModeTF_Matchmaking_INVALID;
  return self;
}
- (BOOL) hasLateJoinOk {
  return result.hasLateJoinOk;
}
- (BOOL) lateJoinOk {
  return result.lateJoinOk;
}
- (CMsgMatchSearchCriteria_Builder*) setLateJoinOk:(BOOL) value {
  result.hasLateJoinOk = YES;
  result.lateJoinOk = value;
  return self;
}
- (CMsgMatchSearchCriteria_Builder*) clearLateJoinOk {
  result.hasLateJoinOk = NO;
  result.lateJoinOk = NO;
  return self;
}
- (BOOL) hasMvmMannupTour {
  return result.hasMvmMannupTour;
}
- (NSString*) mvmMannupTour {
  return result.mvmMannupTour;
}
- (CMsgMatchSearchCriteria_Builder*) setMvmMannupTour:(NSString*) value {
  result.hasMvmMannupTour = YES;
  result.mvmMannupTour = value;
  return self;
}
- (CMsgMatchSearchCriteria_Builder*) clearMvmMannupTour {
  result.hasMvmMannupTour = NO;
  result.mvmMannupTour = @"";
  return self;
}
- (PBAppendableArray *)mvmMissions {
  return result.mvmMissionsArray;
}
- (NSString*)mvmMissionsAtIndex:(NSUInteger)index {
  return [result mvmMissionsAtIndex:index];
}
- (CMsgMatchSearchCriteria_Builder *)addMvmMissions:(NSString*)value {
  if (result.mvmMissionsArray == nil) {
    result.mvmMissionsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.mvmMissionsArray addObject:value];
  return self;
}
- (CMsgMatchSearchCriteria_Builder *)setMvmMissionsArray:(NSArray *)array {
  result.mvmMissionsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgMatchSearchCriteria_Builder *)setMvmMissionsValues:(const NSString* *)values count:(NSUInteger)count {
  result.mvmMissionsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgMatchSearchCriteria_Builder *)clearMvmMissions {
  result.mvmMissionsArray = nil;
  return self;
}
- (BOOL) hasPlayForBraggingRights {
  return result.hasPlayForBraggingRights;
}
- (BOOL) playForBraggingRights {
  return result.playForBraggingRights;
}
- (CMsgMatchSearchCriteria_Builder*) setPlayForBraggingRights:(BOOL) value {
  result.hasPlayForBraggingRights = YES;
  result.playForBraggingRights = value;
  return self;
}
- (CMsgMatchSearchCriteria_Builder*) clearPlayForBraggingRights {
  result.hasPlayForBraggingRights = NO;
  result.playForBraggingRights = NO;
  return self;
}
- (BOOL) hasQuickplayGameType {
  return result.hasQuickplayGameType;
}
- (uint32_t) quickplayGameType {
  return result.quickplayGameType;
}
- (CMsgMatchSearchCriteria_Builder*) setQuickplayGameType:(uint32_t) value {
  result.hasQuickplayGameType = YES;
  result.quickplayGameType = value;
  return self;
}
- (CMsgMatchSearchCriteria_Builder*) clearQuickplayGameType {
  result.hasQuickplayGameType = NO;
  result.quickplayGameType = 0;
  return self;
}
@end

@interface CMsgCreateOrUpdateParty ()
@property (retain) CMsgMatchSearchCriteria* searchCriteria;
@property uint64_t steamLobbyId;
@property BOOL squadSurplus;
@property TF_Matchmaking_WizardStep wizard_step;
@property uint32_t clientVersion;
@end

@implementation CMsgCreateOrUpdateParty

- (BOOL) hasSearchCriteria {
  return !!hasSearchCriteria_;
}
- (void) setHasSearchCriteria:(BOOL) value_ {
  hasSearchCriteria_ = !!value_;
}
@synthesize searchCriteria;
- (BOOL) hasSteamLobbyId {
  return !!hasSteamLobbyId_;
}
- (void) setHasSteamLobbyId:(BOOL) value_ {
  hasSteamLobbyId_ = !!value_;
}
@synthesize steamLobbyId;
- (BOOL) hasSquadSurplus {
  return !!hasSquadSurplus_;
}
- (void) setHasSquadSurplus:(BOOL) value_ {
  hasSquadSurplus_ = !!value_;
}
- (BOOL) squadSurplus {
  return !!squadSurplus_;
}
- (void) setSquadSurplus:(BOOL) value_ {
  squadSurplus_ = !!value_;
}
- (BOOL) haswizard_step {
  return !!haswizard_step_;
}
- (void) setHaswizard_step:(BOOL) value_ {
  haswizard_step_ = !!value_;
}
@synthesize wizard_step;
- (BOOL) hasClientVersion {
  return !!hasClientVersion_;
}
- (void) setHasClientVersion:(BOOL) value_ {
  hasClientVersion_ = !!value_;
}
@synthesize clientVersion;
- (void) dealloc {
  self.searchCriteria = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.searchCriteria = [CMsgMatchSearchCriteria defaultInstance];
    self.steamLobbyId = 0L;
    self.squadSurplus = NO;
    self.wizard_step = TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_INVALID;
    self.clientVersion = 1225;
  }
  return self;
}
static CMsgCreateOrUpdateParty* defaultCMsgCreateOrUpdatePartyInstance = nil;
+ (void) initialize {
  if (self == [CMsgCreateOrUpdateParty class]) {
    defaultCMsgCreateOrUpdatePartyInstance = [[CMsgCreateOrUpdateParty alloc] init];
  }
}
+ (CMsgCreateOrUpdateParty*) defaultInstance {
  return defaultCMsgCreateOrUpdatePartyInstance;
}
- (CMsgCreateOrUpdateParty*) defaultInstance {
  return defaultCMsgCreateOrUpdatePartyInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSearchCriteria) {
    [output writeMessage:1 value:self.searchCriteria];
  }
  if (self.hasSteamLobbyId) {
    [output writeFixed64:3 value:self.steamLobbyId];
  }
  if (self.hasSquadSurplus) {
    [output writeBool:4 value:self.squadSurplus];
  }
  if (self.haswizard_step) {
    [output writeEnum:5 value:self.wizard_step];
  }
  if (self.hasClientVersion) {
    [output writeUInt32:6 value:self.clientVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSearchCriteria) {
    size_ += computeMessageSize(1, self.searchCriteria);
  }
  if (self.hasSteamLobbyId) {
    size_ += computeFixed64Size(3, self.steamLobbyId);
  }
  if (self.hasSquadSurplus) {
    size_ += computeBoolSize(4, self.squadSurplus);
  }
  if (self.haswizard_step) {
    size_ += computeEnumSize(5, self.wizard_step);
  }
  if (self.hasClientVersion) {
    size_ += computeUInt32Size(6, self.clientVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgCreateOrUpdateParty*) parseFromData:(NSData*) data {
  return (CMsgCreateOrUpdateParty*)[[[CMsgCreateOrUpdateParty builder] mergeFromData:data] build];
}
+ (CMsgCreateOrUpdateParty*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCreateOrUpdateParty*)[[[CMsgCreateOrUpdateParty builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgCreateOrUpdateParty*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgCreateOrUpdateParty*)[[[CMsgCreateOrUpdateParty builder] mergeFromInputStream:input] build];
}
+ (CMsgCreateOrUpdateParty*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCreateOrUpdateParty*)[[[CMsgCreateOrUpdateParty builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgCreateOrUpdateParty*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgCreateOrUpdateParty*)[[[CMsgCreateOrUpdateParty builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgCreateOrUpdateParty*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCreateOrUpdateParty*)[[[CMsgCreateOrUpdateParty builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgCreateOrUpdateParty_Builder*) builder {
  return [[[CMsgCreateOrUpdateParty_Builder alloc] init] autorelease];
}
+ (CMsgCreateOrUpdateParty_Builder*) builderWithPrototype:(CMsgCreateOrUpdateParty*) prototype {
  return [[CMsgCreateOrUpdateParty builder] mergeFrom:prototype];
}
- (CMsgCreateOrUpdateParty_Builder*) builder {
  return [CMsgCreateOrUpdateParty builder];
}
- (CMsgCreateOrUpdateParty_Builder*) toBuilder {
  return [CMsgCreateOrUpdateParty builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSearchCriteria) {
    [output appendFormat:@"%@%@ {\n", indent, @"searchCriteria"];
    [self.searchCriteria writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasSteamLobbyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamLobbyId", [NSNumber numberWithLongLong:self.steamLobbyId]];
  }
  if (self.hasSquadSurplus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"squadSurplus", [NSNumber numberWithBool:self.squadSurplus]];
  }
  if (self.haswizard_step) {
    [output appendFormat:@"%@%@: %d\n", indent, @"wizard_step", self.wizard_step];
  }
  if (self.hasClientVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientVersion", [NSNumber numberWithInt:self.clientVersion]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgCreateOrUpdateParty class]]) {
    return NO;
  }
  CMsgCreateOrUpdateParty *otherMessage = other;
  return
      self.hasSearchCriteria == otherMessage.hasSearchCriteria &&
      (!self.hasSearchCriteria || [self.searchCriteria isEqual:otherMessage.searchCriteria]) &&
      self.hasSteamLobbyId == otherMessage.hasSteamLobbyId &&
      (!self.hasSteamLobbyId || self.steamLobbyId == otherMessage.steamLobbyId) &&
      self.hasSquadSurplus == otherMessage.hasSquadSurplus &&
      (!self.hasSquadSurplus || self.squadSurplus == otherMessage.squadSurplus) &&
      self.haswizard_step == otherMessage.haswizard_step &&
      (!self.haswizard_step || self.wizard_step == otherMessage.wizard_step) &&
      self.hasClientVersion == otherMessage.hasClientVersion &&
      (!self.hasClientVersion || self.clientVersion == otherMessage.clientVersion) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSearchCriteria) {
    hashCode = hashCode * 31 + [self.searchCriteria hash];
  }
  if (self.hasSteamLobbyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamLobbyId] hash];
  }
  if (self.hasSquadSurplus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.squadSurplus] hash];
  }
  if (self.haswizard_step) {
    hashCode = hashCode * 31 + self.wizard_step;
  }
  if (self.hasClientVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.clientVersion] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgCreateOrUpdateParty_Builder()
@property (retain) CMsgCreateOrUpdateParty* _builderResult;
@end

@implementation CMsgCreateOrUpdateParty_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgCreateOrUpdateParty alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgCreateOrUpdateParty_Builder*) clear {
  _builderResult = [[[CMsgCreateOrUpdateParty alloc] init] autorelease];
  return self;
}
- (CMsgCreateOrUpdateParty_Builder*) clone {
  return [CMsgCreateOrUpdateParty builderWithPrototype:_builderResult];
}
- (CMsgCreateOrUpdateParty*) defaultInstance {
  return [CMsgCreateOrUpdateParty defaultInstance];
}
- (CMsgCreateOrUpdateParty*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgCreateOrUpdateParty*) buildPartial {
  CMsgCreateOrUpdateParty* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgCreateOrUpdateParty_Builder*) mergeFrom:(CMsgCreateOrUpdateParty*) other {
  if (other == [CMsgCreateOrUpdateParty defaultInstance]) {
    return self;
  }
  if (other.hasSearchCriteria) {
    [self mergeSearchCriteria:other.searchCriteria];
  }
  if (other.hasSteamLobbyId) {
    [self setSteamLobbyId:other.steamLobbyId];
  }
  if (other.hasSquadSurplus) {
    [self setSquadSurplus:other.squadSurplus];
  }
  if (other.haswizard_step) {
    [self setwizard_step:other.wizard_step];
  }
  if (other.hasClientVersion) {
    [self setClientVersion:other.clientVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgCreateOrUpdateParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgCreateOrUpdateParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgMatchSearchCriteria_Builder* subBuilder = [CMsgMatchSearchCriteria builder];
        if (self.hasSearchCriteria) {
          [subBuilder mergeFrom:self.searchCriteria];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSearchCriteria:[subBuilder buildPartial]];
        break;
      }
      case 25: {
        [self setSteamLobbyId:[input readFixed64]];
        break;
      }
      case 32: {
        [self setSquadSurplus:[input readBool]];
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (TF_Matchmaking_WizardStepIsValidValue(value)) {
          [self setwizard_step:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        [self setClientVersion:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSearchCriteria {
  return result.hasSearchCriteria;
}
- (CMsgMatchSearchCriteria*) searchCriteria {
  return result.searchCriteria;
}
- (CMsgCreateOrUpdateParty_Builder*) setSearchCriteria:(CMsgMatchSearchCriteria*) value {
  result.hasSearchCriteria = YES;
  result.searchCriteria = value;
  return self;
}
- (CMsgCreateOrUpdateParty_Builder*) setSearchCriteriaBuilder:(CMsgMatchSearchCriteria_Builder*) builderForValue {
  return [self setSearchCriteria:[builderForValue build]];
}
- (CMsgCreateOrUpdateParty_Builder*) mergeSearchCriteria:(CMsgMatchSearchCriteria*) value {
  if (result.hasSearchCriteria &&
      result.searchCriteria != [CMsgMatchSearchCriteria defaultInstance]) {
    result.searchCriteria =
      [[[CMsgMatchSearchCriteria builderWithPrototype:result.searchCriteria] mergeFrom:value] buildPartial];
  } else {
    result.searchCriteria = value;
  }
  result.hasSearchCriteria = YES;
  return self;
}
- (CMsgCreateOrUpdateParty_Builder*) clearSearchCriteria {
  result.hasSearchCriteria = NO;
  result.searchCriteria = [CMsgMatchSearchCriteria defaultInstance];
  return self;
}
- (BOOL) hasSteamLobbyId {
  return result.hasSteamLobbyId;
}
- (uint64_t) steamLobbyId {
  return result.steamLobbyId;
}
- (CMsgCreateOrUpdateParty_Builder*) setSteamLobbyId:(uint64_t) value {
  result.hasSteamLobbyId = YES;
  result.steamLobbyId = value;
  return self;
}
- (CMsgCreateOrUpdateParty_Builder*) clearSteamLobbyId {
  result.hasSteamLobbyId = NO;
  result.steamLobbyId = 0L;
  return self;
}
- (BOOL) hasSquadSurplus {
  return result.hasSquadSurplus;
}
- (BOOL) squadSurplus {
  return result.squadSurplus;
}
- (CMsgCreateOrUpdateParty_Builder*) setSquadSurplus:(BOOL) value {
  result.hasSquadSurplus = YES;
  result.squadSurplus = value;
  return self;
}
- (CMsgCreateOrUpdateParty_Builder*) clearSquadSurplus {
  result.hasSquadSurplus = NO;
  result.squadSurplus = NO;
  return self;
}
- (BOOL) haswizard_step {
  return result.haswizard_step;
}
- (TF_Matchmaking_WizardStep) wizard_step {
  return result.wizard_step;
}
- (CMsgCreateOrUpdateParty_Builder*) setwizard_step:(TF_Matchmaking_WizardStep) value {
  result.haswizard_step = YES;
  result.wizard_step = value;
  return self;
}
- (CMsgCreateOrUpdateParty_Builder*) clearwizard_step {
  result.haswizard_step = NO;
  result.wizard_step = TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_INVALID;
  return self;
}
- (BOOL) hasClientVersion {
  return result.hasClientVersion;
}
- (uint32_t) clientVersion {
  return result.clientVersion;
}
- (CMsgCreateOrUpdateParty_Builder*) setClientVersion:(uint32_t) value {
  result.hasClientVersion = YES;
  result.clientVersion = value;
  return self;
}
- (CMsgCreateOrUpdateParty_Builder*) clearClientVersion {
  result.hasClientVersion = NO;
  result.clientVersion = 1225;
  return self;
}
@end

@interface CMsgCreateOrUpdatePartyReply ()
@property uint32_t result;
@property (retain) NSString* message;
@property TF_Matchmaking_WizardStep wizard_step;
@end

@implementation CMsgCreateOrUpdatePartyReply

- (BOOL) hasResult {
  return !!hasResult_;
}
- (void) setHasResult:(BOOL) value_ {
  hasResult_ = !!value_;
}
@synthesize result;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value_ {
  hasMessage_ = !!value_;
}
@synthesize message;
- (BOOL) haswizard_step {
  return !!haswizard_step_;
}
- (void) setHaswizard_step:(BOOL) value_ {
  haswizard_step_ = !!value_;
}
@synthesize wizard_step;
- (void) dealloc {
  self.message = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = 0;
    self.message = @"";
    self.wizard_step = TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_INVALID;
  }
  return self;
}
static CMsgCreateOrUpdatePartyReply* defaultCMsgCreateOrUpdatePartyReplyInstance = nil;
+ (void) initialize {
  if (self == [CMsgCreateOrUpdatePartyReply class]) {
    defaultCMsgCreateOrUpdatePartyReplyInstance = [[CMsgCreateOrUpdatePartyReply alloc] init];
  }
}
+ (CMsgCreateOrUpdatePartyReply*) defaultInstance {
  return defaultCMsgCreateOrUpdatePartyReplyInstance;
}
- (CMsgCreateOrUpdatePartyReply*) defaultInstance {
  return defaultCMsgCreateOrUpdatePartyReplyInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResult) {
    [output writeUInt32:1 value:self.result];
  }
  if (self.hasMessage) {
    [output writeString:2 value:self.message];
  }
  if (self.haswizard_step) {
    [output writeEnum:3 value:self.wizard_step];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResult) {
    size_ += computeUInt32Size(1, self.result);
  }
  if (self.hasMessage) {
    size_ += computeStringSize(2, self.message);
  }
  if (self.haswizard_step) {
    size_ += computeEnumSize(3, self.wizard_step);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgCreateOrUpdatePartyReply*) parseFromData:(NSData*) data {
  return (CMsgCreateOrUpdatePartyReply*)[[[CMsgCreateOrUpdatePartyReply builder] mergeFromData:data] build];
}
+ (CMsgCreateOrUpdatePartyReply*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCreateOrUpdatePartyReply*)[[[CMsgCreateOrUpdatePartyReply builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgCreateOrUpdatePartyReply*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgCreateOrUpdatePartyReply*)[[[CMsgCreateOrUpdatePartyReply builder] mergeFromInputStream:input] build];
}
+ (CMsgCreateOrUpdatePartyReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCreateOrUpdatePartyReply*)[[[CMsgCreateOrUpdatePartyReply builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgCreateOrUpdatePartyReply*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgCreateOrUpdatePartyReply*)[[[CMsgCreateOrUpdatePartyReply builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgCreateOrUpdatePartyReply*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgCreateOrUpdatePartyReply*)[[[CMsgCreateOrUpdatePartyReply builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgCreateOrUpdatePartyReply_Builder*) builder {
  return [[[CMsgCreateOrUpdatePartyReply_Builder alloc] init] autorelease];
}
+ (CMsgCreateOrUpdatePartyReply_Builder*) builderWithPrototype:(CMsgCreateOrUpdatePartyReply*) prototype {
  return [[CMsgCreateOrUpdatePartyReply builder] mergeFrom:prototype];
}
- (CMsgCreateOrUpdatePartyReply_Builder*) builder {
  return [CMsgCreateOrUpdatePartyReply builder];
}
- (CMsgCreateOrUpdatePartyReply_Builder*) toBuilder {
  return [CMsgCreateOrUpdatePartyReply builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResult) {
    [output appendFormat:@"%@%@: %@\n", indent, @"result", [NSNumber numberWithInt:self.result]];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"message", self.message];
  }
  if (self.haswizard_step) {
    [output appendFormat:@"%@%@: %d\n", indent, @"wizard_step", self.wizard_step];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgCreateOrUpdatePartyReply class]]) {
    return NO;
  }
  CMsgCreateOrUpdatePartyReply *otherMessage = other;
  return
      self.hasResult == otherMessage.hasResult &&
      (!self.hasResult || self.result == otherMessage.result) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      self.haswizard_step == otherMessage.haswizard_step &&
      (!self.haswizard_step || self.wizard_step == otherMessage.wizard_step) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasResult) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.result] hash];
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  if (self.haswizard_step) {
    hashCode = hashCode * 31 + self.wizard_step;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgCreateOrUpdatePartyReply_Builder()
@property (retain) CMsgCreateOrUpdatePartyReply* _builderResult;
@end

@implementation CMsgCreateOrUpdatePartyReply_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgCreateOrUpdatePartyReply alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) clear {
  _builderResult = [[[CMsgCreateOrUpdatePartyReply alloc] init] autorelease];
  return self;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) clone {
  return [CMsgCreateOrUpdatePartyReply builderWithPrototype:_builderResult];
}
- (CMsgCreateOrUpdatePartyReply*) defaultInstance {
  return [CMsgCreateOrUpdatePartyReply defaultInstance];
}
- (CMsgCreateOrUpdatePartyReply*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgCreateOrUpdatePartyReply*) buildPartial {
  CMsgCreateOrUpdatePartyReply* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) mergeFrom:(CMsgCreateOrUpdatePartyReply*) other {
  if (other == [CMsgCreateOrUpdatePartyReply defaultInstance]) {
    return self;
  }
  if (other.hasResult) {
    [self setResult:other.result];
  }
  if (other.hasMessage) {
    [self setMessage:other.message];
  }
  if (other.haswizard_step) {
    [self setwizard_step:other.wizard_step];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgCreateOrUpdatePartyReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResult:[input readUInt32]];
        break;
      }
      case 18: {
        [self setMessage:[input readString]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (TF_Matchmaking_WizardStepIsValidValue(value)) {
          [self setwizard_step:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasResult {
  return result.hasResult;
}
- (uint32_t) result {
  return result.result;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) setResult:(uint32_t) value {
  result.hasResult = YES;
  result.result = value;
  return self;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) clearResult {
  result.hasResult = NO;
  result.result = 0;
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (NSString*) message {
  return result.message;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) setMessage:(NSString*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) clearMessage {
  result.hasMessage = NO;
  result.message = @"";
  return self;
}
- (BOOL) haswizard_step {
  return result.haswizard_step;
}
- (TF_Matchmaking_WizardStep) wizard_step {
  return result.wizard_step;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) setwizard_step:(TF_Matchmaking_WizardStep) value {
  result.haswizard_step = YES;
  result.wizard_step = value;
  return self;
}
- (CMsgCreateOrUpdatePartyReply_Builder*) clearwizard_step {
  result.haswizard_step = NO;
  result.wizard_step = TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_INVALID;
  return self;
}
@end

@interface CSOTFParty ()
@property uint64_t partyId;
@property uint64_t leaderId;
@property (retain) PBAppendableArray * memberIdsArray;
@property (retain) PBAppendableArray * membersArray;
@property (retain) PBAppendableArray * pendingInvitesArray;
@property CSOTFParty_State state;
@property TF_Matchmaking_WizardStep wizard_step;
@property uint32_t startedMatchmakingTime;
@property (retain) PBAppendableArray * searchingPlayersByGroupArray;
@property uint64_t steamLobbyId;
@property TF_MatchmakingMode matchmaking_mode;
@property BOOL searchLateJoinOk;
@property (retain) NSString* searchMvmMannupTour;
@property (retain) PBAppendableArray * searchMvmMissionsArray;
@property BOOL searchPlayForBraggingRights;
@property uint32_t searchQuickplayGameType;
@property uint32_t preventMatchUntilDate;
@property uint32_t preventMatchAccountId;
@end

@implementation CSOTFParty

- (BOOL) hasPartyId {
  return !!hasPartyId_;
}
- (void) setHasPartyId:(BOOL) value_ {
  hasPartyId_ = !!value_;
}
@synthesize partyId;
- (BOOL) hasLeaderId {
  return !!hasLeaderId_;
}
- (void) setHasLeaderId:(BOOL) value_ {
  hasLeaderId_ = !!value_;
}
@synthesize leaderId;
@synthesize memberIdsArray;
@dynamic memberIds;
@synthesize membersArray;
@dynamic members;
@synthesize pendingInvitesArray;
@dynamic pendingInvites;
- (BOOL) hasstate {
  return !!hasstate_;
}
- (void) setHasstate:(BOOL) value_ {
  hasstate_ = !!value_;
}
@synthesize state;
- (BOOL) haswizard_step {
  return !!haswizard_step_;
}
- (void) setHaswizard_step:(BOOL) value_ {
  haswizard_step_ = !!value_;
}
@synthesize wizard_step;
- (BOOL) hasStartedMatchmakingTime {
  return !!hasStartedMatchmakingTime_;
}
- (void) setHasStartedMatchmakingTime:(BOOL) value_ {
  hasStartedMatchmakingTime_ = !!value_;
}
@synthesize startedMatchmakingTime;
@synthesize searchingPlayersByGroupArray;
@dynamic searchingPlayersByGroup;
- (BOOL) hasSteamLobbyId {
  return !!hasSteamLobbyId_;
}
- (void) setHasSteamLobbyId:(BOOL) value_ {
  hasSteamLobbyId_ = !!value_;
}
@synthesize steamLobbyId;
- (BOOL) hasmatchmaking_mode {
  return !!hasmatchmaking_mode_;
}
- (void) setHasmatchmaking_mode:(BOOL) value_ {
  hasmatchmaking_mode_ = !!value_;
}
@synthesize matchmaking_mode;
- (BOOL) hasSearchLateJoinOk {
  return !!hasSearchLateJoinOk_;
}
- (void) setHasSearchLateJoinOk:(BOOL) value_ {
  hasSearchLateJoinOk_ = !!value_;
}
- (BOOL) searchLateJoinOk {
  return !!searchLateJoinOk_;
}
- (void) setSearchLateJoinOk:(BOOL) value_ {
  searchLateJoinOk_ = !!value_;
}
- (BOOL) hasSearchMvmMannupTour {
  return !!hasSearchMvmMannupTour_;
}
- (void) setHasSearchMvmMannupTour:(BOOL) value_ {
  hasSearchMvmMannupTour_ = !!value_;
}
@synthesize searchMvmMannupTour;
@synthesize searchMvmMissionsArray;
@dynamic searchMvmMissions;
- (BOOL) hasSearchPlayForBraggingRights {
  return !!hasSearchPlayForBraggingRights_;
}
- (void) setHasSearchPlayForBraggingRights:(BOOL) value_ {
  hasSearchPlayForBraggingRights_ = !!value_;
}
- (BOOL) searchPlayForBraggingRights {
  return !!searchPlayForBraggingRights_;
}
- (void) setSearchPlayForBraggingRights:(BOOL) value_ {
  searchPlayForBraggingRights_ = !!value_;
}
- (BOOL) hasSearchQuickplayGameType {
  return !!hasSearchQuickplayGameType_;
}
- (void) setHasSearchQuickplayGameType:(BOOL) value_ {
  hasSearchQuickplayGameType_ = !!value_;
}
@synthesize searchQuickplayGameType;
- (BOOL) hasPreventMatchUntilDate {
  return !!hasPreventMatchUntilDate_;
}
- (void) setHasPreventMatchUntilDate:(BOOL) value_ {
  hasPreventMatchUntilDate_ = !!value_;
}
@synthesize preventMatchUntilDate;
- (BOOL) hasPreventMatchAccountId {
  return !!hasPreventMatchAccountId_;
}
- (void) setHasPreventMatchAccountId:(BOOL) value_ {
  hasPreventMatchAccountId_ = !!value_;
}
@synthesize preventMatchAccountId;
- (void) dealloc {
  self.memberIdsArray = nil;
  self.membersArray = nil;
  self.pendingInvitesArray = nil;
  self.searchingPlayersByGroupArray = nil;
  self.searchMvmMannupTour = nil;
  self.searchMvmMissionsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.partyId = 0L;
    self.leaderId = 0L;
    self.state = CSOTFParty_StateUI;
    self.wizard_step = TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_INVALID;
    self.startedMatchmakingTime = 0;
    self.steamLobbyId = 0L;
    self.matchmaking_mode = TF_MatchmakingModeTF_Matchmaking_INVALID;
    self.searchLateJoinOk = NO;
    self.searchMvmMannupTour = @"";
    self.searchPlayForBraggingRights = NO;
    self.searchQuickplayGameType = 0;
    self.preventMatchUntilDate = 0;
    self.preventMatchAccountId = 0;
  }
  return self;
}
static CSOTFParty* defaultCSOTFPartyInstance = nil;
+ (void) initialize {
  if (self == [CSOTFParty class]) {
    defaultCSOTFPartyInstance = [[CSOTFParty alloc] init];
  }
}
+ (CSOTFParty*) defaultInstance {
  return defaultCSOTFPartyInstance;
}
- (CSOTFParty*) defaultInstance {
  return defaultCSOTFPartyInstance;
}
- (PBArray *)memberIds {
  return memberIdsArray;
}
- (uint64_t)memberIdsAtIndex:(NSUInteger)index {
  return [memberIdsArray uint64AtIndex:index];
}
- (PBArray *)members {
  return membersArray;
}
- (CSOTFPartyMember*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (PBArray *)pendingInvites {
  return pendingInvitesArray;
}
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index {
  return [pendingInvitesArray uint64AtIndex:index];
}
- (PBArray *)searchingPlayersByGroup {
  return searchingPlayersByGroupArray;
}
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index {
  return [searchingPlayersByGroupArray uint32AtIndex:index];
}
- (PBArray *)searchMvmMissions {
  return searchMvmMissionsArray;
}
- (NSString*)searchMvmMissionsAtIndex:(NSUInteger)index {
  return [searchMvmMissionsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPartyId) {
    [output writeUInt64:1 value:self.partyId];
  }
  if (self.hasLeaderId) {
    [output writeFixed64:2 value:self.leaderId];
  }
  const NSUInteger memberIdsArrayCount = self.memberIdsArray.count;
  if (memberIdsArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.memberIdsArray.data;
    for (NSUInteger i = 0; i < memberIdsArrayCount; ++i) {
      [output writeFixed64:3 value:values[i]];
    }
  }
  const NSUInteger pendingInvitesArrayCount = self.pendingInvitesArray.count;
  if (pendingInvitesArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.pendingInvitesArray.data;
    for (NSUInteger i = 0; i < pendingInvitesArrayCount; ++i) {
      [output writeFixed64:5 value:values[i]];
    }
  }
  if (self.hasstate) {
    [output writeEnum:6 value:self.state];
  }
  if (self.hasStartedMatchmakingTime) {
    [output writeUInt32:7 value:self.startedMatchmakingTime];
  }
  const NSUInteger searchingPlayersByGroupArrayCount = self.searchingPlayersByGroupArray.count;
  if (searchingPlayersByGroupArrayCount > 0) {
    const uint32_t *values = (const uint32_t *)self.searchingPlayersByGroupArray.data;
    for (NSUInteger i = 0; i < searchingPlayersByGroupArrayCount; ++i) {
      [output writeUInt32:10 value:values[i]];
    }
  }
  for (CSOTFPartyMember *element in self.membersArray) {
    [output writeMessage:13 value:element];
  }
  if (self.hasPreventMatchUntilDate) {
    [output writeUInt32:18 value:self.preventMatchUntilDate];
  }
  if (self.hasPreventMatchAccountId) {
    [output writeUInt32:19 value:self.preventMatchAccountId];
  }
  if (self.hasSearchLateJoinOk) {
    [output writeBool:23 value:self.searchLateJoinOk];
  }
  if (self.hasSearchPlayForBraggingRights) {
    [output writeBool:26 value:self.searchPlayForBraggingRights];
  }
  if (self.hasSteamLobbyId) {
    [output writeFixed64:27 value:self.steamLobbyId];
  }
  if (self.hasSearchQuickplayGameType) {
    [output writeUInt32:28 value:self.searchQuickplayGameType];
  }
  if (self.haswizard_step) {
    [output writeEnum:29 value:self.wizard_step];
  }
  if (self.hasmatchmaking_mode) {
    [output writeEnum:30 value:self.matchmaking_mode];
  }
  const NSUInteger searchMvmMissionsArrayCount = self.searchMvmMissionsArray.count;
  if (searchMvmMissionsArrayCount > 0) {
    const NSString* *values = (const NSString* *)self.searchMvmMissionsArray.data;
    for (NSUInteger i = 0; i < searchMvmMissionsArrayCount; ++i) {
      [output writeString:31 value:values[i]];
    }
  }
  if (self.hasSearchMvmMannupTour) {
    [output writeString:32 value:self.searchMvmMannupTour];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPartyId) {
    size_ += computeUInt64Size(1, self.partyId);
  }
  if (self.hasLeaderId) {
    size_ += computeFixed64Size(2, self.leaderId);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.memberIdsArray.count;
    dataSize = 8 * count;
    size_ += dataSize;
    size_ += 1 * count;
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.pendingInvitesArray.count;
    dataSize = 8 * count;
    size_ += dataSize;
    size_ += 1 * count;
  }
  if (self.hasstate) {
    size_ += computeEnumSize(6, self.state);
  }
  if (self.hasStartedMatchmakingTime) {
    size_ += computeUInt32Size(7, self.startedMatchmakingTime);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.searchingPlayersByGroupArray.count;
    const uint32_t *values = (const uint32_t *)self.searchingPlayersByGroupArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  for (CSOTFPartyMember *element in self.membersArray) {
    size_ += computeMessageSize(13, element);
  }
  if (self.hasPreventMatchUntilDate) {
    size_ += computeUInt32Size(18, self.preventMatchUntilDate);
  }
  if (self.hasPreventMatchAccountId) {
    size_ += computeUInt32Size(19, self.preventMatchAccountId);
  }
  if (self.hasSearchLateJoinOk) {
    size_ += computeBoolSize(23, self.searchLateJoinOk);
  }
  if (self.hasSearchPlayForBraggingRights) {
    size_ += computeBoolSize(26, self.searchPlayForBraggingRights);
  }
  if (self.hasSteamLobbyId) {
    size_ += computeFixed64Size(27, self.steamLobbyId);
  }
  if (self.hasSearchQuickplayGameType) {
    size_ += computeUInt32Size(28, self.searchQuickplayGameType);
  }
  if (self.haswizard_step) {
    size_ += computeEnumSize(29, self.wizard_step);
  }
  if (self.hasmatchmaking_mode) {
    size_ += computeEnumSize(30, self.matchmaking_mode);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.searchMvmMissionsArray.count;
    const NSString* *values = (const NSString* *)self.searchMvmMissionsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeStringSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 2 * count;
  }
  if (self.hasSearchMvmMannupTour) {
    size_ += computeStringSize(32, self.searchMvmMannupTour);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CSOTFParty*) parseFromData:(NSData*) data {
  return (CSOTFParty*)[[[CSOTFParty builder] mergeFromData:data] build];
}
+ (CSOTFParty*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFParty*)[[[CSOTFParty builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CSOTFParty*) parseFromInputStream:(NSInputStream*) input {
  return (CSOTFParty*)[[[CSOTFParty builder] mergeFromInputStream:input] build];
}
+ (CSOTFParty*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFParty*)[[[CSOTFParty builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFParty*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CSOTFParty*)[[[CSOTFParty builder] mergeFromCodedInputStream:input] build];
}
+ (CSOTFParty*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFParty*)[[[CSOTFParty builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFParty_Builder*) builder {
  return [[[CSOTFParty_Builder alloc] init] autorelease];
}
+ (CSOTFParty_Builder*) builderWithPrototype:(CSOTFParty*) prototype {
  return [[CSOTFParty builder] mergeFrom:prototype];
}
- (CSOTFParty_Builder*) builder {
  return [CSOTFParty builder];
}
- (CSOTFParty_Builder*) toBuilder {
  return [CSOTFParty builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPartyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"partyId", [NSNumber numberWithLongLong:self.partyId]];
  }
  if (self.hasLeaderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"leaderId", [NSNumber numberWithLongLong:self.leaderId]];
  }
  for (NSNumber* value in self.memberIdsArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"memberIds", value];
  }
  for (NSNumber* value in self.pendingInvitesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pendingInvites", value];
  }
  if (self.hasstate) {
    [output appendFormat:@"%@%@: %d\n", indent, @"state", self.state];
  }
  if (self.hasStartedMatchmakingTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startedMatchmakingTime", [NSNumber numberWithInt:self.startedMatchmakingTime]];
  }
  for (NSNumber* value in self.searchingPlayersByGroupArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"searchingPlayersByGroup", value];
  }
  for (CSOTFPartyMember* element in self.membersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPreventMatchUntilDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"preventMatchUntilDate", [NSNumber numberWithInt:self.preventMatchUntilDate]];
  }
  if (self.hasPreventMatchAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"preventMatchAccountId", [NSNumber numberWithInt:self.preventMatchAccountId]];
  }
  if (self.hasSearchLateJoinOk) {
    [output appendFormat:@"%@%@: %@\n", indent, @"searchLateJoinOk", [NSNumber numberWithBool:self.searchLateJoinOk]];
  }
  if (self.hasSearchPlayForBraggingRights) {
    [output appendFormat:@"%@%@: %@\n", indent, @"searchPlayForBraggingRights", [NSNumber numberWithBool:self.searchPlayForBraggingRights]];
  }
  if (self.hasSteamLobbyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamLobbyId", [NSNumber numberWithLongLong:self.steamLobbyId]];
  }
  if (self.hasSearchQuickplayGameType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"searchQuickplayGameType", [NSNumber numberWithInt:self.searchQuickplayGameType]];
  }
  if (self.haswizard_step) {
    [output appendFormat:@"%@%@: %d\n", indent, @"wizard_step", self.wizard_step];
  }
  if (self.hasmatchmaking_mode) {
    [output appendFormat:@"%@%@: %d\n", indent, @"matchmaking_mode", self.matchmaking_mode];
  }
  for (NSString* element in self.searchMvmMissionsArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"searchMvmMissions", element];
  }
  if (self.hasSearchMvmMannupTour) {
    [output appendFormat:@"%@%@: %@\n", indent, @"searchMvmMannupTour", self.searchMvmMannupTour];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CSOTFParty class]]) {
    return NO;
  }
  CSOTFParty *otherMessage = other;
  return
      self.hasPartyId == otherMessage.hasPartyId &&
      (!self.hasPartyId || self.partyId == otherMessage.partyId) &&
      self.hasLeaderId == otherMessage.hasLeaderId &&
      (!self.hasLeaderId || self.leaderId == otherMessage.leaderId) &&
      [self.memberIdsArray isEqualToArray:otherMessage.memberIdsArray] &&
      [self.pendingInvitesArray isEqualToArray:otherMessage.pendingInvitesArray] &&
      self.hasstate == otherMessage.hasstate &&
      (!self.hasstate || self.state == otherMessage.state) &&
      self.hasStartedMatchmakingTime == otherMessage.hasStartedMatchmakingTime &&
      (!self.hasStartedMatchmakingTime || self.startedMatchmakingTime == otherMessage.startedMatchmakingTime) &&
      [self.searchingPlayersByGroupArray isEqualToArray:otherMessage.searchingPlayersByGroupArray] &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      self.hasPreventMatchUntilDate == otherMessage.hasPreventMatchUntilDate &&
      (!self.hasPreventMatchUntilDate || self.preventMatchUntilDate == otherMessage.preventMatchUntilDate) &&
      self.hasPreventMatchAccountId == otherMessage.hasPreventMatchAccountId &&
      (!self.hasPreventMatchAccountId || self.preventMatchAccountId == otherMessage.preventMatchAccountId) &&
      self.hasSearchLateJoinOk == otherMessage.hasSearchLateJoinOk &&
      (!self.hasSearchLateJoinOk || self.searchLateJoinOk == otherMessage.searchLateJoinOk) &&
      self.hasSearchPlayForBraggingRights == otherMessage.hasSearchPlayForBraggingRights &&
      (!self.hasSearchPlayForBraggingRights || self.searchPlayForBraggingRights == otherMessage.searchPlayForBraggingRights) &&
      self.hasSteamLobbyId == otherMessage.hasSteamLobbyId &&
      (!self.hasSteamLobbyId || self.steamLobbyId == otherMessage.steamLobbyId) &&
      self.hasSearchQuickplayGameType == otherMessage.hasSearchQuickplayGameType &&
      (!self.hasSearchQuickplayGameType || self.searchQuickplayGameType == otherMessage.searchQuickplayGameType) &&
      self.haswizard_step == otherMessage.haswizard_step &&
      (!self.haswizard_step || self.wizard_step == otherMessage.wizard_step) &&
      self.hasmatchmaking_mode == otherMessage.hasmatchmaking_mode &&
      (!self.hasmatchmaking_mode || self.matchmaking_mode == otherMessage.matchmaking_mode) &&
      [self.searchMvmMissionsArray isEqualToArray:otherMessage.searchMvmMissionsArray] &&
      self.hasSearchMvmMannupTour == otherMessage.hasSearchMvmMannupTour &&
      (!self.hasSearchMvmMannupTour || [self.searchMvmMannupTour isEqual:otherMessage.searchMvmMannupTour]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPartyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.partyId] hash];
  }
  if (self.hasLeaderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.leaderId] hash];
  }
  for (NSNumber* value in self.memberIdsArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (NSNumber* value in self.pendingInvitesArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  if (self.hasstate) {
    hashCode = hashCode * 31 + self.state;
  }
  if (self.hasStartedMatchmakingTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.startedMatchmakingTime] hash];
  }
  for (NSNumber* value in self.searchingPlayersByGroupArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  for (CSOTFPartyMember* element in self.membersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasPreventMatchUntilDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.preventMatchUntilDate] hash];
  }
  if (self.hasPreventMatchAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.preventMatchAccountId] hash];
  }
  if (self.hasSearchLateJoinOk) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.searchLateJoinOk] hash];
  }
  if (self.hasSearchPlayForBraggingRights) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.searchPlayForBraggingRights] hash];
  }
  if (self.hasSteamLobbyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamLobbyId] hash];
  }
  if (self.hasSearchQuickplayGameType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.searchQuickplayGameType] hash];
  }
  if (self.haswizard_step) {
    hashCode = hashCode * 31 + self.wizard_step;
  }
  if (self.hasmatchmaking_mode) {
    hashCode = hashCode * 31 + self.matchmaking_mode;
  }
  for (NSString* element in self.searchMvmMissionsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasSearchMvmMannupTour) {
    hashCode = hashCode * 31 + [self.searchMvmMannupTour hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CSOTFParty_StateIsValidValue(CSOTFParty_State value) {
  switch (value) {
    case CSOTFParty_StateUI:
    case CSOTFParty_StateFINDING_MATCH:
    case CSOTFParty_StateIN_MATCH:
    case CSOTFParty_StateAWAITING_RESERVATION_CONFIRMATION:
      return YES;
    default:
      return NO;
  }
}
@interface CSOTFParty_Builder()
@property (retain) CSOTFParty* _builderResult;
@end

@implementation CSOTFParty_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CSOTFParty alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CSOTFParty_Builder*) clear {
  _builderResult = [[[CSOTFParty alloc] init] autorelease];
  return self;
}
- (CSOTFParty_Builder*) clone {
  return [CSOTFParty builderWithPrototype:_builderResult];
}
- (CSOTFParty*) defaultInstance {
  return [CSOTFParty defaultInstance];
}
- (CSOTFParty*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CSOTFParty*) buildPartial {
  CSOTFParty* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CSOTFParty_Builder*) mergeFrom:(CSOTFParty*) other {
  if (other == [CSOTFParty defaultInstance]) {
    return self;
  }
  if (other.hasPartyId) {
    [self setPartyId:other.partyId];
  }
  if (other.hasLeaderId) {
    [self setLeaderId:other.leaderId];
  }
  if (other.memberIdsArray.count > 0) {
    if (result.memberIdsArray == nil) {
      result.memberIdsArray = [[other.memberIdsArray copyWithZone:[other.memberIdsArray zone]] autorelease];
    } else {
      [result.memberIdsArray appendArray:other.memberIdsArray];
    }
  }
  if (other.membersArray.count > 0) {
    if (result.membersArray == nil) {
      result.membersArray = [[other.membersArray copyWithZone:[other.membersArray zone]] autorelease];
    } else {
      [result.membersArray appendArray:other.membersArray];
    }
  }
  if (other.pendingInvitesArray.count > 0) {
    if (result.pendingInvitesArray == nil) {
      result.pendingInvitesArray = [[other.pendingInvitesArray copyWithZone:[other.pendingInvitesArray zone]] autorelease];
    } else {
      [result.pendingInvitesArray appendArray:other.pendingInvitesArray];
    }
  }
  if (other.hasstate) {
    [self setstate:other.state];
  }
  if (other.haswizard_step) {
    [self setwizard_step:other.wizard_step];
  }
  if (other.hasStartedMatchmakingTime) {
    [self setStartedMatchmakingTime:other.startedMatchmakingTime];
  }
  if (other.searchingPlayersByGroupArray.count > 0) {
    if (result.searchingPlayersByGroupArray == nil) {
      result.searchingPlayersByGroupArray = [[other.searchingPlayersByGroupArray copyWithZone:[other.searchingPlayersByGroupArray zone]] autorelease];
    } else {
      [result.searchingPlayersByGroupArray appendArray:other.searchingPlayersByGroupArray];
    }
  }
  if (other.hasSteamLobbyId) {
    [self setSteamLobbyId:other.steamLobbyId];
  }
  if (other.hasmatchmaking_mode) {
    [self setmatchmaking_mode:other.matchmaking_mode];
  }
  if (other.hasSearchLateJoinOk) {
    [self setSearchLateJoinOk:other.searchLateJoinOk];
  }
  if (other.hasSearchMvmMannupTour) {
    [self setSearchMvmMannupTour:other.searchMvmMannupTour];
  }
  if (other.searchMvmMissionsArray.count > 0) {
    if (result.searchMvmMissionsArray == nil) {
      result.searchMvmMissionsArray = [[other.searchMvmMissionsArray copyWithZone:[other.searchMvmMissionsArray zone]] autorelease];
    } else {
      [result.searchMvmMissionsArray appendArray:other.searchMvmMissionsArray];
    }
  }
  if (other.hasSearchPlayForBraggingRights) {
    [self setSearchPlayForBraggingRights:other.searchPlayForBraggingRights];
  }
  if (other.hasSearchQuickplayGameType) {
    [self setSearchQuickplayGameType:other.searchQuickplayGameType];
  }
  if (other.hasPreventMatchUntilDate) {
    [self setPreventMatchUntilDate:other.preventMatchUntilDate];
  }
  if (other.hasPreventMatchAccountId) {
    [self setPreventMatchAccountId:other.preventMatchAccountId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CSOTFParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CSOTFParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPartyId:[input readUInt64]];
        break;
      }
      case 17: {
        [self setLeaderId:[input readFixed64]];
        break;
      }
      case 25: {
        [self addMemberIds:[input readFixed64]];
        break;
      }
      case 41: {
        [self addPendingInvites:[input readFixed64]];
        break;
      }
      case 48: {
        int32_t value = [input readEnum];
        if (CSOTFParty_StateIsValidValue(value)) {
          [self setstate:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 56: {
        [self setStartedMatchmakingTime:[input readUInt32]];
        break;
      }
      case 80: {
        [self addSearchingPlayersByGroup:[input readUInt32]];
        break;
      }
      case 106: {
        CSOTFPartyMember_Builder* subBuilder = [CSOTFPartyMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
      case 144: {
        [self setPreventMatchUntilDate:[input readUInt32]];
        break;
      }
      case 152: {
        [self setPreventMatchAccountId:[input readUInt32]];
        break;
      }
      case 184: {
        [self setSearchLateJoinOk:[input readBool]];
        break;
      }
      case 208: {
        [self setSearchPlayForBraggingRights:[input readBool]];
        break;
      }
      case 217: {
        [self setSteamLobbyId:[input readFixed64]];
        break;
      }
      case 224: {
        [self setSearchQuickplayGameType:[input readUInt32]];
        break;
      }
      case 232: {
        int32_t value = [input readEnum];
        if (TF_Matchmaking_WizardStepIsValidValue(value)) {
          [self setwizard_step:value];
        } else {
          [unknownFields mergeVarintField:29 value:value];
        }
        break;
      }
      case 240: {
        int32_t value = [input readEnum];
        if (TF_MatchmakingModeIsValidValue(value)) {
          [self setmatchmaking_mode:value];
        } else {
          [unknownFields mergeVarintField:30 value:value];
        }
        break;
      }
      case 250: {
        [self addSearchMvmMissions:[input readString]];
        break;
      }
      case 258: {
        [self setSearchMvmMannupTour:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPartyId {
  return result.hasPartyId;
}
- (uint64_t) partyId {
  return result.partyId;
}
- (CSOTFParty_Builder*) setPartyId:(uint64_t) value {
  result.hasPartyId = YES;
  result.partyId = value;
  return self;
}
- (CSOTFParty_Builder*) clearPartyId {
  result.hasPartyId = NO;
  result.partyId = 0L;
  return self;
}
- (BOOL) hasLeaderId {
  return result.hasLeaderId;
}
- (uint64_t) leaderId {
  return result.leaderId;
}
- (CSOTFParty_Builder*) setLeaderId:(uint64_t) value {
  result.hasLeaderId = YES;
  result.leaderId = value;
  return self;
}
- (CSOTFParty_Builder*) clearLeaderId {
  result.hasLeaderId = NO;
  result.leaderId = 0L;
  return self;
}
- (PBAppendableArray *)memberIds {
  return result.memberIdsArray;
}
- (uint64_t)memberIdsAtIndex:(NSUInteger)index {
  return [result memberIdsAtIndex:index];
}
- (CSOTFParty_Builder *)addMemberIds:(uint64_t)value {
  if (result.memberIdsArray == nil) {
    result.memberIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [result.memberIdsArray addUint64:value];
  return self;
}
- (CSOTFParty_Builder *)setMemberIdsArray:(NSArray *)array {
  result.memberIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CSOTFParty_Builder *)setMemberIdsValues:(const uint64_t *)values count:(NSUInteger)count {
  result.memberIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CSOTFParty_Builder *)clearMemberIds {
  result.memberIdsArray = nil;
  return self;
}
- (PBAppendableArray *)members {
  return result.membersArray;
}
- (CSOTFPartyMember*)membersAtIndex:(NSUInteger)index {
  return [result membersAtIndex:index];
}
- (CSOTFParty_Builder *)addMembers:(CSOTFPartyMember*)value {
  if (result.membersArray == nil) {
    result.membersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.membersArray addObject:value];
  return self;
}
- (CSOTFParty_Builder *)setMembersArray:(NSArray *)array {
  result.membersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFParty_Builder *)setMembersValues:(const CSOTFPartyMember* *)values count:(NSUInteger)count {
  result.membersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFParty_Builder *)clearMembers {
  result.membersArray = nil;
  return self;
}
- (PBAppendableArray *)pendingInvites {
  return result.pendingInvitesArray;
}
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index {
  return [result pendingInvitesAtIndex:index];
}
- (CSOTFParty_Builder *)addPendingInvites:(uint64_t)value {
  if (result.pendingInvitesArray == nil) {
    result.pendingInvitesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [result.pendingInvitesArray addUint64:value];
  return self;
}
- (CSOTFParty_Builder *)setPendingInvitesArray:(NSArray *)array {
  result.pendingInvitesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CSOTFParty_Builder *)setPendingInvitesValues:(const uint64_t *)values count:(NSUInteger)count {
  result.pendingInvitesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CSOTFParty_Builder *)clearPendingInvites {
  result.pendingInvitesArray = nil;
  return self;
}
- (BOOL) hasstate {
  return result.hasstate;
}
- (CSOTFParty_State) state {
  return result.state;
}
- (CSOTFParty_Builder*) setstate:(CSOTFParty_State) value {
  result.hasstate = YES;
  result.state = value;
  return self;
}
- (CSOTFParty_Builder*) clearstate {
  result.hasstate = NO;
  result.state = CSOTFParty_StateUI;
  return self;
}
- (BOOL) haswizard_step {
  return result.haswizard_step;
}
- (TF_Matchmaking_WizardStep) wizard_step {
  return result.wizard_step;
}
- (CSOTFParty_Builder*) setwizard_step:(TF_Matchmaking_WizardStep) value {
  result.haswizard_step = YES;
  result.wizard_step = value;
  return self;
}
- (CSOTFParty_Builder*) clearwizard_step {
  result.haswizard_step = NO;
  result.wizard_step = TF_Matchmaking_WizardStepTF_Matchmaking_WizardStep_INVALID;
  return self;
}
- (BOOL) hasStartedMatchmakingTime {
  return result.hasStartedMatchmakingTime;
}
- (uint32_t) startedMatchmakingTime {
  return result.startedMatchmakingTime;
}
- (CSOTFParty_Builder*) setStartedMatchmakingTime:(uint32_t) value {
  result.hasStartedMatchmakingTime = YES;
  result.startedMatchmakingTime = value;
  return self;
}
- (CSOTFParty_Builder*) clearStartedMatchmakingTime {
  result.hasStartedMatchmakingTime = NO;
  result.startedMatchmakingTime = 0;
  return self;
}
- (PBAppendableArray *)searchingPlayersByGroup {
  return result.searchingPlayersByGroupArray;
}
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index {
  return [result searchingPlayersByGroupAtIndex:index];
}
- (CSOTFParty_Builder *)addSearchingPlayersByGroup:(uint32_t)value {
  if (result.searchingPlayersByGroupArray == nil) {
    result.searchingPlayersByGroupArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [result.searchingPlayersByGroupArray addUint32:value];
  return self;
}
- (CSOTFParty_Builder *)setSearchingPlayersByGroupArray:(NSArray *)array {
  result.searchingPlayersByGroupArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CSOTFParty_Builder *)setSearchingPlayersByGroupValues:(const uint32_t *)values count:(NSUInteger)count {
  result.searchingPlayersByGroupArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CSOTFParty_Builder *)clearSearchingPlayersByGroup {
  result.searchingPlayersByGroupArray = nil;
  return self;
}
- (BOOL) hasSteamLobbyId {
  return result.hasSteamLobbyId;
}
- (uint64_t) steamLobbyId {
  return result.steamLobbyId;
}
- (CSOTFParty_Builder*) setSteamLobbyId:(uint64_t) value {
  result.hasSteamLobbyId = YES;
  result.steamLobbyId = value;
  return self;
}
- (CSOTFParty_Builder*) clearSteamLobbyId {
  result.hasSteamLobbyId = NO;
  result.steamLobbyId = 0L;
  return self;
}
- (BOOL) hasmatchmaking_mode {
  return result.hasmatchmaking_mode;
}
- (TF_MatchmakingMode) matchmaking_mode {
  return result.matchmaking_mode;
}
- (CSOTFParty_Builder*) setmatchmaking_mode:(TF_MatchmakingMode) value {
  result.hasmatchmaking_mode = YES;
  result.matchmaking_mode = value;
  return self;
}
- (CSOTFParty_Builder*) clearmatchmaking_mode {
  result.hasmatchmaking_mode = NO;
  result.matchmaking_mode = TF_MatchmakingModeTF_Matchmaking_INVALID;
  return self;
}
- (BOOL) hasSearchLateJoinOk {
  return result.hasSearchLateJoinOk;
}
- (BOOL) searchLateJoinOk {
  return result.searchLateJoinOk;
}
- (CSOTFParty_Builder*) setSearchLateJoinOk:(BOOL) value {
  result.hasSearchLateJoinOk = YES;
  result.searchLateJoinOk = value;
  return self;
}
- (CSOTFParty_Builder*) clearSearchLateJoinOk {
  result.hasSearchLateJoinOk = NO;
  result.searchLateJoinOk = NO;
  return self;
}
- (BOOL) hasSearchMvmMannupTour {
  return result.hasSearchMvmMannupTour;
}
- (NSString*) searchMvmMannupTour {
  return result.searchMvmMannupTour;
}
- (CSOTFParty_Builder*) setSearchMvmMannupTour:(NSString*) value {
  result.hasSearchMvmMannupTour = YES;
  result.searchMvmMannupTour = value;
  return self;
}
- (CSOTFParty_Builder*) clearSearchMvmMannupTour {
  result.hasSearchMvmMannupTour = NO;
  result.searchMvmMannupTour = @"";
  return self;
}
- (PBAppendableArray *)searchMvmMissions {
  return result.searchMvmMissionsArray;
}
- (NSString*)searchMvmMissionsAtIndex:(NSUInteger)index {
  return [result searchMvmMissionsAtIndex:index];
}
- (CSOTFParty_Builder *)addSearchMvmMissions:(NSString*)value {
  if (result.searchMvmMissionsArray == nil) {
    result.searchMvmMissionsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.searchMvmMissionsArray addObject:value];
  return self;
}
- (CSOTFParty_Builder *)setSearchMvmMissionsArray:(NSArray *)array {
  result.searchMvmMissionsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFParty_Builder *)setSearchMvmMissionsValues:(const NSString* *)values count:(NSUInteger)count {
  result.searchMvmMissionsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFParty_Builder *)clearSearchMvmMissions {
  result.searchMvmMissionsArray = nil;
  return self;
}
- (BOOL) hasSearchPlayForBraggingRights {
  return result.hasSearchPlayForBraggingRights;
}
- (BOOL) searchPlayForBraggingRights {
  return result.searchPlayForBraggingRights;
}
- (CSOTFParty_Builder*) setSearchPlayForBraggingRights:(BOOL) value {
  result.hasSearchPlayForBraggingRights = YES;
  result.searchPlayForBraggingRights = value;
  return self;
}
- (CSOTFParty_Builder*) clearSearchPlayForBraggingRights {
  result.hasSearchPlayForBraggingRights = NO;
  result.searchPlayForBraggingRights = NO;
  return self;
}
- (BOOL) hasSearchQuickplayGameType {
  return result.hasSearchQuickplayGameType;
}
- (uint32_t) searchQuickplayGameType {
  return result.searchQuickplayGameType;
}
- (CSOTFParty_Builder*) setSearchQuickplayGameType:(uint32_t) value {
  result.hasSearchQuickplayGameType = YES;
  result.searchQuickplayGameType = value;
  return self;
}
- (CSOTFParty_Builder*) clearSearchQuickplayGameType {
  result.hasSearchQuickplayGameType = NO;
  result.searchQuickplayGameType = 0;
  return self;
}
- (BOOL) hasPreventMatchUntilDate {
  return result.hasPreventMatchUntilDate;
}
- (uint32_t) preventMatchUntilDate {
  return result.preventMatchUntilDate;
}
- (CSOTFParty_Builder*) setPreventMatchUntilDate:(uint32_t) value {
  result.hasPreventMatchUntilDate = YES;
  result.preventMatchUntilDate = value;
  return self;
}
- (CSOTFParty_Builder*) clearPreventMatchUntilDate {
  result.hasPreventMatchUntilDate = NO;
  result.preventMatchUntilDate = 0;
  return self;
}
- (BOOL) hasPreventMatchAccountId {
  return result.hasPreventMatchAccountId;
}
- (uint32_t) preventMatchAccountId {
  return result.preventMatchAccountId;
}
- (CSOTFParty_Builder*) setPreventMatchAccountId:(uint32_t) value {
  result.hasPreventMatchAccountId = YES;
  result.preventMatchAccountId = value;
  return self;
}
- (CSOTFParty_Builder*) clearPreventMatchAccountId {
  result.hasPreventMatchAccountId = NO;
  result.preventMatchAccountId = 0;
  return self;
}
@end

@interface CSOTFPartyInvite ()
@property uint64_t groupId;
@property uint64_t senderId;
@property (retain) NSString* senderName;
@property (retain) PBAppendableArray * membersArray;
@end

@implementation CSOTFPartyInvite

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (BOOL) hasSenderId {
  return !!hasSenderId_;
}
- (void) setHasSenderId:(BOOL) value_ {
  hasSenderId_ = !!value_;
}
@synthesize senderId;
- (BOOL) hasSenderName {
  return !!hasSenderName_;
}
- (void) setHasSenderName:(BOOL) value_ {
  hasSenderName_ = !!value_;
}
@synthesize senderName;
@synthesize membersArray;
@dynamic members;
- (void) dealloc {
  self.senderName = nil;
  self.membersArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.groupId = 0L;
    self.senderId = 0L;
    self.senderName = @"";
  }
  return self;
}
static CSOTFPartyInvite* defaultCSOTFPartyInviteInstance = nil;
+ (void) initialize {
  if (self == [CSOTFPartyInvite class]) {
    defaultCSOTFPartyInviteInstance = [[CSOTFPartyInvite alloc] init];
  }
}
+ (CSOTFPartyInvite*) defaultInstance {
  return defaultCSOTFPartyInviteInstance;
}
- (CSOTFPartyInvite*) defaultInstance {
  return defaultCSOTFPartyInviteInstance;
}
- (PBArray *)members {
  return membersArray;
}
- (CSOTFPartyInvite_PartyMember*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeUInt64:1 value:self.groupId];
  }
  if (self.hasSenderId) {
    [output writeFixed64:2 value:self.senderId];
  }
  if (self.hasSenderName) {
    [output writeString:3 value:self.senderName];
  }
  for (CSOTFPartyInvite_PartyMember *element in self.membersArray) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeUInt64Size(1, self.groupId);
  }
  if (self.hasSenderId) {
    size_ += computeFixed64Size(2, self.senderId);
  }
  if (self.hasSenderName) {
    size_ += computeStringSize(3, self.senderName);
  }
  for (CSOTFPartyInvite_PartyMember *element in self.membersArray) {
    size_ += computeMessageSize(4, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CSOTFPartyInvite*) parseFromData:(NSData*) data {
  return (CSOTFPartyInvite*)[[[CSOTFPartyInvite builder] mergeFromData:data] build];
}
+ (CSOTFPartyInvite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPartyInvite*)[[[CSOTFPartyInvite builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPartyInvite*) parseFromInputStream:(NSInputStream*) input {
  return (CSOTFPartyInvite*)[[[CSOTFPartyInvite builder] mergeFromInputStream:input] build];
}
+ (CSOTFPartyInvite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPartyInvite*)[[[CSOTFPartyInvite builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPartyInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CSOTFPartyInvite*)[[[CSOTFPartyInvite builder] mergeFromCodedInputStream:input] build];
}
+ (CSOTFPartyInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPartyInvite*)[[[CSOTFPartyInvite builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPartyInvite_Builder*) builder {
  return [[[CSOTFPartyInvite_Builder alloc] init] autorelease];
}
+ (CSOTFPartyInvite_Builder*) builderWithPrototype:(CSOTFPartyInvite*) prototype {
  return [[CSOTFPartyInvite builder] mergeFrom:prototype];
}
- (CSOTFPartyInvite_Builder*) builder {
  return [CSOTFPartyInvite builder];
}
- (CSOTFPartyInvite_Builder*) toBuilder {
  return [CSOTFPartyInvite builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasSenderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderId", [NSNumber numberWithLongLong:self.senderId]];
  }
  if (self.hasSenderName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderName", self.senderName];
  }
  for (CSOTFPartyInvite_PartyMember* element in self.membersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CSOTFPartyInvite class]]) {
    return NO;
  }
  CSOTFPartyInvite *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasSenderId == otherMessage.hasSenderId &&
      (!self.hasSenderId || self.senderId == otherMessage.senderId) &&
      self.hasSenderName == otherMessage.hasSenderName &&
      (!self.hasSenderName || [self.senderName isEqual:otherMessage.senderName]) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasSenderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.senderId] hash];
  }
  if (self.hasSenderName) {
    hashCode = hashCode * 31 + [self.senderName hash];
  }
  for (CSOTFPartyInvite_PartyMember* element in self.membersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CSOTFPartyInvite_PartyMember ()
@property (retain) NSString* name;
@property uint64_t steamId;
@property uint32_t avatar;
@end

@implementation CSOTFPartyInvite_PartyMember

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) value_ {
  hasAvatar_ = !!value_;
}
@synthesize avatar;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.steamId = 0L;
    self.avatar = 0;
  }
  return self;
}
static CSOTFPartyInvite_PartyMember* defaultCSOTFPartyInvite_PartyMemberInstance = nil;
+ (void) initialize {
  if (self == [CSOTFPartyInvite_PartyMember class]) {
    defaultCSOTFPartyInvite_PartyMemberInstance = [[CSOTFPartyInvite_PartyMember alloc] init];
  }
}
+ (CSOTFPartyInvite_PartyMember*) defaultInstance {
  return defaultCSOTFPartyInvite_PartyMemberInstance;
}
- (CSOTFPartyInvite_PartyMember*) defaultInstance {
  return defaultCSOTFPartyInvite_PartyMemberInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasSteamId) {
    [output writeFixed64:2 value:self.steamId];
  }
  if (self.hasAvatar) {
    [output writeUInt32:3 value:self.avatar];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasName) {
    size_ += computeStringSize(1, self.name);
  }
  if (self.hasSteamId) {
    size_ += computeFixed64Size(2, self.steamId);
  }
  if (self.hasAvatar) {
    size_ += computeUInt32Size(3, self.avatar);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CSOTFPartyInvite_PartyMember*) parseFromData:(NSData*) data {
  return (CSOTFPartyInvite_PartyMember*)[[[CSOTFPartyInvite_PartyMember builder] mergeFromData:data] build];
}
+ (CSOTFPartyInvite_PartyMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPartyInvite_PartyMember*)[[[CSOTFPartyInvite_PartyMember builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPartyInvite_PartyMember*) parseFromInputStream:(NSInputStream*) input {
  return (CSOTFPartyInvite_PartyMember*)[[[CSOTFPartyInvite_PartyMember builder] mergeFromInputStream:input] build];
}
+ (CSOTFPartyInvite_PartyMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPartyInvite_PartyMember*)[[[CSOTFPartyInvite_PartyMember builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPartyInvite_PartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CSOTFPartyInvite_PartyMember*)[[[CSOTFPartyInvite_PartyMember builder] mergeFromCodedInputStream:input] build];
}
+ (CSOTFPartyInvite_PartyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFPartyInvite_PartyMember*)[[[CSOTFPartyInvite_PartyMember builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFPartyInvite_PartyMember_Builder*) builder {
  return [[[CSOTFPartyInvite_PartyMember_Builder alloc] init] autorelease];
}
+ (CSOTFPartyInvite_PartyMember_Builder*) builderWithPrototype:(CSOTFPartyInvite_PartyMember*) prototype {
  return [[CSOTFPartyInvite_PartyMember builder] mergeFrom:prototype];
}
- (CSOTFPartyInvite_PartyMember_Builder*) builder {
  return [CSOTFPartyInvite_PartyMember builder];
}
- (CSOTFPartyInvite_PartyMember_Builder*) toBuilder {
  return [CSOTFPartyInvite_PartyMember builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", [NSNumber numberWithInt:self.avatar]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CSOTFPartyInvite_PartyMember class]]) {
    return NO;
  }
  CSOTFPartyInvite_PartyMember *otherMessage = other;
  return
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || self.avatar == otherMessage.avatar) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.avatar] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CSOTFPartyInvite_PartyMember_Builder()
@property (retain) CSOTFPartyInvite_PartyMember* _builderResult;
@end

@implementation CSOTFPartyInvite_PartyMember_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CSOTFPartyInvite_PartyMember alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CSOTFPartyInvite_PartyMember_Builder*) clear {
  _builderResult = [[[CSOTFPartyInvite_PartyMember alloc] init] autorelease];
  return self;
}
- (CSOTFPartyInvite_PartyMember_Builder*) clone {
  return [CSOTFPartyInvite_PartyMember builderWithPrototype:_builderResult];
}
- (CSOTFPartyInvite_PartyMember*) defaultInstance {
  return [CSOTFPartyInvite_PartyMember defaultInstance];
}
- (CSOTFPartyInvite_PartyMember*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CSOTFPartyInvite_PartyMember*) buildPartial {
  CSOTFPartyInvite_PartyMember* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CSOTFPartyInvite_PartyMember_Builder*) mergeFrom:(CSOTFPartyInvite_PartyMember*) other {
  if (other == [CSOTFPartyInvite_PartyMember defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CSOTFPartyInvite_PartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CSOTFPartyInvite_PartyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 17: {
        [self setSteamId:[input readFixed64]];
        break;
      }
      case 24: {
        [self setAvatar:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (CSOTFPartyInvite_PartyMember_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (CSOTFPartyInvite_PartyMember_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CSOTFPartyInvite_PartyMember_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CSOTFPartyInvite_PartyMember_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
- (BOOL) hasAvatar {
  return result.hasAvatar;
}
- (uint32_t) avatar {
  return result.avatar;
}
- (CSOTFPartyInvite_PartyMember_Builder*) setAvatar:(uint32_t) value {
  result.hasAvatar = YES;
  result.avatar = value;
  return self;
}
- (CSOTFPartyInvite_PartyMember_Builder*) clearAvatar {
  result.hasAvatar = NO;
  result.avatar = 0;
  return self;
}
@end

@interface CSOTFPartyInvite_Builder()
@property (retain) CSOTFPartyInvite* _builderResult;
@end

@implementation CSOTFPartyInvite_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CSOTFPartyInvite alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CSOTFPartyInvite_Builder*) clear {
  _builderResult = [[[CSOTFPartyInvite alloc] init] autorelease];
  return self;
}
- (CSOTFPartyInvite_Builder*) clone {
  return [CSOTFPartyInvite builderWithPrototype:_builderResult];
}
- (CSOTFPartyInvite*) defaultInstance {
  return [CSOTFPartyInvite defaultInstance];
}
- (CSOTFPartyInvite*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CSOTFPartyInvite*) buildPartial {
  CSOTFPartyInvite* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CSOTFPartyInvite_Builder*) mergeFrom:(CSOTFPartyInvite*) other {
  if (other == [CSOTFPartyInvite defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasSenderId) {
    [self setSenderId:other.senderId];
  }
  if (other.hasSenderName) {
    [self setSenderName:other.senderName];
  }
  if (other.membersArray.count > 0) {
    if (result.membersArray == nil) {
      result.membersArray = [[other.membersArray copyWithZone:[other.membersArray zone]] autorelease];
    } else {
      [result.membersArray appendArray:other.membersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CSOTFPartyInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CSOTFPartyInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGroupId:[input readUInt64]];
        break;
      }
      case 17: {
        [self setSenderId:[input readFixed64]];
        break;
      }
      case 26: {
        [self setSenderName:[input readString]];
        break;
      }
      case 34: {
        CSOTFPartyInvite_PartyMember_Builder* subBuilder = [CSOTFPartyInvite_PartyMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (uint64_t) groupId {
  return result.groupId;
}
- (CSOTFPartyInvite_Builder*) setGroupId:(uint64_t) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (CSOTFPartyInvite_Builder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = 0L;
  return self;
}
- (BOOL) hasSenderId {
  return result.hasSenderId;
}
- (uint64_t) senderId {
  return result.senderId;
}
- (CSOTFPartyInvite_Builder*) setSenderId:(uint64_t) value {
  result.hasSenderId = YES;
  result.senderId = value;
  return self;
}
- (CSOTFPartyInvite_Builder*) clearSenderId {
  result.hasSenderId = NO;
  result.senderId = 0L;
  return self;
}
- (BOOL) hasSenderName {
  return result.hasSenderName;
}
- (NSString*) senderName {
  return result.senderName;
}
- (CSOTFPartyInvite_Builder*) setSenderName:(NSString*) value {
  result.hasSenderName = YES;
  result.senderName = value;
  return self;
}
- (CSOTFPartyInvite_Builder*) clearSenderName {
  result.hasSenderName = NO;
  result.senderName = @"";
  return self;
}
- (PBAppendableArray *)members {
  return result.membersArray;
}
- (CSOTFPartyInvite_PartyMember*)membersAtIndex:(NSUInteger)index {
  return [result membersAtIndex:index];
}
- (CSOTFPartyInvite_Builder *)addMembers:(CSOTFPartyInvite_PartyMember*)value {
  if (result.membersArray == nil) {
    result.membersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.membersArray addObject:value];
  return self;
}
- (CSOTFPartyInvite_Builder *)setMembersArray:(NSArray *)array {
  result.membersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFPartyInvite_Builder *)setMembersValues:(const CSOTFPartyInvite_PartyMember* *)values count:(NSUInteger)count {
  result.membersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFPartyInvite_Builder *)clearMembers {
  result.membersArray = nil;
  return self;
}
@end

@interface CTFLobbyMember ()
@property uint64_t id;
@property TF_GC_TEAM team;
@property CTFLobbyMember_ConnectState connect_state;
@property (retain) NSString* name;
@property Float32 latitude;
@property Float32 longitude;
@property TFLobbyReadyState ready_state;
@property uint64_t partyId;
@property BOOL squadSurplus;
@property uint32_t badgeLevel;
@property uint32_t abandonTime;
@property uint32_t lastConnectTime;
@property BOOL quittingResultsInPenalty;
@end

@implementation CTFLobbyMember

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasteam {
  return !!hasteam_;
}
- (void) setHasteam:(BOOL) value_ {
  hasteam_ = !!value_;
}
@synthesize team;
- (BOOL) hasconnect_state {
  return !!hasconnect_state_;
}
- (void) setHasconnect_state:(BOOL) value_ {
  hasconnect_state_ = !!value_;
}
@synthesize connect_state;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) value_ {
  hasLatitude_ = !!value_;
}
@synthesize latitude;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) value_ {
  hasLongitude_ = !!value_;
}
@synthesize longitude;
- (BOOL) hasready_state {
  return !!hasready_state_;
}
- (void) setHasready_state:(BOOL) value_ {
  hasready_state_ = !!value_;
}
@synthesize ready_state;
- (BOOL) hasPartyId {
  return !!hasPartyId_;
}
- (void) setHasPartyId:(BOOL) value_ {
  hasPartyId_ = !!value_;
}
@synthesize partyId;
- (BOOL) hasSquadSurplus {
  return !!hasSquadSurplus_;
}
- (void) setHasSquadSurplus:(BOOL) value_ {
  hasSquadSurplus_ = !!value_;
}
- (BOOL) squadSurplus {
  return !!squadSurplus_;
}
- (void) setSquadSurplus:(BOOL) value_ {
  squadSurplus_ = !!value_;
}
- (BOOL) hasBadgeLevel {
  return !!hasBadgeLevel_;
}
- (void) setHasBadgeLevel:(BOOL) value_ {
  hasBadgeLevel_ = !!value_;
}
@synthesize badgeLevel;
- (BOOL) hasAbandonTime {
  return !!hasAbandonTime_;
}
- (void) setHasAbandonTime:(BOOL) value_ {
  hasAbandonTime_ = !!value_;
}
@synthesize abandonTime;
- (BOOL) hasLastConnectTime {
  return !!hasLastConnectTime_;
}
- (void) setHasLastConnectTime:(BOOL) value_ {
  hasLastConnectTime_ = !!value_;
}
@synthesize lastConnectTime;
- (BOOL) hasQuittingResultsInPenalty {
  return !!hasQuittingResultsInPenalty_;
}
- (void) setHasQuittingResultsInPenalty:(BOOL) value_ {
  hasQuittingResultsInPenalty_ = !!value_;
}
- (BOOL) quittingResultsInPenalty {
  return !!quittingResultsInPenalty_;
}
- (void) setQuittingResultsInPenalty:(BOOL) value_ {
  quittingResultsInPenalty_ = !!value_;
}
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.team = TF_GC_TEAMTF_GC_TEAM_DEFENDERS;
    self.connect_state = CTFLobbyMember_ConnectStateINVALID;
    self.name = @"";
    self.latitude = 0;
    self.longitude = 0;
    self.ready_state = TFLobbyReadyStateTFLobbyReadyState_UNDECLARED;
    self.partyId = 0L;
    self.squadSurplus = NO;
    self.badgeLevel = 0;
    self.abandonTime = 0;
    self.lastConnectTime = 0;
    self.quittingResultsInPenalty = NO;
  }
  return self;
}
static CTFLobbyMember* defaultCTFLobbyMemberInstance = nil;
+ (void) initialize {
  if (self == [CTFLobbyMember class]) {
    defaultCTFLobbyMemberInstance = [[CTFLobbyMember alloc] init];
  }
}
+ (CTFLobbyMember*) defaultInstance {
  return defaultCTFLobbyMemberInstance;
}
- (CTFLobbyMember*) defaultInstance {
  return defaultCTFLobbyMemberInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeFixed64:1 value:self.id];
  }
  if (self.hasteam) {
    [output writeEnum:3 value:self.team];
  }
  if (self.hasName) {
    [output writeString:6 value:self.name];
  }
  if (self.hasLatitude) {
    [output writeFloat:8 value:self.latitude];
  }
  if (self.hasLongitude) {
    [output writeFloat:9 value:self.longitude];
  }
  if (self.hasready_state) {
    [output writeEnum:11 value:self.ready_state];
  }
  if (self.hasPartyId) {
    [output writeUInt64:12 value:self.partyId];
  }
  if (self.hasconnect_state) {
    [output writeEnum:13 value:self.connect_state];
  }
  if (self.hasSquadSurplus) {
    [output writeBool:14 value:self.squadSurplus];
  }
  if (self.hasBadgeLevel) {
    [output writeUInt32:15 value:self.badgeLevel];
  }
  if (self.hasAbandonTime) {
    [output writeUInt32:16 value:self.abandonTime];
  }
  if (self.hasLastConnectTime) {
    [output writeUInt32:17 value:self.lastConnectTime];
  }
  if (self.hasQuittingResultsInPenalty) {
    [output writeBool:18 value:self.quittingResultsInPenalty];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeFixed64Size(1, self.id);
  }
  if (self.hasteam) {
    size_ += computeEnumSize(3, self.team);
  }
  if (self.hasName) {
    size_ += computeStringSize(6, self.name);
  }
  if (self.hasLatitude) {
    size_ += computeFloatSize(8, self.latitude);
  }
  if (self.hasLongitude) {
    size_ += computeFloatSize(9, self.longitude);
  }
  if (self.hasready_state) {
    size_ += computeEnumSize(11, self.ready_state);
  }
  if (self.hasPartyId) {
    size_ += computeUInt64Size(12, self.partyId);
  }
  if (self.hasconnect_state) {
    size_ += computeEnumSize(13, self.connect_state);
  }
  if (self.hasSquadSurplus) {
    size_ += computeBoolSize(14, self.squadSurplus);
  }
  if (self.hasBadgeLevel) {
    size_ += computeUInt32Size(15, self.badgeLevel);
  }
  if (self.hasAbandonTime) {
    size_ += computeUInt32Size(16, self.abandonTime);
  }
  if (self.hasLastConnectTime) {
    size_ += computeUInt32Size(17, self.lastConnectTime);
  }
  if (self.hasQuittingResultsInPenalty) {
    size_ += computeBoolSize(18, self.quittingResultsInPenalty);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CTFLobbyMember*) parseFromData:(NSData*) data {
  return (CTFLobbyMember*)[[[CTFLobbyMember builder] mergeFromData:data] build];
}
+ (CTFLobbyMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CTFLobbyMember*)[[[CTFLobbyMember builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CTFLobbyMember*) parseFromInputStream:(NSInputStream*) input {
  return (CTFLobbyMember*)[[[CTFLobbyMember builder] mergeFromInputStream:input] build];
}
+ (CTFLobbyMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CTFLobbyMember*)[[[CTFLobbyMember builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CTFLobbyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CTFLobbyMember*)[[[CTFLobbyMember builder] mergeFromCodedInputStream:input] build];
}
+ (CTFLobbyMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CTFLobbyMember*)[[[CTFLobbyMember builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CTFLobbyMember_Builder*) builder {
  return [[[CTFLobbyMember_Builder alloc] init] autorelease];
}
+ (CTFLobbyMember_Builder*) builderWithPrototype:(CTFLobbyMember*) prototype {
  return [[CTFLobbyMember builder] mergeFrom:prototype];
}
- (CTFLobbyMember_Builder*) builder {
  return [CTFLobbyMember builder];
}
- (CTFLobbyMember_Builder*) toBuilder {
  return [CTFLobbyMember builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasteam) {
    [output appendFormat:@"%@%@: %d\n", indent, @"team", self.team];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasLatitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latitude", [NSNumber numberWithFloat:self.latitude]];
  }
  if (self.hasLongitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"longitude", [NSNumber numberWithFloat:self.longitude]];
  }
  if (self.hasready_state) {
    [output appendFormat:@"%@%@: %d\n", indent, @"ready_state", self.ready_state];
  }
  if (self.hasPartyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"partyId", [NSNumber numberWithLongLong:self.partyId]];
  }
  if (self.hasconnect_state) {
    [output appendFormat:@"%@%@: %d\n", indent, @"connect_state", self.connect_state];
  }
  if (self.hasSquadSurplus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"squadSurplus", [NSNumber numberWithBool:self.squadSurplus]];
  }
  if (self.hasBadgeLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"badgeLevel", [NSNumber numberWithInt:self.badgeLevel]];
  }
  if (self.hasAbandonTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"abandonTime", [NSNumber numberWithInt:self.abandonTime]];
  }
  if (self.hasLastConnectTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastConnectTime", [NSNumber numberWithInt:self.lastConnectTime]];
  }
  if (self.hasQuittingResultsInPenalty) {
    [output appendFormat:@"%@%@: %@\n", indent, @"quittingResultsInPenalty", [NSNumber numberWithBool:self.quittingResultsInPenalty]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CTFLobbyMember class]]) {
    return NO;
  }
  CTFLobbyMember *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasteam == otherMessage.hasteam &&
      (!self.hasteam || self.team == otherMessage.team) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasLatitude == otherMessage.hasLatitude &&
      (!self.hasLatitude || self.latitude == otherMessage.latitude) &&
      self.hasLongitude == otherMessage.hasLongitude &&
      (!self.hasLongitude || self.longitude == otherMessage.longitude) &&
      self.hasready_state == otherMessage.hasready_state &&
      (!self.hasready_state || self.ready_state == otherMessage.ready_state) &&
      self.hasPartyId == otherMessage.hasPartyId &&
      (!self.hasPartyId || self.partyId == otherMessage.partyId) &&
      self.hasconnect_state == otherMessage.hasconnect_state &&
      (!self.hasconnect_state || self.connect_state == otherMessage.connect_state) &&
      self.hasSquadSurplus == otherMessage.hasSquadSurplus &&
      (!self.hasSquadSurplus || self.squadSurplus == otherMessage.squadSurplus) &&
      self.hasBadgeLevel == otherMessage.hasBadgeLevel &&
      (!self.hasBadgeLevel || self.badgeLevel == otherMessage.badgeLevel) &&
      self.hasAbandonTime == otherMessage.hasAbandonTime &&
      (!self.hasAbandonTime || self.abandonTime == otherMessage.abandonTime) &&
      self.hasLastConnectTime == otherMessage.hasLastConnectTime &&
      (!self.hasLastConnectTime || self.lastConnectTime == otherMessage.lastConnectTime) &&
      self.hasQuittingResultsInPenalty == otherMessage.hasQuittingResultsInPenalty &&
      (!self.hasQuittingResultsInPenalty || self.quittingResultsInPenalty == otherMessage.quittingResultsInPenalty) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasteam) {
    hashCode = hashCode * 31 + self.team;
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasLatitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.latitude] hash];
  }
  if (self.hasLongitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.longitude] hash];
  }
  if (self.hasready_state) {
    hashCode = hashCode * 31 + self.ready_state;
  }
  if (self.hasPartyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.partyId] hash];
  }
  if (self.hasconnect_state) {
    hashCode = hashCode * 31 + self.connect_state;
  }
  if (self.hasSquadSurplus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.squadSurplus] hash];
  }
  if (self.hasBadgeLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.badgeLevel] hash];
  }
  if (self.hasAbandonTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.abandonTime] hash];
  }
  if (self.hasLastConnectTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.lastConnectTime] hash];
  }
  if (self.hasQuittingResultsInPenalty) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.quittingResultsInPenalty] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CTFLobbyMember_ConnectStateIsValidValue(CTFLobbyMember_ConnectState value) {
  switch (value) {
    case CTFLobbyMember_ConnectStateINVALID:
    case CTFLobbyMember_ConnectStateRESERVATION_PENDING:
    case CTFLobbyMember_ConnectStateRESERVED:
    case CTFLobbyMember_ConnectStateCONNECTED:
    case CTFLobbyMember_ConnectStateDISCONNECTED:
      return YES;
    default:
      return NO;
  }
}
@interface CTFLobbyMember_Builder()
@property (retain) CTFLobbyMember* _builderResult;
@end

@implementation CTFLobbyMember_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CTFLobbyMember alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CTFLobbyMember_Builder*) clear {
  _builderResult = [[[CTFLobbyMember alloc] init] autorelease];
  return self;
}
- (CTFLobbyMember_Builder*) clone {
  return [CTFLobbyMember builderWithPrototype:_builderResult];
}
- (CTFLobbyMember*) defaultInstance {
  return [CTFLobbyMember defaultInstance];
}
- (CTFLobbyMember*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CTFLobbyMember*) buildPartial {
  CTFLobbyMember* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CTFLobbyMember_Builder*) mergeFrom:(CTFLobbyMember*) other {
  if (other == [CTFLobbyMember defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasteam) {
    [self setteam:other.team];
  }
  if (other.hasconnect_state) {
    [self setconnect_state:other.connect_state];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  if (other.hasready_state) {
    [self setready_state:other.ready_state];
  }
  if (other.hasPartyId) {
    [self setPartyId:other.partyId];
  }
  if (other.hasSquadSurplus) {
    [self setSquadSurplus:other.squadSurplus];
  }
  if (other.hasBadgeLevel) {
    [self setBadgeLevel:other.badgeLevel];
  }
  if (other.hasAbandonTime) {
    [self setAbandonTime:other.abandonTime];
  }
  if (other.hasLastConnectTime) {
    [self setLastConnectTime:other.lastConnectTime];
  }
  if (other.hasQuittingResultsInPenalty) {
    [self setQuittingResultsInPenalty:other.quittingResultsInPenalty];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CTFLobbyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CTFLobbyMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setId:[input readFixed64]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (TF_GC_TEAMIsValidValue(value)) {
          [self setteam:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 50: {
        [self setName:[input readString]];
        break;
      }
      case 69: {
        [self setLatitude:[input readFloat]];
        break;
      }
      case 77: {
        [self setLongitude:[input readFloat]];
        break;
      }
      case 88: {
        int32_t value = [input readEnum];
        if (TFLobbyReadyStateIsValidValue(value)) {
          [self setready_state:value];
        } else {
          [unknownFields mergeVarintField:11 value:value];
        }
        break;
      }
      case 96: {
        [self setPartyId:[input readUInt64]];
        break;
      }
      case 104: {
        int32_t value = [input readEnum];
        if (CTFLobbyMember_ConnectStateIsValidValue(value)) {
          [self setconnect_state:value];
        } else {
          [unknownFields mergeVarintField:13 value:value];
        }
        break;
      }
      case 112: {
        [self setSquadSurplus:[input readBool]];
        break;
      }
      case 120: {
        [self setBadgeLevel:[input readUInt32]];
        break;
      }
      case 128: {
        [self setAbandonTime:[input readUInt32]];
        break;
      }
      case 136: {
        [self setLastConnectTime:[input readUInt32]];
        break;
      }
      case 144: {
        [self setQuittingResultsInPenalty:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (uint64_t) id {
  return result.id;
}
- (CTFLobbyMember_Builder*) setId:(uint64_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasteam {
  return result.hasteam;
}
- (TF_GC_TEAM) team {
  return result.team;
}
- (CTFLobbyMember_Builder*) setteam:(TF_GC_TEAM) value {
  result.hasteam = YES;
  result.team = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearteam {
  result.hasteam = NO;
  result.team = TF_GC_TEAMTF_GC_TEAM_DEFENDERS;
  return self;
}
- (BOOL) hasconnect_state {
  return result.hasconnect_state;
}
- (CTFLobbyMember_ConnectState) connect_state {
  return result.connect_state;
}
- (CTFLobbyMember_Builder*) setconnect_state:(CTFLobbyMember_ConnectState) value {
  result.hasconnect_state = YES;
  result.connect_state = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearconnect_state {
  result.hasconnect_state = NO;
  result.connect_state = CTFLobbyMember_ConnectStateINVALID;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (CTFLobbyMember_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasLatitude {
  return result.hasLatitude;
}
- (Float32) latitude {
  return result.latitude;
}
- (CTFLobbyMember_Builder*) setLatitude:(Float32) value {
  result.hasLatitude = YES;
  result.latitude = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearLatitude {
  result.hasLatitude = NO;
  result.latitude = 0;
  return self;
}
- (BOOL) hasLongitude {
  return result.hasLongitude;
}
- (Float32) longitude {
  return result.longitude;
}
- (CTFLobbyMember_Builder*) setLongitude:(Float32) value {
  result.hasLongitude = YES;
  result.longitude = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearLongitude {
  result.hasLongitude = NO;
  result.longitude = 0;
  return self;
}
- (BOOL) hasready_state {
  return result.hasready_state;
}
- (TFLobbyReadyState) ready_state {
  return result.ready_state;
}
- (CTFLobbyMember_Builder*) setready_state:(TFLobbyReadyState) value {
  result.hasready_state = YES;
  result.ready_state = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearready_state {
  result.hasready_state = NO;
  result.ready_state = TFLobbyReadyStateTFLobbyReadyState_UNDECLARED;
  return self;
}
- (BOOL) hasPartyId {
  return result.hasPartyId;
}
- (uint64_t) partyId {
  return result.partyId;
}
- (CTFLobbyMember_Builder*) setPartyId:(uint64_t) value {
  result.hasPartyId = YES;
  result.partyId = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearPartyId {
  result.hasPartyId = NO;
  result.partyId = 0L;
  return self;
}
- (BOOL) hasSquadSurplus {
  return result.hasSquadSurplus;
}
- (BOOL) squadSurplus {
  return result.squadSurplus;
}
- (CTFLobbyMember_Builder*) setSquadSurplus:(BOOL) value {
  result.hasSquadSurplus = YES;
  result.squadSurplus = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearSquadSurplus {
  result.hasSquadSurplus = NO;
  result.squadSurplus = NO;
  return self;
}
- (BOOL) hasBadgeLevel {
  return result.hasBadgeLevel;
}
- (uint32_t) badgeLevel {
  return result.badgeLevel;
}
- (CTFLobbyMember_Builder*) setBadgeLevel:(uint32_t) value {
  result.hasBadgeLevel = YES;
  result.badgeLevel = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearBadgeLevel {
  result.hasBadgeLevel = NO;
  result.badgeLevel = 0;
  return self;
}
- (BOOL) hasAbandonTime {
  return result.hasAbandonTime;
}
- (uint32_t) abandonTime {
  return result.abandonTime;
}
- (CTFLobbyMember_Builder*) setAbandonTime:(uint32_t) value {
  result.hasAbandonTime = YES;
  result.abandonTime = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearAbandonTime {
  result.hasAbandonTime = NO;
  result.abandonTime = 0;
  return self;
}
- (BOOL) hasLastConnectTime {
  return result.hasLastConnectTime;
}
- (uint32_t) lastConnectTime {
  return result.lastConnectTime;
}
- (CTFLobbyMember_Builder*) setLastConnectTime:(uint32_t) value {
  result.hasLastConnectTime = YES;
  result.lastConnectTime = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearLastConnectTime {
  result.hasLastConnectTime = NO;
  result.lastConnectTime = 0;
  return self;
}
- (BOOL) hasQuittingResultsInPenalty {
  return result.hasQuittingResultsInPenalty;
}
- (BOOL) quittingResultsInPenalty {
  return result.quittingResultsInPenalty;
}
- (CTFLobbyMember_Builder*) setQuittingResultsInPenalty:(BOOL) value {
  result.hasQuittingResultsInPenalty = YES;
  result.quittingResultsInPenalty = value;
  return self;
}
- (CTFLobbyMember_Builder*) clearQuittingResultsInPenalty {
  result.hasQuittingResultsInPenalty = NO;
  result.quittingResultsInPenalty = NO;
  return self;
}
@end

@interface CLobbyPendingPlayerReport ()
@property uint32_t accountId;
@property uint32_t date;
@end

@implementation CLobbyPendingPlayerReport

- (BOOL) hasAccountId {
  return !!hasAccountId_;
}
- (void) setHasAccountId:(BOOL) value_ {
  hasAccountId_ = !!value_;
}
@synthesize accountId;
- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) value_ {
  hasDate_ = !!value_;
}
@synthesize date;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.accountId = 0;
    self.date = 0;
  }
  return self;
}
static CLobbyPendingPlayerReport* defaultCLobbyPendingPlayerReportInstance = nil;
+ (void) initialize {
  if (self == [CLobbyPendingPlayerReport class]) {
    defaultCLobbyPendingPlayerReportInstance = [[CLobbyPendingPlayerReport alloc] init];
  }
}
+ (CLobbyPendingPlayerReport*) defaultInstance {
  return defaultCLobbyPendingPlayerReportInstance;
}
- (CLobbyPendingPlayerReport*) defaultInstance {
  return defaultCLobbyPendingPlayerReportInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccountId) {
    [output writeUInt32:1 value:self.accountId];
  }
  if (self.hasDate) {
    [output writeFixed32:2 value:self.date];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccountId) {
    size_ += computeUInt32Size(1, self.accountId);
  }
  if (self.hasDate) {
    size_ += computeFixed32Size(2, self.date);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CLobbyPendingPlayerReport*) parseFromData:(NSData*) data {
  return (CLobbyPendingPlayerReport*)[[[CLobbyPendingPlayerReport builder] mergeFromData:data] build];
}
+ (CLobbyPendingPlayerReport*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CLobbyPendingPlayerReport*)[[[CLobbyPendingPlayerReport builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CLobbyPendingPlayerReport*) parseFromInputStream:(NSInputStream*) input {
  return (CLobbyPendingPlayerReport*)[[[CLobbyPendingPlayerReport builder] mergeFromInputStream:input] build];
}
+ (CLobbyPendingPlayerReport*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CLobbyPendingPlayerReport*)[[[CLobbyPendingPlayerReport builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLobbyPendingPlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CLobbyPendingPlayerReport*)[[[CLobbyPendingPlayerReport builder] mergeFromCodedInputStream:input] build];
}
+ (CLobbyPendingPlayerReport*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CLobbyPendingPlayerReport*)[[[CLobbyPendingPlayerReport builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CLobbyPendingPlayerReport_Builder*) builder {
  return [[[CLobbyPendingPlayerReport_Builder alloc] init] autorelease];
}
+ (CLobbyPendingPlayerReport_Builder*) builderWithPrototype:(CLobbyPendingPlayerReport*) prototype {
  return [[CLobbyPendingPlayerReport builder] mergeFrom:prototype];
}
- (CLobbyPendingPlayerReport_Builder*) builder {
  return [CLobbyPendingPlayerReport builder];
}
- (CLobbyPendingPlayerReport_Builder*) toBuilder {
  return [CLobbyPendingPlayerReport builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccountId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accountId", [NSNumber numberWithInt:self.accountId]];
  }
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithInt:self.date]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CLobbyPendingPlayerReport class]]) {
    return NO;
  }
  CLobbyPendingPlayerReport *otherMessage = other;
  return
      self.hasAccountId == otherMessage.hasAccountId &&
      (!self.hasAccountId || self.accountId == otherMessage.accountId) &&
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAccountId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.accountId] hash];
  }
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.date] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CLobbyPendingPlayerReport_Builder()
@property (retain) CLobbyPendingPlayerReport* _builderResult;
@end

@implementation CLobbyPendingPlayerReport_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CLobbyPendingPlayerReport alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CLobbyPendingPlayerReport_Builder*) clear {
  _builderResult = [[[CLobbyPendingPlayerReport alloc] init] autorelease];
  return self;
}
- (CLobbyPendingPlayerReport_Builder*) clone {
  return [CLobbyPendingPlayerReport builderWithPrototype:_builderResult];
}
- (CLobbyPendingPlayerReport*) defaultInstance {
  return [CLobbyPendingPlayerReport defaultInstance];
}
- (CLobbyPendingPlayerReport*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CLobbyPendingPlayerReport*) buildPartial {
  CLobbyPendingPlayerReport* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CLobbyPendingPlayerReport_Builder*) mergeFrom:(CLobbyPendingPlayerReport*) other {
  if (other == [CLobbyPendingPlayerReport defaultInstance]) {
    return self;
  }
  if (other.hasAccountId) {
    [self setAccountId:other.accountId];
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CLobbyPendingPlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CLobbyPendingPlayerReport_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAccountId:[input readUInt32]];
        break;
      }
      case 21: {
        [self setDate:[input readFixed32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccountId {
  return result.hasAccountId;
}
- (uint32_t) accountId {
  return result.accountId;
}
- (CLobbyPendingPlayerReport_Builder*) setAccountId:(uint32_t) value {
  result.hasAccountId = YES;
  result.accountId = value;
  return self;
}
- (CLobbyPendingPlayerReport_Builder*) clearAccountId {
  result.hasAccountId = NO;
  result.accountId = 0;
  return self;
}
- (BOOL) hasDate {
  return result.hasDate;
}
- (uint32_t) date {
  return result.date;
}
- (CLobbyPendingPlayerReport_Builder*) setDate:(uint32_t) value {
  result.hasDate = YES;
  result.date = value;
  return self;
}
- (CLobbyPendingPlayerReport_Builder*) clearDate {
  result.hasDate = NO;
  result.date = 0;
  return self;
}
@end

@interface CMsgGameMatchSignOut ()
@end

@implementation CMsgGameMatchSignOut

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgGameMatchSignOut* defaultCMsgGameMatchSignOutInstance = nil;
+ (void) initialize {
  if (self == [CMsgGameMatchSignOut class]) {
    defaultCMsgGameMatchSignOutInstance = [[CMsgGameMatchSignOut alloc] init];
  }
}
+ (CMsgGameMatchSignOut*) defaultInstance {
  return defaultCMsgGameMatchSignOutInstance;
}
- (CMsgGameMatchSignOut*) defaultInstance {
  return defaultCMsgGameMatchSignOutInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGameMatchSignOut*) parseFromData:(NSData*) data {
  return (CMsgGameMatchSignOut*)[[[CMsgGameMatchSignOut builder] mergeFromData:data] build];
}
+ (CMsgGameMatchSignOut*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameMatchSignOut*)[[[CMsgGameMatchSignOut builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameMatchSignOut*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGameMatchSignOut*)[[[CMsgGameMatchSignOut builder] mergeFromInputStream:input] build];
}
+ (CMsgGameMatchSignOut*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameMatchSignOut*)[[[CMsgGameMatchSignOut builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameMatchSignOut*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGameMatchSignOut*)[[[CMsgGameMatchSignOut builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGameMatchSignOut*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameMatchSignOut*)[[[CMsgGameMatchSignOut builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameMatchSignOut_Builder*) builder {
  return [[[CMsgGameMatchSignOut_Builder alloc] init] autorelease];
}
+ (CMsgGameMatchSignOut_Builder*) builderWithPrototype:(CMsgGameMatchSignOut*) prototype {
  return [[CMsgGameMatchSignOut builder] mergeFrom:prototype];
}
- (CMsgGameMatchSignOut_Builder*) builder {
  return [CMsgGameMatchSignOut builder];
}
- (CMsgGameMatchSignOut_Builder*) toBuilder {
  return [CMsgGameMatchSignOut builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGameMatchSignOut class]]) {
    return NO;
  }
  CMsgGameMatchSignOut *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGameMatchSignOut_Builder()
@property (retain) CMsgGameMatchSignOut* _builderResult;
@end

@implementation CMsgGameMatchSignOut_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGameMatchSignOut alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGameMatchSignOut_Builder*) clear {
  _builderResult = [[[CMsgGameMatchSignOut alloc] init] autorelease];
  return self;
}
- (CMsgGameMatchSignOut_Builder*) clone {
  return [CMsgGameMatchSignOut builderWithPrototype:_builderResult];
}
- (CMsgGameMatchSignOut*) defaultInstance {
  return [CMsgGameMatchSignOut defaultInstance];
}
- (CMsgGameMatchSignOut*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGameMatchSignOut*) buildPartial {
  CMsgGameMatchSignOut* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGameMatchSignOut_Builder*) mergeFrom:(CMsgGameMatchSignOut*) other {
  if (other == [CMsgGameMatchSignOut defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGameMatchSignOut_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGameMatchSignOut_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CSOTFLobby ()
@property uint64_t lobbyId;
@property (retain) PBAppendableArray * membersArray;
@property (retain) PBAppendableArray * leftMembersArray;
@property uint64_t leaderId;
@property uint64_t serverId;
@property (retain) PBAppendableArray * pendingInvitesArray;
@property CSOTFLobby_State state;
@property (retain) NSString* connect;
@property CSOTFLobby_LobbyType lobby_type;
@property BOOL allowCheats;
@property (retain) NSString* gameName;
@property uint32_t serverRegion;
@property TF_GC_GameState game_state;
@property uint32_t numSpectators;
@property uint32_t matchgroup;
@property Float32 readyupRemainingTime;
@property BOOL leaverDetected;
@property BOOL allowSpectating;
@property uint64_t loadGameLobbyId;
@property uint32_t loadGameSaveNumber;
@property (retain) NSString* mannupTourName;
@property (retain) NSString* mapName;
@property (retain) NSString* missionName;
@property uint32_t matchGroup;
@property uint32_t matchId;
@property uint32_t replaySalt;
@end

@implementation CSOTFLobby

- (BOOL) hasLobbyId {
  return !!hasLobbyId_;
}
- (void) setHasLobbyId:(BOOL) value_ {
  hasLobbyId_ = !!value_;
}
@synthesize lobbyId;
@synthesize membersArray;
@dynamic members;
@synthesize leftMembersArray;
@dynamic leftMembers;
- (BOOL) hasLeaderId {
  return !!hasLeaderId_;
}
- (void) setHasLeaderId:(BOOL) value_ {
  hasLeaderId_ = !!value_;
}
@synthesize leaderId;
- (BOOL) hasServerId {
  return !!hasServerId_;
}
- (void) setHasServerId:(BOOL) value_ {
  hasServerId_ = !!value_;
}
@synthesize serverId;
@synthesize pendingInvitesArray;
@dynamic pendingInvites;
- (BOOL) hasstate {
  return !!hasstate_;
}
- (void) setHasstate:(BOOL) value_ {
  hasstate_ = !!value_;
}
@synthesize state;
- (BOOL) hasConnect {
  return !!hasConnect_;
}
- (void) setHasConnect:(BOOL) value_ {
  hasConnect_ = !!value_;
}
@synthesize connect;
- (BOOL) haslobby_type {
  return !!haslobby_type_;
}
- (void) setHaslobby_type:(BOOL) value_ {
  haslobby_type_ = !!value_;
}
@synthesize lobby_type;
- (BOOL) hasAllowCheats {
  return !!hasAllowCheats_;
}
- (void) setHasAllowCheats:(BOOL) value_ {
  hasAllowCheats_ = !!value_;
}
- (BOOL) allowCheats {
  return !!allowCheats_;
}
- (void) setAllowCheats:(BOOL) value_ {
  allowCheats_ = !!value_;
}
- (BOOL) hasGameName {
  return !!hasGameName_;
}
- (void) setHasGameName:(BOOL) value_ {
  hasGameName_ = !!value_;
}
@synthesize gameName;
- (BOOL) hasServerRegion {
  return !!hasServerRegion_;
}
- (void) setHasServerRegion:(BOOL) value_ {
  hasServerRegion_ = !!value_;
}
@synthesize serverRegion;
- (BOOL) hasgame_state {
  return !!hasgame_state_;
}
- (void) setHasgame_state:(BOOL) value_ {
  hasgame_state_ = !!value_;
}
@synthesize game_state;
- (BOOL) hasNumSpectators {
  return !!hasNumSpectators_;
}
- (void) setHasNumSpectators:(BOOL) value_ {
  hasNumSpectators_ = !!value_;
}
@synthesize numSpectators;
- (BOOL) hasMatchgroup {
  return !!hasMatchgroup_;
}
- (void) setHasMatchgroup:(BOOL) value_ {
  hasMatchgroup_ = !!value_;
}
@synthesize matchgroup;
- (BOOL) hasReadyupRemainingTime {
  return !!hasReadyupRemainingTime_;
}
- (void) setHasReadyupRemainingTime:(BOOL) value_ {
  hasReadyupRemainingTime_ = !!value_;
}
@synthesize readyupRemainingTime;
- (BOOL) hasLeaverDetected {
  return !!hasLeaverDetected_;
}
- (void) setHasLeaverDetected:(BOOL) value_ {
  hasLeaverDetected_ = !!value_;
}
- (BOOL) leaverDetected {
  return !!leaverDetected_;
}
- (void) setLeaverDetected:(BOOL) value_ {
  leaverDetected_ = !!value_;
}
- (BOOL) hasAllowSpectating {
  return !!hasAllowSpectating_;
}
- (void) setHasAllowSpectating:(BOOL) value_ {
  hasAllowSpectating_ = !!value_;
}
- (BOOL) allowSpectating {
  return !!allowSpectating_;
}
- (void) setAllowSpectating:(BOOL) value_ {
  allowSpectating_ = !!value_;
}
- (BOOL) hasLoadGameLobbyId {
  return !!hasLoadGameLobbyId_;
}
- (void) setHasLoadGameLobbyId:(BOOL) value_ {
  hasLoadGameLobbyId_ = !!value_;
}
@synthesize loadGameLobbyId;
- (BOOL) hasLoadGameSaveNumber {
  return !!hasLoadGameSaveNumber_;
}
- (void) setHasLoadGameSaveNumber:(BOOL) value_ {
  hasLoadGameSaveNumber_ = !!value_;
}
@synthesize loadGameSaveNumber;
- (BOOL) hasMannupTourName {
  return !!hasMannupTourName_;
}
- (void) setHasMannupTourName:(BOOL) value_ {
  hasMannupTourName_ = !!value_;
}
@synthesize mannupTourName;
- (BOOL) hasMapName {
  return !!hasMapName_;
}
- (void) setHasMapName:(BOOL) value_ {
  hasMapName_ = !!value_;
}
@synthesize mapName;
- (BOOL) hasMissionName {
  return !!hasMissionName_;
}
- (void) setHasMissionName:(BOOL) value_ {
  hasMissionName_ = !!value_;
}
@synthesize missionName;
- (BOOL) hasMatchGroup {
  return !!hasMatchGroup_;
}
- (void) setHasMatchGroup:(BOOL) value_ {
  hasMatchGroup_ = !!value_;
}
@synthesize matchGroup;
- (BOOL) hasMatchId {
  return !!hasMatchId_;
}
- (void) setHasMatchId:(BOOL) value_ {
  hasMatchId_ = !!value_;
}
@synthesize matchId;
- (BOOL) hasReplaySalt {
  return !!hasReplaySalt_;
}
- (void) setHasReplaySalt:(BOOL) value_ {
  hasReplaySalt_ = !!value_;
}
@synthesize replaySalt;
- (void) dealloc {
  self.membersArray = nil;
  self.leftMembersArray = nil;
  self.pendingInvitesArray = nil;
  self.connect = nil;
  self.gameName = nil;
  self.mannupTourName = nil;
  self.mapName = nil;
  self.missionName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.lobbyId = 0L;
    self.leaderId = 0L;
    self.serverId = 0L;
    self.state = CSOTFLobby_StateSERVERSETUP;
    self.connect = @"";
    self.lobby_type = CSOTFLobby_LobbyTypeINVALID;
    self.allowCheats = NO;
    self.gameName = @"";
    self.serverRegion = 0;
    self.game_state = TF_GC_GameStateTF_GC_GAMESTATE_STATE_INIT;
    self.numSpectators = 0;
    self.matchgroup = 0;
    self.readyupRemainingTime = 0;
    self.leaverDetected = NO;
    self.allowSpectating = YES;
    self.loadGameLobbyId = 0L;
    self.loadGameSaveNumber = 0;
    self.mannupTourName = @"";
    self.mapName = @"";
    self.missionName = @"";
    self.matchGroup = 0;
    self.matchId = 0;
    self.replaySalt = 0;
  }
  return self;
}
static CSOTFLobby* defaultCSOTFLobbyInstance = nil;
+ (void) initialize {
  if (self == [CSOTFLobby class]) {
    defaultCSOTFLobbyInstance = [[CSOTFLobby alloc] init];
  }
}
+ (CSOTFLobby*) defaultInstance {
  return defaultCSOTFLobbyInstance;
}
- (CSOTFLobby*) defaultInstance {
  return defaultCSOTFLobbyInstance;
}
- (PBArray *)members {
  return membersArray;
}
- (CTFLobbyMember*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (PBArray *)leftMembers {
  return leftMembersArray;
}
- (CTFLobbyMember*)leftMembersAtIndex:(NSUInteger)index {
  return [leftMembersArray objectAtIndex:index];
}
- (PBArray *)pendingInvites {
  return pendingInvitesArray;
}
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index {
  return [pendingInvitesArray uint64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLobbyId) {
    [output writeUInt64:1 value:self.lobbyId];
  }
  for (CTFLobbyMember *element in self.membersArray) {
    [output writeMessage:2 value:element];
  }
  if (self.hasstate) {
    [output writeEnum:4 value:self.state];
  }
  if (self.hasConnect) {
    [output writeString:5 value:self.connect];
  }
  if (self.hasServerId) {
    [output writeFixed64:6 value:self.serverId];
  }
  for (CTFLobbyMember *element in self.leftMembersArray) {
    [output writeMessage:7 value:element];
  }
  const NSUInteger pendingInvitesArrayCount = self.pendingInvitesArray.count;
  if (pendingInvitesArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.pendingInvitesArray.data;
    for (NSUInteger i = 0; i < pendingInvitesArrayCount; ++i) {
      [output writeFixed64:10 value:values[i]];
    }
  }
  if (self.hasLeaderId) {
    [output writeFixed64:11 value:self.leaderId];
  }
  if (self.haslobby_type) {
    [output writeEnum:12 value:self.lobby_type];
  }
  if (self.hasAllowCheats) {
    [output writeBool:13 value:self.allowCheats];
  }
  if (self.hasGameName) {
    [output writeString:16 value:self.gameName];
  }
  if (self.hasServerRegion) {
    [output writeUInt32:21 value:self.serverRegion];
  }
  if (self.hasgame_state) {
    [output writeEnum:22 value:self.game_state];
  }
  if (self.hasNumSpectators) {
    [output writeUInt32:23 value:self.numSpectators];
  }
  if (self.hasMatchgroup) {
    [output writeUInt32:25 value:self.matchgroup];
  }
  if (self.hasReadyupRemainingTime) {
    [output writeFloat:26 value:self.readyupRemainingTime];
  }
  if (self.hasLeaverDetected) {
    [output writeBool:27 value:self.leaverDetected];
  }
  if (self.hasMatchId) {
    [output writeUInt32:30 value:self.matchId];
  }
  if (self.hasAllowSpectating) {
    [output writeBool:31 value:self.allowSpectating];
  }
  if (self.hasLoadGameLobbyId) {
    [output writeFixed64:33 value:self.loadGameLobbyId];
  }
  if (self.hasLoadGameSaveNumber) {
    [output writeUInt32:34 value:self.loadGameSaveNumber];
  }
  if (self.hasReplaySalt) {
    [output writeFixed32:35 value:self.replaySalt];
  }
  if (self.hasMapName) {
    [output writeString:38 value:self.mapName];
  }
  if (self.hasMissionName) {
    [output writeString:39 value:self.missionName];
  }
  if (self.hasMatchGroup) {
    [output writeUInt32:41 value:self.matchGroup];
  }
  if (self.hasMannupTourName) {
    [output writeString:42 value:self.mannupTourName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLobbyId) {
    size_ += computeUInt64Size(1, self.lobbyId);
  }
  for (CTFLobbyMember *element in self.membersArray) {
    size_ += computeMessageSize(2, element);
  }
  if (self.hasstate) {
    size_ += computeEnumSize(4, self.state);
  }
  if (self.hasConnect) {
    size_ += computeStringSize(5, self.connect);
  }
  if (self.hasServerId) {
    size_ += computeFixed64Size(6, self.serverId);
  }
  for (CTFLobbyMember *element in self.leftMembersArray) {
    size_ += computeMessageSize(7, element);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.pendingInvitesArray.count;
    dataSize = 8 * count;
    size_ += dataSize;
    size_ += 1 * count;
  }
  if (self.hasLeaderId) {
    size_ += computeFixed64Size(11, self.leaderId);
  }
  if (self.haslobby_type) {
    size_ += computeEnumSize(12, self.lobby_type);
  }
  if (self.hasAllowCheats) {
    size_ += computeBoolSize(13, self.allowCheats);
  }
  if (self.hasGameName) {
    size_ += computeStringSize(16, self.gameName);
  }
  if (self.hasServerRegion) {
    size_ += computeUInt32Size(21, self.serverRegion);
  }
  if (self.hasgame_state) {
    size_ += computeEnumSize(22, self.game_state);
  }
  if (self.hasNumSpectators) {
    size_ += computeUInt32Size(23, self.numSpectators);
  }
  if (self.hasMatchgroup) {
    size_ += computeUInt32Size(25, self.matchgroup);
  }
  if (self.hasReadyupRemainingTime) {
    size_ += computeFloatSize(26, self.readyupRemainingTime);
  }
  if (self.hasLeaverDetected) {
    size_ += computeBoolSize(27, self.leaverDetected);
  }
  if (self.hasMatchId) {
    size_ += computeUInt32Size(30, self.matchId);
  }
  if (self.hasAllowSpectating) {
    size_ += computeBoolSize(31, self.allowSpectating);
  }
  if (self.hasLoadGameLobbyId) {
    size_ += computeFixed64Size(33, self.loadGameLobbyId);
  }
  if (self.hasLoadGameSaveNumber) {
    size_ += computeUInt32Size(34, self.loadGameSaveNumber);
  }
  if (self.hasReplaySalt) {
    size_ += computeFixed32Size(35, self.replaySalt);
  }
  if (self.hasMapName) {
    size_ += computeStringSize(38, self.mapName);
  }
  if (self.hasMissionName) {
    size_ += computeStringSize(39, self.missionName);
  }
  if (self.hasMatchGroup) {
    size_ += computeUInt32Size(41, self.matchGroup);
  }
  if (self.hasMannupTourName) {
    size_ += computeStringSize(42, self.mannupTourName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CSOTFLobby*) parseFromData:(NSData*) data {
  return (CSOTFLobby*)[[[CSOTFLobby builder] mergeFromData:data] build];
}
+ (CSOTFLobby*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFLobby*)[[[CSOTFLobby builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CSOTFLobby*) parseFromInputStream:(NSInputStream*) input {
  return (CSOTFLobby*)[[[CSOTFLobby builder] mergeFromInputStream:input] build];
}
+ (CSOTFLobby*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFLobby*)[[[CSOTFLobby builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CSOTFLobby*)[[[CSOTFLobby builder] mergeFromCodedInputStream:input] build];
}
+ (CSOTFLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CSOTFLobby*)[[[CSOTFLobby builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CSOTFLobby_Builder*) builder {
  return [[[CSOTFLobby_Builder alloc] init] autorelease];
}
+ (CSOTFLobby_Builder*) builderWithPrototype:(CSOTFLobby*) prototype {
  return [[CSOTFLobby builder] mergeFrom:prototype];
}
- (CSOTFLobby_Builder*) builder {
  return [CSOTFLobby builder];
}
- (CSOTFLobby_Builder*) toBuilder {
  return [CSOTFLobby builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLobbyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lobbyId", [NSNumber numberWithLongLong:self.lobbyId]];
  }
  for (CTFLobbyMember* element in self.membersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasstate) {
    [output appendFormat:@"%@%@: %d\n", indent, @"state", self.state];
  }
  if (self.hasConnect) {
    [output appendFormat:@"%@%@: %@\n", indent, @"connect", self.connect];
  }
  if (self.hasServerId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverId", [NSNumber numberWithLongLong:self.serverId]];
  }
  for (CTFLobbyMember* element in self.leftMembersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"leftMembers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (NSNumber* value in self.pendingInvitesArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pendingInvites", value];
  }
  if (self.hasLeaderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"leaderId", [NSNumber numberWithLongLong:self.leaderId]];
  }
  if (self.haslobby_type) {
    [output appendFormat:@"%@%@: %d\n", indent, @"lobby_type", self.lobby_type];
  }
  if (self.hasAllowCheats) {
    [output appendFormat:@"%@%@: %@\n", indent, @"allowCheats", [NSNumber numberWithBool:self.allowCheats]];
  }
  if (self.hasGameName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameName", self.gameName];
  }
  if (self.hasServerRegion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverRegion", [NSNumber numberWithInt:self.serverRegion]];
  }
  if (self.hasgame_state) {
    [output appendFormat:@"%@%@: %d\n", indent, @"game_state", self.game_state];
  }
  if (self.hasNumSpectators) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numSpectators", [NSNumber numberWithInt:self.numSpectators]];
  }
  if (self.hasMatchgroup) {
    [output appendFormat:@"%@%@: %@\n", indent, @"matchgroup", [NSNumber numberWithInt:self.matchgroup]];
  }
  if (self.hasReadyupRemainingTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"readyupRemainingTime", [NSNumber numberWithFloat:self.readyupRemainingTime]];
  }
  if (self.hasLeaverDetected) {
    [output appendFormat:@"%@%@: %@\n", indent, @"leaverDetected", [NSNumber numberWithBool:self.leaverDetected]];
  }
  if (self.hasMatchId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"matchId", [NSNumber numberWithInt:self.matchId]];
  }
  if (self.hasAllowSpectating) {
    [output appendFormat:@"%@%@: %@\n", indent, @"allowSpectating", [NSNumber numberWithBool:self.allowSpectating]];
  }
  if (self.hasLoadGameLobbyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loadGameLobbyId", [NSNumber numberWithLongLong:self.loadGameLobbyId]];
  }
  if (self.hasLoadGameSaveNumber) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loadGameSaveNumber", [NSNumber numberWithInt:self.loadGameSaveNumber]];
  }
  if (self.hasReplaySalt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replaySalt", [NSNumber numberWithInt:self.replaySalt]];
  }
  if (self.hasMapName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mapName", self.mapName];
  }
  if (self.hasMissionName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"missionName", self.missionName];
  }
  if (self.hasMatchGroup) {
    [output appendFormat:@"%@%@: %@\n", indent, @"matchGroup", [NSNumber numberWithInt:self.matchGroup]];
  }
  if (self.hasMannupTourName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mannupTourName", self.mannupTourName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CSOTFLobby class]]) {
    return NO;
  }
  CSOTFLobby *otherMessage = other;
  return
      self.hasLobbyId == otherMessage.hasLobbyId &&
      (!self.hasLobbyId || self.lobbyId == otherMessage.lobbyId) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      self.hasstate == otherMessage.hasstate &&
      (!self.hasstate || self.state == otherMessage.state) &&
      self.hasConnect == otherMessage.hasConnect &&
      (!self.hasConnect || [self.connect isEqual:otherMessage.connect]) &&
      self.hasServerId == otherMessage.hasServerId &&
      (!self.hasServerId || self.serverId == otherMessage.serverId) &&
      [self.leftMembersArray isEqualToArray:otherMessage.leftMembersArray] &&
      [self.pendingInvitesArray isEqualToArray:otherMessage.pendingInvitesArray] &&
      self.hasLeaderId == otherMessage.hasLeaderId &&
      (!self.hasLeaderId || self.leaderId == otherMessage.leaderId) &&
      self.haslobby_type == otherMessage.haslobby_type &&
      (!self.haslobby_type || self.lobby_type == otherMessage.lobby_type) &&
      self.hasAllowCheats == otherMessage.hasAllowCheats &&
      (!self.hasAllowCheats || self.allowCheats == otherMessage.allowCheats) &&
      self.hasGameName == otherMessage.hasGameName &&
      (!self.hasGameName || [self.gameName isEqual:otherMessage.gameName]) &&
      self.hasServerRegion == otherMessage.hasServerRegion &&
      (!self.hasServerRegion || self.serverRegion == otherMessage.serverRegion) &&
      self.hasgame_state == otherMessage.hasgame_state &&
      (!self.hasgame_state || self.game_state == otherMessage.game_state) &&
      self.hasNumSpectators == otherMessage.hasNumSpectators &&
      (!self.hasNumSpectators || self.numSpectators == otherMessage.numSpectators) &&
      self.hasMatchgroup == otherMessage.hasMatchgroup &&
      (!self.hasMatchgroup || self.matchgroup == otherMessage.matchgroup) &&
      self.hasReadyupRemainingTime == otherMessage.hasReadyupRemainingTime &&
      (!self.hasReadyupRemainingTime || self.readyupRemainingTime == otherMessage.readyupRemainingTime) &&
      self.hasLeaverDetected == otherMessage.hasLeaverDetected &&
      (!self.hasLeaverDetected || self.leaverDetected == otherMessage.leaverDetected) &&
      self.hasMatchId == otherMessage.hasMatchId &&
      (!self.hasMatchId || self.matchId == otherMessage.matchId) &&
      self.hasAllowSpectating == otherMessage.hasAllowSpectating &&
      (!self.hasAllowSpectating || self.allowSpectating == otherMessage.allowSpectating) &&
      self.hasLoadGameLobbyId == otherMessage.hasLoadGameLobbyId &&
      (!self.hasLoadGameLobbyId || self.loadGameLobbyId == otherMessage.loadGameLobbyId) &&
      self.hasLoadGameSaveNumber == otherMessage.hasLoadGameSaveNumber &&
      (!self.hasLoadGameSaveNumber || self.loadGameSaveNumber == otherMessage.loadGameSaveNumber) &&
      self.hasReplaySalt == otherMessage.hasReplaySalt &&
      (!self.hasReplaySalt || self.replaySalt == otherMessage.replaySalt) &&
      self.hasMapName == otherMessage.hasMapName &&
      (!self.hasMapName || [self.mapName isEqual:otherMessage.mapName]) &&
      self.hasMissionName == otherMessage.hasMissionName &&
      (!self.hasMissionName || [self.missionName isEqual:otherMessage.missionName]) &&
      self.hasMatchGroup == otherMessage.hasMatchGroup &&
      (!self.hasMatchGroup || self.matchGroup == otherMessage.matchGroup) &&
      self.hasMannupTourName == otherMessage.hasMannupTourName &&
      (!self.hasMannupTourName || [self.mannupTourName isEqual:otherMessage.mannupTourName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasLobbyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lobbyId] hash];
  }
  for (CTFLobbyMember* element in self.membersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasstate) {
    hashCode = hashCode * 31 + self.state;
  }
  if (self.hasConnect) {
    hashCode = hashCode * 31 + [self.connect hash];
  }
  if (self.hasServerId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.serverId] hash];
  }
  for (CTFLobbyMember* element in self.leftMembersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (NSNumber* value in self.pendingInvitesArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  if (self.hasLeaderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.leaderId] hash];
  }
  if (self.haslobby_type) {
    hashCode = hashCode * 31 + self.lobby_type;
  }
  if (self.hasAllowCheats) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.allowCheats] hash];
  }
  if (self.hasGameName) {
    hashCode = hashCode * 31 + [self.gameName hash];
  }
  if (self.hasServerRegion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverRegion] hash];
  }
  if (self.hasgame_state) {
    hashCode = hashCode * 31 + self.game_state;
  }
  if (self.hasNumSpectators) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numSpectators] hash];
  }
  if (self.hasMatchgroup) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.matchgroup] hash];
  }
  if (self.hasReadyupRemainingTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.readyupRemainingTime] hash];
  }
  if (self.hasLeaverDetected) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.leaverDetected] hash];
  }
  if (self.hasMatchId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.matchId] hash];
  }
  if (self.hasAllowSpectating) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.allowSpectating] hash];
  }
  if (self.hasLoadGameLobbyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.loadGameLobbyId] hash];
  }
  if (self.hasLoadGameSaveNumber) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.loadGameSaveNumber] hash];
  }
  if (self.hasReplaySalt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.replaySalt] hash];
  }
  if (self.hasMapName) {
    hashCode = hashCode * 31 + [self.mapName hash];
  }
  if (self.hasMissionName) {
    hashCode = hashCode * 31 + [self.missionName hash];
  }
  if (self.hasMatchGroup) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.matchGroup] hash];
  }
  if (self.hasMannupTourName) {
    hashCode = hashCode * 31 + [self.mannupTourName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CSOTFLobby_StateIsValidValue(CSOTFLobby_State value) {
  switch (value) {
    case CSOTFLobby_StateSERVERSETUP:
    case CSOTFLobby_StateRUN:
    case CSOTFLobby_StatePOSTGAME:
    case CSOTFLobby_StateNOTREADY:
    case CSOTFLobby_StateSERVERASSIGN:
      return YES;
    default:
      return NO;
  }
}
BOOL CSOTFLobby_LobbyTypeIsValidValue(CSOTFLobby_LobbyType value) {
  switch (value) {
    case CSOTFLobby_LobbyTypeINVALID:
    case CSOTFLobby_LobbyTypeMATCH:
    case CSOTFLobby_LobbyTypePRACTICE:
    case CSOTFLobby_LobbyTypeTOURNAMENT:
    case CSOTFLobby_LobbyTypeTUTORIAL:
      return YES;
    default:
      return NO;
  }
}
@interface CSOTFLobby_Builder()
@property (retain) CSOTFLobby* _builderResult;
@end

@implementation CSOTFLobby_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CSOTFLobby alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CSOTFLobby_Builder*) clear {
  _builderResult = [[[CSOTFLobby alloc] init] autorelease];
  return self;
}
- (CSOTFLobby_Builder*) clone {
  return [CSOTFLobby builderWithPrototype:_builderResult];
}
- (CSOTFLobby*) defaultInstance {
  return [CSOTFLobby defaultInstance];
}
- (CSOTFLobby*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CSOTFLobby*) buildPartial {
  CSOTFLobby* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CSOTFLobby_Builder*) mergeFrom:(CSOTFLobby*) other {
  if (other == [CSOTFLobby defaultInstance]) {
    return self;
  }
  if (other.hasLobbyId) {
    [self setLobbyId:other.lobbyId];
  }
  if (other.membersArray.count > 0) {
    if (result.membersArray == nil) {
      result.membersArray = [[other.membersArray copyWithZone:[other.membersArray zone]] autorelease];
    } else {
      [result.membersArray appendArray:other.membersArray];
    }
  }
  if (other.leftMembersArray.count > 0) {
    if (result.leftMembersArray == nil) {
      result.leftMembersArray = [[other.leftMembersArray copyWithZone:[other.leftMembersArray zone]] autorelease];
    } else {
      [result.leftMembersArray appendArray:other.leftMembersArray];
    }
  }
  if (other.hasLeaderId) {
    [self setLeaderId:other.leaderId];
  }
  if (other.hasServerId) {
    [self setServerId:other.serverId];
  }
  if (other.pendingInvitesArray.count > 0) {
    if (result.pendingInvitesArray == nil) {
      result.pendingInvitesArray = [[other.pendingInvitesArray copyWithZone:[other.pendingInvitesArray zone]] autorelease];
    } else {
      [result.pendingInvitesArray appendArray:other.pendingInvitesArray];
    }
  }
  if (other.hasstate) {
    [self setstate:other.state];
  }
  if (other.hasConnect) {
    [self setConnect:other.connect];
  }
  if (other.haslobby_type) {
    [self setlobby_type:other.lobby_type];
  }
  if (other.hasAllowCheats) {
    [self setAllowCheats:other.allowCheats];
  }
  if (other.hasGameName) {
    [self setGameName:other.gameName];
  }
  if (other.hasServerRegion) {
    [self setServerRegion:other.serverRegion];
  }
  if (other.hasgame_state) {
    [self setgame_state:other.game_state];
  }
  if (other.hasNumSpectators) {
    [self setNumSpectators:other.numSpectators];
  }
  if (other.hasMatchgroup) {
    [self setMatchgroup:other.matchgroup];
  }
  if (other.hasReadyupRemainingTime) {
    [self setReadyupRemainingTime:other.readyupRemainingTime];
  }
  if (other.hasLeaverDetected) {
    [self setLeaverDetected:other.leaverDetected];
  }
  if (other.hasAllowSpectating) {
    [self setAllowSpectating:other.allowSpectating];
  }
  if (other.hasLoadGameLobbyId) {
    [self setLoadGameLobbyId:other.loadGameLobbyId];
  }
  if (other.hasLoadGameSaveNumber) {
    [self setLoadGameSaveNumber:other.loadGameSaveNumber];
  }
  if (other.hasMannupTourName) {
    [self setMannupTourName:other.mannupTourName];
  }
  if (other.hasMapName) {
    [self setMapName:other.mapName];
  }
  if (other.hasMissionName) {
    [self setMissionName:other.missionName];
  }
  if (other.hasMatchGroup) {
    [self setMatchGroup:other.matchGroup];
  }
  if (other.hasMatchId) {
    [self setMatchId:other.matchId];
  }
  if (other.hasReplaySalt) {
    [self setReplaySalt:other.replaySalt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CSOTFLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CSOTFLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLobbyId:[input readUInt64]];
        break;
      }
      case 18: {
        CTFLobbyMember_Builder* subBuilder = [CTFLobbyMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (CSOTFLobby_StateIsValidValue(value)) {
          [self setstate:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 42: {
        [self setConnect:[input readString]];
        break;
      }
      case 49: {
        [self setServerId:[input readFixed64]];
        break;
      }
      case 58: {
        CTFLobbyMember_Builder* subBuilder = [CTFLobbyMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addLeftMembers:[subBuilder buildPartial]];
        break;
      }
      case 81: {
        [self addPendingInvites:[input readFixed64]];
        break;
      }
      case 89: {
        [self setLeaderId:[input readFixed64]];
        break;
      }
      case 96: {
        int32_t value = [input readEnum];
        if (CSOTFLobby_LobbyTypeIsValidValue(value)) {
          [self setlobby_type:value];
        } else {
          [unknownFields mergeVarintField:12 value:value];
        }
        break;
      }
      case 104: {
        [self setAllowCheats:[input readBool]];
        break;
      }
      case 130: {
        [self setGameName:[input readString]];
        break;
      }
      case 168: {
        [self setServerRegion:[input readUInt32]];
        break;
      }
      case 176: {
        int32_t value = [input readEnum];
        if (TF_GC_GameStateIsValidValue(value)) {
          [self setgame_state:value];
        } else {
          [unknownFields mergeVarintField:22 value:value];
        }
        break;
      }
      case 184: {
        [self setNumSpectators:[input readUInt32]];
        break;
      }
      case 200: {
        [self setMatchgroup:[input readUInt32]];
        break;
      }
      case 213: {
        [self setReadyupRemainingTime:[input readFloat]];
        break;
      }
      case 216: {
        [self setLeaverDetected:[input readBool]];
        break;
      }
      case 240: {
        [self setMatchId:[input readUInt32]];
        break;
      }
      case 248: {
        [self setAllowSpectating:[input readBool]];
        break;
      }
      case 265: {
        [self setLoadGameLobbyId:[input readFixed64]];
        break;
      }
      case 272: {
        [self setLoadGameSaveNumber:[input readUInt32]];
        break;
      }
      case 285: {
        [self setReplaySalt:[input readFixed32]];
        break;
      }
      case 306: {
        [self setMapName:[input readString]];
        break;
      }
      case 314: {
        [self setMissionName:[input readString]];
        break;
      }
      case 328: {
        [self setMatchGroup:[input readUInt32]];
        break;
      }
      case 338: {
        [self setMannupTourName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLobbyId {
  return result.hasLobbyId;
}
- (uint64_t) lobbyId {
  return result.lobbyId;
}
- (CSOTFLobby_Builder*) setLobbyId:(uint64_t) value {
  result.hasLobbyId = YES;
  result.lobbyId = value;
  return self;
}
- (CSOTFLobby_Builder*) clearLobbyId {
  result.hasLobbyId = NO;
  result.lobbyId = 0L;
  return self;
}
- (PBAppendableArray *)members {
  return result.membersArray;
}
- (CTFLobbyMember*)membersAtIndex:(NSUInteger)index {
  return [result membersAtIndex:index];
}
- (CSOTFLobby_Builder *)addMembers:(CTFLobbyMember*)value {
  if (result.membersArray == nil) {
    result.membersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.membersArray addObject:value];
  return self;
}
- (CSOTFLobby_Builder *)setMembersArray:(NSArray *)array {
  result.membersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFLobby_Builder *)setMembersValues:(const CTFLobbyMember* *)values count:(NSUInteger)count {
  result.membersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFLobby_Builder *)clearMembers {
  result.membersArray = nil;
  return self;
}
- (PBAppendableArray *)leftMembers {
  return result.leftMembersArray;
}
- (CTFLobbyMember*)leftMembersAtIndex:(NSUInteger)index {
  return [result leftMembersAtIndex:index];
}
- (CSOTFLobby_Builder *)addLeftMembers:(CTFLobbyMember*)value {
  if (result.leftMembersArray == nil) {
    result.leftMembersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.leftMembersArray addObject:value];
  return self;
}
- (CSOTFLobby_Builder *)setLeftMembersArray:(NSArray *)array {
  result.leftMembersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFLobby_Builder *)setLeftMembersValues:(const CTFLobbyMember* *)values count:(NSUInteger)count {
  result.leftMembersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CSOTFLobby_Builder *)clearLeftMembers {
  result.leftMembersArray = nil;
  return self;
}
- (BOOL) hasLeaderId {
  return result.hasLeaderId;
}
- (uint64_t) leaderId {
  return result.leaderId;
}
- (CSOTFLobby_Builder*) setLeaderId:(uint64_t) value {
  result.hasLeaderId = YES;
  result.leaderId = value;
  return self;
}
- (CSOTFLobby_Builder*) clearLeaderId {
  result.hasLeaderId = NO;
  result.leaderId = 0L;
  return self;
}
- (BOOL) hasServerId {
  return result.hasServerId;
}
- (uint64_t) serverId {
  return result.serverId;
}
- (CSOTFLobby_Builder*) setServerId:(uint64_t) value {
  result.hasServerId = YES;
  result.serverId = value;
  return self;
}
- (CSOTFLobby_Builder*) clearServerId {
  result.hasServerId = NO;
  result.serverId = 0L;
  return self;
}
- (PBAppendableArray *)pendingInvites {
  return result.pendingInvitesArray;
}
- (uint64_t)pendingInvitesAtIndex:(NSUInteger)index {
  return [result pendingInvitesAtIndex:index];
}
- (CSOTFLobby_Builder *)addPendingInvites:(uint64_t)value {
  if (result.pendingInvitesArray == nil) {
    result.pendingInvitesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [result.pendingInvitesArray addUint64:value];
  return self;
}
- (CSOTFLobby_Builder *)setPendingInvitesArray:(NSArray *)array {
  result.pendingInvitesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CSOTFLobby_Builder *)setPendingInvitesValues:(const uint64_t *)values count:(NSUInteger)count {
  result.pendingInvitesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CSOTFLobby_Builder *)clearPendingInvites {
  result.pendingInvitesArray = nil;
  return self;
}
- (BOOL) hasstate {
  return result.hasstate;
}
- (CSOTFLobby_State) state {
  return result.state;
}
- (CSOTFLobby_Builder*) setstate:(CSOTFLobby_State) value {
  result.hasstate = YES;
  result.state = value;
  return self;
}
- (CSOTFLobby_Builder*) clearstate {
  result.hasstate = NO;
  result.state = CSOTFLobby_StateSERVERSETUP;
  return self;
}
- (BOOL) hasConnect {
  return result.hasConnect;
}
- (NSString*) connect {
  return result.connect;
}
- (CSOTFLobby_Builder*) setConnect:(NSString*) value {
  result.hasConnect = YES;
  result.connect = value;
  return self;
}
- (CSOTFLobby_Builder*) clearConnect {
  result.hasConnect = NO;
  result.connect = @"";
  return self;
}
- (BOOL) haslobby_type {
  return result.haslobby_type;
}
- (CSOTFLobby_LobbyType) lobby_type {
  return result.lobby_type;
}
- (CSOTFLobby_Builder*) setlobby_type:(CSOTFLobby_LobbyType) value {
  result.haslobby_type = YES;
  result.lobby_type = value;
  return self;
}
- (CSOTFLobby_Builder*) clearlobby_type {
  result.haslobby_type = NO;
  result.lobby_type = CSOTFLobby_LobbyTypeINVALID;
  return self;
}
- (BOOL) hasAllowCheats {
  return result.hasAllowCheats;
}
- (BOOL) allowCheats {
  return result.allowCheats;
}
- (CSOTFLobby_Builder*) setAllowCheats:(BOOL) value {
  result.hasAllowCheats = YES;
  result.allowCheats = value;
  return self;
}
- (CSOTFLobby_Builder*) clearAllowCheats {
  result.hasAllowCheats = NO;
  result.allowCheats = NO;
  return self;
}
- (BOOL) hasGameName {
  return result.hasGameName;
}
- (NSString*) gameName {
  return result.gameName;
}
- (CSOTFLobby_Builder*) setGameName:(NSString*) value {
  result.hasGameName = YES;
  result.gameName = value;
  return self;
}
- (CSOTFLobby_Builder*) clearGameName {
  result.hasGameName = NO;
  result.gameName = @"";
  return self;
}
- (BOOL) hasServerRegion {
  return result.hasServerRegion;
}
- (uint32_t) serverRegion {
  return result.serverRegion;
}
- (CSOTFLobby_Builder*) setServerRegion:(uint32_t) value {
  result.hasServerRegion = YES;
  result.serverRegion = value;
  return self;
}
- (CSOTFLobby_Builder*) clearServerRegion {
  result.hasServerRegion = NO;
  result.serverRegion = 0;
  return self;
}
- (BOOL) hasgame_state {
  return result.hasgame_state;
}
- (TF_GC_GameState) game_state {
  return result.game_state;
}
- (CSOTFLobby_Builder*) setgame_state:(TF_GC_GameState) value {
  result.hasgame_state = YES;
  result.game_state = value;
  return self;
}
- (CSOTFLobby_Builder*) cleargame_state {
  result.hasgame_state = NO;
  result.game_state = TF_GC_GameStateTF_GC_GAMESTATE_STATE_INIT;
  return self;
}
- (BOOL) hasNumSpectators {
  return result.hasNumSpectators;
}
- (uint32_t) numSpectators {
  return result.numSpectators;
}
- (CSOTFLobby_Builder*) setNumSpectators:(uint32_t) value {
  result.hasNumSpectators = YES;
  result.numSpectators = value;
  return self;
}
- (CSOTFLobby_Builder*) clearNumSpectators {
  result.hasNumSpectators = NO;
  result.numSpectators = 0;
  return self;
}
- (BOOL) hasMatchgroup {
  return result.hasMatchgroup;
}
- (uint32_t) matchgroup {
  return result.matchgroup;
}
- (CSOTFLobby_Builder*) setMatchgroup:(uint32_t) value {
  result.hasMatchgroup = YES;
  result.matchgroup = value;
  return self;
}
- (CSOTFLobby_Builder*) clearMatchgroup {
  result.hasMatchgroup = NO;
  result.matchgroup = 0;
  return self;
}
- (BOOL) hasReadyupRemainingTime {
  return result.hasReadyupRemainingTime;
}
- (Float32) readyupRemainingTime {
  return result.readyupRemainingTime;
}
- (CSOTFLobby_Builder*) setReadyupRemainingTime:(Float32) value {
  result.hasReadyupRemainingTime = YES;
  result.readyupRemainingTime = value;
  return self;
}
- (CSOTFLobby_Builder*) clearReadyupRemainingTime {
  result.hasReadyupRemainingTime = NO;
  result.readyupRemainingTime = 0;
  return self;
}
- (BOOL) hasLeaverDetected {
  return result.hasLeaverDetected;
}
- (BOOL) leaverDetected {
  return result.leaverDetected;
}
- (CSOTFLobby_Builder*) setLeaverDetected:(BOOL) value {
  result.hasLeaverDetected = YES;
  result.leaverDetected = value;
  return self;
}
- (CSOTFLobby_Builder*) clearLeaverDetected {
  result.hasLeaverDetected = NO;
  result.leaverDetected = NO;
  return self;
}
- (BOOL) hasAllowSpectating {
  return result.hasAllowSpectating;
}
- (BOOL) allowSpectating {
  return result.allowSpectating;
}
- (CSOTFLobby_Builder*) setAllowSpectating:(BOOL) value {
  result.hasAllowSpectating = YES;
  result.allowSpectating = value;
  return self;
}
- (CSOTFLobby_Builder*) clearAllowSpectating {
  result.hasAllowSpectating = NO;
  result.allowSpectating = YES;
  return self;
}
- (BOOL) hasLoadGameLobbyId {
  return result.hasLoadGameLobbyId;
}
- (uint64_t) loadGameLobbyId {
  return result.loadGameLobbyId;
}
- (CSOTFLobby_Builder*) setLoadGameLobbyId:(uint64_t) value {
  result.hasLoadGameLobbyId = YES;
  result.loadGameLobbyId = value;
  return self;
}
- (CSOTFLobby_Builder*) clearLoadGameLobbyId {
  result.hasLoadGameLobbyId = NO;
  result.loadGameLobbyId = 0L;
  return self;
}
- (BOOL) hasLoadGameSaveNumber {
  return result.hasLoadGameSaveNumber;
}
- (uint32_t) loadGameSaveNumber {
  return result.loadGameSaveNumber;
}
- (CSOTFLobby_Builder*) setLoadGameSaveNumber:(uint32_t) value {
  result.hasLoadGameSaveNumber = YES;
  result.loadGameSaveNumber = value;
  return self;
}
- (CSOTFLobby_Builder*) clearLoadGameSaveNumber {
  result.hasLoadGameSaveNumber = NO;
  result.loadGameSaveNumber = 0;
  return self;
}
- (BOOL) hasMannupTourName {
  return result.hasMannupTourName;
}
- (NSString*) mannupTourName {
  return result.mannupTourName;
}
- (CSOTFLobby_Builder*) setMannupTourName:(NSString*) value {
  result.hasMannupTourName = YES;
  result.mannupTourName = value;
  return self;
}
- (CSOTFLobby_Builder*) clearMannupTourName {
  result.hasMannupTourName = NO;
  result.mannupTourName = @"";
  return self;
}
- (BOOL) hasMapName {
  return result.hasMapName;
}
- (NSString*) mapName {
  return result.mapName;
}
- (CSOTFLobby_Builder*) setMapName:(NSString*) value {
  result.hasMapName = YES;
  result.mapName = value;
  return self;
}
- (CSOTFLobby_Builder*) clearMapName {
  result.hasMapName = NO;
  result.mapName = @"";
  return self;
}
- (BOOL) hasMissionName {
  return result.hasMissionName;
}
- (NSString*) missionName {
  return result.missionName;
}
- (CSOTFLobby_Builder*) setMissionName:(NSString*) value {
  result.hasMissionName = YES;
  result.missionName = value;
  return self;
}
- (CSOTFLobby_Builder*) clearMissionName {
  result.hasMissionName = NO;
  result.missionName = @"";
  return self;
}
- (BOOL) hasMatchGroup {
  return result.hasMatchGroup;
}
- (uint32_t) matchGroup {
  return result.matchGroup;
}
- (CSOTFLobby_Builder*) setMatchGroup:(uint32_t) value {
  result.hasMatchGroup = YES;
  result.matchGroup = value;
  return self;
}
- (CSOTFLobby_Builder*) clearMatchGroup {
  result.hasMatchGroup = NO;
  result.matchGroup = 0;
  return self;
}
- (BOOL) hasMatchId {
  return result.hasMatchId;
}
- (uint32_t) matchId {
  return result.matchId;
}
- (CSOTFLobby_Builder*) setMatchId:(uint32_t) value {
  result.hasMatchId = YES;
  result.matchId = value;
  return self;
}
- (CSOTFLobby_Builder*) clearMatchId {
  result.hasMatchId = NO;
  result.matchId = 0;
  return self;
}
- (BOOL) hasReplaySalt {
  return result.hasReplaySalt;
}
- (uint32_t) replaySalt {
  return result.replaySalt;
}
- (CSOTFLobby_Builder*) setReplaySalt:(uint32_t) value {
  result.hasReplaySalt = YES;
  result.replaySalt = value;
  return self;
}
- (CSOTFLobby_Builder*) clearReplaySalt {
  result.hasReplaySalt = NO;
  result.replaySalt = 0;
  return self;
}
@end

@interface CMsgExitMatchmaking ()
@end

@implementation CMsgExitMatchmaking

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgExitMatchmaking* defaultCMsgExitMatchmakingInstance = nil;
+ (void) initialize {
  if (self == [CMsgExitMatchmaking class]) {
    defaultCMsgExitMatchmakingInstance = [[CMsgExitMatchmaking alloc] init];
  }
}
+ (CMsgExitMatchmaking*) defaultInstance {
  return defaultCMsgExitMatchmakingInstance;
}
- (CMsgExitMatchmaking*) defaultInstance {
  return defaultCMsgExitMatchmakingInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgExitMatchmaking*) parseFromData:(NSData*) data {
  return (CMsgExitMatchmaking*)[[[CMsgExitMatchmaking builder] mergeFromData:data] build];
}
+ (CMsgExitMatchmaking*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgExitMatchmaking*)[[[CMsgExitMatchmaking builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgExitMatchmaking*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgExitMatchmaking*)[[[CMsgExitMatchmaking builder] mergeFromInputStream:input] build];
}
+ (CMsgExitMatchmaking*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgExitMatchmaking*)[[[CMsgExitMatchmaking builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgExitMatchmaking*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgExitMatchmaking*)[[[CMsgExitMatchmaking builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgExitMatchmaking*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgExitMatchmaking*)[[[CMsgExitMatchmaking builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgExitMatchmaking_Builder*) builder {
  return [[[CMsgExitMatchmaking_Builder alloc] init] autorelease];
}
+ (CMsgExitMatchmaking_Builder*) builderWithPrototype:(CMsgExitMatchmaking*) prototype {
  return [[CMsgExitMatchmaking builder] mergeFrom:prototype];
}
- (CMsgExitMatchmaking_Builder*) builder {
  return [CMsgExitMatchmaking builder];
}
- (CMsgExitMatchmaking_Builder*) toBuilder {
  return [CMsgExitMatchmaking builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgExitMatchmaking class]]) {
    return NO;
  }
  CMsgExitMatchmaking *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgExitMatchmaking_Builder()
@property (retain) CMsgExitMatchmaking* _builderResult;
@end

@implementation CMsgExitMatchmaking_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgExitMatchmaking alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgExitMatchmaking_Builder*) clear {
  _builderResult = [[[CMsgExitMatchmaking alloc] init] autorelease];
  return self;
}
- (CMsgExitMatchmaking_Builder*) clone {
  return [CMsgExitMatchmaking builderWithPrototype:_builderResult];
}
- (CMsgExitMatchmaking*) defaultInstance {
  return [CMsgExitMatchmaking defaultInstance];
}
- (CMsgExitMatchmaking*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgExitMatchmaking*) buildPartial {
  CMsgExitMatchmaking* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgExitMatchmaking_Builder*) mergeFrom:(CMsgExitMatchmaking*) other {
  if (other == [CMsgExitMatchmaking defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgExitMatchmaking_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgExitMatchmaking_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgAcceptInvite ()
@property uint64_t partyId;
@property uint64_t steamidLobby;
@property uint32_t clientVersion;
@end

@implementation CMsgAcceptInvite

- (BOOL) hasPartyId {
  return !!hasPartyId_;
}
- (void) setHasPartyId:(BOOL) value_ {
  hasPartyId_ = !!value_;
}
@synthesize partyId;
- (BOOL) hasSteamidLobby {
  return !!hasSteamidLobby_;
}
- (void) setHasSteamidLobby:(BOOL) value_ {
  hasSteamidLobby_ = !!value_;
}
@synthesize steamidLobby;
- (BOOL) hasClientVersion {
  return !!hasClientVersion_;
}
- (void) setHasClientVersion:(BOOL) value_ {
  hasClientVersion_ = !!value_;
}
@synthesize clientVersion;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.partyId = 0L;
    self.steamidLobby = 0L;
    self.clientVersion = 1225;
  }
  return self;
}
static CMsgAcceptInvite* defaultCMsgAcceptInviteInstance = nil;
+ (void) initialize {
  if (self == [CMsgAcceptInvite class]) {
    defaultCMsgAcceptInviteInstance = [[CMsgAcceptInvite alloc] init];
  }
}
+ (CMsgAcceptInvite*) defaultInstance {
  return defaultCMsgAcceptInviteInstance;
}
- (CMsgAcceptInvite*) defaultInstance {
  return defaultCMsgAcceptInviteInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPartyId) {
    [output writeUInt64:1 value:self.partyId];
  }
  if (self.hasSteamidLobby) {
    [output writeFixed64:2 value:self.steamidLobby];
  }
  if (self.hasClientVersion) {
    [output writeUInt32:3 value:self.clientVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPartyId) {
    size_ += computeUInt64Size(1, self.partyId);
  }
  if (self.hasSteamidLobby) {
    size_ += computeFixed64Size(2, self.steamidLobby);
  }
  if (self.hasClientVersion) {
    size_ += computeUInt32Size(3, self.clientVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgAcceptInvite*) parseFromData:(NSData*) data {
  return (CMsgAcceptInvite*)[[[CMsgAcceptInvite builder] mergeFromData:data] build];
}
+ (CMsgAcceptInvite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAcceptInvite*)[[[CMsgAcceptInvite builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgAcceptInvite*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgAcceptInvite*)[[[CMsgAcceptInvite builder] mergeFromInputStream:input] build];
}
+ (CMsgAcceptInvite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAcceptInvite*)[[[CMsgAcceptInvite builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAcceptInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgAcceptInvite*)[[[CMsgAcceptInvite builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgAcceptInvite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAcceptInvite*)[[[CMsgAcceptInvite builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAcceptInvite_Builder*) builder {
  return [[[CMsgAcceptInvite_Builder alloc] init] autorelease];
}
+ (CMsgAcceptInvite_Builder*) builderWithPrototype:(CMsgAcceptInvite*) prototype {
  return [[CMsgAcceptInvite builder] mergeFrom:prototype];
}
- (CMsgAcceptInvite_Builder*) builder {
  return [CMsgAcceptInvite builder];
}
- (CMsgAcceptInvite_Builder*) toBuilder {
  return [CMsgAcceptInvite builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPartyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"partyId", [NSNumber numberWithLongLong:self.partyId]];
  }
  if (self.hasSteamidLobby) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamidLobby", [NSNumber numberWithLongLong:self.steamidLobby]];
  }
  if (self.hasClientVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientVersion", [NSNumber numberWithInt:self.clientVersion]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgAcceptInvite class]]) {
    return NO;
  }
  CMsgAcceptInvite *otherMessage = other;
  return
      self.hasPartyId == otherMessage.hasPartyId &&
      (!self.hasPartyId || self.partyId == otherMessage.partyId) &&
      self.hasSteamidLobby == otherMessage.hasSteamidLobby &&
      (!self.hasSteamidLobby || self.steamidLobby == otherMessage.steamidLobby) &&
      self.hasClientVersion == otherMessage.hasClientVersion &&
      (!self.hasClientVersion || self.clientVersion == otherMessage.clientVersion) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPartyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.partyId] hash];
  }
  if (self.hasSteamidLobby) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamidLobby] hash];
  }
  if (self.hasClientVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.clientVersion] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgAcceptInvite_Builder()
@property (retain) CMsgAcceptInvite* _builderResult;
@end

@implementation CMsgAcceptInvite_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgAcceptInvite alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgAcceptInvite_Builder*) clear {
  _builderResult = [[[CMsgAcceptInvite alloc] init] autorelease];
  return self;
}
- (CMsgAcceptInvite_Builder*) clone {
  return [CMsgAcceptInvite builderWithPrototype:_builderResult];
}
- (CMsgAcceptInvite*) defaultInstance {
  return [CMsgAcceptInvite defaultInstance];
}
- (CMsgAcceptInvite*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgAcceptInvite*) buildPartial {
  CMsgAcceptInvite* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgAcceptInvite_Builder*) mergeFrom:(CMsgAcceptInvite*) other {
  if (other == [CMsgAcceptInvite defaultInstance]) {
    return self;
  }
  if (other.hasPartyId) {
    [self setPartyId:other.partyId];
  }
  if (other.hasSteamidLobby) {
    [self setSteamidLobby:other.steamidLobby];
  }
  if (other.hasClientVersion) {
    [self setClientVersion:other.clientVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgAcceptInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgAcceptInvite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPartyId:[input readUInt64]];
        break;
      }
      case 17: {
        [self setSteamidLobby:[input readFixed64]];
        break;
      }
      case 24: {
        [self setClientVersion:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPartyId {
  return result.hasPartyId;
}
- (uint64_t) partyId {
  return result.partyId;
}
- (CMsgAcceptInvite_Builder*) setPartyId:(uint64_t) value {
  result.hasPartyId = YES;
  result.partyId = value;
  return self;
}
- (CMsgAcceptInvite_Builder*) clearPartyId {
  result.hasPartyId = NO;
  result.partyId = 0L;
  return self;
}
- (BOOL) hasSteamidLobby {
  return result.hasSteamidLobby;
}
- (uint64_t) steamidLobby {
  return result.steamidLobby;
}
- (CMsgAcceptInvite_Builder*) setSteamidLobby:(uint64_t) value {
  result.hasSteamidLobby = YES;
  result.steamidLobby = value;
  return self;
}
- (CMsgAcceptInvite_Builder*) clearSteamidLobby {
  result.hasSteamidLobby = NO;
  result.steamidLobby = 0L;
  return self;
}
- (BOOL) hasClientVersion {
  return result.hasClientVersion;
}
- (uint32_t) clientVersion {
  return result.clientVersion;
}
- (CMsgAcceptInvite_Builder*) setClientVersion:(uint32_t) value {
  result.hasClientVersion = YES;
  result.clientVersion = value;
  return self;
}
- (CMsgAcceptInvite_Builder*) clearClientVersion {
  result.hasClientVersion = NO;
  result.clientVersion = 1225;
  return self;
}
@end

@interface CMsgAcceptInviteResponse ()
@property int32_t resultCode;
@end

@implementation CMsgAcceptInviteResponse

- (BOOL) hasResultCode {
  return !!hasResultCode_;
}
- (void) setHasResultCode:(BOOL) value_ {
  hasResultCode_ = !!value_;
}
@synthesize resultCode;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.resultCode = 0;
  }
  return self;
}
static CMsgAcceptInviteResponse* defaultCMsgAcceptInviteResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgAcceptInviteResponse class]) {
    defaultCMsgAcceptInviteResponseInstance = [[CMsgAcceptInviteResponse alloc] init];
  }
}
+ (CMsgAcceptInviteResponse*) defaultInstance {
  return defaultCMsgAcceptInviteResponseInstance;
}
- (CMsgAcceptInviteResponse*) defaultInstance {
  return defaultCMsgAcceptInviteResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResultCode) {
    [output writeInt32:1 value:self.resultCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResultCode) {
    size_ += computeInt32Size(1, self.resultCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgAcceptInviteResponse*) parseFromData:(NSData*) data {
  return (CMsgAcceptInviteResponse*)[[[CMsgAcceptInviteResponse builder] mergeFromData:data] build];
}
+ (CMsgAcceptInviteResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAcceptInviteResponse*)[[[CMsgAcceptInviteResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgAcceptInviteResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgAcceptInviteResponse*)[[[CMsgAcceptInviteResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgAcceptInviteResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAcceptInviteResponse*)[[[CMsgAcceptInviteResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAcceptInviteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgAcceptInviteResponse*)[[[CMsgAcceptInviteResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgAcceptInviteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAcceptInviteResponse*)[[[CMsgAcceptInviteResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAcceptInviteResponse_Builder*) builder {
  return [[[CMsgAcceptInviteResponse_Builder alloc] init] autorelease];
}
+ (CMsgAcceptInviteResponse_Builder*) builderWithPrototype:(CMsgAcceptInviteResponse*) prototype {
  return [[CMsgAcceptInviteResponse builder] mergeFrom:prototype];
}
- (CMsgAcceptInviteResponse_Builder*) builder {
  return [CMsgAcceptInviteResponse builder];
}
- (CMsgAcceptInviteResponse_Builder*) toBuilder {
  return [CMsgAcceptInviteResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", [NSNumber numberWithInt:self.resultCode]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgAcceptInviteResponse class]]) {
    return NO;
  }
  CMsgAcceptInviteResponse *otherMessage = other;
  return
      self.hasResultCode == otherMessage.hasResultCode &&
      (!self.hasResultCode || self.resultCode == otherMessage.resultCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasResultCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.resultCode] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgAcceptInviteResponse_Builder()
@property (retain) CMsgAcceptInviteResponse* _builderResult;
@end

@implementation CMsgAcceptInviteResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgAcceptInviteResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgAcceptInviteResponse_Builder*) clear {
  _builderResult = [[[CMsgAcceptInviteResponse alloc] init] autorelease];
  return self;
}
- (CMsgAcceptInviteResponse_Builder*) clone {
  return [CMsgAcceptInviteResponse builderWithPrototype:_builderResult];
}
- (CMsgAcceptInviteResponse*) defaultInstance {
  return [CMsgAcceptInviteResponse defaultInstance];
}
- (CMsgAcceptInviteResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgAcceptInviteResponse*) buildPartial {
  CMsgAcceptInviteResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgAcceptInviteResponse_Builder*) mergeFrom:(CMsgAcceptInviteResponse*) other {
  if (other == [CMsgAcceptInviteResponse defaultInstance]) {
    return self;
  }
  if (other.hasResultCode) {
    [self setResultCode:other.resultCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgAcceptInviteResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgAcceptInviteResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResultCode:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasResultCode {
  return result.hasResultCode;
}
- (int32_t) resultCode {
  return result.resultCode;
}
- (CMsgAcceptInviteResponse_Builder*) setResultCode:(int32_t) value {
  result.hasResultCode = YES;
  result.resultCode = value;
  return self;
}
- (CMsgAcceptInviteResponse_Builder*) clearResultCode {
  result.hasResultCode = NO;
  result.resultCode = 0;
  return self;
}
@end

@interface CMsgReadyUp ()
@property TFLobbyReadyState state;
@end

@implementation CMsgReadyUp

- (BOOL) hasstate {
  return !!hasstate_;
}
- (void) setHasstate:(BOOL) value_ {
  hasstate_ = !!value_;
}
@synthesize state;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.state = TFLobbyReadyStateTFLobbyReadyState_UNDECLARED;
  }
  return self;
}
static CMsgReadyUp* defaultCMsgReadyUpInstance = nil;
+ (void) initialize {
  if (self == [CMsgReadyUp class]) {
    defaultCMsgReadyUpInstance = [[CMsgReadyUp alloc] init];
  }
}
+ (CMsgReadyUp*) defaultInstance {
  return defaultCMsgReadyUpInstance;
}
- (CMsgReadyUp*) defaultInstance {
  return defaultCMsgReadyUpInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasstate) {
    [output writeEnum:1 value:self.state];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasstate) {
    size_ += computeEnumSize(1, self.state);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgReadyUp*) parseFromData:(NSData*) data {
  return (CMsgReadyUp*)[[[CMsgReadyUp builder] mergeFromData:data] build];
}
+ (CMsgReadyUp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgReadyUp*)[[[CMsgReadyUp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgReadyUp*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgReadyUp*)[[[CMsgReadyUp builder] mergeFromInputStream:input] build];
}
+ (CMsgReadyUp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgReadyUp*)[[[CMsgReadyUp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgReadyUp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgReadyUp*)[[[CMsgReadyUp builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgReadyUp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgReadyUp*)[[[CMsgReadyUp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgReadyUp_Builder*) builder {
  return [[[CMsgReadyUp_Builder alloc] init] autorelease];
}
+ (CMsgReadyUp_Builder*) builderWithPrototype:(CMsgReadyUp*) prototype {
  return [[CMsgReadyUp builder] mergeFrom:prototype];
}
- (CMsgReadyUp_Builder*) builder {
  return [CMsgReadyUp builder];
}
- (CMsgReadyUp_Builder*) toBuilder {
  return [CMsgReadyUp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasstate) {
    [output appendFormat:@"%@%@: %d\n", indent, @"state", self.state];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgReadyUp class]]) {
    return NO;
  }
  CMsgReadyUp *otherMessage = other;
  return
      self.hasstate == otherMessage.hasstate &&
      (!self.hasstate || self.state == otherMessage.state) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasstate) {
    hashCode = hashCode * 31 + self.state;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgReadyUp_Builder()
@property (retain) CMsgReadyUp* _builderResult;
@end

@implementation CMsgReadyUp_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgReadyUp alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgReadyUp_Builder*) clear {
  _builderResult = [[[CMsgReadyUp alloc] init] autorelease];
  return self;
}
- (CMsgReadyUp_Builder*) clone {
  return [CMsgReadyUp builderWithPrototype:_builderResult];
}
- (CMsgReadyUp*) defaultInstance {
  return [CMsgReadyUp defaultInstance];
}
- (CMsgReadyUp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgReadyUp*) buildPartial {
  CMsgReadyUp* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgReadyUp_Builder*) mergeFrom:(CMsgReadyUp*) other {
  if (other == [CMsgReadyUp defaultInstance]) {
    return self;
  }
  if (other.hasstate) {
    [self setstate:other.state];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgReadyUp_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgReadyUp_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (TFLobbyReadyStateIsValidValue(value)) {
          [self setstate:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasstate {
  return result.hasstate;
}
- (TFLobbyReadyState) state {
  return result.state;
}
- (CMsgReadyUp_Builder*) setstate:(TFLobbyReadyState) value {
  result.hasstate = YES;
  result.state = value;
  return self;
}
- (CMsgReadyUp_Builder*) clearstate {
  result.hasstate = NO;
  result.state = TFLobbyReadyStateTFLobbyReadyState_UNDECLARED;
  return self;
}
@end

@interface CMsgMatchmakingSearchCountRequest ()
@end

@implementation CMsgMatchmakingSearchCountRequest

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgMatchmakingSearchCountRequest* defaultCMsgMatchmakingSearchCountRequestInstance = nil;
+ (void) initialize {
  if (self == [CMsgMatchmakingSearchCountRequest class]) {
    defaultCMsgMatchmakingSearchCountRequestInstance = [[CMsgMatchmakingSearchCountRequest alloc] init];
  }
}
+ (CMsgMatchmakingSearchCountRequest*) defaultInstance {
  return defaultCMsgMatchmakingSearchCountRequestInstance;
}
- (CMsgMatchmakingSearchCountRequest*) defaultInstance {
  return defaultCMsgMatchmakingSearchCountRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMatchmakingSearchCountRequest*) parseFromData:(NSData*) data {
  return (CMsgMatchmakingSearchCountRequest*)[[[CMsgMatchmakingSearchCountRequest builder] mergeFromData:data] build];
}
+ (CMsgMatchmakingSearchCountRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchmakingSearchCountRequest*)[[[CMsgMatchmakingSearchCountRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchmakingSearchCountRequest*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMatchmakingSearchCountRequest*)[[[CMsgMatchmakingSearchCountRequest builder] mergeFromInputStream:input] build];
}
+ (CMsgMatchmakingSearchCountRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchmakingSearchCountRequest*)[[[CMsgMatchmakingSearchCountRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchmakingSearchCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMatchmakingSearchCountRequest*)[[[CMsgMatchmakingSearchCountRequest builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMatchmakingSearchCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchmakingSearchCountRequest*)[[[CMsgMatchmakingSearchCountRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchmakingSearchCountRequest_Builder*) builder {
  return [[[CMsgMatchmakingSearchCountRequest_Builder alloc] init] autorelease];
}
+ (CMsgMatchmakingSearchCountRequest_Builder*) builderWithPrototype:(CMsgMatchmakingSearchCountRequest*) prototype {
  return [[CMsgMatchmakingSearchCountRequest builder] mergeFrom:prototype];
}
- (CMsgMatchmakingSearchCountRequest_Builder*) builder {
  return [CMsgMatchmakingSearchCountRequest builder];
}
- (CMsgMatchmakingSearchCountRequest_Builder*) toBuilder {
  return [CMsgMatchmakingSearchCountRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMatchmakingSearchCountRequest class]]) {
    return NO;
  }
  CMsgMatchmakingSearchCountRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMatchmakingSearchCountRequest_Builder()
@property (retain) CMsgMatchmakingSearchCountRequest* _builderResult;
@end

@implementation CMsgMatchmakingSearchCountRequest_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMatchmakingSearchCountRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMatchmakingSearchCountRequest_Builder*) clear {
  _builderResult = [[[CMsgMatchmakingSearchCountRequest alloc] init] autorelease];
  return self;
}
- (CMsgMatchmakingSearchCountRequest_Builder*) clone {
  return [CMsgMatchmakingSearchCountRequest builderWithPrototype:_builderResult];
}
- (CMsgMatchmakingSearchCountRequest*) defaultInstance {
  return [CMsgMatchmakingSearchCountRequest defaultInstance];
}
- (CMsgMatchmakingSearchCountRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMatchmakingSearchCountRequest*) buildPartial {
  CMsgMatchmakingSearchCountRequest* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMatchmakingSearchCountRequest_Builder*) mergeFrom:(CMsgMatchmakingSearchCountRequest*) other {
  if (other == [CMsgMatchmakingSearchCountRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMatchmakingSearchCountRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMatchmakingSearchCountRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgMatchmakingSearchCountResponse ()
@property (retain) PBAppendableArray * searchingPlayersByGroupArray;
@end

@implementation CMsgMatchmakingSearchCountResponse

@synthesize searchingPlayersByGroupArray;
@dynamic searchingPlayersByGroup;
- (void) dealloc {
  self.searchingPlayersByGroupArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgMatchmakingSearchCountResponse* defaultCMsgMatchmakingSearchCountResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgMatchmakingSearchCountResponse class]) {
    defaultCMsgMatchmakingSearchCountResponseInstance = [[CMsgMatchmakingSearchCountResponse alloc] init];
  }
}
+ (CMsgMatchmakingSearchCountResponse*) defaultInstance {
  return defaultCMsgMatchmakingSearchCountResponseInstance;
}
- (CMsgMatchmakingSearchCountResponse*) defaultInstance {
  return defaultCMsgMatchmakingSearchCountResponseInstance;
}
- (PBArray *)searchingPlayersByGroup {
  return searchingPlayersByGroupArray;
}
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index {
  return [searchingPlayersByGroupArray uint32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger searchingPlayersByGroupArrayCount = self.searchingPlayersByGroupArray.count;
  if (searchingPlayersByGroupArrayCount > 0) {
    const uint32_t *values = (const uint32_t *)self.searchingPlayersByGroupArray.data;
    for (NSUInteger i = 0; i < searchingPlayersByGroupArrayCount; ++i) {
      [output writeUInt32:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.searchingPlayersByGroupArray.count;
    const uint32_t *values = (const uint32_t *)self.searchingPlayersByGroupArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMatchmakingSearchCountResponse*) parseFromData:(NSData*) data {
  return (CMsgMatchmakingSearchCountResponse*)[[[CMsgMatchmakingSearchCountResponse builder] mergeFromData:data] build];
}
+ (CMsgMatchmakingSearchCountResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchmakingSearchCountResponse*)[[[CMsgMatchmakingSearchCountResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchmakingSearchCountResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMatchmakingSearchCountResponse*)[[[CMsgMatchmakingSearchCountResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgMatchmakingSearchCountResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchmakingSearchCountResponse*)[[[CMsgMatchmakingSearchCountResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchmakingSearchCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMatchmakingSearchCountResponse*)[[[CMsgMatchmakingSearchCountResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMatchmakingSearchCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchmakingSearchCountResponse*)[[[CMsgMatchmakingSearchCountResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchmakingSearchCountResponse_Builder*) builder {
  return [[[CMsgMatchmakingSearchCountResponse_Builder alloc] init] autorelease];
}
+ (CMsgMatchmakingSearchCountResponse_Builder*) builderWithPrototype:(CMsgMatchmakingSearchCountResponse*) prototype {
  return [[CMsgMatchmakingSearchCountResponse builder] mergeFrom:prototype];
}
- (CMsgMatchmakingSearchCountResponse_Builder*) builder {
  return [CMsgMatchmakingSearchCountResponse builder];
}
- (CMsgMatchmakingSearchCountResponse_Builder*) toBuilder {
  return [CMsgMatchmakingSearchCountResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (NSNumber* value in self.searchingPlayersByGroupArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"searchingPlayersByGroup", value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMatchmakingSearchCountResponse class]]) {
    return NO;
  }
  CMsgMatchmakingSearchCountResponse *otherMessage = other;
  return
      [self.searchingPlayersByGroupArray isEqualToArray:otherMessage.searchingPlayersByGroupArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (NSNumber* value in self.searchingPlayersByGroupArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMatchmakingSearchCountResponse_Builder()
@property (retain) CMsgMatchmakingSearchCountResponse* _builderResult;
@end

@implementation CMsgMatchmakingSearchCountResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMatchmakingSearchCountResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMatchmakingSearchCountResponse_Builder*) clear {
  _builderResult = [[[CMsgMatchmakingSearchCountResponse alloc] init] autorelease];
  return self;
}
- (CMsgMatchmakingSearchCountResponse_Builder*) clone {
  return [CMsgMatchmakingSearchCountResponse builderWithPrototype:_builderResult];
}
- (CMsgMatchmakingSearchCountResponse*) defaultInstance {
  return [CMsgMatchmakingSearchCountResponse defaultInstance];
}
- (CMsgMatchmakingSearchCountResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMatchmakingSearchCountResponse*) buildPartial {
  CMsgMatchmakingSearchCountResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMatchmakingSearchCountResponse_Builder*) mergeFrom:(CMsgMatchmakingSearchCountResponse*) other {
  if (other == [CMsgMatchmakingSearchCountResponse defaultInstance]) {
    return self;
  }
  if (other.searchingPlayersByGroupArray.count > 0) {
    if (result.searchingPlayersByGroupArray == nil) {
      result.searchingPlayersByGroupArray = [[other.searchingPlayersByGroupArray copyWithZone:[other.searchingPlayersByGroupArray zone]] autorelease];
    } else {
      [result.searchingPlayersByGroupArray appendArray:other.searchingPlayersByGroupArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMatchmakingSearchCountResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMatchmakingSearchCountResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addSearchingPlayersByGroup:[input readUInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)searchingPlayersByGroup {
  return result.searchingPlayersByGroupArray;
}
- (uint32_t)searchingPlayersByGroupAtIndex:(NSUInteger)index {
  return [result searchingPlayersByGroupAtIndex:index];
}
- (CMsgMatchmakingSearchCountResponse_Builder *)addSearchingPlayersByGroup:(uint32_t)value {
  if (result.searchingPlayersByGroupArray == nil) {
    result.searchingPlayersByGroupArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [result.searchingPlayersByGroupArray addUint32:value];
  return self;
}
- (CMsgMatchmakingSearchCountResponse_Builder *)setSearchingPlayersByGroupArray:(NSArray *)array {
  result.searchingPlayersByGroupArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CMsgMatchmakingSearchCountResponse_Builder *)setSearchingPlayersByGroupValues:(const uint32_t *)values count:(NSUInteger)count {
  result.searchingPlayersByGroupArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (CMsgMatchmakingSearchCountResponse_Builder *)clearSearchingPlayersByGroup {
  result.searchingPlayersByGroupArray = nil;
  return self;
}
@end

@interface CMsgKickedFromMatchmakingQueue ()
@end

@implementation CMsgKickedFromMatchmakingQueue

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgKickedFromMatchmakingQueue* defaultCMsgKickedFromMatchmakingQueueInstance = nil;
+ (void) initialize {
  if (self == [CMsgKickedFromMatchmakingQueue class]) {
    defaultCMsgKickedFromMatchmakingQueueInstance = [[CMsgKickedFromMatchmakingQueue alloc] init];
  }
}
+ (CMsgKickedFromMatchmakingQueue*) defaultInstance {
  return defaultCMsgKickedFromMatchmakingQueueInstance;
}
- (CMsgKickedFromMatchmakingQueue*) defaultInstance {
  return defaultCMsgKickedFromMatchmakingQueueInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgKickedFromMatchmakingQueue*) parseFromData:(NSData*) data {
  return (CMsgKickedFromMatchmakingQueue*)[[[CMsgKickedFromMatchmakingQueue builder] mergeFromData:data] build];
}
+ (CMsgKickedFromMatchmakingQueue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgKickedFromMatchmakingQueue*)[[[CMsgKickedFromMatchmakingQueue builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgKickedFromMatchmakingQueue*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgKickedFromMatchmakingQueue*)[[[CMsgKickedFromMatchmakingQueue builder] mergeFromInputStream:input] build];
}
+ (CMsgKickedFromMatchmakingQueue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgKickedFromMatchmakingQueue*)[[[CMsgKickedFromMatchmakingQueue builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgKickedFromMatchmakingQueue*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgKickedFromMatchmakingQueue*)[[[CMsgKickedFromMatchmakingQueue builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgKickedFromMatchmakingQueue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgKickedFromMatchmakingQueue*)[[[CMsgKickedFromMatchmakingQueue builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgKickedFromMatchmakingQueue_Builder*) builder {
  return [[[CMsgKickedFromMatchmakingQueue_Builder alloc] init] autorelease];
}
+ (CMsgKickedFromMatchmakingQueue_Builder*) builderWithPrototype:(CMsgKickedFromMatchmakingQueue*) prototype {
  return [[CMsgKickedFromMatchmakingQueue builder] mergeFrom:prototype];
}
- (CMsgKickedFromMatchmakingQueue_Builder*) builder {
  return [CMsgKickedFromMatchmakingQueue builder];
}
- (CMsgKickedFromMatchmakingQueue_Builder*) toBuilder {
  return [CMsgKickedFromMatchmakingQueue builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgKickedFromMatchmakingQueue class]]) {
    return NO;
  }
  CMsgKickedFromMatchmakingQueue *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgKickedFromMatchmakingQueue_Builder()
@property (retain) CMsgKickedFromMatchmakingQueue* _builderResult;
@end

@implementation CMsgKickedFromMatchmakingQueue_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgKickedFromMatchmakingQueue alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgKickedFromMatchmakingQueue_Builder*) clear {
  _builderResult = [[[CMsgKickedFromMatchmakingQueue alloc] init] autorelease];
  return self;
}
- (CMsgKickedFromMatchmakingQueue_Builder*) clone {
  return [CMsgKickedFromMatchmakingQueue builderWithPrototype:_builderResult];
}
- (CMsgKickedFromMatchmakingQueue*) defaultInstance {
  return [CMsgKickedFromMatchmakingQueue defaultInstance];
}
- (CMsgKickedFromMatchmakingQueue*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgKickedFromMatchmakingQueue*) buildPartial {
  CMsgKickedFromMatchmakingQueue* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgKickedFromMatchmakingQueue_Builder*) mergeFrom:(CMsgKickedFromMatchmakingQueue*) other {
  if (other == [CMsgKickedFromMatchmakingQueue defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgKickedFromMatchmakingQueue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgKickedFromMatchmakingQueue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgTFPlayerFailedToConnect ()
@property (retain) PBAppendableArray * failedLoadersArray;
@end

@implementation CMsgTFPlayerFailedToConnect

@synthesize failedLoadersArray;
@dynamic failedLoaders;
- (void) dealloc {
  self.failedLoadersArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFPlayerFailedToConnect* defaultCMsgTFPlayerFailedToConnectInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFPlayerFailedToConnect class]) {
    defaultCMsgTFPlayerFailedToConnectInstance = [[CMsgTFPlayerFailedToConnect alloc] init];
  }
}
+ (CMsgTFPlayerFailedToConnect*) defaultInstance {
  return defaultCMsgTFPlayerFailedToConnectInstance;
}
- (CMsgTFPlayerFailedToConnect*) defaultInstance {
  return defaultCMsgTFPlayerFailedToConnectInstance;
}
- (PBArray *)failedLoaders {
  return failedLoadersArray;
}
- (uint64_t)failedLoadersAtIndex:(NSUInteger)index {
  return [failedLoadersArray uint64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger failedLoadersArrayCount = self.failedLoadersArray.count;
  if (failedLoadersArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.failedLoadersArray.data;
    for (NSUInteger i = 0; i < failedLoadersArrayCount; ++i) {
      [output writeFixed64:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.failedLoadersArray.count;
    dataSize = 8 * count;
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFPlayerFailedToConnect*) parseFromData:(NSData*) data {
  return (CMsgTFPlayerFailedToConnect*)[[[CMsgTFPlayerFailedToConnect builder] mergeFromData:data] build];
}
+ (CMsgTFPlayerFailedToConnect*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFPlayerFailedToConnect*)[[[CMsgTFPlayerFailedToConnect builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFPlayerFailedToConnect*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFPlayerFailedToConnect*)[[[CMsgTFPlayerFailedToConnect builder] mergeFromInputStream:input] build];
}
+ (CMsgTFPlayerFailedToConnect*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFPlayerFailedToConnect*)[[[CMsgTFPlayerFailedToConnect builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFPlayerFailedToConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFPlayerFailedToConnect*)[[[CMsgTFPlayerFailedToConnect builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFPlayerFailedToConnect*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFPlayerFailedToConnect*)[[[CMsgTFPlayerFailedToConnect builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFPlayerFailedToConnect_Builder*) builder {
  return [[[CMsgTFPlayerFailedToConnect_Builder alloc] init] autorelease];
}
+ (CMsgTFPlayerFailedToConnect_Builder*) builderWithPrototype:(CMsgTFPlayerFailedToConnect*) prototype {
  return [[CMsgTFPlayerFailedToConnect builder] mergeFrom:prototype];
}
- (CMsgTFPlayerFailedToConnect_Builder*) builder {
  return [CMsgTFPlayerFailedToConnect builder];
}
- (CMsgTFPlayerFailedToConnect_Builder*) toBuilder {
  return [CMsgTFPlayerFailedToConnect builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (NSNumber* value in self.failedLoadersArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"failedLoaders", value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFPlayerFailedToConnect class]]) {
    return NO;
  }
  CMsgTFPlayerFailedToConnect *otherMessage = other;
  return
      [self.failedLoadersArray isEqualToArray:otherMessage.failedLoadersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (NSNumber* value in self.failedLoadersArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFPlayerFailedToConnect_Builder()
@property (retain) CMsgTFPlayerFailedToConnect* _builderResult;
@end

@implementation CMsgTFPlayerFailedToConnect_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFPlayerFailedToConnect alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFPlayerFailedToConnect_Builder*) clear {
  _builderResult = [[[CMsgTFPlayerFailedToConnect alloc] init] autorelease];
  return self;
}
- (CMsgTFPlayerFailedToConnect_Builder*) clone {
  return [CMsgTFPlayerFailedToConnect builderWithPrototype:_builderResult];
}
- (CMsgTFPlayerFailedToConnect*) defaultInstance {
  return [CMsgTFPlayerFailedToConnect defaultInstance];
}
- (CMsgTFPlayerFailedToConnect*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFPlayerFailedToConnect*) buildPartial {
  CMsgTFPlayerFailedToConnect* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFPlayerFailedToConnect_Builder*) mergeFrom:(CMsgTFPlayerFailedToConnect*) other {
  if (other == [CMsgTFPlayerFailedToConnect defaultInstance]) {
    return self;
  }
  if (other.failedLoadersArray.count > 0) {
    if (result.failedLoadersArray == nil) {
      result.failedLoadersArray = [[other.failedLoadersArray copyWithZone:[other.failedLoadersArray zone]] autorelease];
    } else {
      [result.failedLoadersArray appendArray:other.failedLoadersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFPlayerFailedToConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFPlayerFailedToConnect_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self addFailedLoaders:[input readFixed64]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)failedLoaders {
  return result.failedLoadersArray;
}
- (uint64_t)failedLoadersAtIndex:(NSUInteger)index {
  return [result failedLoadersAtIndex:index];
}
- (CMsgTFPlayerFailedToConnect_Builder *)addFailedLoaders:(uint64_t)value {
  if (result.failedLoadersArray == nil) {
    result.failedLoadersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [result.failedLoadersArray addUint64:value];
  return self;
}
- (CMsgTFPlayerFailedToConnect_Builder *)setFailedLoadersArray:(NSArray *)array {
  result.failedLoadersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CMsgTFPlayerFailedToConnect_Builder *)setFailedLoadersValues:(const uint64_t *)values count:(NSUInteger)count {
  result.failedLoadersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CMsgTFPlayerFailedToConnect_Builder *)clearFailedLoaders {
  result.failedLoadersArray = nil;
  return self;
}
@end

@interface CMsgTFJoinChatChannel ()
@property (retain) NSString* personaName;
@property (retain) NSString* channelName;
@property (retain) NSString* password;
@property ChatChannelType_t channel_type;
@end

@implementation CMsgTFJoinChatChannel

- (BOOL) hasPersonaName {
  return !!hasPersonaName_;
}
- (void) setHasPersonaName:(BOOL) value_ {
  hasPersonaName_ = !!value_;
}
@synthesize personaName;
- (BOOL) hasChannelName {
  return !!hasChannelName_;
}
- (void) setHasChannelName:(BOOL) value_ {
  hasChannelName_ = !!value_;
}
@synthesize channelName;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) value_ {
  hasPassword_ = !!value_;
}
@synthesize password;
- (BOOL) haschannel_type {
  return !!haschannel_type_;
}
- (void) setHaschannel_type:(BOOL) value_ {
  haschannel_type_ = !!value_;
}
@synthesize channel_type;
- (void) dealloc {
  self.personaName = nil;
  self.channelName = nil;
  self.password = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.personaName = @"";
    self.channelName = @"";
    self.password = @"";
    self.channel_type = ChatChannelType_tChatChannelType_Regional;
  }
  return self;
}
static CMsgTFJoinChatChannel* defaultCMsgTFJoinChatChannelInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFJoinChatChannel class]) {
    defaultCMsgTFJoinChatChannelInstance = [[CMsgTFJoinChatChannel alloc] init];
  }
}
+ (CMsgTFJoinChatChannel*) defaultInstance {
  return defaultCMsgTFJoinChatChannelInstance;
}
- (CMsgTFJoinChatChannel*) defaultInstance {
  return defaultCMsgTFJoinChatChannelInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPersonaName) {
    [output writeString:1 value:self.personaName];
  }
  if (self.hasChannelName) {
    [output writeString:2 value:self.channelName];
  }
  if (self.hasPassword) {
    [output writeString:3 value:self.password];
  }
  if (self.haschannel_type) {
    [output writeEnum:4 value:self.channel_type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPersonaName) {
    size_ += computeStringSize(1, self.personaName);
  }
  if (self.hasChannelName) {
    size_ += computeStringSize(2, self.channelName);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(3, self.password);
  }
  if (self.haschannel_type) {
    size_ += computeEnumSize(4, self.channel_type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFJoinChatChannel*) parseFromData:(NSData*) data {
  return (CMsgTFJoinChatChannel*)[[[CMsgTFJoinChatChannel builder] mergeFromData:data] build];
}
+ (CMsgTFJoinChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFJoinChatChannel*)[[[CMsgTFJoinChatChannel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFJoinChatChannel*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFJoinChatChannel*)[[[CMsgTFJoinChatChannel builder] mergeFromInputStream:input] build];
}
+ (CMsgTFJoinChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFJoinChatChannel*)[[[CMsgTFJoinChatChannel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFJoinChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFJoinChatChannel*)[[[CMsgTFJoinChatChannel builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFJoinChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFJoinChatChannel*)[[[CMsgTFJoinChatChannel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFJoinChatChannel_Builder*) builder {
  return [[[CMsgTFJoinChatChannel_Builder alloc] init] autorelease];
}
+ (CMsgTFJoinChatChannel_Builder*) builderWithPrototype:(CMsgTFJoinChatChannel*) prototype {
  return [[CMsgTFJoinChatChannel builder] mergeFrom:prototype];
}
- (CMsgTFJoinChatChannel_Builder*) builder {
  return [CMsgTFJoinChatChannel builder];
}
- (CMsgTFJoinChatChannel_Builder*) toBuilder {
  return [CMsgTFJoinChatChannel builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPersonaName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"personaName", self.personaName];
  }
  if (self.hasChannelName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelName", self.channelName];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  if (self.haschannel_type) {
    [output appendFormat:@"%@%@: %d\n", indent, @"channel_type", self.channel_type];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFJoinChatChannel class]]) {
    return NO;
  }
  CMsgTFJoinChatChannel *otherMessage = other;
  return
      self.hasPersonaName == otherMessage.hasPersonaName &&
      (!self.hasPersonaName || [self.personaName isEqual:otherMessage.personaName]) &&
      self.hasChannelName == otherMessage.hasChannelName &&
      (!self.hasChannelName || [self.channelName isEqual:otherMessage.channelName]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      self.haschannel_type == otherMessage.haschannel_type &&
      (!self.haschannel_type || self.channel_type == otherMessage.channel_type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPersonaName) {
    hashCode = hashCode * 31 + [self.personaName hash];
  }
  if (self.hasChannelName) {
    hashCode = hashCode * 31 + [self.channelName hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  if (self.haschannel_type) {
    hashCode = hashCode * 31 + self.channel_type;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFJoinChatChannel_Builder()
@property (retain) CMsgTFJoinChatChannel* _builderResult;
@end

@implementation CMsgTFJoinChatChannel_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFJoinChatChannel alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFJoinChatChannel_Builder*) clear {
  _builderResult = [[[CMsgTFJoinChatChannel alloc] init] autorelease];
  return self;
}
- (CMsgTFJoinChatChannel_Builder*) clone {
  return [CMsgTFJoinChatChannel builderWithPrototype:_builderResult];
}
- (CMsgTFJoinChatChannel*) defaultInstance {
  return [CMsgTFJoinChatChannel defaultInstance];
}
- (CMsgTFJoinChatChannel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFJoinChatChannel*) buildPartial {
  CMsgTFJoinChatChannel* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFJoinChatChannel_Builder*) mergeFrom:(CMsgTFJoinChatChannel*) other {
  if (other == [CMsgTFJoinChatChannel defaultInstance]) {
    return self;
  }
  if (other.hasPersonaName) {
    [self setPersonaName:other.personaName];
  }
  if (other.hasChannelName) {
    [self setChannelName:other.channelName];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.haschannel_type) {
    [self setchannel_type:other.channel_type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFJoinChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFJoinChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPersonaName:[input readString]];
        break;
      }
      case 18: {
        [self setChannelName:[input readString]];
        break;
      }
      case 26: {
        [self setPassword:[input readString]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (ChatChannelType_tIsValidValue(value)) {
          [self setchannel_type:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasPersonaName {
  return result.hasPersonaName;
}
- (NSString*) personaName {
  return result.personaName;
}
- (CMsgTFJoinChatChannel_Builder*) setPersonaName:(NSString*) value {
  result.hasPersonaName = YES;
  result.personaName = value;
  return self;
}
- (CMsgTFJoinChatChannel_Builder*) clearPersonaName {
  result.hasPersonaName = NO;
  result.personaName = @"";
  return self;
}
- (BOOL) hasChannelName {
  return result.hasChannelName;
}
- (NSString*) channelName {
  return result.channelName;
}
- (CMsgTFJoinChatChannel_Builder*) setChannelName:(NSString*) value {
  result.hasChannelName = YES;
  result.channelName = value;
  return self;
}
- (CMsgTFJoinChatChannel_Builder*) clearChannelName {
  result.hasChannelName = NO;
  result.channelName = @"";
  return self;
}
- (BOOL) hasPassword {
  return result.hasPassword;
}
- (NSString*) password {
  return result.password;
}
- (CMsgTFJoinChatChannel_Builder*) setPassword:(NSString*) value {
  result.hasPassword = YES;
  result.password = value;
  return self;
}
- (CMsgTFJoinChatChannel_Builder*) clearPassword {
  result.hasPassword = NO;
  result.password = @"";
  return self;
}
- (BOOL) haschannel_type {
  return result.haschannel_type;
}
- (ChatChannelType_t) channel_type {
  return result.channel_type;
}
- (CMsgTFJoinChatChannel_Builder*) setchannel_type:(ChatChannelType_t) value {
  result.haschannel_type = YES;
  result.channel_type = value;
  return self;
}
- (CMsgTFJoinChatChannel_Builder*) clearchannel_type {
  result.haschannel_type = NO;
  result.channel_type = ChatChannelType_tChatChannelType_Regional;
  return self;
}
@end

@interface CMsgTFLeaveChatChannel ()
@property (retain) NSString* channelName;
@end

@implementation CMsgTFLeaveChatChannel

- (BOOL) hasChannelName {
  return !!hasChannelName_;
}
- (void) setHasChannelName:(BOOL) value_ {
  hasChannelName_ = !!value_;
}
@synthesize channelName;
- (void) dealloc {
  self.channelName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.channelName = @"";
  }
  return self;
}
static CMsgTFLeaveChatChannel* defaultCMsgTFLeaveChatChannelInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFLeaveChatChannel class]) {
    defaultCMsgTFLeaveChatChannelInstance = [[CMsgTFLeaveChatChannel alloc] init];
  }
}
+ (CMsgTFLeaveChatChannel*) defaultInstance {
  return defaultCMsgTFLeaveChatChannelInstance;
}
- (CMsgTFLeaveChatChannel*) defaultInstance {
  return defaultCMsgTFLeaveChatChannelInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChannelName) {
    [output writeString:1 value:self.channelName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChannelName) {
    size_ += computeStringSize(1, self.channelName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFLeaveChatChannel*) parseFromData:(NSData*) data {
  return (CMsgTFLeaveChatChannel*)[[[CMsgTFLeaveChatChannel builder] mergeFromData:data] build];
}
+ (CMsgTFLeaveChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFLeaveChatChannel*)[[[CMsgTFLeaveChatChannel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFLeaveChatChannel*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFLeaveChatChannel*)[[[CMsgTFLeaveChatChannel builder] mergeFromInputStream:input] build];
}
+ (CMsgTFLeaveChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFLeaveChatChannel*)[[[CMsgTFLeaveChatChannel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFLeaveChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFLeaveChatChannel*)[[[CMsgTFLeaveChatChannel builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFLeaveChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFLeaveChatChannel*)[[[CMsgTFLeaveChatChannel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFLeaveChatChannel_Builder*) builder {
  return [[[CMsgTFLeaveChatChannel_Builder alloc] init] autorelease];
}
+ (CMsgTFLeaveChatChannel_Builder*) builderWithPrototype:(CMsgTFLeaveChatChannel*) prototype {
  return [[CMsgTFLeaveChatChannel builder] mergeFrom:prototype];
}
- (CMsgTFLeaveChatChannel_Builder*) builder {
  return [CMsgTFLeaveChatChannel builder];
}
- (CMsgTFLeaveChatChannel_Builder*) toBuilder {
  return [CMsgTFLeaveChatChannel builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChannelName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelName", self.channelName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFLeaveChatChannel class]]) {
    return NO;
  }
  CMsgTFLeaveChatChannel *otherMessage = other;
  return
      self.hasChannelName == otherMessage.hasChannelName &&
      (!self.hasChannelName || [self.channelName isEqual:otherMessage.channelName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasChannelName) {
    hashCode = hashCode * 31 + [self.channelName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFLeaveChatChannel_Builder()
@property (retain) CMsgTFLeaveChatChannel* _builderResult;
@end

@implementation CMsgTFLeaveChatChannel_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFLeaveChatChannel alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFLeaveChatChannel_Builder*) clear {
  _builderResult = [[[CMsgTFLeaveChatChannel alloc] init] autorelease];
  return self;
}
- (CMsgTFLeaveChatChannel_Builder*) clone {
  return [CMsgTFLeaveChatChannel builderWithPrototype:_builderResult];
}
- (CMsgTFLeaveChatChannel*) defaultInstance {
  return [CMsgTFLeaveChatChannel defaultInstance];
}
- (CMsgTFLeaveChatChannel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFLeaveChatChannel*) buildPartial {
  CMsgTFLeaveChatChannel* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFLeaveChatChannel_Builder*) mergeFrom:(CMsgTFLeaveChatChannel*) other {
  if (other == [CMsgTFLeaveChatChannel defaultInstance]) {
    return self;
  }
  if (other.hasChannelName) {
    [self setChannelName:other.channelName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFLeaveChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFLeaveChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setChannelName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasChannelName {
  return result.hasChannelName;
}
- (NSString*) channelName {
  return result.channelName;
}
- (CMsgTFLeaveChatChannel_Builder*) setChannelName:(NSString*) value {
  result.hasChannelName = YES;
  result.channelName = value;
  return self;
}
- (CMsgTFLeaveChatChannel_Builder*) clearChannelName {
  result.hasChannelName = NO;
  result.channelName = @"";
  return self;
}
@end

@interface CMsgTFJoinChatChannelResponse ()
@property uint32_t response;
@property (retain) NSString* channelName;
@property uint64_t channelId;
@property uint32_t maxMembers;
@property (retain) PBAppendableArray * membersArray;
@end

@implementation CMsgTFJoinChatChannelResponse

- (BOOL) hasResponse {
  return !!hasResponse_;
}
- (void) setHasResponse:(BOOL) value_ {
  hasResponse_ = !!value_;
}
@synthesize response;
- (BOOL) hasChannelName {
  return !!hasChannelName_;
}
- (void) setHasChannelName:(BOOL) value_ {
  hasChannelName_ = !!value_;
}
@synthesize channelName;
- (BOOL) hasChannelId {
  return !!hasChannelId_;
}
- (void) setHasChannelId:(BOOL) value_ {
  hasChannelId_ = !!value_;
}
@synthesize channelId;
- (BOOL) hasMaxMembers {
  return !!hasMaxMembers_;
}
- (void) setHasMaxMembers:(BOOL) value_ {
  hasMaxMembers_ = !!value_;
}
@synthesize maxMembers;
@synthesize membersArray;
@dynamic members;
- (void) dealloc {
  self.channelName = nil;
  self.membersArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.response = 0;
    self.channelName = @"";
    self.channelId = 0L;
    self.maxMembers = 0;
  }
  return self;
}
static CMsgTFJoinChatChannelResponse* defaultCMsgTFJoinChatChannelResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFJoinChatChannelResponse class]) {
    defaultCMsgTFJoinChatChannelResponseInstance = [[CMsgTFJoinChatChannelResponse alloc] init];
  }
}
+ (CMsgTFJoinChatChannelResponse*) defaultInstance {
  return defaultCMsgTFJoinChatChannelResponseInstance;
}
- (CMsgTFJoinChatChannelResponse*) defaultInstance {
  return defaultCMsgTFJoinChatChannelResponseInstance;
}
- (PBArray *)members {
  return membersArray;
}
- (CMsgTFJoinChatChannelResponse_ChatMember*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResponse) {
    [output writeUInt32:1 value:self.response];
  }
  if (self.hasChannelName) {
    [output writeString:2 value:self.channelName];
  }
  if (self.hasChannelId) {
    [output writeFixed64:3 value:self.channelId];
  }
  if (self.hasMaxMembers) {
    [output writeUInt32:4 value:self.maxMembers];
  }
  for (CMsgTFJoinChatChannelResponse_ChatMember *element in self.membersArray) {
    [output writeMessage:5 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResponse) {
    size_ += computeUInt32Size(1, self.response);
  }
  if (self.hasChannelName) {
    size_ += computeStringSize(2, self.channelName);
  }
  if (self.hasChannelId) {
    size_ += computeFixed64Size(3, self.channelId);
  }
  if (self.hasMaxMembers) {
    size_ += computeUInt32Size(4, self.maxMembers);
  }
  for (CMsgTFJoinChatChannelResponse_ChatMember *element in self.membersArray) {
    size_ += computeMessageSize(5, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFJoinChatChannelResponse*) parseFromData:(NSData*) data {
  return (CMsgTFJoinChatChannelResponse*)[[[CMsgTFJoinChatChannelResponse builder] mergeFromData:data] build];
}
+ (CMsgTFJoinChatChannelResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFJoinChatChannelResponse*)[[[CMsgTFJoinChatChannelResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFJoinChatChannelResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFJoinChatChannelResponse*)[[[CMsgTFJoinChatChannelResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgTFJoinChatChannelResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFJoinChatChannelResponse*)[[[CMsgTFJoinChatChannelResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFJoinChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFJoinChatChannelResponse*)[[[CMsgTFJoinChatChannelResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFJoinChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFJoinChatChannelResponse*)[[[CMsgTFJoinChatChannelResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFJoinChatChannelResponse_Builder*) builder {
  return [[[CMsgTFJoinChatChannelResponse_Builder alloc] init] autorelease];
}
+ (CMsgTFJoinChatChannelResponse_Builder*) builderWithPrototype:(CMsgTFJoinChatChannelResponse*) prototype {
  return [[CMsgTFJoinChatChannelResponse builder] mergeFrom:prototype];
}
- (CMsgTFJoinChatChannelResponse_Builder*) builder {
  return [CMsgTFJoinChatChannelResponse builder];
}
- (CMsgTFJoinChatChannelResponse_Builder*) toBuilder {
  return [CMsgTFJoinChatChannelResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResponse) {
    [output appendFormat:@"%@%@: %@\n", indent, @"response", [NSNumber numberWithInt:self.response]];
  }
  if (self.hasChannelName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelName", self.channelName];
  }
  if (self.hasChannelId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelId", [NSNumber numberWithLongLong:self.channelId]];
  }
  if (self.hasMaxMembers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxMembers", [NSNumber numberWithInt:self.maxMembers]];
  }
  for (CMsgTFJoinChatChannelResponse_ChatMember* element in self.membersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFJoinChatChannelResponse class]]) {
    return NO;
  }
  CMsgTFJoinChatChannelResponse *otherMessage = other;
  return
      self.hasResponse == otherMessage.hasResponse &&
      (!self.hasResponse || self.response == otherMessage.response) &&
      self.hasChannelName == otherMessage.hasChannelName &&
      (!self.hasChannelName || [self.channelName isEqual:otherMessage.channelName]) &&
      self.hasChannelId == otherMessage.hasChannelId &&
      (!self.hasChannelId || self.channelId == otherMessage.channelId) &&
      self.hasMaxMembers == otherMessage.hasMaxMembers &&
      (!self.hasMaxMembers || self.maxMembers == otherMessage.maxMembers) &&
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasResponse) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.response] hash];
  }
  if (self.hasChannelName) {
    hashCode = hashCode * 31 + [self.channelName hash];
  }
  if (self.hasChannelId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.channelId] hash];
  }
  if (self.hasMaxMembers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.maxMembers] hash];
  }
  for (CMsgTFJoinChatChannelResponse_ChatMember* element in self.membersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFJoinChatChannelResponse_ChatMember ()
@property uint64_t steamId;
@property (retain) NSString* personaName;
@end

@implementation CMsgTFJoinChatChannelResponse_ChatMember

- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (BOOL) hasPersonaName {
  return !!hasPersonaName_;
}
- (void) setHasPersonaName:(BOOL) value_ {
  hasPersonaName_ = !!value_;
}
@synthesize personaName;
- (void) dealloc {
  self.personaName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.steamId = 0L;
    self.personaName = @"";
  }
  return self;
}
static CMsgTFJoinChatChannelResponse_ChatMember* defaultCMsgTFJoinChatChannelResponse_ChatMemberInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFJoinChatChannelResponse_ChatMember class]) {
    defaultCMsgTFJoinChatChannelResponse_ChatMemberInstance = [[CMsgTFJoinChatChannelResponse_ChatMember alloc] init];
  }
}
+ (CMsgTFJoinChatChannelResponse_ChatMember*) defaultInstance {
  return defaultCMsgTFJoinChatChannelResponse_ChatMemberInstance;
}
- (CMsgTFJoinChatChannelResponse_ChatMember*) defaultInstance {
  return defaultCMsgTFJoinChatChannelResponse_ChatMemberInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSteamId) {
    [output writeFixed64:1 value:self.steamId];
  }
  if (self.hasPersonaName) {
    [output writeString:2 value:self.personaName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSteamId) {
    size_ += computeFixed64Size(1, self.steamId);
  }
  if (self.hasPersonaName) {
    size_ += computeStringSize(2, self.personaName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromData:(NSData*) data {
  return (CMsgTFJoinChatChannelResponse_ChatMember*)[[[CMsgTFJoinChatChannelResponse_ChatMember builder] mergeFromData:data] build];
}
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFJoinChatChannelResponse_ChatMember*)[[[CMsgTFJoinChatChannelResponse_ChatMember builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFJoinChatChannelResponse_ChatMember*)[[[CMsgTFJoinChatChannelResponse_ChatMember builder] mergeFromInputStream:input] build];
}
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFJoinChatChannelResponse_ChatMember*)[[[CMsgTFJoinChatChannelResponse_ChatMember builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFJoinChatChannelResponse_ChatMember*)[[[CMsgTFJoinChatChannelResponse_ChatMember builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFJoinChatChannelResponse_ChatMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFJoinChatChannelResponse_ChatMember*)[[[CMsgTFJoinChatChannelResponse_ChatMember builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) builder {
  return [[[CMsgTFJoinChatChannelResponse_ChatMember_Builder alloc] init] autorelease];
}
+ (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) builderWithPrototype:(CMsgTFJoinChatChannelResponse_ChatMember*) prototype {
  return [[CMsgTFJoinChatChannelResponse_ChatMember builder] mergeFrom:prototype];
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) builder {
  return [CMsgTFJoinChatChannelResponse_ChatMember builder];
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) toBuilder {
  return [CMsgTFJoinChatChannelResponse_ChatMember builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  if (self.hasPersonaName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"personaName", self.personaName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFJoinChatChannelResponse_ChatMember class]]) {
    return NO;
  }
  CMsgTFJoinChatChannelResponse_ChatMember *otherMessage = other;
  return
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      self.hasPersonaName == otherMessage.hasPersonaName &&
      (!self.hasPersonaName || [self.personaName isEqual:otherMessage.personaName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  if (self.hasPersonaName) {
    hashCode = hashCode * 31 + [self.personaName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFJoinChatChannelResponse_ChatMember_Builder()
@property (retain) CMsgTFJoinChatChannelResponse_ChatMember* _builderResult;
@end

@implementation CMsgTFJoinChatChannelResponse_ChatMember_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFJoinChatChannelResponse_ChatMember alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) clear {
  _builderResult = [[[CMsgTFJoinChatChannelResponse_ChatMember alloc] init] autorelease];
  return self;
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) clone {
  return [CMsgTFJoinChatChannelResponse_ChatMember builderWithPrototype:_builderResult];
}
- (CMsgTFJoinChatChannelResponse_ChatMember*) defaultInstance {
  return [CMsgTFJoinChatChannelResponse_ChatMember defaultInstance];
}
- (CMsgTFJoinChatChannelResponse_ChatMember*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFJoinChatChannelResponse_ChatMember*) buildPartial {
  CMsgTFJoinChatChannelResponse_ChatMember* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) mergeFrom:(CMsgTFJoinChatChannelResponse_ChatMember*) other {
  if (other == [CMsgTFJoinChatChannelResponse_ChatMember defaultInstance]) {
    return self;
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  if (other.hasPersonaName) {
    [self setPersonaName:other.personaName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setSteamId:[input readFixed64]];
        break;
      }
      case 18: {
        [self setPersonaName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
- (BOOL) hasPersonaName {
  return result.hasPersonaName;
}
- (NSString*) personaName {
  return result.personaName;
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) setPersonaName:(NSString*) value {
  result.hasPersonaName = YES;
  result.personaName = value;
  return self;
}
- (CMsgTFJoinChatChannelResponse_ChatMember_Builder*) clearPersonaName {
  result.hasPersonaName = NO;
  result.personaName = @"";
  return self;
}
@end

@interface CMsgTFJoinChatChannelResponse_Builder()
@property (retain) CMsgTFJoinChatChannelResponse* _builderResult;
@end

@implementation CMsgTFJoinChatChannelResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFJoinChatChannelResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFJoinChatChannelResponse_Builder*) clear {
  _builderResult = [[[CMsgTFJoinChatChannelResponse alloc] init] autorelease];
  return self;
}
- (CMsgTFJoinChatChannelResponse_Builder*) clone {
  return [CMsgTFJoinChatChannelResponse builderWithPrototype:_builderResult];
}
- (CMsgTFJoinChatChannelResponse*) defaultInstance {
  return [CMsgTFJoinChatChannelResponse defaultInstance];
}
- (CMsgTFJoinChatChannelResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFJoinChatChannelResponse*) buildPartial {
  CMsgTFJoinChatChannelResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFJoinChatChannelResponse_Builder*) mergeFrom:(CMsgTFJoinChatChannelResponse*) other {
  if (other == [CMsgTFJoinChatChannelResponse defaultInstance]) {
    return self;
  }
  if (other.hasResponse) {
    [self setResponse:other.response];
  }
  if (other.hasChannelName) {
    [self setChannelName:other.channelName];
  }
  if (other.hasChannelId) {
    [self setChannelId:other.channelId];
  }
  if (other.hasMaxMembers) {
    [self setMaxMembers:other.maxMembers];
  }
  if (other.membersArray.count > 0) {
    if (result.membersArray == nil) {
      result.membersArray = [[other.membersArray copyWithZone:[other.membersArray zone]] autorelease];
    } else {
      [result.membersArray appendArray:other.membersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFJoinChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFJoinChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResponse:[input readUInt32]];
        break;
      }
      case 18: {
        [self setChannelName:[input readString]];
        break;
      }
      case 25: {
        [self setChannelId:[input readFixed64]];
        break;
      }
      case 32: {
        [self setMaxMembers:[input readUInt32]];
        break;
      }
      case 42: {
        CMsgTFJoinChatChannelResponse_ChatMember_Builder* subBuilder = [CMsgTFJoinChatChannelResponse_ChatMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasResponse {
  return result.hasResponse;
}
- (uint32_t) response {
  return result.response;
}
- (CMsgTFJoinChatChannelResponse_Builder*) setResponse:(uint32_t) value {
  result.hasResponse = YES;
  result.response = value;
  return self;
}
- (CMsgTFJoinChatChannelResponse_Builder*) clearResponse {
  result.hasResponse = NO;
  result.response = 0;
  return self;
}
- (BOOL) hasChannelName {
  return result.hasChannelName;
}
- (NSString*) channelName {
  return result.channelName;
}
- (CMsgTFJoinChatChannelResponse_Builder*) setChannelName:(NSString*) value {
  result.hasChannelName = YES;
  result.channelName = value;
  return self;
}
- (CMsgTFJoinChatChannelResponse_Builder*) clearChannelName {
  result.hasChannelName = NO;
  result.channelName = @"";
  return self;
}
- (BOOL) hasChannelId {
  return result.hasChannelId;
}
- (uint64_t) channelId {
  return result.channelId;
}
- (CMsgTFJoinChatChannelResponse_Builder*) setChannelId:(uint64_t) value {
  result.hasChannelId = YES;
  result.channelId = value;
  return self;
}
- (CMsgTFJoinChatChannelResponse_Builder*) clearChannelId {
  result.hasChannelId = NO;
  result.channelId = 0L;
  return self;
}
- (BOOL) hasMaxMembers {
  return result.hasMaxMembers;
}
- (uint32_t) maxMembers {
  return result.maxMembers;
}
- (CMsgTFJoinChatChannelResponse_Builder*) setMaxMembers:(uint32_t) value {
  result.hasMaxMembers = YES;
  result.maxMembers = value;
  return self;
}
- (CMsgTFJoinChatChannelResponse_Builder*) clearMaxMembers {
  result.hasMaxMembers = NO;
  result.maxMembers = 0;
  return self;
}
- (PBAppendableArray *)members {
  return result.membersArray;
}
- (CMsgTFJoinChatChannelResponse_ChatMember*)membersAtIndex:(NSUInteger)index {
  return [result membersAtIndex:index];
}
- (CMsgTFJoinChatChannelResponse_Builder *)addMembers:(CMsgTFJoinChatChannelResponse_ChatMember*)value {
  if (result.membersArray == nil) {
    result.membersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.membersArray addObject:value];
  return self;
}
- (CMsgTFJoinChatChannelResponse_Builder *)setMembersArray:(NSArray *)array {
  result.membersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgTFJoinChatChannelResponse_Builder *)setMembersValues:(const CMsgTFJoinChatChannelResponse_ChatMember* *)values count:(NSUInteger)count {
  result.membersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgTFJoinChatChannelResponse_Builder *)clearMembers {
  result.membersArray = nil;
  return self;
}
@end

@interface CMsgTFOtherJoinedChatChannel ()
@property uint64_t channelId;
@property (retain) NSString* personaName;
@property uint64_t steamId;
@end

@implementation CMsgTFOtherJoinedChatChannel

- (BOOL) hasChannelId {
  return !!hasChannelId_;
}
- (void) setHasChannelId:(BOOL) value_ {
  hasChannelId_ = !!value_;
}
@synthesize channelId;
- (BOOL) hasPersonaName {
  return !!hasPersonaName_;
}
- (void) setHasPersonaName:(BOOL) value_ {
  hasPersonaName_ = !!value_;
}
@synthesize personaName;
- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (void) dealloc {
  self.personaName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.channelId = 0L;
    self.personaName = @"";
    self.steamId = 0L;
  }
  return self;
}
static CMsgTFOtherJoinedChatChannel* defaultCMsgTFOtherJoinedChatChannelInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFOtherJoinedChatChannel class]) {
    defaultCMsgTFOtherJoinedChatChannelInstance = [[CMsgTFOtherJoinedChatChannel alloc] init];
  }
}
+ (CMsgTFOtherJoinedChatChannel*) defaultInstance {
  return defaultCMsgTFOtherJoinedChatChannelInstance;
}
- (CMsgTFOtherJoinedChatChannel*) defaultInstance {
  return defaultCMsgTFOtherJoinedChatChannelInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChannelId) {
    [output writeFixed64:1 value:self.channelId];
  }
  if (self.hasPersonaName) {
    [output writeString:2 value:self.personaName];
  }
  if (self.hasSteamId) {
    [output writeFixed64:3 value:self.steamId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChannelId) {
    size_ += computeFixed64Size(1, self.channelId);
  }
  if (self.hasPersonaName) {
    size_ += computeStringSize(2, self.personaName);
  }
  if (self.hasSteamId) {
    size_ += computeFixed64Size(3, self.steamId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFOtherJoinedChatChannel*) parseFromData:(NSData*) data {
  return (CMsgTFOtherJoinedChatChannel*)[[[CMsgTFOtherJoinedChatChannel builder] mergeFromData:data] build];
}
+ (CMsgTFOtherJoinedChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFOtherJoinedChatChannel*)[[[CMsgTFOtherJoinedChatChannel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFOtherJoinedChatChannel*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFOtherJoinedChatChannel*)[[[CMsgTFOtherJoinedChatChannel builder] mergeFromInputStream:input] build];
}
+ (CMsgTFOtherJoinedChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFOtherJoinedChatChannel*)[[[CMsgTFOtherJoinedChatChannel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFOtherJoinedChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFOtherJoinedChatChannel*)[[[CMsgTFOtherJoinedChatChannel builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFOtherJoinedChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFOtherJoinedChatChannel*)[[[CMsgTFOtherJoinedChatChannel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFOtherJoinedChatChannel_Builder*) builder {
  return [[[CMsgTFOtherJoinedChatChannel_Builder alloc] init] autorelease];
}
+ (CMsgTFOtherJoinedChatChannel_Builder*) builderWithPrototype:(CMsgTFOtherJoinedChatChannel*) prototype {
  return [[CMsgTFOtherJoinedChatChannel builder] mergeFrom:prototype];
}
- (CMsgTFOtherJoinedChatChannel_Builder*) builder {
  return [CMsgTFOtherJoinedChatChannel builder];
}
- (CMsgTFOtherJoinedChatChannel_Builder*) toBuilder {
  return [CMsgTFOtherJoinedChatChannel builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChannelId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelId", [NSNumber numberWithLongLong:self.channelId]];
  }
  if (self.hasPersonaName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"personaName", self.personaName];
  }
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFOtherJoinedChatChannel class]]) {
    return NO;
  }
  CMsgTFOtherJoinedChatChannel *otherMessage = other;
  return
      self.hasChannelId == otherMessage.hasChannelId &&
      (!self.hasChannelId || self.channelId == otherMessage.channelId) &&
      self.hasPersonaName == otherMessage.hasPersonaName &&
      (!self.hasPersonaName || [self.personaName isEqual:otherMessage.personaName]) &&
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasChannelId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.channelId] hash];
  }
  if (self.hasPersonaName) {
    hashCode = hashCode * 31 + [self.personaName hash];
  }
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFOtherJoinedChatChannel_Builder()
@property (retain) CMsgTFOtherJoinedChatChannel* _builderResult;
@end

@implementation CMsgTFOtherJoinedChatChannel_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFOtherJoinedChatChannel alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) clear {
  _builderResult = [[[CMsgTFOtherJoinedChatChannel alloc] init] autorelease];
  return self;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) clone {
  return [CMsgTFOtherJoinedChatChannel builderWithPrototype:_builderResult];
}
- (CMsgTFOtherJoinedChatChannel*) defaultInstance {
  return [CMsgTFOtherJoinedChatChannel defaultInstance];
}
- (CMsgTFOtherJoinedChatChannel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFOtherJoinedChatChannel*) buildPartial {
  CMsgTFOtherJoinedChatChannel* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) mergeFrom:(CMsgTFOtherJoinedChatChannel*) other {
  if (other == [CMsgTFOtherJoinedChatChannel defaultInstance]) {
    return self;
  }
  if (other.hasChannelId) {
    [self setChannelId:other.channelId];
  }
  if (other.hasPersonaName) {
    [self setPersonaName:other.personaName];
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFOtherJoinedChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setChannelId:[input readFixed64]];
        break;
      }
      case 18: {
        [self setPersonaName:[input readString]];
        break;
      }
      case 25: {
        [self setSteamId:[input readFixed64]];
        break;
      }
    }
  }
}
- (BOOL) hasChannelId {
  return result.hasChannelId;
}
- (uint64_t) channelId {
  return result.channelId;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) setChannelId:(uint64_t) value {
  result.hasChannelId = YES;
  result.channelId = value;
  return self;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) clearChannelId {
  result.hasChannelId = NO;
  result.channelId = 0L;
  return self;
}
- (BOOL) hasPersonaName {
  return result.hasPersonaName;
}
- (NSString*) personaName {
  return result.personaName;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) setPersonaName:(NSString*) value {
  result.hasPersonaName = YES;
  result.personaName = value;
  return self;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) clearPersonaName {
  result.hasPersonaName = NO;
  result.personaName = @"";
  return self;
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgTFOtherJoinedChatChannel_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
@end

@interface CMsgTFOtherLeftChatChannel ()
@property uint64_t channelId;
@property uint64_t steamId;
@end

@implementation CMsgTFOtherLeftChatChannel

- (BOOL) hasChannelId {
  return !!hasChannelId_;
}
- (void) setHasChannelId:(BOOL) value_ {
  hasChannelId_ = !!value_;
}
@synthesize channelId;
- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.channelId = 0L;
    self.steamId = 0L;
  }
  return self;
}
static CMsgTFOtherLeftChatChannel* defaultCMsgTFOtherLeftChatChannelInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFOtherLeftChatChannel class]) {
    defaultCMsgTFOtherLeftChatChannelInstance = [[CMsgTFOtherLeftChatChannel alloc] init];
  }
}
+ (CMsgTFOtherLeftChatChannel*) defaultInstance {
  return defaultCMsgTFOtherLeftChatChannelInstance;
}
- (CMsgTFOtherLeftChatChannel*) defaultInstance {
  return defaultCMsgTFOtherLeftChatChannelInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChannelId) {
    [output writeFixed64:1 value:self.channelId];
  }
  if (self.hasSteamId) {
    [output writeFixed64:2 value:self.steamId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChannelId) {
    size_ += computeFixed64Size(1, self.channelId);
  }
  if (self.hasSteamId) {
    size_ += computeFixed64Size(2, self.steamId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFOtherLeftChatChannel*) parseFromData:(NSData*) data {
  return (CMsgTFOtherLeftChatChannel*)[[[CMsgTFOtherLeftChatChannel builder] mergeFromData:data] build];
}
+ (CMsgTFOtherLeftChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFOtherLeftChatChannel*)[[[CMsgTFOtherLeftChatChannel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFOtherLeftChatChannel*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFOtherLeftChatChannel*)[[[CMsgTFOtherLeftChatChannel builder] mergeFromInputStream:input] build];
}
+ (CMsgTFOtherLeftChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFOtherLeftChatChannel*)[[[CMsgTFOtherLeftChatChannel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFOtherLeftChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFOtherLeftChatChannel*)[[[CMsgTFOtherLeftChatChannel builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFOtherLeftChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFOtherLeftChatChannel*)[[[CMsgTFOtherLeftChatChannel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFOtherLeftChatChannel_Builder*) builder {
  return [[[CMsgTFOtherLeftChatChannel_Builder alloc] init] autorelease];
}
+ (CMsgTFOtherLeftChatChannel_Builder*) builderWithPrototype:(CMsgTFOtherLeftChatChannel*) prototype {
  return [[CMsgTFOtherLeftChatChannel builder] mergeFrom:prototype];
}
- (CMsgTFOtherLeftChatChannel_Builder*) builder {
  return [CMsgTFOtherLeftChatChannel builder];
}
- (CMsgTFOtherLeftChatChannel_Builder*) toBuilder {
  return [CMsgTFOtherLeftChatChannel builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChannelId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelId", [NSNumber numberWithLongLong:self.channelId]];
  }
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFOtherLeftChatChannel class]]) {
    return NO;
  }
  CMsgTFOtherLeftChatChannel *otherMessage = other;
  return
      self.hasChannelId == otherMessage.hasChannelId &&
      (!self.hasChannelId || self.channelId == otherMessage.channelId) &&
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasChannelId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.channelId] hash];
  }
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFOtherLeftChatChannel_Builder()
@property (retain) CMsgTFOtherLeftChatChannel* _builderResult;
@end

@implementation CMsgTFOtherLeftChatChannel_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFOtherLeftChatChannel alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFOtherLeftChatChannel_Builder*) clear {
  _builderResult = [[[CMsgTFOtherLeftChatChannel alloc] init] autorelease];
  return self;
}
- (CMsgTFOtherLeftChatChannel_Builder*) clone {
  return [CMsgTFOtherLeftChatChannel builderWithPrototype:_builderResult];
}
- (CMsgTFOtherLeftChatChannel*) defaultInstance {
  return [CMsgTFOtherLeftChatChannel defaultInstance];
}
- (CMsgTFOtherLeftChatChannel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFOtherLeftChatChannel*) buildPartial {
  CMsgTFOtherLeftChatChannel* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFOtherLeftChatChannel_Builder*) mergeFrom:(CMsgTFOtherLeftChatChannel*) other {
  if (other == [CMsgTFOtherLeftChatChannel defaultInstance]) {
    return self;
  }
  if (other.hasChannelId) {
    [self setChannelId:other.channelId];
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFOtherLeftChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFOtherLeftChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setChannelId:[input readFixed64]];
        break;
      }
      case 17: {
        [self setSteamId:[input readFixed64]];
        break;
      }
    }
  }
}
- (BOOL) hasChannelId {
  return result.hasChannelId;
}
- (uint64_t) channelId {
  return result.channelId;
}
- (CMsgTFOtherLeftChatChannel_Builder*) setChannelId:(uint64_t) value {
  result.hasChannelId = YES;
  result.channelId = value;
  return self;
}
- (CMsgTFOtherLeftChatChannel_Builder*) clearChannelId {
  result.hasChannelId = NO;
  result.channelId = 0L;
  return self;
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgTFOtherLeftChatChannel_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgTFOtherLeftChatChannel_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
@end

@interface CMsgTFRequestDefaultChatChannel ()
@end

@implementation CMsgTFRequestDefaultChatChannel

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFRequestDefaultChatChannel* defaultCMsgTFRequestDefaultChatChannelInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFRequestDefaultChatChannel class]) {
    defaultCMsgTFRequestDefaultChatChannelInstance = [[CMsgTFRequestDefaultChatChannel alloc] init];
  }
}
+ (CMsgTFRequestDefaultChatChannel*) defaultInstance {
  return defaultCMsgTFRequestDefaultChatChannelInstance;
}
- (CMsgTFRequestDefaultChatChannel*) defaultInstance {
  return defaultCMsgTFRequestDefaultChatChannelInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFRequestDefaultChatChannel*) parseFromData:(NSData*) data {
  return (CMsgTFRequestDefaultChatChannel*)[[[CMsgTFRequestDefaultChatChannel builder] mergeFromData:data] build];
}
+ (CMsgTFRequestDefaultChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestDefaultChatChannel*)[[[CMsgTFRequestDefaultChatChannel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestDefaultChatChannel*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFRequestDefaultChatChannel*)[[[CMsgTFRequestDefaultChatChannel builder] mergeFromInputStream:input] build];
}
+ (CMsgTFRequestDefaultChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestDefaultChatChannel*)[[[CMsgTFRequestDefaultChatChannel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestDefaultChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFRequestDefaultChatChannel*)[[[CMsgTFRequestDefaultChatChannel builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFRequestDefaultChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestDefaultChatChannel*)[[[CMsgTFRequestDefaultChatChannel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestDefaultChatChannel_Builder*) builder {
  return [[[CMsgTFRequestDefaultChatChannel_Builder alloc] init] autorelease];
}
+ (CMsgTFRequestDefaultChatChannel_Builder*) builderWithPrototype:(CMsgTFRequestDefaultChatChannel*) prototype {
  return [[CMsgTFRequestDefaultChatChannel builder] mergeFrom:prototype];
}
- (CMsgTFRequestDefaultChatChannel_Builder*) builder {
  return [CMsgTFRequestDefaultChatChannel builder];
}
- (CMsgTFRequestDefaultChatChannel_Builder*) toBuilder {
  return [CMsgTFRequestDefaultChatChannel builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFRequestDefaultChatChannel class]]) {
    return NO;
  }
  CMsgTFRequestDefaultChatChannel *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFRequestDefaultChatChannel_Builder()
@property (retain) CMsgTFRequestDefaultChatChannel* _builderResult;
@end

@implementation CMsgTFRequestDefaultChatChannel_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFRequestDefaultChatChannel alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFRequestDefaultChatChannel_Builder*) clear {
  _builderResult = [[[CMsgTFRequestDefaultChatChannel alloc] init] autorelease];
  return self;
}
- (CMsgTFRequestDefaultChatChannel_Builder*) clone {
  return [CMsgTFRequestDefaultChatChannel builderWithPrototype:_builderResult];
}
- (CMsgTFRequestDefaultChatChannel*) defaultInstance {
  return [CMsgTFRequestDefaultChatChannel defaultInstance];
}
- (CMsgTFRequestDefaultChatChannel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFRequestDefaultChatChannel*) buildPartial {
  CMsgTFRequestDefaultChatChannel* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFRequestDefaultChatChannel_Builder*) mergeFrom:(CMsgTFRequestDefaultChatChannel*) other {
  if (other == [CMsgTFRequestDefaultChatChannel defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFRequestDefaultChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFRequestDefaultChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgTFRequestDefaultChatChannelResponse ()
@property (retain) NSString* channelName;
@property uint64_t channelId;
@end

@implementation CMsgTFRequestDefaultChatChannelResponse

- (BOOL) hasChannelName {
  return !!hasChannelName_;
}
- (void) setHasChannelName:(BOOL) value_ {
  hasChannelName_ = !!value_;
}
@synthesize channelName;
- (BOOL) hasChannelId {
  return !!hasChannelId_;
}
- (void) setHasChannelId:(BOOL) value_ {
  hasChannelId_ = !!value_;
}
@synthesize channelId;
- (void) dealloc {
  self.channelName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.channelName = @"";
    self.channelId = 0L;
  }
  return self;
}
static CMsgTFRequestDefaultChatChannelResponse* defaultCMsgTFRequestDefaultChatChannelResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFRequestDefaultChatChannelResponse class]) {
    defaultCMsgTFRequestDefaultChatChannelResponseInstance = [[CMsgTFRequestDefaultChatChannelResponse alloc] init];
  }
}
+ (CMsgTFRequestDefaultChatChannelResponse*) defaultInstance {
  return defaultCMsgTFRequestDefaultChatChannelResponseInstance;
}
- (CMsgTFRequestDefaultChatChannelResponse*) defaultInstance {
  return defaultCMsgTFRequestDefaultChatChannelResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChannelName) {
    [output writeString:1 value:self.channelName];
  }
  if (self.hasChannelId) {
    [output writeFixed64:2 value:self.channelId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChannelName) {
    size_ += computeStringSize(1, self.channelName);
  }
  if (self.hasChannelId) {
    size_ += computeFixed64Size(2, self.channelId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromData:(NSData*) data {
  return (CMsgTFRequestDefaultChatChannelResponse*)[[[CMsgTFRequestDefaultChatChannelResponse builder] mergeFromData:data] build];
}
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestDefaultChatChannelResponse*)[[[CMsgTFRequestDefaultChatChannelResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFRequestDefaultChatChannelResponse*)[[[CMsgTFRequestDefaultChatChannelResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestDefaultChatChannelResponse*)[[[CMsgTFRequestDefaultChatChannelResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFRequestDefaultChatChannelResponse*)[[[CMsgTFRequestDefaultChatChannelResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFRequestDefaultChatChannelResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestDefaultChatChannelResponse*)[[[CMsgTFRequestDefaultChatChannelResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestDefaultChatChannelResponse_Builder*) builder {
  return [[[CMsgTFRequestDefaultChatChannelResponse_Builder alloc] init] autorelease];
}
+ (CMsgTFRequestDefaultChatChannelResponse_Builder*) builderWithPrototype:(CMsgTFRequestDefaultChatChannelResponse*) prototype {
  return [[CMsgTFRequestDefaultChatChannelResponse builder] mergeFrom:prototype];
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) builder {
  return [CMsgTFRequestDefaultChatChannelResponse builder];
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) toBuilder {
  return [CMsgTFRequestDefaultChatChannelResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChannelName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelName", self.channelName];
  }
  if (self.hasChannelId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelId", [NSNumber numberWithLongLong:self.channelId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFRequestDefaultChatChannelResponse class]]) {
    return NO;
  }
  CMsgTFRequestDefaultChatChannelResponse *otherMessage = other;
  return
      self.hasChannelName == otherMessage.hasChannelName &&
      (!self.hasChannelName || [self.channelName isEqual:otherMessage.channelName]) &&
      self.hasChannelId == otherMessage.hasChannelId &&
      (!self.hasChannelId || self.channelId == otherMessage.channelId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasChannelName) {
    hashCode = hashCode * 31 + [self.channelName hash];
  }
  if (self.hasChannelId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.channelId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFRequestDefaultChatChannelResponse_Builder()
@property (retain) CMsgTFRequestDefaultChatChannelResponse* _builderResult;
@end

@implementation CMsgTFRequestDefaultChatChannelResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFRequestDefaultChatChannelResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) clear {
  _builderResult = [[[CMsgTFRequestDefaultChatChannelResponse alloc] init] autorelease];
  return self;
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) clone {
  return [CMsgTFRequestDefaultChatChannelResponse builderWithPrototype:_builderResult];
}
- (CMsgTFRequestDefaultChatChannelResponse*) defaultInstance {
  return [CMsgTFRequestDefaultChatChannelResponse defaultInstance];
}
- (CMsgTFRequestDefaultChatChannelResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFRequestDefaultChatChannelResponse*) buildPartial {
  CMsgTFRequestDefaultChatChannelResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) mergeFrom:(CMsgTFRequestDefaultChatChannelResponse*) other {
  if (other == [CMsgTFRequestDefaultChatChannelResponse defaultInstance]) {
    return self;
  }
  if (other.hasChannelName) {
    [self setChannelName:other.channelName];
  }
  if (other.hasChannelId) {
    [self setChannelId:other.channelId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setChannelName:[input readString]];
        break;
      }
      case 17: {
        [self setChannelId:[input readFixed64]];
        break;
      }
    }
  }
}
- (BOOL) hasChannelName {
  return result.hasChannelName;
}
- (NSString*) channelName {
  return result.channelName;
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) setChannelName:(NSString*) value {
  result.hasChannelName = YES;
  result.channelName = value;
  return self;
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) clearChannelName {
  result.hasChannelName = NO;
  result.channelName = @"";
  return self;
}
- (BOOL) hasChannelId {
  return result.hasChannelId;
}
- (uint64_t) channelId {
  return result.channelId;
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) setChannelId:(uint64_t) value {
  result.hasChannelId = YES;
  result.channelId = value;
  return self;
}
- (CMsgTFRequestDefaultChatChannelResponse_Builder*) clearChannelId {
  result.hasChannelId = NO;
  result.channelId = 0L;
  return self;
}
@end

@interface CMsgTFRequestChatChannelList ()
@end

@implementation CMsgTFRequestChatChannelList

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFRequestChatChannelList* defaultCMsgTFRequestChatChannelListInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFRequestChatChannelList class]) {
    defaultCMsgTFRequestChatChannelListInstance = [[CMsgTFRequestChatChannelList alloc] init];
  }
}
+ (CMsgTFRequestChatChannelList*) defaultInstance {
  return defaultCMsgTFRequestChatChannelListInstance;
}
- (CMsgTFRequestChatChannelList*) defaultInstance {
  return defaultCMsgTFRequestChatChannelListInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFRequestChatChannelList*) parseFromData:(NSData*) data {
  return (CMsgTFRequestChatChannelList*)[[[CMsgTFRequestChatChannelList builder] mergeFromData:data] build];
}
+ (CMsgTFRequestChatChannelList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestChatChannelList*)[[[CMsgTFRequestChatChannelList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestChatChannelList*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFRequestChatChannelList*)[[[CMsgTFRequestChatChannelList builder] mergeFromInputStream:input] build];
}
+ (CMsgTFRequestChatChannelList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestChatChannelList*)[[[CMsgTFRequestChatChannelList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestChatChannelList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFRequestChatChannelList*)[[[CMsgTFRequestChatChannelList builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFRequestChatChannelList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestChatChannelList*)[[[CMsgTFRequestChatChannelList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestChatChannelList_Builder*) builder {
  return [[[CMsgTFRequestChatChannelList_Builder alloc] init] autorelease];
}
+ (CMsgTFRequestChatChannelList_Builder*) builderWithPrototype:(CMsgTFRequestChatChannelList*) prototype {
  return [[CMsgTFRequestChatChannelList builder] mergeFrom:prototype];
}
- (CMsgTFRequestChatChannelList_Builder*) builder {
  return [CMsgTFRequestChatChannelList builder];
}
- (CMsgTFRequestChatChannelList_Builder*) toBuilder {
  return [CMsgTFRequestChatChannelList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFRequestChatChannelList class]]) {
    return NO;
  }
  CMsgTFRequestChatChannelList *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFRequestChatChannelList_Builder()
@property (retain) CMsgTFRequestChatChannelList* _builderResult;
@end

@implementation CMsgTFRequestChatChannelList_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFRequestChatChannelList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFRequestChatChannelList_Builder*) clear {
  _builderResult = [[[CMsgTFRequestChatChannelList alloc] init] autorelease];
  return self;
}
- (CMsgTFRequestChatChannelList_Builder*) clone {
  return [CMsgTFRequestChatChannelList builderWithPrototype:_builderResult];
}
- (CMsgTFRequestChatChannelList*) defaultInstance {
  return [CMsgTFRequestChatChannelList defaultInstance];
}
- (CMsgTFRequestChatChannelList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFRequestChatChannelList*) buildPartial {
  CMsgTFRequestChatChannelList* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFRequestChatChannelList_Builder*) mergeFrom:(CMsgTFRequestChatChannelList*) other {
  if (other == [CMsgTFRequestChatChannelList defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFRequestChatChannelList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFRequestChatChannelList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CMsgTFRequestChatChannelListResponse ()
@property (retain) PBAppendableArray * channelsArray;
@end

@implementation CMsgTFRequestChatChannelListResponse

@synthesize channelsArray;
@dynamic channels;
- (void) dealloc {
  self.channelsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgTFRequestChatChannelListResponse* defaultCMsgTFRequestChatChannelListResponseInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFRequestChatChannelListResponse class]) {
    defaultCMsgTFRequestChatChannelListResponseInstance = [[CMsgTFRequestChatChannelListResponse alloc] init];
  }
}
+ (CMsgTFRequestChatChannelListResponse*) defaultInstance {
  return defaultCMsgTFRequestChatChannelListResponseInstance;
}
- (CMsgTFRequestChatChannelListResponse*) defaultInstance {
  return defaultCMsgTFRequestChatChannelListResponseInstance;
}
- (PBArray *)channels {
  return channelsArray;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel*)channelsAtIndex:(NSUInteger)index {
  return [channelsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CMsgTFRequestChatChannelListResponse_ChatChannel *element in self.channelsArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (CMsgTFRequestChatChannelListResponse_ChatChannel *element in self.channelsArray) {
    size_ += computeMessageSize(1, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFRequestChatChannelListResponse*) parseFromData:(NSData*) data {
  return (CMsgTFRequestChatChannelListResponse*)[[[CMsgTFRequestChatChannelListResponse builder] mergeFromData:data] build];
}
+ (CMsgTFRequestChatChannelListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestChatChannelListResponse*)[[[CMsgTFRequestChatChannelListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestChatChannelListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFRequestChatChannelListResponse*)[[[CMsgTFRequestChatChannelListResponse builder] mergeFromInputStream:input] build];
}
+ (CMsgTFRequestChatChannelListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestChatChannelListResponse*)[[[CMsgTFRequestChatChannelListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestChatChannelListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFRequestChatChannelListResponse*)[[[CMsgTFRequestChatChannelListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFRequestChatChannelListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestChatChannelListResponse*)[[[CMsgTFRequestChatChannelListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestChatChannelListResponse_Builder*) builder {
  return [[[CMsgTFRequestChatChannelListResponse_Builder alloc] init] autorelease];
}
+ (CMsgTFRequestChatChannelListResponse_Builder*) builderWithPrototype:(CMsgTFRequestChatChannelListResponse*) prototype {
  return [[CMsgTFRequestChatChannelListResponse builder] mergeFrom:prototype];
}
- (CMsgTFRequestChatChannelListResponse_Builder*) builder {
  return [CMsgTFRequestChatChannelListResponse builder];
}
- (CMsgTFRequestChatChannelListResponse_Builder*) toBuilder {
  return [CMsgTFRequestChatChannelListResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (CMsgTFRequestChatChannelListResponse_ChatChannel* element in self.channelsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"channels"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFRequestChatChannelListResponse class]]) {
    return NO;
  }
  CMsgTFRequestChatChannelListResponse *otherMessage = other;
  return
      [self.channelsArray isEqualToArray:otherMessage.channelsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (CMsgTFRequestChatChannelListResponse_ChatChannel* element in self.channelsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFRequestChatChannelListResponse_ChatChannel ()
@property (retain) NSString* channelName;
@property uint32_t numMembers;
@property ChatChannelType_t channel_type;
@end

@implementation CMsgTFRequestChatChannelListResponse_ChatChannel

- (BOOL) hasChannelName {
  return !!hasChannelName_;
}
- (void) setHasChannelName:(BOOL) value_ {
  hasChannelName_ = !!value_;
}
@synthesize channelName;
- (BOOL) hasNumMembers {
  return !!hasNumMembers_;
}
- (void) setHasNumMembers:(BOOL) value_ {
  hasNumMembers_ = !!value_;
}
@synthesize numMembers;
- (BOOL) haschannel_type {
  return !!haschannel_type_;
}
- (void) setHaschannel_type:(BOOL) value_ {
  haschannel_type_ = !!value_;
}
@synthesize channel_type;
- (void) dealloc {
  self.channelName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.channelName = @"";
    self.numMembers = 0;
    self.channel_type = ChatChannelType_tChatChannelType_Regional;
  }
  return self;
}
static CMsgTFRequestChatChannelListResponse_ChatChannel* defaultCMsgTFRequestChatChannelListResponse_ChatChannelInstance = nil;
+ (void) initialize {
  if (self == [CMsgTFRequestChatChannelListResponse_ChatChannel class]) {
    defaultCMsgTFRequestChatChannelListResponse_ChatChannelInstance = [[CMsgTFRequestChatChannelListResponse_ChatChannel alloc] init];
  }
}
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) defaultInstance {
  return defaultCMsgTFRequestChatChannelListResponse_ChatChannelInstance;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel*) defaultInstance {
  return defaultCMsgTFRequestChatChannelListResponse_ChatChannelInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChannelName) {
    [output writeString:1 value:self.channelName];
  }
  if (self.hasNumMembers) {
    [output writeUInt32:2 value:self.numMembers];
  }
  if (self.haschannel_type) {
    [output writeEnum:3 value:self.channel_type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChannelName) {
    size_ += computeStringSize(1, self.channelName);
  }
  if (self.hasNumMembers) {
    size_ += computeUInt32Size(2, self.numMembers);
  }
  if (self.haschannel_type) {
    size_ += computeEnumSize(3, self.channel_type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromData:(NSData*) data {
  return (CMsgTFRequestChatChannelListResponse_ChatChannel*)[[[CMsgTFRequestChatChannelListResponse_ChatChannel builder] mergeFromData:data] build];
}
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestChatChannelListResponse_ChatChannel*)[[[CMsgTFRequestChatChannelListResponse_ChatChannel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgTFRequestChatChannelListResponse_ChatChannel*)[[[CMsgTFRequestChatChannelListResponse_ChatChannel builder] mergeFromInputStream:input] build];
}
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestChatChannelListResponse_ChatChannel*)[[[CMsgTFRequestChatChannelListResponse_ChatChannel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgTFRequestChatChannelListResponse_ChatChannel*)[[[CMsgTFRequestChatChannelListResponse_ChatChannel builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgTFRequestChatChannelListResponse_ChatChannel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgTFRequestChatChannelListResponse_ChatChannel*)[[[CMsgTFRequestChatChannelListResponse_ChatChannel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) builder {
  return [[[CMsgTFRequestChatChannelListResponse_ChatChannel_Builder alloc] init] autorelease];
}
+ (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) builderWithPrototype:(CMsgTFRequestChatChannelListResponse_ChatChannel*) prototype {
  return [[CMsgTFRequestChatChannelListResponse_ChatChannel builder] mergeFrom:prototype];
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) builder {
  return [CMsgTFRequestChatChannelListResponse_ChatChannel builder];
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) toBuilder {
  return [CMsgTFRequestChatChannelListResponse_ChatChannel builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChannelName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelName", self.channelName];
  }
  if (self.hasNumMembers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numMembers", [NSNumber numberWithInt:self.numMembers]];
  }
  if (self.haschannel_type) {
    [output appendFormat:@"%@%@: %d\n", indent, @"channel_type", self.channel_type];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgTFRequestChatChannelListResponse_ChatChannel class]]) {
    return NO;
  }
  CMsgTFRequestChatChannelListResponse_ChatChannel *otherMessage = other;
  return
      self.hasChannelName == otherMessage.hasChannelName &&
      (!self.hasChannelName || [self.channelName isEqual:otherMessage.channelName]) &&
      self.hasNumMembers == otherMessage.hasNumMembers &&
      (!self.hasNumMembers || self.numMembers == otherMessage.numMembers) &&
      self.haschannel_type == otherMessage.haschannel_type &&
      (!self.haschannel_type || self.channel_type == otherMessage.channel_type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasChannelName) {
    hashCode = hashCode * 31 + [self.channelName hash];
  }
  if (self.hasNumMembers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numMembers] hash];
  }
  if (self.haschannel_type) {
    hashCode = hashCode * 31 + self.channel_type;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgTFRequestChatChannelListResponse_ChatChannel_Builder()
@property (retain) CMsgTFRequestChatChannelListResponse_ChatChannel* _builderResult;
@end

@implementation CMsgTFRequestChatChannelListResponse_ChatChannel_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFRequestChatChannelListResponse_ChatChannel alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clear {
  _builderResult = [[[CMsgTFRequestChatChannelListResponse_ChatChannel alloc] init] autorelease];
  return self;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clone {
  return [CMsgTFRequestChatChannelListResponse_ChatChannel builderWithPrototype:_builderResult];
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel*) defaultInstance {
  return [CMsgTFRequestChatChannelListResponse_ChatChannel defaultInstance];
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel*) buildPartial {
  CMsgTFRequestChatChannelListResponse_ChatChannel* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) mergeFrom:(CMsgTFRequestChatChannelListResponse_ChatChannel*) other {
  if (other == [CMsgTFRequestChatChannelListResponse_ChatChannel defaultInstance]) {
    return self;
  }
  if (other.hasChannelName) {
    [self setChannelName:other.channelName];
  }
  if (other.hasNumMembers) {
    [self setNumMembers:other.numMembers];
  }
  if (other.haschannel_type) {
    [self setchannel_type:other.channel_type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setChannelName:[input readString]];
        break;
      }
      case 16: {
        [self setNumMembers:[input readUInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (ChatChannelType_tIsValidValue(value)) {
          [self setchannel_type:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasChannelName {
  return result.hasChannelName;
}
- (NSString*) channelName {
  return result.channelName;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) setChannelName:(NSString*) value {
  result.hasChannelName = YES;
  result.channelName = value;
  return self;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clearChannelName {
  result.hasChannelName = NO;
  result.channelName = @"";
  return self;
}
- (BOOL) hasNumMembers {
  return result.hasNumMembers;
}
- (uint32_t) numMembers {
  return result.numMembers;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) setNumMembers:(uint32_t) value {
  result.hasNumMembers = YES;
  result.numMembers = value;
  return self;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clearNumMembers {
  result.hasNumMembers = NO;
  result.numMembers = 0;
  return self;
}
- (BOOL) haschannel_type {
  return result.haschannel_type;
}
- (ChatChannelType_t) channel_type {
  return result.channel_type;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) setchannel_type:(ChatChannelType_t) value {
  result.haschannel_type = YES;
  result.channel_type = value;
  return self;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel_Builder*) clearchannel_type {
  result.haschannel_type = NO;
  result.channel_type = ChatChannelType_tChatChannelType_Regional;
  return self;
}
@end

@interface CMsgTFRequestChatChannelListResponse_Builder()
@property (retain) CMsgTFRequestChatChannelListResponse* _builderResult;
@end

@implementation CMsgTFRequestChatChannelListResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgTFRequestChatChannelListResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgTFRequestChatChannelListResponse_Builder*) clear {
  _builderResult = [[[CMsgTFRequestChatChannelListResponse alloc] init] autorelease];
  return self;
}
- (CMsgTFRequestChatChannelListResponse_Builder*) clone {
  return [CMsgTFRequestChatChannelListResponse builderWithPrototype:_builderResult];
}
- (CMsgTFRequestChatChannelListResponse*) defaultInstance {
  return [CMsgTFRequestChatChannelListResponse defaultInstance];
}
- (CMsgTFRequestChatChannelListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgTFRequestChatChannelListResponse*) buildPartial {
  CMsgTFRequestChatChannelListResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgTFRequestChatChannelListResponse_Builder*) mergeFrom:(CMsgTFRequestChatChannelListResponse*) other {
  if (other == [CMsgTFRequestChatChannelListResponse defaultInstance]) {
    return self;
  }
  if (other.channelsArray.count > 0) {
    if (result.channelsArray == nil) {
      result.channelsArray = [[other.channelsArray copyWithZone:[other.channelsArray zone]] autorelease];
    } else {
      [result.channelsArray appendArray:other.channelsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgTFRequestChatChannelListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgTFRequestChatChannelListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgTFRequestChatChannelListResponse_ChatChannel_Builder* subBuilder = [CMsgTFRequestChatChannelListResponse_ChatChannel builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addChannels:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)channels {
  return result.channelsArray;
}
- (CMsgTFRequestChatChannelListResponse_ChatChannel*)channelsAtIndex:(NSUInteger)index {
  return [result channelsAtIndex:index];
}
- (CMsgTFRequestChatChannelListResponse_Builder *)addChannels:(CMsgTFRequestChatChannelListResponse_ChatChannel*)value {
  if (result.channelsArray == nil) {
    result.channelsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.channelsArray addObject:value];
  return self;
}
- (CMsgTFRequestChatChannelListResponse_Builder *)setChannelsArray:(NSArray *)array {
  result.channelsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgTFRequestChatChannelListResponse_Builder *)setChannelsValues:(const CMsgTFRequestChatChannelListResponse_ChatChannel* *)values count:(NSUInteger)count {
  result.channelsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgTFRequestChatChannelListResponse_Builder *)clearChannels {
  result.channelsArray = nil;
  return self;
}
@end

@interface CMsgGameServerMatchmakingStatus ()
@property uint32_t serverVersion;
@property ServerMatchmakingState matchmaking_state;
@property TF_MatchmakingMode matchmaking_mode;
@property (retain) NSString* map;
@property (retain) NSString* tags;
@property uint32_t botCount;
@property uint32_t numSpectators;
@property uint32_t maxPlayers;
@property uint32_t slotsFree;
@property uint32_t serverRegion;
@property Float32 serverLoadavg;
@property BOOL serverTrusted;
@property BOOL serverDedicated;
@property uint32_t strict;
@property (retain) PBAppendableArray * playersArray;
@property TF_GC_GameState game_state;
@property CMsgGameServerMatchmakingStatus_Event event;
@property uint32_t mvmWave;
@property uint32_t mvmCreditsAcquired;
@property uint32_t mvmCreditsDropped;
@end

@implementation CMsgGameServerMatchmakingStatus

- (BOOL) hasServerVersion {
  return !!hasServerVersion_;
}
- (void) setHasServerVersion:(BOOL) value_ {
  hasServerVersion_ = !!value_;
}
@synthesize serverVersion;
- (BOOL) hasmatchmaking_state {
  return !!hasmatchmaking_state_;
}
- (void) setHasmatchmaking_state:(BOOL) value_ {
  hasmatchmaking_state_ = !!value_;
}
@synthesize matchmaking_state;
- (BOOL) hasmatchmaking_mode {
  return !!hasmatchmaking_mode_;
}
- (void) setHasmatchmaking_mode:(BOOL) value_ {
  hasmatchmaking_mode_ = !!value_;
}
@synthesize matchmaking_mode;
- (BOOL) hasMap {
  return !!hasMap_;
}
- (void) setHasMap:(BOOL) value_ {
  hasMap_ = !!value_;
}
@synthesize map;
- (BOOL) hasTags {
  return !!hasTags_;
}
- (void) setHasTags:(BOOL) value_ {
  hasTags_ = !!value_;
}
@synthesize tags;
- (BOOL) hasBotCount {
  return !!hasBotCount_;
}
- (void) setHasBotCount:(BOOL) value_ {
  hasBotCount_ = !!value_;
}
@synthesize botCount;
- (BOOL) hasNumSpectators {
  return !!hasNumSpectators_;
}
- (void) setHasNumSpectators:(BOOL) value_ {
  hasNumSpectators_ = !!value_;
}
@synthesize numSpectators;
- (BOOL) hasMaxPlayers {
  return !!hasMaxPlayers_;
}
- (void) setHasMaxPlayers:(BOOL) value_ {
  hasMaxPlayers_ = !!value_;
}
@synthesize maxPlayers;
- (BOOL) hasSlotsFree {
  return !!hasSlotsFree_;
}
- (void) setHasSlotsFree:(BOOL) value_ {
  hasSlotsFree_ = !!value_;
}
@synthesize slotsFree;
- (BOOL) hasServerRegion {
  return !!hasServerRegion_;
}
- (void) setHasServerRegion:(BOOL) value_ {
  hasServerRegion_ = !!value_;
}
@synthesize serverRegion;
- (BOOL) hasServerLoadavg {
  return !!hasServerLoadavg_;
}
- (void) setHasServerLoadavg:(BOOL) value_ {
  hasServerLoadavg_ = !!value_;
}
@synthesize serverLoadavg;
- (BOOL) hasServerTrusted {
  return !!hasServerTrusted_;
}
- (void) setHasServerTrusted:(BOOL) value_ {
  hasServerTrusted_ = !!value_;
}
- (BOOL) serverTrusted {
  return !!serverTrusted_;
}
- (void) setServerTrusted:(BOOL) value_ {
  serverTrusted_ = !!value_;
}
- (BOOL) hasServerDedicated {
  return !!hasServerDedicated_;
}
- (void) setHasServerDedicated:(BOOL) value_ {
  hasServerDedicated_ = !!value_;
}
- (BOOL) serverDedicated {
  return !!serverDedicated_;
}
- (void) setServerDedicated:(BOOL) value_ {
  serverDedicated_ = !!value_;
}
- (BOOL) hasStrict {
  return !!hasStrict_;
}
- (void) setHasStrict:(BOOL) value_ {
  hasStrict_ = !!value_;
}
@synthesize strict;
@synthesize playersArray;
@dynamic players;
- (BOOL) hasgame_state {
  return !!hasgame_state_;
}
- (void) setHasgame_state:(BOOL) value_ {
  hasgame_state_ = !!value_;
}
@synthesize game_state;
- (BOOL) hasevent {
  return !!hasevent_;
}
- (void) setHasevent:(BOOL) value_ {
  hasevent_ = !!value_;
}
@synthesize event;
- (BOOL) hasMvmWave {
  return !!hasMvmWave_;
}
- (void) setHasMvmWave:(BOOL) value_ {
  hasMvmWave_ = !!value_;
}
@synthesize mvmWave;
- (BOOL) hasMvmCreditsAcquired {
  return !!hasMvmCreditsAcquired_;
}
- (void) setHasMvmCreditsAcquired:(BOOL) value_ {
  hasMvmCreditsAcquired_ = !!value_;
}
@synthesize mvmCreditsAcquired;
- (BOOL) hasMvmCreditsDropped {
  return !!hasMvmCreditsDropped_;
}
- (void) setHasMvmCreditsDropped:(BOOL) value_ {
  hasMvmCreditsDropped_ = !!value_;
}
@synthesize mvmCreditsDropped;
- (void) dealloc {
  self.map = nil;
  self.tags = nil;
  self.playersArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.serverVersion = 1225;
    self.matchmaking_state = ServerMatchmakingStateServerMatchmakingState_INVALID;
    self.matchmaking_mode = TF_MatchmakingModeTF_Matchmaking_INVALID;
    self.map = @"";
    self.tags = @"";
    self.botCount = 0;
    self.numSpectators = 0;
    self.maxPlayers = 0;
    self.slotsFree = 0;
    self.serverRegion = 0;
    self.serverLoadavg = 0;
    self.serverTrusted = NO;
    self.serverDedicated = NO;
    self.strict = 0;
    self.game_state = TF_GC_GameStateTF_GC_GAMESTATE_STATE_INIT;
    self.event = CMsgGameServerMatchmakingStatus_EventNone;
    self.mvmWave = 0;
    self.mvmCreditsAcquired = 0;
    self.mvmCreditsDropped = 0;
  }
  return self;
}
static CMsgGameServerMatchmakingStatus* defaultCMsgGameServerMatchmakingStatusInstance = nil;
+ (void) initialize {
  if (self == [CMsgGameServerMatchmakingStatus class]) {
    defaultCMsgGameServerMatchmakingStatusInstance = [[CMsgGameServerMatchmakingStatus alloc] init];
  }
}
+ (CMsgGameServerMatchmakingStatus*) defaultInstance {
  return defaultCMsgGameServerMatchmakingStatusInstance;
}
- (CMsgGameServerMatchmakingStatus*) defaultInstance {
  return defaultCMsgGameServerMatchmakingStatusInstance;
}
- (PBArray *)players {
  return playersArray;
}
- (CMsgGameServerMatchmakingStatus_Player*)playersAtIndex:(NSUInteger)index {
  return [playersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasmatchmaking_state) {
    [output writeEnum:1 value:self.matchmaking_state];
  }
  if (self.hasmatchmaking_mode) {
    [output writeEnum:2 value:self.matchmaking_mode];
  }
  if (self.hasMap) {
    [output writeString:3 value:self.map];
  }
  if (self.hasTags) {
    [output writeString:4 value:self.tags];
  }
  if (self.hasBotCount) {
    [output writeUInt32:5 value:self.botCount];
  }
  if (self.hasNumSpectators) {
    [output writeUInt32:6 value:self.numSpectators];
  }
  if (self.hasMaxPlayers) {
    [output writeUInt32:7 value:self.maxPlayers];
  }
  if (self.hasSlotsFree) {
    [output writeUInt32:8 value:self.slotsFree];
  }
  if (self.hasServerRegion) {
    [output writeUInt32:9 value:self.serverRegion];
  }
  if (self.hasServerLoadavg) {
    [output writeFloat:10 value:self.serverLoadavg];
  }
  if (self.hasServerTrusted) {
    [output writeBool:11 value:self.serverTrusted];
  }
  if (self.hasServerDedicated) {
    [output writeBool:12 value:self.serverDedicated];
  }
  for (CMsgGameServerMatchmakingStatus_Player *element in self.playersArray) {
    [output writeMessage:13 value:element];
  }
  if (self.hasgame_state) {
    [output writeEnum:14 value:self.game_state];
  }
  if (self.hasevent) {
    [output writeEnum:15 value:self.event];
  }
  if (self.hasServerVersion) {
    [output writeUInt32:16 value:self.serverVersion];
  }
  if (self.hasStrict) {
    [output writeUInt32:17 value:self.strict];
  }
  if (self.hasMvmWave) {
    [output writeUInt32:18 value:self.mvmWave];
  }
  if (self.hasMvmCreditsAcquired) {
    [output writeUInt32:19 value:self.mvmCreditsAcquired];
  }
  if (self.hasMvmCreditsDropped) {
    [output writeUInt32:20 value:self.mvmCreditsDropped];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasmatchmaking_state) {
    size_ += computeEnumSize(1, self.matchmaking_state);
  }
  if (self.hasmatchmaking_mode) {
    size_ += computeEnumSize(2, self.matchmaking_mode);
  }
  if (self.hasMap) {
    size_ += computeStringSize(3, self.map);
  }
  if (self.hasTags) {
    size_ += computeStringSize(4, self.tags);
  }
  if (self.hasBotCount) {
    size_ += computeUInt32Size(5, self.botCount);
  }
  if (self.hasNumSpectators) {
    size_ += computeUInt32Size(6, self.numSpectators);
  }
  if (self.hasMaxPlayers) {
    size_ += computeUInt32Size(7, self.maxPlayers);
  }
  if (self.hasSlotsFree) {
    size_ += computeUInt32Size(8, self.slotsFree);
  }
  if (self.hasServerRegion) {
    size_ += computeUInt32Size(9, self.serverRegion);
  }
  if (self.hasServerLoadavg) {
    size_ += computeFloatSize(10, self.serverLoadavg);
  }
  if (self.hasServerTrusted) {
    size_ += computeBoolSize(11, self.serverTrusted);
  }
  if (self.hasServerDedicated) {
    size_ += computeBoolSize(12, self.serverDedicated);
  }
  for (CMsgGameServerMatchmakingStatus_Player *element in self.playersArray) {
    size_ += computeMessageSize(13, element);
  }
  if (self.hasgame_state) {
    size_ += computeEnumSize(14, self.game_state);
  }
  if (self.hasevent) {
    size_ += computeEnumSize(15, self.event);
  }
  if (self.hasServerVersion) {
    size_ += computeUInt32Size(16, self.serverVersion);
  }
  if (self.hasStrict) {
    size_ += computeUInt32Size(17, self.strict);
  }
  if (self.hasMvmWave) {
    size_ += computeUInt32Size(18, self.mvmWave);
  }
  if (self.hasMvmCreditsAcquired) {
    size_ += computeUInt32Size(19, self.mvmCreditsAcquired);
  }
  if (self.hasMvmCreditsDropped) {
    size_ += computeUInt32Size(20, self.mvmCreditsDropped);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGameServerMatchmakingStatus*) parseFromData:(NSData*) data {
  return (CMsgGameServerMatchmakingStatus*)[[[CMsgGameServerMatchmakingStatus builder] mergeFromData:data] build];
}
+ (CMsgGameServerMatchmakingStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameServerMatchmakingStatus*)[[[CMsgGameServerMatchmakingStatus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameServerMatchmakingStatus*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGameServerMatchmakingStatus*)[[[CMsgGameServerMatchmakingStatus builder] mergeFromInputStream:input] build];
}
+ (CMsgGameServerMatchmakingStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameServerMatchmakingStatus*)[[[CMsgGameServerMatchmakingStatus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameServerMatchmakingStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGameServerMatchmakingStatus*)[[[CMsgGameServerMatchmakingStatus builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGameServerMatchmakingStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameServerMatchmakingStatus*)[[[CMsgGameServerMatchmakingStatus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameServerMatchmakingStatus_Builder*) builder {
  return [[[CMsgGameServerMatchmakingStatus_Builder alloc] init] autorelease];
}
+ (CMsgGameServerMatchmakingStatus_Builder*) builderWithPrototype:(CMsgGameServerMatchmakingStatus*) prototype {
  return [[CMsgGameServerMatchmakingStatus builder] mergeFrom:prototype];
}
- (CMsgGameServerMatchmakingStatus_Builder*) builder {
  return [CMsgGameServerMatchmakingStatus builder];
}
- (CMsgGameServerMatchmakingStatus_Builder*) toBuilder {
  return [CMsgGameServerMatchmakingStatus builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasmatchmaking_state) {
    [output appendFormat:@"%@%@: %d\n", indent, @"matchmaking_state", self.matchmaking_state];
  }
  if (self.hasmatchmaking_mode) {
    [output appendFormat:@"%@%@: %d\n", indent, @"matchmaking_mode", self.matchmaking_mode];
  }
  if (self.hasMap) {
    [output appendFormat:@"%@%@: %@\n", indent, @"map", self.map];
  }
  if (self.hasTags) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tags", self.tags];
  }
  if (self.hasBotCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"botCount", [NSNumber numberWithInt:self.botCount]];
  }
  if (self.hasNumSpectators) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numSpectators", [NSNumber numberWithInt:self.numSpectators]];
  }
  if (self.hasMaxPlayers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxPlayers", [NSNumber numberWithInt:self.maxPlayers]];
  }
  if (self.hasSlotsFree) {
    [output appendFormat:@"%@%@: %@\n", indent, @"slotsFree", [NSNumber numberWithInt:self.slotsFree]];
  }
  if (self.hasServerRegion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverRegion", [NSNumber numberWithInt:self.serverRegion]];
  }
  if (self.hasServerLoadavg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverLoadavg", [NSNumber numberWithFloat:self.serverLoadavg]];
  }
  if (self.hasServerTrusted) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverTrusted", [NSNumber numberWithBool:self.serverTrusted]];
  }
  if (self.hasServerDedicated) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverDedicated", [NSNumber numberWithBool:self.serverDedicated]];
  }
  for (CMsgGameServerMatchmakingStatus_Player* element in self.playersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"players"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasgame_state) {
    [output appendFormat:@"%@%@: %d\n", indent, @"game_state", self.game_state];
  }
  if (self.hasevent) {
    [output appendFormat:@"%@%@: %d\n", indent, @"event", self.event];
  }
  if (self.hasServerVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverVersion", [NSNumber numberWithInt:self.serverVersion]];
  }
  if (self.hasStrict) {
    [output appendFormat:@"%@%@: %@\n", indent, @"strict", [NSNumber numberWithInt:self.strict]];
  }
  if (self.hasMvmWave) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mvmWave", [NSNumber numberWithInt:self.mvmWave]];
  }
  if (self.hasMvmCreditsAcquired) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mvmCreditsAcquired", [NSNumber numberWithInt:self.mvmCreditsAcquired]];
  }
  if (self.hasMvmCreditsDropped) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mvmCreditsDropped", [NSNumber numberWithInt:self.mvmCreditsDropped]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGameServerMatchmakingStatus class]]) {
    return NO;
  }
  CMsgGameServerMatchmakingStatus *otherMessage = other;
  return
      self.hasmatchmaking_state == otherMessage.hasmatchmaking_state &&
      (!self.hasmatchmaking_state || self.matchmaking_state == otherMessage.matchmaking_state) &&
      self.hasmatchmaking_mode == otherMessage.hasmatchmaking_mode &&
      (!self.hasmatchmaking_mode || self.matchmaking_mode == otherMessage.matchmaking_mode) &&
      self.hasMap == otherMessage.hasMap &&
      (!self.hasMap || [self.map isEqual:otherMessage.map]) &&
      self.hasTags == otherMessage.hasTags &&
      (!self.hasTags || [self.tags isEqual:otherMessage.tags]) &&
      self.hasBotCount == otherMessage.hasBotCount &&
      (!self.hasBotCount || self.botCount == otherMessage.botCount) &&
      self.hasNumSpectators == otherMessage.hasNumSpectators &&
      (!self.hasNumSpectators || self.numSpectators == otherMessage.numSpectators) &&
      self.hasMaxPlayers == otherMessage.hasMaxPlayers &&
      (!self.hasMaxPlayers || self.maxPlayers == otherMessage.maxPlayers) &&
      self.hasSlotsFree == otherMessage.hasSlotsFree &&
      (!self.hasSlotsFree || self.slotsFree == otherMessage.slotsFree) &&
      self.hasServerRegion == otherMessage.hasServerRegion &&
      (!self.hasServerRegion || self.serverRegion == otherMessage.serverRegion) &&
      self.hasServerLoadavg == otherMessage.hasServerLoadavg &&
      (!self.hasServerLoadavg || self.serverLoadavg == otherMessage.serverLoadavg) &&
      self.hasServerTrusted == otherMessage.hasServerTrusted &&
      (!self.hasServerTrusted || self.serverTrusted == otherMessage.serverTrusted) &&
      self.hasServerDedicated == otherMessage.hasServerDedicated &&
      (!self.hasServerDedicated || self.serverDedicated == otherMessage.serverDedicated) &&
      [self.playersArray isEqualToArray:otherMessage.playersArray] &&
      self.hasgame_state == otherMessage.hasgame_state &&
      (!self.hasgame_state || self.game_state == otherMessage.game_state) &&
      self.hasevent == otherMessage.hasevent &&
      (!self.hasevent || self.event == otherMessage.event) &&
      self.hasServerVersion == otherMessage.hasServerVersion &&
      (!self.hasServerVersion || self.serverVersion == otherMessage.serverVersion) &&
      self.hasStrict == otherMessage.hasStrict &&
      (!self.hasStrict || self.strict == otherMessage.strict) &&
      self.hasMvmWave == otherMessage.hasMvmWave &&
      (!self.hasMvmWave || self.mvmWave == otherMessage.mvmWave) &&
      self.hasMvmCreditsAcquired == otherMessage.hasMvmCreditsAcquired &&
      (!self.hasMvmCreditsAcquired || self.mvmCreditsAcquired == otherMessage.mvmCreditsAcquired) &&
      self.hasMvmCreditsDropped == otherMessage.hasMvmCreditsDropped &&
      (!self.hasMvmCreditsDropped || self.mvmCreditsDropped == otherMessage.mvmCreditsDropped) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasmatchmaking_state) {
    hashCode = hashCode * 31 + self.matchmaking_state;
  }
  if (self.hasmatchmaking_mode) {
    hashCode = hashCode * 31 + self.matchmaking_mode;
  }
  if (self.hasMap) {
    hashCode = hashCode * 31 + [self.map hash];
  }
  if (self.hasTags) {
    hashCode = hashCode * 31 + [self.tags hash];
  }
  if (self.hasBotCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.botCount] hash];
  }
  if (self.hasNumSpectators) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.numSpectators] hash];
  }
  if (self.hasMaxPlayers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.maxPlayers] hash];
  }
  if (self.hasSlotsFree) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.slotsFree] hash];
  }
  if (self.hasServerRegion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverRegion] hash];
  }
  if (self.hasServerLoadavg) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.serverLoadavg] hash];
  }
  if (self.hasServerTrusted) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.serverTrusted] hash];
  }
  if (self.hasServerDedicated) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.serverDedicated] hash];
  }
  for (CMsgGameServerMatchmakingStatus_Player* element in self.playersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasgame_state) {
    hashCode = hashCode * 31 + self.game_state;
  }
  if (self.hasevent) {
    hashCode = hashCode * 31 + self.event;
  }
  if (self.hasServerVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.serverVersion] hash];
  }
  if (self.hasStrict) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.strict] hash];
  }
  if (self.hasMvmWave) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mvmWave] hash];
  }
  if (self.hasMvmCreditsAcquired) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mvmCreditsAcquired] hash];
  }
  if (self.hasMvmCreditsDropped) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.mvmCreditsDropped] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CMsgGameServerMatchmakingStatus_PlayerConnectStateIsValidValue(CMsgGameServerMatchmakingStatus_PlayerConnectState value) {
  switch (value) {
    case CMsgGameServerMatchmakingStatus_PlayerConnectStateINVALID:
    case CMsgGameServerMatchmakingStatus_PlayerConnectStateCONNECTED:
    case CMsgGameServerMatchmakingStatus_PlayerConnectStateRESERVED:
      return YES;
    default:
      return NO;
  }
}
BOOL CMsgGameServerMatchmakingStatus_EventIsValidValue(CMsgGameServerMatchmakingStatus_Event value) {
  switch (value) {
    case CMsgGameServerMatchmakingStatus_EventNone:
    case CMsgGameServerMatchmakingStatus_EventMvMVictory:
    case CMsgGameServerMatchmakingStatus_EventMvMDefeat:
    case CMsgGameServerMatchmakingStatus_EventAcknowledgePlayers:
      return YES;
    default:
      return NO;
  }
}
@interface CMsgGameServerMatchmakingStatus_Player ()
@property uint64_t steamId;
@property CMsgGameServerMatchmakingStatus_PlayerConnectState connect_state;
@end

@implementation CMsgGameServerMatchmakingStatus_Player

- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (BOOL) hasconnect_state {
  return !!hasconnect_state_;
}
- (void) setHasconnect_state:(BOOL) value_ {
  hasconnect_state_ = !!value_;
}
@synthesize connect_state;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.steamId = 0L;
    self.connect_state = CMsgGameServerMatchmakingStatus_PlayerConnectStateINVALID;
  }
  return self;
}
static CMsgGameServerMatchmakingStatus_Player* defaultCMsgGameServerMatchmakingStatus_PlayerInstance = nil;
+ (void) initialize {
  if (self == [CMsgGameServerMatchmakingStatus_Player class]) {
    defaultCMsgGameServerMatchmakingStatus_PlayerInstance = [[CMsgGameServerMatchmakingStatus_Player alloc] init];
  }
}
+ (CMsgGameServerMatchmakingStatus_Player*) defaultInstance {
  return defaultCMsgGameServerMatchmakingStatus_PlayerInstance;
}
- (CMsgGameServerMatchmakingStatus_Player*) defaultInstance {
  return defaultCMsgGameServerMatchmakingStatus_PlayerInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSteamId) {
    [output writeFixed64:1 value:self.steamId];
  }
  if (self.hasconnect_state) {
    [output writeEnum:2 value:self.connect_state];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSteamId) {
    size_ += computeFixed64Size(1, self.steamId);
  }
  if (self.hasconnect_state) {
    size_ += computeEnumSize(2, self.connect_state);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromData:(NSData*) data {
  return (CMsgGameServerMatchmakingStatus_Player*)[[[CMsgGameServerMatchmakingStatus_Player builder] mergeFromData:data] build];
}
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameServerMatchmakingStatus_Player*)[[[CMsgGameServerMatchmakingStatus_Player builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGameServerMatchmakingStatus_Player*)[[[CMsgGameServerMatchmakingStatus_Player builder] mergeFromInputStream:input] build];
}
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameServerMatchmakingStatus_Player*)[[[CMsgGameServerMatchmakingStatus_Player builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGameServerMatchmakingStatus_Player*)[[[CMsgGameServerMatchmakingStatus_Player builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGameServerMatchmakingStatus_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameServerMatchmakingStatus_Player*)[[[CMsgGameServerMatchmakingStatus_Player builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameServerMatchmakingStatus_Player_Builder*) builder {
  return [[[CMsgGameServerMatchmakingStatus_Player_Builder alloc] init] autorelease];
}
+ (CMsgGameServerMatchmakingStatus_Player_Builder*) builderWithPrototype:(CMsgGameServerMatchmakingStatus_Player*) prototype {
  return [[CMsgGameServerMatchmakingStatus_Player builder] mergeFrom:prototype];
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) builder {
  return [CMsgGameServerMatchmakingStatus_Player builder];
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) toBuilder {
  return [CMsgGameServerMatchmakingStatus_Player builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  if (self.hasconnect_state) {
    [output appendFormat:@"%@%@: %d\n", indent, @"connect_state", self.connect_state];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGameServerMatchmakingStatus_Player class]]) {
    return NO;
  }
  CMsgGameServerMatchmakingStatus_Player *otherMessage = other;
  return
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      self.hasconnect_state == otherMessage.hasconnect_state &&
      (!self.hasconnect_state || self.connect_state == otherMessage.connect_state) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  if (self.hasconnect_state) {
    hashCode = hashCode * 31 + self.connect_state;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGameServerMatchmakingStatus_Player_Builder()
@property (retain) CMsgGameServerMatchmakingStatus_Player* _builderResult;
@end

@implementation CMsgGameServerMatchmakingStatus_Player_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGameServerMatchmakingStatus_Player alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) clear {
  _builderResult = [[[CMsgGameServerMatchmakingStatus_Player alloc] init] autorelease];
  return self;
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) clone {
  return [CMsgGameServerMatchmakingStatus_Player builderWithPrototype:_builderResult];
}
- (CMsgGameServerMatchmakingStatus_Player*) defaultInstance {
  return [CMsgGameServerMatchmakingStatus_Player defaultInstance];
}
- (CMsgGameServerMatchmakingStatus_Player*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGameServerMatchmakingStatus_Player*) buildPartial {
  CMsgGameServerMatchmakingStatus_Player* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) mergeFrom:(CMsgGameServerMatchmakingStatus_Player*) other {
  if (other == [CMsgGameServerMatchmakingStatus_Player defaultInstance]) {
    return self;
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  if (other.hasconnect_state) {
    [self setconnect_state:other.connect_state];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setSteamId:[input readFixed64]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (CMsgGameServerMatchmakingStatus_PlayerConnectStateIsValidValue(value)) {
          [self setconnect_state:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
- (BOOL) hasconnect_state {
  return result.hasconnect_state;
}
- (CMsgGameServerMatchmakingStatus_PlayerConnectState) connect_state {
  return result.connect_state;
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) setconnect_state:(CMsgGameServerMatchmakingStatus_PlayerConnectState) value {
  result.hasconnect_state = YES;
  result.connect_state = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Player_Builder*) clearconnect_state {
  result.hasconnect_state = NO;
  result.connect_state = CMsgGameServerMatchmakingStatus_PlayerConnectStateINVALID;
  return self;
}
@end

@interface CMsgGameServerMatchmakingStatus_Builder()
@property (retain) CMsgGameServerMatchmakingStatus* _builderResult;
@end

@implementation CMsgGameServerMatchmakingStatus_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGameServerMatchmakingStatus alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clear {
  _builderResult = [[[CMsgGameServerMatchmakingStatus alloc] init] autorelease];
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clone {
  return [CMsgGameServerMatchmakingStatus builderWithPrototype:_builderResult];
}
- (CMsgGameServerMatchmakingStatus*) defaultInstance {
  return [CMsgGameServerMatchmakingStatus defaultInstance];
}
- (CMsgGameServerMatchmakingStatus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGameServerMatchmakingStatus*) buildPartial {
  CMsgGameServerMatchmakingStatus* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGameServerMatchmakingStatus_Builder*) mergeFrom:(CMsgGameServerMatchmakingStatus*) other {
  if (other == [CMsgGameServerMatchmakingStatus defaultInstance]) {
    return self;
  }
  if (other.hasServerVersion) {
    [self setServerVersion:other.serverVersion];
  }
  if (other.hasmatchmaking_state) {
    [self setmatchmaking_state:other.matchmaking_state];
  }
  if (other.hasmatchmaking_mode) {
    [self setmatchmaking_mode:other.matchmaking_mode];
  }
  if (other.hasMap) {
    [self setMap:other.map];
  }
  if (other.hasTags) {
    [self setTags:other.tags];
  }
  if (other.hasBotCount) {
    [self setBotCount:other.botCount];
  }
  if (other.hasNumSpectators) {
    [self setNumSpectators:other.numSpectators];
  }
  if (other.hasMaxPlayers) {
    [self setMaxPlayers:other.maxPlayers];
  }
  if (other.hasSlotsFree) {
    [self setSlotsFree:other.slotsFree];
  }
  if (other.hasServerRegion) {
    [self setServerRegion:other.serverRegion];
  }
  if (other.hasServerLoadavg) {
    [self setServerLoadavg:other.serverLoadavg];
  }
  if (other.hasServerTrusted) {
    [self setServerTrusted:other.serverTrusted];
  }
  if (other.hasServerDedicated) {
    [self setServerDedicated:other.serverDedicated];
  }
  if (other.hasStrict) {
    [self setStrict:other.strict];
  }
  if (other.playersArray.count > 0) {
    if (result.playersArray == nil) {
      result.playersArray = [[other.playersArray copyWithZone:[other.playersArray zone]] autorelease];
    } else {
      [result.playersArray appendArray:other.playersArray];
    }
  }
  if (other.hasgame_state) {
    [self setgame_state:other.game_state];
  }
  if (other.hasevent) {
    [self setevent:other.event];
  }
  if (other.hasMvmWave) {
    [self setMvmWave:other.mvmWave];
  }
  if (other.hasMvmCreditsAcquired) {
    [self setMvmCreditsAcquired:other.mvmCreditsAcquired];
  }
  if (other.hasMvmCreditsDropped) {
    [self setMvmCreditsDropped:other.mvmCreditsDropped];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGameServerMatchmakingStatus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (ServerMatchmakingStateIsValidValue(value)) {
          [self setmatchmaking_state:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (TF_MatchmakingModeIsValidValue(value)) {
          [self setmatchmaking_mode:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setMap:[input readString]];
        break;
      }
      case 34: {
        [self setTags:[input readString]];
        break;
      }
      case 40: {
        [self setBotCount:[input readUInt32]];
        break;
      }
      case 48: {
        [self setNumSpectators:[input readUInt32]];
        break;
      }
      case 56: {
        [self setMaxPlayers:[input readUInt32]];
        break;
      }
      case 64: {
        [self setSlotsFree:[input readUInt32]];
        break;
      }
      case 72: {
        [self setServerRegion:[input readUInt32]];
        break;
      }
      case 85: {
        [self setServerLoadavg:[input readFloat]];
        break;
      }
      case 88: {
        [self setServerTrusted:[input readBool]];
        break;
      }
      case 96: {
        [self setServerDedicated:[input readBool]];
        break;
      }
      case 106: {
        CMsgGameServerMatchmakingStatus_Player_Builder* subBuilder = [CMsgGameServerMatchmakingStatus_Player builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPlayers:[subBuilder buildPartial]];
        break;
      }
      case 112: {
        int32_t value = [input readEnum];
        if (TF_GC_GameStateIsValidValue(value)) {
          [self setgame_state:value];
        } else {
          [unknownFields mergeVarintField:14 value:value];
        }
        break;
      }
      case 120: {
        int32_t value = [input readEnum];
        if (CMsgGameServerMatchmakingStatus_EventIsValidValue(value)) {
          [self setevent:value];
        } else {
          [unknownFields mergeVarintField:15 value:value];
        }
        break;
      }
      case 128: {
        [self setServerVersion:[input readUInt32]];
        break;
      }
      case 136: {
        [self setStrict:[input readUInt32]];
        break;
      }
      case 144: {
        [self setMvmWave:[input readUInt32]];
        break;
      }
      case 152: {
        [self setMvmCreditsAcquired:[input readUInt32]];
        break;
      }
      case 160: {
        [self setMvmCreditsDropped:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasServerVersion {
  return result.hasServerVersion;
}
- (uint32_t) serverVersion {
  return result.serverVersion;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setServerVersion:(uint32_t) value {
  result.hasServerVersion = YES;
  result.serverVersion = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerVersion {
  result.hasServerVersion = NO;
  result.serverVersion = 1225;
  return self;
}
- (BOOL) hasmatchmaking_state {
  return result.hasmatchmaking_state;
}
- (ServerMatchmakingState) matchmaking_state {
  return result.matchmaking_state;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setmatchmaking_state:(ServerMatchmakingState) value {
  result.hasmatchmaking_state = YES;
  result.matchmaking_state = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearmatchmaking_state {
  result.hasmatchmaking_state = NO;
  result.matchmaking_state = ServerMatchmakingStateServerMatchmakingState_INVALID;
  return self;
}
- (BOOL) hasmatchmaking_mode {
  return result.hasmatchmaking_mode;
}
- (TF_MatchmakingMode) matchmaking_mode {
  return result.matchmaking_mode;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setmatchmaking_mode:(TF_MatchmakingMode) value {
  result.hasmatchmaking_mode = YES;
  result.matchmaking_mode = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearmatchmaking_mode {
  result.hasmatchmaking_mode = NO;
  result.matchmaking_mode = TF_MatchmakingModeTF_Matchmaking_INVALID;
  return self;
}
- (BOOL) hasMap {
  return result.hasMap;
}
- (NSString*) map {
  return result.map;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setMap:(NSString*) value {
  result.hasMap = YES;
  result.map = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearMap {
  result.hasMap = NO;
  result.map = @"";
  return self;
}
- (BOOL) hasTags {
  return result.hasTags;
}
- (NSString*) tags {
  return result.tags;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setTags:(NSString*) value {
  result.hasTags = YES;
  result.tags = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearTags {
  result.hasTags = NO;
  result.tags = @"";
  return self;
}
- (BOOL) hasBotCount {
  return result.hasBotCount;
}
- (uint32_t) botCount {
  return result.botCount;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setBotCount:(uint32_t) value {
  result.hasBotCount = YES;
  result.botCount = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearBotCount {
  result.hasBotCount = NO;
  result.botCount = 0;
  return self;
}
- (BOOL) hasNumSpectators {
  return result.hasNumSpectators;
}
- (uint32_t) numSpectators {
  return result.numSpectators;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setNumSpectators:(uint32_t) value {
  result.hasNumSpectators = YES;
  result.numSpectators = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearNumSpectators {
  result.hasNumSpectators = NO;
  result.numSpectators = 0;
  return self;
}
- (BOOL) hasMaxPlayers {
  return result.hasMaxPlayers;
}
- (uint32_t) maxPlayers {
  return result.maxPlayers;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setMaxPlayers:(uint32_t) value {
  result.hasMaxPlayers = YES;
  result.maxPlayers = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearMaxPlayers {
  result.hasMaxPlayers = NO;
  result.maxPlayers = 0;
  return self;
}
- (BOOL) hasSlotsFree {
  return result.hasSlotsFree;
}
- (uint32_t) slotsFree {
  return result.slotsFree;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setSlotsFree:(uint32_t) value {
  result.hasSlotsFree = YES;
  result.slotsFree = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearSlotsFree {
  result.hasSlotsFree = NO;
  result.slotsFree = 0;
  return self;
}
- (BOOL) hasServerRegion {
  return result.hasServerRegion;
}
- (uint32_t) serverRegion {
  return result.serverRegion;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setServerRegion:(uint32_t) value {
  result.hasServerRegion = YES;
  result.serverRegion = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerRegion {
  result.hasServerRegion = NO;
  result.serverRegion = 0;
  return self;
}
- (BOOL) hasServerLoadavg {
  return result.hasServerLoadavg;
}
- (Float32) serverLoadavg {
  return result.serverLoadavg;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setServerLoadavg:(Float32) value {
  result.hasServerLoadavg = YES;
  result.serverLoadavg = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerLoadavg {
  result.hasServerLoadavg = NO;
  result.serverLoadavg = 0;
  return self;
}
- (BOOL) hasServerTrusted {
  return result.hasServerTrusted;
}
- (BOOL) serverTrusted {
  return result.serverTrusted;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setServerTrusted:(BOOL) value {
  result.hasServerTrusted = YES;
  result.serverTrusted = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerTrusted {
  result.hasServerTrusted = NO;
  result.serverTrusted = NO;
  return self;
}
- (BOOL) hasServerDedicated {
  return result.hasServerDedicated;
}
- (BOOL) serverDedicated {
  return result.serverDedicated;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setServerDedicated:(BOOL) value {
  result.hasServerDedicated = YES;
  result.serverDedicated = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearServerDedicated {
  result.hasServerDedicated = NO;
  result.serverDedicated = NO;
  return self;
}
- (BOOL) hasStrict {
  return result.hasStrict;
}
- (uint32_t) strict {
  return result.strict;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setStrict:(uint32_t) value {
  result.hasStrict = YES;
  result.strict = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearStrict {
  result.hasStrict = NO;
  result.strict = 0;
  return self;
}
- (PBAppendableArray *)players {
  return result.playersArray;
}
- (CMsgGameServerMatchmakingStatus_Player*)playersAtIndex:(NSUInteger)index {
  return [result playersAtIndex:index];
}
- (CMsgGameServerMatchmakingStatus_Builder *)addPlayers:(CMsgGameServerMatchmakingStatus_Player*)value {
  if (result.playersArray == nil) {
    result.playersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.playersArray addObject:value];
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder *)setPlayersArray:(NSArray *)array {
  result.playersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder *)setPlayersValues:(const CMsgGameServerMatchmakingStatus_Player* *)values count:(NSUInteger)count {
  result.playersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder *)clearPlayers {
  result.playersArray = nil;
  return self;
}
- (BOOL) hasgame_state {
  return result.hasgame_state;
}
- (TF_GC_GameState) game_state {
  return result.game_state;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setgame_state:(TF_GC_GameState) value {
  result.hasgame_state = YES;
  result.game_state = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) cleargame_state {
  result.hasgame_state = NO;
  result.game_state = TF_GC_GameStateTF_GC_GAMESTATE_STATE_INIT;
  return self;
}
- (BOOL) hasevent {
  return result.hasevent;
}
- (CMsgGameServerMatchmakingStatus_Event) event {
  return result.event;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setevent:(CMsgGameServerMatchmakingStatus_Event) value {
  result.hasevent = YES;
  result.event = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearevent {
  result.hasevent = NO;
  result.event = CMsgGameServerMatchmakingStatus_EventNone;
  return self;
}
- (BOOL) hasMvmWave {
  return result.hasMvmWave;
}
- (uint32_t) mvmWave {
  return result.mvmWave;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setMvmWave:(uint32_t) value {
  result.hasMvmWave = YES;
  result.mvmWave = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearMvmWave {
  result.hasMvmWave = NO;
  result.mvmWave = 0;
  return self;
}
- (BOOL) hasMvmCreditsAcquired {
  return result.hasMvmCreditsAcquired;
}
- (uint32_t) mvmCreditsAcquired {
  return result.mvmCreditsAcquired;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setMvmCreditsAcquired:(uint32_t) value {
  result.hasMvmCreditsAcquired = YES;
  result.mvmCreditsAcquired = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearMvmCreditsAcquired {
  result.hasMvmCreditsAcquired = NO;
  result.mvmCreditsAcquired = 0;
  return self;
}
- (BOOL) hasMvmCreditsDropped {
  return result.hasMvmCreditsDropped;
}
- (uint32_t) mvmCreditsDropped {
  return result.mvmCreditsDropped;
}
- (CMsgGameServerMatchmakingStatus_Builder*) setMvmCreditsDropped:(uint32_t) value {
  result.hasMvmCreditsDropped = YES;
  result.mvmCreditsDropped = value;
  return self;
}
- (CMsgGameServerMatchmakingStatus_Builder*) clearMvmCreditsDropped {
  result.hasMvmCreditsDropped = NO;
  result.mvmCreditsDropped = 0;
  return self;
}
@end

@interface CMsgMatchmakingProgress ()
@property uint32_t avgWaitTimeNew;
@property uint32_t avgWaitTimeJoinLate;
@property uint32_t yourWaitTime;
@property uint32_t matchingWorldwideSearchingPlayers;
@property uint32_t matchingNearYouSearchingPlayers;
@property uint32_t totalWorldwideSearchingPlayers;
@property uint32_t totalNearYouSearchingPlayers;
@property uint32_t matchingWorldwideActivePlayers;
@property uint32_t matchingNearYouActivePlayers;
@property uint32_t totalWorldwideActivePlayers;
@property uint32_t totalNearYouActivePlayers;
@property uint32_t matchingWorldwideEmptyGameservers;
@property uint32_t matchingNearYouEmptyGameservers;
@property uint32_t totalWorldwideEmptyGameservers;
@property uint32_t totalNearYouEmptyGameservers;
@property uint32_t urgencyPct;
@end

@implementation CMsgMatchmakingProgress

- (BOOL) hasAvgWaitTimeNew {
  return !!hasAvgWaitTimeNew_;
}
- (void) setHasAvgWaitTimeNew:(BOOL) value_ {
  hasAvgWaitTimeNew_ = !!value_;
}
@synthesize avgWaitTimeNew;
- (BOOL) hasAvgWaitTimeJoinLate {
  return !!hasAvgWaitTimeJoinLate_;
}
- (void) setHasAvgWaitTimeJoinLate:(BOOL) value_ {
  hasAvgWaitTimeJoinLate_ = !!value_;
}
@synthesize avgWaitTimeJoinLate;
- (BOOL) hasYourWaitTime {
  return !!hasYourWaitTime_;
}
- (void) setHasYourWaitTime:(BOOL) value_ {
  hasYourWaitTime_ = !!value_;
}
@synthesize yourWaitTime;
- (BOOL) hasMatchingWorldwideSearchingPlayers {
  return !!hasMatchingWorldwideSearchingPlayers_;
}
- (void) setHasMatchingWorldwideSearchingPlayers:(BOOL) value_ {
  hasMatchingWorldwideSearchingPlayers_ = !!value_;
}
@synthesize matchingWorldwideSearchingPlayers;
- (BOOL) hasMatchingNearYouSearchingPlayers {
  return !!hasMatchingNearYouSearchingPlayers_;
}
- (void) setHasMatchingNearYouSearchingPlayers:(BOOL) value_ {
  hasMatchingNearYouSearchingPlayers_ = !!value_;
}
@synthesize matchingNearYouSearchingPlayers;
- (BOOL) hasTotalWorldwideSearchingPlayers {
  return !!hasTotalWorldwideSearchingPlayers_;
}
- (void) setHasTotalWorldwideSearchingPlayers:(BOOL) value_ {
  hasTotalWorldwideSearchingPlayers_ = !!value_;
}
@synthesize totalWorldwideSearchingPlayers;
- (BOOL) hasTotalNearYouSearchingPlayers {
  return !!hasTotalNearYouSearchingPlayers_;
}
- (void) setHasTotalNearYouSearchingPlayers:(BOOL) value_ {
  hasTotalNearYouSearchingPlayers_ = !!value_;
}
@synthesize totalNearYouSearchingPlayers;
- (BOOL) hasMatchingWorldwideActivePlayers {
  return !!hasMatchingWorldwideActivePlayers_;
}
- (void) setHasMatchingWorldwideActivePlayers:(BOOL) value_ {
  hasMatchingWorldwideActivePlayers_ = !!value_;
}
@synthesize matchingWorldwideActivePlayers;
- (BOOL) hasMatchingNearYouActivePlayers {
  return !!hasMatchingNearYouActivePlayers_;
}
- (void) setHasMatchingNearYouActivePlayers:(BOOL) value_ {
  hasMatchingNearYouActivePlayers_ = !!value_;
}
@synthesize matchingNearYouActivePlayers;
- (BOOL) hasTotalWorldwideActivePlayers {
  return !!hasTotalWorldwideActivePlayers_;
}
- (void) setHasTotalWorldwideActivePlayers:(BOOL) value_ {
  hasTotalWorldwideActivePlayers_ = !!value_;
}
@synthesize totalWorldwideActivePlayers;
- (BOOL) hasTotalNearYouActivePlayers {
  return !!hasTotalNearYouActivePlayers_;
}
- (void) setHasTotalNearYouActivePlayers:(BOOL) value_ {
  hasTotalNearYouActivePlayers_ = !!value_;
}
@synthesize totalNearYouActivePlayers;
- (BOOL) hasMatchingWorldwideEmptyGameservers {
  return !!hasMatchingWorldwideEmptyGameservers_;
}
- (void) setHasMatchingWorldwideEmptyGameservers:(BOOL) value_ {
  hasMatchingWorldwideEmptyGameservers_ = !!value_;
}
@synthesize matchingWorldwideEmptyGameservers;
- (BOOL) hasMatchingNearYouEmptyGameservers {
  return !!hasMatchingNearYouEmptyGameservers_;
}
- (void) setHasMatchingNearYouEmptyGameservers:(BOOL) value_ {
  hasMatchingNearYouEmptyGameservers_ = !!value_;
}
@synthesize matchingNearYouEmptyGameservers;
- (BOOL) hasTotalWorldwideEmptyGameservers {
  return !!hasTotalWorldwideEmptyGameservers_;
}
- (void) setHasTotalWorldwideEmptyGameservers:(BOOL) value_ {
  hasTotalWorldwideEmptyGameservers_ = !!value_;
}
@synthesize totalWorldwideEmptyGameservers;
- (BOOL) hasTotalNearYouEmptyGameservers {
  return !!hasTotalNearYouEmptyGameservers_;
}
- (void) setHasTotalNearYouEmptyGameservers:(BOOL) value_ {
  hasTotalNearYouEmptyGameservers_ = !!value_;
}
@synthesize totalNearYouEmptyGameservers;
- (BOOL) hasUrgencyPct {
  return !!hasUrgencyPct_;
}
- (void) setHasUrgencyPct:(BOOL) value_ {
  hasUrgencyPct_ = !!value_;
}
@synthesize urgencyPct;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.avgWaitTimeNew = 0;
    self.avgWaitTimeJoinLate = 0;
    self.yourWaitTime = 0;
    self.matchingWorldwideSearchingPlayers = 0;
    self.matchingNearYouSearchingPlayers = 0;
    self.totalWorldwideSearchingPlayers = 0;
    self.totalNearYouSearchingPlayers = 0;
    self.matchingWorldwideActivePlayers = 0;
    self.matchingNearYouActivePlayers = 0;
    self.totalWorldwideActivePlayers = 0;
    self.totalNearYouActivePlayers = 0;
    self.matchingWorldwideEmptyGameservers = 0;
    self.matchingNearYouEmptyGameservers = 0;
    self.totalWorldwideEmptyGameservers = 0;
    self.totalNearYouEmptyGameservers = 0;
    self.urgencyPct = 0;
  }
  return self;
}
static CMsgMatchmakingProgress* defaultCMsgMatchmakingProgressInstance = nil;
+ (void) initialize {
  if (self == [CMsgMatchmakingProgress class]) {
    defaultCMsgMatchmakingProgressInstance = [[CMsgMatchmakingProgress alloc] init];
  }
}
+ (CMsgMatchmakingProgress*) defaultInstance {
  return defaultCMsgMatchmakingProgressInstance;
}
- (CMsgMatchmakingProgress*) defaultInstance {
  return defaultCMsgMatchmakingProgressInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUrgencyPct) {
    [output writeUInt32:1 value:self.urgencyPct];
  }
  if (self.hasAvgWaitTimeNew) {
    [output writeUInt32:4 value:self.avgWaitTimeNew];
  }
  if (self.hasAvgWaitTimeJoinLate) {
    [output writeUInt32:5 value:self.avgWaitTimeJoinLate];
  }
  if (self.hasYourWaitTime) {
    [output writeUInt32:6 value:self.yourWaitTime];
  }
  if (self.hasMatchingWorldwideSearchingPlayers) {
    [output writeUInt32:8 value:self.matchingWorldwideSearchingPlayers];
  }
  if (self.hasMatchingNearYouSearchingPlayers) {
    [output writeUInt32:9 value:self.matchingNearYouSearchingPlayers];
  }
  if (self.hasTotalWorldwideSearchingPlayers) {
    [output writeUInt32:13 value:self.totalWorldwideSearchingPlayers];
  }
  if (self.hasTotalNearYouSearchingPlayers) {
    [output writeUInt32:14 value:self.totalNearYouSearchingPlayers];
  }
  if (self.hasMatchingWorldwideActivePlayers) {
    [output writeUInt32:15 value:self.matchingWorldwideActivePlayers];
  }
  if (self.hasMatchingNearYouActivePlayers) {
    [output writeUInt32:16 value:self.matchingNearYouActivePlayers];
  }
  if (self.hasTotalWorldwideActivePlayers) {
    [output writeUInt32:17 value:self.totalWorldwideActivePlayers];
  }
  if (self.hasTotalNearYouActivePlayers) {
    [output writeUInt32:18 value:self.totalNearYouActivePlayers];
  }
  if (self.hasMatchingWorldwideEmptyGameservers) {
    [output writeUInt32:19 value:self.matchingWorldwideEmptyGameservers];
  }
  if (self.hasMatchingNearYouEmptyGameservers) {
    [output writeUInt32:20 value:self.matchingNearYouEmptyGameservers];
  }
  if (self.hasTotalWorldwideEmptyGameservers) {
    [output writeUInt32:21 value:self.totalWorldwideEmptyGameservers];
  }
  if (self.hasTotalNearYouEmptyGameservers) {
    [output writeUInt32:22 value:self.totalNearYouEmptyGameservers];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUrgencyPct) {
    size_ += computeUInt32Size(1, self.urgencyPct);
  }
  if (self.hasAvgWaitTimeNew) {
    size_ += computeUInt32Size(4, self.avgWaitTimeNew);
  }
  if (self.hasAvgWaitTimeJoinLate) {
    size_ += computeUInt32Size(5, self.avgWaitTimeJoinLate);
  }
  if (self.hasYourWaitTime) {
    size_ += computeUInt32Size(6, self.yourWaitTime);
  }
  if (self.hasMatchingWorldwideSearchingPlayers) {
    size_ += computeUInt32Size(8, self.matchingWorldwideSearchingPlayers);
  }
  if (self.hasMatchingNearYouSearchingPlayers) {
    size_ += computeUInt32Size(9, self.matchingNearYouSearchingPlayers);
  }
  if (self.hasTotalWorldwideSearchingPlayers) {
    size_ += computeUInt32Size(13, self.totalWorldwideSearchingPlayers);
  }
  if (self.hasTotalNearYouSearchingPlayers) {
    size_ += computeUInt32Size(14, self.totalNearYouSearchingPlayers);
  }
  if (self.hasMatchingWorldwideActivePlayers) {
    size_ += computeUInt32Size(15, self.matchingWorldwideActivePlayers);
  }
  if (self.hasMatchingNearYouActivePlayers) {
    size_ += computeUInt32Size(16, self.matchingNearYouActivePlayers);
  }
  if (self.hasTotalWorldwideActivePlayers) {
    size_ += computeUInt32Size(17, self.totalWorldwideActivePlayers);
  }
  if (self.hasTotalNearYouActivePlayers) {
    size_ += computeUInt32Size(18, self.totalNearYouActivePlayers);
  }
  if (self.hasMatchingWorldwideEmptyGameservers) {
    size_ += computeUInt32Size(19, self.matchingWorldwideEmptyGameservers);
  }
  if (self.hasMatchingNearYouEmptyGameservers) {
    size_ += computeUInt32Size(20, self.matchingNearYouEmptyGameservers);
  }
  if (self.hasTotalWorldwideEmptyGameservers) {
    size_ += computeUInt32Size(21, self.totalWorldwideEmptyGameservers);
  }
  if (self.hasTotalNearYouEmptyGameservers) {
    size_ += computeUInt32Size(22, self.totalNearYouEmptyGameservers);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMatchmakingProgress*) parseFromData:(NSData*) data {
  return (CMsgMatchmakingProgress*)[[[CMsgMatchmakingProgress builder] mergeFromData:data] build];
}
+ (CMsgMatchmakingProgress*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchmakingProgress*)[[[CMsgMatchmakingProgress builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchmakingProgress*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMatchmakingProgress*)[[[CMsgMatchmakingProgress builder] mergeFromInputStream:input] build];
}
+ (CMsgMatchmakingProgress*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchmakingProgress*)[[[CMsgMatchmakingProgress builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchmakingProgress*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMatchmakingProgress*)[[[CMsgMatchmakingProgress builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMatchmakingProgress*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMatchmakingProgress*)[[[CMsgMatchmakingProgress builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMatchmakingProgress_Builder*) builder {
  return [[[CMsgMatchmakingProgress_Builder alloc] init] autorelease];
}
+ (CMsgMatchmakingProgress_Builder*) builderWithPrototype:(CMsgMatchmakingProgress*) prototype {
  return [[CMsgMatchmakingProgress builder] mergeFrom:prototype];
}
- (CMsgMatchmakingProgress_Builder*) builder {
  return [CMsgMatchmakingProgress builder];
}
- (CMsgMatchmakingProgress_Builder*) toBuilder {
  return [CMsgMatchmakingProgress builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUrgencyPct) {
    [output appendFormat:@"%@%@: %@\n", indent, @"urgencyPct", [NSNumber numberWithInt:self.urgencyPct]];
  }
  if (self.hasAvgWaitTimeNew) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avgWaitTimeNew", [NSNumber numberWithInt:self.avgWaitTimeNew]];
  }
  if (self.hasAvgWaitTimeJoinLate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avgWaitTimeJoinLate", [NSNumber numberWithInt:self.avgWaitTimeJoinLate]];
  }
  if (self.hasYourWaitTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"yourWaitTime", [NSNumber numberWithInt:self.yourWaitTime]];
  }
  if (self.hasMatchingWorldwideSearchingPlayers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"matchingWorldwideSearchingPlayers", [NSNumber numberWithInt:self.matchingWorldwideSearchingPlayers]];
  }
  if (self.hasMatchingNearYouSearchingPlayers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"matchingNearYouSearchingPlayers", [NSNumber numberWithInt:self.matchingNearYouSearchingPlayers]];
  }
  if (self.hasTotalWorldwideSearchingPlayers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalWorldwideSearchingPlayers", [NSNumber numberWithInt:self.totalWorldwideSearchingPlayers]];
  }
  if (self.hasTotalNearYouSearchingPlayers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalNearYouSearchingPlayers", [NSNumber numberWithInt:self.totalNearYouSearchingPlayers]];
  }
  if (self.hasMatchingWorldwideActivePlayers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"matchingWorldwideActivePlayers", [NSNumber numberWithInt:self.matchingWorldwideActivePlayers]];
  }
  if (self.hasMatchingNearYouActivePlayers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"matchingNearYouActivePlayers", [NSNumber numberWithInt:self.matchingNearYouActivePlayers]];
  }
  if (self.hasTotalWorldwideActivePlayers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalWorldwideActivePlayers", [NSNumber numberWithInt:self.totalWorldwideActivePlayers]];
  }
  if (self.hasTotalNearYouActivePlayers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalNearYouActivePlayers", [NSNumber numberWithInt:self.totalNearYouActivePlayers]];
  }
  if (self.hasMatchingWorldwideEmptyGameservers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"matchingWorldwideEmptyGameservers", [NSNumber numberWithInt:self.matchingWorldwideEmptyGameservers]];
  }
  if (self.hasMatchingNearYouEmptyGameservers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"matchingNearYouEmptyGameservers", [NSNumber numberWithInt:self.matchingNearYouEmptyGameservers]];
  }
  if (self.hasTotalWorldwideEmptyGameservers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalWorldwideEmptyGameservers", [NSNumber numberWithInt:self.totalWorldwideEmptyGameservers]];
  }
  if (self.hasTotalNearYouEmptyGameservers) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalNearYouEmptyGameservers", [NSNumber numberWithInt:self.totalNearYouEmptyGameservers]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMatchmakingProgress class]]) {
    return NO;
  }
  CMsgMatchmakingProgress *otherMessage = other;
  return
      self.hasUrgencyPct == otherMessage.hasUrgencyPct &&
      (!self.hasUrgencyPct || self.urgencyPct == otherMessage.urgencyPct) &&
      self.hasAvgWaitTimeNew == otherMessage.hasAvgWaitTimeNew &&
      (!self.hasAvgWaitTimeNew || self.avgWaitTimeNew == otherMessage.avgWaitTimeNew) &&
      self.hasAvgWaitTimeJoinLate == otherMessage.hasAvgWaitTimeJoinLate &&
      (!self.hasAvgWaitTimeJoinLate || self.avgWaitTimeJoinLate == otherMessage.avgWaitTimeJoinLate) &&
      self.hasYourWaitTime == otherMessage.hasYourWaitTime &&
      (!self.hasYourWaitTime || self.yourWaitTime == otherMessage.yourWaitTime) &&
      self.hasMatchingWorldwideSearchingPlayers == otherMessage.hasMatchingWorldwideSearchingPlayers &&
      (!self.hasMatchingWorldwideSearchingPlayers || self.matchingWorldwideSearchingPlayers == otherMessage.matchingWorldwideSearchingPlayers) &&
      self.hasMatchingNearYouSearchingPlayers == otherMessage.hasMatchingNearYouSearchingPlayers &&
      (!self.hasMatchingNearYouSearchingPlayers || self.matchingNearYouSearchingPlayers == otherMessage.matchingNearYouSearchingPlayers) &&
      self.hasTotalWorldwideSearchingPlayers == otherMessage.hasTotalWorldwideSearchingPlayers &&
      (!self.hasTotalWorldwideSearchingPlayers || self.totalWorldwideSearchingPlayers == otherMessage.totalWorldwideSearchingPlayers) &&
      self.hasTotalNearYouSearchingPlayers == otherMessage.hasTotalNearYouSearchingPlayers &&
      (!self.hasTotalNearYouSearchingPlayers || self.totalNearYouSearchingPlayers == otherMessage.totalNearYouSearchingPlayers) &&
      self.hasMatchingWorldwideActivePlayers == otherMessage.hasMatchingWorldwideActivePlayers &&
      (!self.hasMatchingWorldwideActivePlayers || self.matchingWorldwideActivePlayers == otherMessage.matchingWorldwideActivePlayers) &&
      self.hasMatchingNearYouActivePlayers == otherMessage.hasMatchingNearYouActivePlayers &&
      (!self.hasMatchingNearYouActivePlayers || self.matchingNearYouActivePlayers == otherMessage.matchingNearYouActivePlayers) &&
      self.hasTotalWorldwideActivePlayers == otherMessage.hasTotalWorldwideActivePlayers &&
      (!self.hasTotalWorldwideActivePlayers || self.totalWorldwideActivePlayers == otherMessage.totalWorldwideActivePlayers) &&
      self.hasTotalNearYouActivePlayers == otherMessage.hasTotalNearYouActivePlayers &&
      (!self.hasTotalNearYouActivePlayers || self.totalNearYouActivePlayers == otherMessage.totalNearYouActivePlayers) &&
      self.hasMatchingWorldwideEmptyGameservers == otherMessage.hasMatchingWorldwideEmptyGameservers &&
      (!self.hasMatchingWorldwideEmptyGameservers || self.matchingWorldwideEmptyGameservers == otherMessage.matchingWorldwideEmptyGameservers) &&
      self.hasMatchingNearYouEmptyGameservers == otherMessage.hasMatchingNearYouEmptyGameservers &&
      (!self.hasMatchingNearYouEmptyGameservers || self.matchingNearYouEmptyGameservers == otherMessage.matchingNearYouEmptyGameservers) &&
      self.hasTotalWorldwideEmptyGameservers == otherMessage.hasTotalWorldwideEmptyGameservers &&
      (!self.hasTotalWorldwideEmptyGameservers || self.totalWorldwideEmptyGameservers == otherMessage.totalWorldwideEmptyGameservers) &&
      self.hasTotalNearYouEmptyGameservers == otherMessage.hasTotalNearYouEmptyGameservers &&
      (!self.hasTotalNearYouEmptyGameservers || self.totalNearYouEmptyGameservers == otherMessage.totalNearYouEmptyGameservers) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasUrgencyPct) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.urgencyPct] hash];
  }
  if (self.hasAvgWaitTimeNew) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.avgWaitTimeNew] hash];
  }
  if (self.hasAvgWaitTimeJoinLate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.avgWaitTimeJoinLate] hash];
  }
  if (self.hasYourWaitTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.yourWaitTime] hash];
  }
  if (self.hasMatchingWorldwideSearchingPlayers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.matchingWorldwideSearchingPlayers] hash];
  }
  if (self.hasMatchingNearYouSearchingPlayers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.matchingNearYouSearchingPlayers] hash];
  }
  if (self.hasTotalWorldwideSearchingPlayers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.totalWorldwideSearchingPlayers] hash];
  }
  if (self.hasTotalNearYouSearchingPlayers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.totalNearYouSearchingPlayers] hash];
  }
  if (self.hasMatchingWorldwideActivePlayers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.matchingWorldwideActivePlayers] hash];
  }
  if (self.hasMatchingNearYouActivePlayers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.matchingNearYouActivePlayers] hash];
  }
  if (self.hasTotalWorldwideActivePlayers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.totalWorldwideActivePlayers] hash];
  }
  if (self.hasTotalNearYouActivePlayers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.totalNearYouActivePlayers] hash];
  }
  if (self.hasMatchingWorldwideEmptyGameservers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.matchingWorldwideEmptyGameservers] hash];
  }
  if (self.hasMatchingNearYouEmptyGameservers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.matchingNearYouEmptyGameservers] hash];
  }
  if (self.hasTotalWorldwideEmptyGameservers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.totalWorldwideEmptyGameservers] hash];
  }
  if (self.hasTotalNearYouEmptyGameservers) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.totalNearYouEmptyGameservers] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMatchmakingProgress_Builder()
@property (retain) CMsgMatchmakingProgress* _builderResult;
@end

@implementation CMsgMatchmakingProgress_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMatchmakingProgress alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMatchmakingProgress_Builder*) clear {
  _builderResult = [[[CMsgMatchmakingProgress alloc] init] autorelease];
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clone {
  return [CMsgMatchmakingProgress builderWithPrototype:_builderResult];
}
- (CMsgMatchmakingProgress*) defaultInstance {
  return [CMsgMatchmakingProgress defaultInstance];
}
- (CMsgMatchmakingProgress*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMatchmakingProgress*) buildPartial {
  CMsgMatchmakingProgress* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMatchmakingProgress_Builder*) mergeFrom:(CMsgMatchmakingProgress*) other {
  if (other == [CMsgMatchmakingProgress defaultInstance]) {
    return self;
  }
  if (other.hasAvgWaitTimeNew) {
    [self setAvgWaitTimeNew:other.avgWaitTimeNew];
  }
  if (other.hasAvgWaitTimeJoinLate) {
    [self setAvgWaitTimeJoinLate:other.avgWaitTimeJoinLate];
  }
  if (other.hasYourWaitTime) {
    [self setYourWaitTime:other.yourWaitTime];
  }
  if (other.hasMatchingWorldwideSearchingPlayers) {
    [self setMatchingWorldwideSearchingPlayers:other.matchingWorldwideSearchingPlayers];
  }
  if (other.hasMatchingNearYouSearchingPlayers) {
    [self setMatchingNearYouSearchingPlayers:other.matchingNearYouSearchingPlayers];
  }
  if (other.hasTotalWorldwideSearchingPlayers) {
    [self setTotalWorldwideSearchingPlayers:other.totalWorldwideSearchingPlayers];
  }
  if (other.hasTotalNearYouSearchingPlayers) {
    [self setTotalNearYouSearchingPlayers:other.totalNearYouSearchingPlayers];
  }
  if (other.hasMatchingWorldwideActivePlayers) {
    [self setMatchingWorldwideActivePlayers:other.matchingWorldwideActivePlayers];
  }
  if (other.hasMatchingNearYouActivePlayers) {
    [self setMatchingNearYouActivePlayers:other.matchingNearYouActivePlayers];
  }
  if (other.hasTotalWorldwideActivePlayers) {
    [self setTotalWorldwideActivePlayers:other.totalWorldwideActivePlayers];
  }
  if (other.hasTotalNearYouActivePlayers) {
    [self setTotalNearYouActivePlayers:other.totalNearYouActivePlayers];
  }
  if (other.hasMatchingWorldwideEmptyGameservers) {
    [self setMatchingWorldwideEmptyGameservers:other.matchingWorldwideEmptyGameservers];
  }
  if (other.hasMatchingNearYouEmptyGameservers) {
    [self setMatchingNearYouEmptyGameservers:other.matchingNearYouEmptyGameservers];
  }
  if (other.hasTotalWorldwideEmptyGameservers) {
    [self setTotalWorldwideEmptyGameservers:other.totalWorldwideEmptyGameservers];
  }
  if (other.hasTotalNearYouEmptyGameservers) {
    [self setTotalNearYouEmptyGameservers:other.totalNearYouEmptyGameservers];
  }
  if (other.hasUrgencyPct) {
    [self setUrgencyPct:other.urgencyPct];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMatchmakingProgress_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMatchmakingProgress_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUrgencyPct:[input readUInt32]];
        break;
      }
      case 32: {
        [self setAvgWaitTimeNew:[input readUInt32]];
        break;
      }
      case 40: {
        [self setAvgWaitTimeJoinLate:[input readUInt32]];
        break;
      }
      case 48: {
        [self setYourWaitTime:[input readUInt32]];
        break;
      }
      case 64: {
        [self setMatchingWorldwideSearchingPlayers:[input readUInt32]];
        break;
      }
      case 72: {
        [self setMatchingNearYouSearchingPlayers:[input readUInt32]];
        break;
      }
      case 104: {
        [self setTotalWorldwideSearchingPlayers:[input readUInt32]];
        break;
      }
      case 112: {
        [self setTotalNearYouSearchingPlayers:[input readUInt32]];
        break;
      }
      case 120: {
        [self setMatchingWorldwideActivePlayers:[input readUInt32]];
        break;
      }
      case 128: {
        [self setMatchingNearYouActivePlayers:[input readUInt32]];
        break;
      }
      case 136: {
        [self setTotalWorldwideActivePlayers:[input readUInt32]];
        break;
      }
      case 144: {
        [self setTotalNearYouActivePlayers:[input readUInt32]];
        break;
      }
      case 152: {
        [self setMatchingWorldwideEmptyGameservers:[input readUInt32]];
        break;
      }
      case 160: {
        [self setMatchingNearYouEmptyGameservers:[input readUInt32]];
        break;
      }
      case 168: {
        [self setTotalWorldwideEmptyGameservers:[input readUInt32]];
        break;
      }
      case 176: {
        [self setTotalNearYouEmptyGameservers:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAvgWaitTimeNew {
  return result.hasAvgWaitTimeNew;
}
- (uint32_t) avgWaitTimeNew {
  return result.avgWaitTimeNew;
}
- (CMsgMatchmakingProgress_Builder*) setAvgWaitTimeNew:(uint32_t) value {
  result.hasAvgWaitTimeNew = YES;
  result.avgWaitTimeNew = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearAvgWaitTimeNew {
  result.hasAvgWaitTimeNew = NO;
  result.avgWaitTimeNew = 0;
  return self;
}
- (BOOL) hasAvgWaitTimeJoinLate {
  return result.hasAvgWaitTimeJoinLate;
}
- (uint32_t) avgWaitTimeJoinLate {
  return result.avgWaitTimeJoinLate;
}
- (CMsgMatchmakingProgress_Builder*) setAvgWaitTimeJoinLate:(uint32_t) value {
  result.hasAvgWaitTimeJoinLate = YES;
  result.avgWaitTimeJoinLate = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearAvgWaitTimeJoinLate {
  result.hasAvgWaitTimeJoinLate = NO;
  result.avgWaitTimeJoinLate = 0;
  return self;
}
- (BOOL) hasYourWaitTime {
  return result.hasYourWaitTime;
}
- (uint32_t) yourWaitTime {
  return result.yourWaitTime;
}
- (CMsgMatchmakingProgress_Builder*) setYourWaitTime:(uint32_t) value {
  result.hasYourWaitTime = YES;
  result.yourWaitTime = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearYourWaitTime {
  result.hasYourWaitTime = NO;
  result.yourWaitTime = 0;
  return self;
}
- (BOOL) hasMatchingWorldwideSearchingPlayers {
  return result.hasMatchingWorldwideSearchingPlayers;
}
- (uint32_t) matchingWorldwideSearchingPlayers {
  return result.matchingWorldwideSearchingPlayers;
}
- (CMsgMatchmakingProgress_Builder*) setMatchingWorldwideSearchingPlayers:(uint32_t) value {
  result.hasMatchingWorldwideSearchingPlayers = YES;
  result.matchingWorldwideSearchingPlayers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearMatchingWorldwideSearchingPlayers {
  result.hasMatchingWorldwideSearchingPlayers = NO;
  result.matchingWorldwideSearchingPlayers = 0;
  return self;
}
- (BOOL) hasMatchingNearYouSearchingPlayers {
  return result.hasMatchingNearYouSearchingPlayers;
}
- (uint32_t) matchingNearYouSearchingPlayers {
  return result.matchingNearYouSearchingPlayers;
}
- (CMsgMatchmakingProgress_Builder*) setMatchingNearYouSearchingPlayers:(uint32_t) value {
  result.hasMatchingNearYouSearchingPlayers = YES;
  result.matchingNearYouSearchingPlayers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearMatchingNearYouSearchingPlayers {
  result.hasMatchingNearYouSearchingPlayers = NO;
  result.matchingNearYouSearchingPlayers = 0;
  return self;
}
- (BOOL) hasTotalWorldwideSearchingPlayers {
  return result.hasTotalWorldwideSearchingPlayers;
}
- (uint32_t) totalWorldwideSearchingPlayers {
  return result.totalWorldwideSearchingPlayers;
}
- (CMsgMatchmakingProgress_Builder*) setTotalWorldwideSearchingPlayers:(uint32_t) value {
  result.hasTotalWorldwideSearchingPlayers = YES;
  result.totalWorldwideSearchingPlayers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearTotalWorldwideSearchingPlayers {
  result.hasTotalWorldwideSearchingPlayers = NO;
  result.totalWorldwideSearchingPlayers = 0;
  return self;
}
- (BOOL) hasTotalNearYouSearchingPlayers {
  return result.hasTotalNearYouSearchingPlayers;
}
- (uint32_t) totalNearYouSearchingPlayers {
  return result.totalNearYouSearchingPlayers;
}
- (CMsgMatchmakingProgress_Builder*) setTotalNearYouSearchingPlayers:(uint32_t) value {
  result.hasTotalNearYouSearchingPlayers = YES;
  result.totalNearYouSearchingPlayers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearTotalNearYouSearchingPlayers {
  result.hasTotalNearYouSearchingPlayers = NO;
  result.totalNearYouSearchingPlayers = 0;
  return self;
}
- (BOOL) hasMatchingWorldwideActivePlayers {
  return result.hasMatchingWorldwideActivePlayers;
}
- (uint32_t) matchingWorldwideActivePlayers {
  return result.matchingWorldwideActivePlayers;
}
- (CMsgMatchmakingProgress_Builder*) setMatchingWorldwideActivePlayers:(uint32_t) value {
  result.hasMatchingWorldwideActivePlayers = YES;
  result.matchingWorldwideActivePlayers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearMatchingWorldwideActivePlayers {
  result.hasMatchingWorldwideActivePlayers = NO;
  result.matchingWorldwideActivePlayers = 0;
  return self;
}
- (BOOL) hasMatchingNearYouActivePlayers {
  return result.hasMatchingNearYouActivePlayers;
}
- (uint32_t) matchingNearYouActivePlayers {
  return result.matchingNearYouActivePlayers;
}
- (CMsgMatchmakingProgress_Builder*) setMatchingNearYouActivePlayers:(uint32_t) value {
  result.hasMatchingNearYouActivePlayers = YES;
  result.matchingNearYouActivePlayers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearMatchingNearYouActivePlayers {
  result.hasMatchingNearYouActivePlayers = NO;
  result.matchingNearYouActivePlayers = 0;
  return self;
}
- (BOOL) hasTotalWorldwideActivePlayers {
  return result.hasTotalWorldwideActivePlayers;
}
- (uint32_t) totalWorldwideActivePlayers {
  return result.totalWorldwideActivePlayers;
}
- (CMsgMatchmakingProgress_Builder*) setTotalWorldwideActivePlayers:(uint32_t) value {
  result.hasTotalWorldwideActivePlayers = YES;
  result.totalWorldwideActivePlayers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearTotalWorldwideActivePlayers {
  result.hasTotalWorldwideActivePlayers = NO;
  result.totalWorldwideActivePlayers = 0;
  return self;
}
- (BOOL) hasTotalNearYouActivePlayers {
  return result.hasTotalNearYouActivePlayers;
}
- (uint32_t) totalNearYouActivePlayers {
  return result.totalNearYouActivePlayers;
}
- (CMsgMatchmakingProgress_Builder*) setTotalNearYouActivePlayers:(uint32_t) value {
  result.hasTotalNearYouActivePlayers = YES;
  result.totalNearYouActivePlayers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearTotalNearYouActivePlayers {
  result.hasTotalNearYouActivePlayers = NO;
  result.totalNearYouActivePlayers = 0;
  return self;
}
- (BOOL) hasMatchingWorldwideEmptyGameservers {
  return result.hasMatchingWorldwideEmptyGameservers;
}
- (uint32_t) matchingWorldwideEmptyGameservers {
  return result.matchingWorldwideEmptyGameservers;
}
- (CMsgMatchmakingProgress_Builder*) setMatchingWorldwideEmptyGameservers:(uint32_t) value {
  result.hasMatchingWorldwideEmptyGameservers = YES;
  result.matchingWorldwideEmptyGameservers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearMatchingWorldwideEmptyGameservers {
  result.hasMatchingWorldwideEmptyGameservers = NO;
  result.matchingWorldwideEmptyGameservers = 0;
  return self;
}
- (BOOL) hasMatchingNearYouEmptyGameservers {
  return result.hasMatchingNearYouEmptyGameservers;
}
- (uint32_t) matchingNearYouEmptyGameservers {
  return result.matchingNearYouEmptyGameservers;
}
- (CMsgMatchmakingProgress_Builder*) setMatchingNearYouEmptyGameservers:(uint32_t) value {
  result.hasMatchingNearYouEmptyGameservers = YES;
  result.matchingNearYouEmptyGameservers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearMatchingNearYouEmptyGameservers {
  result.hasMatchingNearYouEmptyGameservers = NO;
  result.matchingNearYouEmptyGameservers = 0;
  return self;
}
- (BOOL) hasTotalWorldwideEmptyGameservers {
  return result.hasTotalWorldwideEmptyGameservers;
}
- (uint32_t) totalWorldwideEmptyGameservers {
  return result.totalWorldwideEmptyGameservers;
}
- (CMsgMatchmakingProgress_Builder*) setTotalWorldwideEmptyGameservers:(uint32_t) value {
  result.hasTotalWorldwideEmptyGameservers = YES;
  result.totalWorldwideEmptyGameservers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearTotalWorldwideEmptyGameservers {
  result.hasTotalWorldwideEmptyGameservers = NO;
  result.totalWorldwideEmptyGameservers = 0;
  return self;
}
- (BOOL) hasTotalNearYouEmptyGameservers {
  return result.hasTotalNearYouEmptyGameservers;
}
- (uint32_t) totalNearYouEmptyGameservers {
  return result.totalNearYouEmptyGameservers;
}
- (CMsgMatchmakingProgress_Builder*) setTotalNearYouEmptyGameservers:(uint32_t) value {
  result.hasTotalNearYouEmptyGameservers = YES;
  result.totalNearYouEmptyGameservers = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearTotalNearYouEmptyGameservers {
  result.hasTotalNearYouEmptyGameservers = NO;
  result.totalNearYouEmptyGameservers = 0;
  return self;
}
- (BOOL) hasUrgencyPct {
  return result.hasUrgencyPct;
}
- (uint32_t) urgencyPct {
  return result.urgencyPct;
}
- (CMsgMatchmakingProgress_Builder*) setUrgencyPct:(uint32_t) value {
  result.hasUrgencyPct = YES;
  result.urgencyPct = value;
  return self;
}
- (CMsgMatchmakingProgress_Builder*) clearUrgencyPct {
  result.hasUrgencyPct = NO;
  result.urgencyPct = 0;
  return self;
}
@end

@interface CMsgMvMVictoryInfo ()
@property (retain) PBAppendableArray * playersArray;
@property (retain) NSString* tourName;
@property (retain) NSString* missionName;
@end

@implementation CMsgMvMVictoryInfo

@synthesize playersArray;
@dynamic players;
- (BOOL) hasTourName {
  return !!hasTourName_;
}
- (void) setHasTourName:(BOOL) value_ {
  hasTourName_ = !!value_;
}
@synthesize tourName;
- (BOOL) hasMissionName {
  return !!hasMissionName_;
}
- (void) setHasMissionName:(BOOL) value_ {
  hasMissionName_ = !!value_;
}
@synthesize missionName;
- (void) dealloc {
  self.playersArray = nil;
  self.tourName = nil;
  self.missionName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.tourName = @"";
    self.missionName = @"";
  }
  return self;
}
static CMsgMvMVictoryInfo* defaultCMsgMvMVictoryInfoInstance = nil;
+ (void) initialize {
  if (self == [CMsgMvMVictoryInfo class]) {
    defaultCMsgMvMVictoryInfoInstance = [[CMsgMvMVictoryInfo alloc] init];
  }
}
+ (CMsgMvMVictoryInfo*) defaultInstance {
  return defaultCMsgMvMVictoryInfoInstance;
}
- (CMsgMvMVictoryInfo*) defaultInstance {
  return defaultCMsgMvMVictoryInfoInstance;
}
- (PBArray *)players {
  return playersArray;
}
- (CMsgMvMVictoryInfo_Player*)playersAtIndex:(NSUInteger)index {
  return [playersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CMsgMvMVictoryInfo_Player *element in self.playersArray) {
    [output writeMessage:1 value:element];
  }
  if (self.hasTourName) {
    [output writeString:2 value:self.tourName];
  }
  if (self.hasMissionName) {
    [output writeString:3 value:self.missionName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (CMsgMvMVictoryInfo_Player *element in self.playersArray) {
    size_ += computeMessageSize(1, element);
  }
  if (self.hasTourName) {
    size_ += computeStringSize(2, self.tourName);
  }
  if (self.hasMissionName) {
    size_ += computeStringSize(3, self.missionName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMvMVictoryInfo*) parseFromData:(NSData*) data {
  return (CMsgMvMVictoryInfo*)[[[CMsgMvMVictoryInfo builder] mergeFromData:data] build];
}
+ (CMsgMvMVictoryInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictoryInfo*)[[[CMsgMvMVictoryInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictoryInfo*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMvMVictoryInfo*)[[[CMsgMvMVictoryInfo builder] mergeFromInputStream:input] build];
}
+ (CMsgMvMVictoryInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictoryInfo*)[[[CMsgMvMVictoryInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictoryInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMvMVictoryInfo*)[[[CMsgMvMVictoryInfo builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMvMVictoryInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictoryInfo*)[[[CMsgMvMVictoryInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictoryInfo_Builder*) builder {
  return [[[CMsgMvMVictoryInfo_Builder alloc] init] autorelease];
}
+ (CMsgMvMVictoryInfo_Builder*) builderWithPrototype:(CMsgMvMVictoryInfo*) prototype {
  return [[CMsgMvMVictoryInfo builder] mergeFrom:prototype];
}
- (CMsgMvMVictoryInfo_Builder*) builder {
  return [CMsgMvMVictoryInfo builder];
}
- (CMsgMvMVictoryInfo_Builder*) toBuilder {
  return [CMsgMvMVictoryInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (CMsgMvMVictoryInfo_Player* element in self.playersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"players"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasTourName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tourName", self.tourName];
  }
  if (self.hasMissionName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"missionName", self.missionName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMvMVictoryInfo class]]) {
    return NO;
  }
  CMsgMvMVictoryInfo *otherMessage = other;
  return
      [self.playersArray isEqualToArray:otherMessage.playersArray] &&
      self.hasTourName == otherMessage.hasTourName &&
      (!self.hasTourName || [self.tourName isEqual:otherMessage.tourName]) &&
      self.hasMissionName == otherMessage.hasMissionName &&
      (!self.hasMissionName || [self.missionName isEqual:otherMessage.missionName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (CMsgMvMVictoryInfo_Player* element in self.playersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasTourName) {
    hashCode = hashCode * 31 + [self.tourName hash];
  }
  if (self.hasMissionName) {
    hashCode = hashCode * 31 + [self.missionName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CMsgMvMVictoryInfo_GrantReasonIsValidValue(CMsgMvMVictoryInfo_GrantReason value) {
  switch (value) {
    case CMsgMvMVictoryInfo_GrantReasonINVALID:
    case CMsgMvMVictoryInfo_GrantReasonBADGE_LEVELED:
    case CMsgMvMVictoryInfo_GrantReasonSQUAD_SURPLUS:
    case CMsgMvMVictoryInfo_GrantReasonMANN_UP:
      return YES;
    default:
      return NO;
  }
}
@interface CMsgMvMVictoryInfo_Item ()
@property CMsgMvMVictoryInfo_GrantReason grant_reason;
@property (retain) NSData* itemData;
@property uint64_t squadSurplusClaimerSteamId;
@end

@implementation CMsgMvMVictoryInfo_Item

- (BOOL) hasgrant_reason {
  return !!hasgrant_reason_;
}
- (void) setHasgrant_reason:(BOOL) value_ {
  hasgrant_reason_ = !!value_;
}
@synthesize grant_reason;
- (BOOL) hasItemData {
  return !!hasItemData_;
}
- (void) setHasItemData:(BOOL) value_ {
  hasItemData_ = !!value_;
}
@synthesize itemData;
- (BOOL) hasSquadSurplusClaimerSteamId {
  return !!hasSquadSurplusClaimerSteamId_;
}
- (void) setHasSquadSurplusClaimerSteamId:(BOOL) value_ {
  hasSquadSurplusClaimerSteamId_ = !!value_;
}
@synthesize squadSurplusClaimerSteamId;
- (void) dealloc {
  self.itemData = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.grant_reason = CMsgMvMVictoryInfo_GrantReasonINVALID;
    self.itemData = [NSData data];
    self.squadSurplusClaimerSteamId = 0L;
  }
  return self;
}
static CMsgMvMVictoryInfo_Item* defaultCMsgMvMVictoryInfo_ItemInstance = nil;
+ (void) initialize {
  if (self == [CMsgMvMVictoryInfo_Item class]) {
    defaultCMsgMvMVictoryInfo_ItemInstance = [[CMsgMvMVictoryInfo_Item alloc] init];
  }
}
+ (CMsgMvMVictoryInfo_Item*) defaultInstance {
  return defaultCMsgMvMVictoryInfo_ItemInstance;
}
- (CMsgMvMVictoryInfo_Item*) defaultInstance {
  return defaultCMsgMvMVictoryInfo_ItemInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasgrant_reason) {
    [output writeEnum:1 value:self.grant_reason];
  }
  if (self.hasItemData) {
    [output writeData:2 value:self.itemData];
  }
  if (self.hasSquadSurplusClaimerSteamId) {
    [output writeFixed64:3 value:self.squadSurplusClaimerSteamId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasgrant_reason) {
    size_ += computeEnumSize(1, self.grant_reason);
  }
  if (self.hasItemData) {
    size_ += computeDataSize(2, self.itemData);
  }
  if (self.hasSquadSurplusClaimerSteamId) {
    size_ += computeFixed64Size(3, self.squadSurplusClaimerSteamId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMvMVictoryInfo_Item*) parseFromData:(NSData*) data {
  return (CMsgMvMVictoryInfo_Item*)[[[CMsgMvMVictoryInfo_Item builder] mergeFromData:data] build];
}
+ (CMsgMvMVictoryInfo_Item*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictoryInfo_Item*)[[[CMsgMvMVictoryInfo_Item builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictoryInfo_Item*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMvMVictoryInfo_Item*)[[[CMsgMvMVictoryInfo_Item builder] mergeFromInputStream:input] build];
}
+ (CMsgMvMVictoryInfo_Item*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictoryInfo_Item*)[[[CMsgMvMVictoryInfo_Item builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictoryInfo_Item*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMvMVictoryInfo_Item*)[[[CMsgMvMVictoryInfo_Item builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMvMVictoryInfo_Item*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictoryInfo_Item*)[[[CMsgMvMVictoryInfo_Item builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictoryInfo_Item_Builder*) builder {
  return [[[CMsgMvMVictoryInfo_Item_Builder alloc] init] autorelease];
}
+ (CMsgMvMVictoryInfo_Item_Builder*) builderWithPrototype:(CMsgMvMVictoryInfo_Item*) prototype {
  return [[CMsgMvMVictoryInfo_Item builder] mergeFrom:prototype];
}
- (CMsgMvMVictoryInfo_Item_Builder*) builder {
  return [CMsgMvMVictoryInfo_Item builder];
}
- (CMsgMvMVictoryInfo_Item_Builder*) toBuilder {
  return [CMsgMvMVictoryInfo_Item builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasgrant_reason) {
    [output appendFormat:@"%@%@: %d\n", indent, @"grant_reason", self.grant_reason];
  }
  if (self.hasItemData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"itemData", self.itemData];
  }
  if (self.hasSquadSurplusClaimerSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"squadSurplusClaimerSteamId", [NSNumber numberWithLongLong:self.squadSurplusClaimerSteamId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMvMVictoryInfo_Item class]]) {
    return NO;
  }
  CMsgMvMVictoryInfo_Item *otherMessage = other;
  return
      self.hasgrant_reason == otherMessage.hasgrant_reason &&
      (!self.hasgrant_reason || self.grant_reason == otherMessage.grant_reason) &&
      self.hasItemData == otherMessage.hasItemData &&
      (!self.hasItemData || [self.itemData isEqual:otherMessage.itemData]) &&
      self.hasSquadSurplusClaimerSteamId == otherMessage.hasSquadSurplusClaimerSteamId &&
      (!self.hasSquadSurplusClaimerSteamId || self.squadSurplusClaimerSteamId == otherMessage.squadSurplusClaimerSteamId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasgrant_reason) {
    hashCode = hashCode * 31 + self.grant_reason;
  }
  if (self.hasItemData) {
    hashCode = hashCode * 31 + [self.itemData hash];
  }
  if (self.hasSquadSurplusClaimerSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.squadSurplusClaimerSteamId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMvMVictoryInfo_Item_Builder()
@property (retain) CMsgMvMVictoryInfo_Item* _builderResult;
@end

@implementation CMsgMvMVictoryInfo_Item_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMvMVictoryInfo_Item alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMvMVictoryInfo_Item_Builder*) clear {
  _builderResult = [[[CMsgMvMVictoryInfo_Item alloc] init] autorelease];
  return self;
}
- (CMsgMvMVictoryInfo_Item_Builder*) clone {
  return [CMsgMvMVictoryInfo_Item builderWithPrototype:_builderResult];
}
- (CMsgMvMVictoryInfo_Item*) defaultInstance {
  return [CMsgMvMVictoryInfo_Item defaultInstance];
}
- (CMsgMvMVictoryInfo_Item*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMvMVictoryInfo_Item*) buildPartial {
  CMsgMvMVictoryInfo_Item* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMvMVictoryInfo_Item_Builder*) mergeFrom:(CMsgMvMVictoryInfo_Item*) other {
  if (other == [CMsgMvMVictoryInfo_Item defaultInstance]) {
    return self;
  }
  if (other.hasgrant_reason) {
    [self setgrant_reason:other.grant_reason];
  }
  if (other.hasItemData) {
    [self setItemData:other.itemData];
  }
  if (other.hasSquadSurplusClaimerSteamId) {
    [self setSquadSurplusClaimerSteamId:other.squadSurplusClaimerSteamId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMvMVictoryInfo_Item_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMvMVictoryInfo_Item_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (CMsgMvMVictoryInfo_GrantReasonIsValidValue(value)) {
          [self setgrant_reason:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setItemData:[input readData]];
        break;
      }
      case 25: {
        [self setSquadSurplusClaimerSteamId:[input readFixed64]];
        break;
      }
    }
  }
}
- (BOOL) hasgrant_reason {
  return result.hasgrant_reason;
}
- (CMsgMvMVictoryInfo_GrantReason) grant_reason {
  return result.grant_reason;
}
- (CMsgMvMVictoryInfo_Item_Builder*) setgrant_reason:(CMsgMvMVictoryInfo_GrantReason) value {
  result.hasgrant_reason = YES;
  result.grant_reason = value;
  return self;
}
- (CMsgMvMVictoryInfo_Item_Builder*) cleargrant_reason {
  result.hasgrant_reason = NO;
  result.grant_reason = CMsgMvMVictoryInfo_GrantReasonINVALID;
  return self;
}
- (BOOL) hasItemData {
  return result.hasItemData;
}
- (NSData*) itemData {
  return result.itemData;
}
- (CMsgMvMVictoryInfo_Item_Builder*) setItemData:(NSData*) value {
  result.hasItemData = YES;
  result.itemData = value;
  return self;
}
- (CMsgMvMVictoryInfo_Item_Builder*) clearItemData {
  result.hasItemData = NO;
  result.itemData = [NSData data];
  return self;
}
- (BOOL) hasSquadSurplusClaimerSteamId {
  return result.hasSquadSurplusClaimerSteamId;
}
- (uint64_t) squadSurplusClaimerSteamId {
  return result.squadSurplusClaimerSteamId;
}
- (CMsgMvMVictoryInfo_Item_Builder*) setSquadSurplusClaimerSteamId:(uint64_t) value {
  result.hasSquadSurplusClaimerSteamId = YES;
  result.squadSurplusClaimerSteamId = value;
  return self;
}
- (CMsgMvMVictoryInfo_Item_Builder*) clearSquadSurplusClaimerSteamId {
  result.hasSquadSurplusClaimerSteamId = NO;
  result.squadSurplusClaimerSteamId = 0L;
  return self;
}
@end

@interface CMsgMvMVictoryInfo_Player ()
@property uint64_t steamId;
@property BOOL badgeGranted;
@property BOOL badgeProgressUpdated;
@property BOOL badgeLeveled;
@property uint32_t badgeLevel;
@property uint32_t badgeProgressBits;
@property (retain) PBAppendableArray * itemsArray;
@property BOOL voucherMissing;
@end

@implementation CMsgMvMVictoryInfo_Player

- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (BOOL) hasBadgeGranted {
  return !!hasBadgeGranted_;
}
- (void) setHasBadgeGranted:(BOOL) value_ {
  hasBadgeGranted_ = !!value_;
}
- (BOOL) badgeGranted {
  return !!badgeGranted_;
}
- (void) setBadgeGranted:(BOOL) value_ {
  badgeGranted_ = !!value_;
}
- (BOOL) hasBadgeProgressUpdated {
  return !!hasBadgeProgressUpdated_;
}
- (void) setHasBadgeProgressUpdated:(BOOL) value_ {
  hasBadgeProgressUpdated_ = !!value_;
}
- (BOOL) badgeProgressUpdated {
  return !!badgeProgressUpdated_;
}
- (void) setBadgeProgressUpdated:(BOOL) value_ {
  badgeProgressUpdated_ = !!value_;
}
- (BOOL) hasBadgeLeveled {
  return !!hasBadgeLeveled_;
}
- (void) setHasBadgeLeveled:(BOOL) value_ {
  hasBadgeLeveled_ = !!value_;
}
- (BOOL) badgeLeveled {
  return !!badgeLeveled_;
}
- (void) setBadgeLeveled:(BOOL) value_ {
  badgeLeveled_ = !!value_;
}
- (BOOL) hasBadgeLevel {
  return !!hasBadgeLevel_;
}
- (void) setHasBadgeLevel:(BOOL) value_ {
  hasBadgeLevel_ = !!value_;
}
@synthesize badgeLevel;
- (BOOL) hasBadgeProgressBits {
  return !!hasBadgeProgressBits_;
}
- (void) setHasBadgeProgressBits:(BOOL) value_ {
  hasBadgeProgressBits_ = !!value_;
}
@synthesize badgeProgressBits;
@synthesize itemsArray;
@dynamic items;
- (BOOL) hasVoucherMissing {
  return !!hasVoucherMissing_;
}
- (void) setHasVoucherMissing:(BOOL) value_ {
  hasVoucherMissing_ = !!value_;
}
- (BOOL) voucherMissing {
  return !!voucherMissing_;
}
- (void) setVoucherMissing:(BOOL) value_ {
  voucherMissing_ = !!value_;
}
- (void) dealloc {
  self.itemsArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.steamId = 0L;
    self.badgeGranted = NO;
    self.badgeProgressUpdated = NO;
    self.badgeLeveled = NO;
    self.badgeLevel = 0;
    self.badgeProgressBits = 0;
    self.voucherMissing = NO;
  }
  return self;
}
static CMsgMvMVictoryInfo_Player* defaultCMsgMvMVictoryInfo_PlayerInstance = nil;
+ (void) initialize {
  if (self == [CMsgMvMVictoryInfo_Player class]) {
    defaultCMsgMvMVictoryInfo_PlayerInstance = [[CMsgMvMVictoryInfo_Player alloc] init];
  }
}
+ (CMsgMvMVictoryInfo_Player*) defaultInstance {
  return defaultCMsgMvMVictoryInfo_PlayerInstance;
}
- (CMsgMvMVictoryInfo_Player*) defaultInstance {
  return defaultCMsgMvMVictoryInfo_PlayerInstance;
}
- (PBArray *)items {
  return itemsArray;
}
- (CMsgMvMVictoryInfo_Item*)itemsAtIndex:(NSUInteger)index {
  return [itemsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSteamId) {
    [output writeFixed64:1 value:self.steamId];
  }
  if (self.hasBadgeGranted) {
    [output writeBool:3 value:self.badgeGranted];
  }
  if (self.hasBadgeProgressUpdated) {
    [output writeBool:4 value:self.badgeProgressUpdated];
  }
  if (self.hasBadgeLeveled) {
    [output writeBool:5 value:self.badgeLeveled];
  }
  if (self.hasBadgeLevel) {
    [output writeUInt32:6 value:self.badgeLevel];
  }
  if (self.hasBadgeProgressBits) {
    [output writeUInt32:7 value:self.badgeProgressBits];
  }
  for (CMsgMvMVictoryInfo_Item *element in self.itemsArray) {
    [output writeMessage:8 value:element];
  }
  if (self.hasVoucherMissing) {
    [output writeBool:9 value:self.voucherMissing];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSteamId) {
    size_ += computeFixed64Size(1, self.steamId);
  }
  if (self.hasBadgeGranted) {
    size_ += computeBoolSize(3, self.badgeGranted);
  }
  if (self.hasBadgeProgressUpdated) {
    size_ += computeBoolSize(4, self.badgeProgressUpdated);
  }
  if (self.hasBadgeLeveled) {
    size_ += computeBoolSize(5, self.badgeLeveled);
  }
  if (self.hasBadgeLevel) {
    size_ += computeUInt32Size(6, self.badgeLevel);
  }
  if (self.hasBadgeProgressBits) {
    size_ += computeUInt32Size(7, self.badgeProgressBits);
  }
  for (CMsgMvMVictoryInfo_Item *element in self.itemsArray) {
    size_ += computeMessageSize(8, element);
  }
  if (self.hasVoucherMissing) {
    size_ += computeBoolSize(9, self.voucherMissing);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMvMVictoryInfo_Player*) parseFromData:(NSData*) data {
  return (CMsgMvMVictoryInfo_Player*)[[[CMsgMvMVictoryInfo_Player builder] mergeFromData:data] build];
}
+ (CMsgMvMVictoryInfo_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictoryInfo_Player*)[[[CMsgMvMVictoryInfo_Player builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictoryInfo_Player*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMvMVictoryInfo_Player*)[[[CMsgMvMVictoryInfo_Player builder] mergeFromInputStream:input] build];
}
+ (CMsgMvMVictoryInfo_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictoryInfo_Player*)[[[CMsgMvMVictoryInfo_Player builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictoryInfo_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMvMVictoryInfo_Player*)[[[CMsgMvMVictoryInfo_Player builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMvMVictoryInfo_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictoryInfo_Player*)[[[CMsgMvMVictoryInfo_Player builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictoryInfo_Player_Builder*) builder {
  return [[[CMsgMvMVictoryInfo_Player_Builder alloc] init] autorelease];
}
+ (CMsgMvMVictoryInfo_Player_Builder*) builderWithPrototype:(CMsgMvMVictoryInfo_Player*) prototype {
  return [[CMsgMvMVictoryInfo_Player builder] mergeFrom:prototype];
}
- (CMsgMvMVictoryInfo_Player_Builder*) builder {
  return [CMsgMvMVictoryInfo_Player builder];
}
- (CMsgMvMVictoryInfo_Player_Builder*) toBuilder {
  return [CMsgMvMVictoryInfo_Player builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  if (self.hasBadgeGranted) {
    [output appendFormat:@"%@%@: %@\n", indent, @"badgeGranted", [NSNumber numberWithBool:self.badgeGranted]];
  }
  if (self.hasBadgeProgressUpdated) {
    [output appendFormat:@"%@%@: %@\n", indent, @"badgeProgressUpdated", [NSNumber numberWithBool:self.badgeProgressUpdated]];
  }
  if (self.hasBadgeLeveled) {
    [output appendFormat:@"%@%@: %@\n", indent, @"badgeLeveled", [NSNumber numberWithBool:self.badgeLeveled]];
  }
  if (self.hasBadgeLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"badgeLevel", [NSNumber numberWithInt:self.badgeLevel]];
  }
  if (self.hasBadgeProgressBits) {
    [output appendFormat:@"%@%@: %@\n", indent, @"badgeProgressBits", [NSNumber numberWithInt:self.badgeProgressBits]];
  }
  for (CMsgMvMVictoryInfo_Item* element in self.itemsArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"items"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasVoucherMissing) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voucherMissing", [NSNumber numberWithBool:self.voucherMissing]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMvMVictoryInfo_Player class]]) {
    return NO;
  }
  CMsgMvMVictoryInfo_Player *otherMessage = other;
  return
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      self.hasBadgeGranted == otherMessage.hasBadgeGranted &&
      (!self.hasBadgeGranted || self.badgeGranted == otherMessage.badgeGranted) &&
      self.hasBadgeProgressUpdated == otherMessage.hasBadgeProgressUpdated &&
      (!self.hasBadgeProgressUpdated || self.badgeProgressUpdated == otherMessage.badgeProgressUpdated) &&
      self.hasBadgeLeveled == otherMessage.hasBadgeLeveled &&
      (!self.hasBadgeLeveled || self.badgeLeveled == otherMessage.badgeLeveled) &&
      self.hasBadgeLevel == otherMessage.hasBadgeLevel &&
      (!self.hasBadgeLevel || self.badgeLevel == otherMessage.badgeLevel) &&
      self.hasBadgeProgressBits == otherMessage.hasBadgeProgressBits &&
      (!self.hasBadgeProgressBits || self.badgeProgressBits == otherMessage.badgeProgressBits) &&
      [self.itemsArray isEqualToArray:otherMessage.itemsArray] &&
      self.hasVoucherMissing == otherMessage.hasVoucherMissing &&
      (!self.hasVoucherMissing || self.voucherMissing == otherMessage.voucherMissing) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  if (self.hasBadgeGranted) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.badgeGranted] hash];
  }
  if (self.hasBadgeProgressUpdated) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.badgeProgressUpdated] hash];
  }
  if (self.hasBadgeLeveled) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.badgeLeveled] hash];
  }
  if (self.hasBadgeLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.badgeLevel] hash];
  }
  if (self.hasBadgeProgressBits) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.badgeProgressBits] hash];
  }
  for (CMsgMvMVictoryInfo_Item* element in self.itemsArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasVoucherMissing) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.voucherMissing] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMvMVictoryInfo_Player_Builder()
@property (retain) CMsgMvMVictoryInfo_Player* _builderResult;
@end

@implementation CMsgMvMVictoryInfo_Player_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMvMVictoryInfo_Player alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMvMVictoryInfo_Player_Builder*) clear {
  _builderResult = [[[CMsgMvMVictoryInfo_Player alloc] init] autorelease];
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder*) clone {
  return [CMsgMvMVictoryInfo_Player builderWithPrototype:_builderResult];
}
- (CMsgMvMVictoryInfo_Player*) defaultInstance {
  return [CMsgMvMVictoryInfo_Player defaultInstance];
}
- (CMsgMvMVictoryInfo_Player*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMvMVictoryInfo_Player*) buildPartial {
  CMsgMvMVictoryInfo_Player* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMvMVictoryInfo_Player_Builder*) mergeFrom:(CMsgMvMVictoryInfo_Player*) other {
  if (other == [CMsgMvMVictoryInfo_Player defaultInstance]) {
    return self;
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  if (other.hasBadgeGranted) {
    [self setBadgeGranted:other.badgeGranted];
  }
  if (other.hasBadgeProgressUpdated) {
    [self setBadgeProgressUpdated:other.badgeProgressUpdated];
  }
  if (other.hasBadgeLeveled) {
    [self setBadgeLeveled:other.badgeLeveled];
  }
  if (other.hasBadgeLevel) {
    [self setBadgeLevel:other.badgeLevel];
  }
  if (other.hasBadgeProgressBits) {
    [self setBadgeProgressBits:other.badgeProgressBits];
  }
  if (other.itemsArray.count > 0) {
    if (result.itemsArray == nil) {
      result.itemsArray = [[other.itemsArray copyWithZone:[other.itemsArray zone]] autorelease];
    } else {
      [result.itemsArray appendArray:other.itemsArray];
    }
  }
  if (other.hasVoucherMissing) {
    [self setVoucherMissing:other.voucherMissing];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMvMVictoryInfo_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setSteamId:[input readFixed64]];
        break;
      }
      case 24: {
        [self setBadgeGranted:[input readBool]];
        break;
      }
      case 32: {
        [self setBadgeProgressUpdated:[input readBool]];
        break;
      }
      case 40: {
        [self setBadgeLeveled:[input readBool]];
        break;
      }
      case 48: {
        [self setBadgeLevel:[input readUInt32]];
        break;
      }
      case 56: {
        [self setBadgeProgressBits:[input readUInt32]];
        break;
      }
      case 66: {
        CMsgMvMVictoryInfo_Item_Builder* subBuilder = [CMsgMvMVictoryInfo_Item builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addItems:[subBuilder buildPartial]];
        break;
      }
      case 72: {
        [self setVoucherMissing:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgMvMVictoryInfo_Player_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
- (BOOL) hasBadgeGranted {
  return result.hasBadgeGranted;
}
- (BOOL) badgeGranted {
  return result.badgeGranted;
}
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeGranted:(BOOL) value {
  result.hasBadgeGranted = YES;
  result.badgeGranted = value;
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeGranted {
  result.hasBadgeGranted = NO;
  result.badgeGranted = NO;
  return self;
}
- (BOOL) hasBadgeProgressUpdated {
  return result.hasBadgeProgressUpdated;
}
- (BOOL) badgeProgressUpdated {
  return result.badgeProgressUpdated;
}
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeProgressUpdated:(BOOL) value {
  result.hasBadgeProgressUpdated = YES;
  result.badgeProgressUpdated = value;
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeProgressUpdated {
  result.hasBadgeProgressUpdated = NO;
  result.badgeProgressUpdated = NO;
  return self;
}
- (BOOL) hasBadgeLeveled {
  return result.hasBadgeLeveled;
}
- (BOOL) badgeLeveled {
  return result.badgeLeveled;
}
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeLeveled:(BOOL) value {
  result.hasBadgeLeveled = YES;
  result.badgeLeveled = value;
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeLeveled {
  result.hasBadgeLeveled = NO;
  result.badgeLeveled = NO;
  return self;
}
- (BOOL) hasBadgeLevel {
  return result.hasBadgeLevel;
}
- (uint32_t) badgeLevel {
  return result.badgeLevel;
}
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeLevel:(uint32_t) value {
  result.hasBadgeLevel = YES;
  result.badgeLevel = value;
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeLevel {
  result.hasBadgeLevel = NO;
  result.badgeLevel = 0;
  return self;
}
- (BOOL) hasBadgeProgressBits {
  return result.hasBadgeProgressBits;
}
- (uint32_t) badgeProgressBits {
  return result.badgeProgressBits;
}
- (CMsgMvMVictoryInfo_Player_Builder*) setBadgeProgressBits:(uint32_t) value {
  result.hasBadgeProgressBits = YES;
  result.badgeProgressBits = value;
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder*) clearBadgeProgressBits {
  result.hasBadgeProgressBits = NO;
  result.badgeProgressBits = 0;
  return self;
}
- (PBAppendableArray *)items {
  return result.itemsArray;
}
- (CMsgMvMVictoryInfo_Item*)itemsAtIndex:(NSUInteger)index {
  return [result itemsAtIndex:index];
}
- (CMsgMvMVictoryInfo_Player_Builder *)addItems:(CMsgMvMVictoryInfo_Item*)value {
  if (result.itemsArray == nil) {
    result.itemsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.itemsArray addObject:value];
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder *)setItemsArray:(NSArray *)array {
  result.itemsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder *)setItemsValues:(const CMsgMvMVictoryInfo_Item* *)values count:(NSUInteger)count {
  result.itemsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder *)clearItems {
  result.itemsArray = nil;
  return self;
}
- (BOOL) hasVoucherMissing {
  return result.hasVoucherMissing;
}
- (BOOL) voucherMissing {
  return result.voucherMissing;
}
- (CMsgMvMVictoryInfo_Player_Builder*) setVoucherMissing:(BOOL) value {
  result.hasVoucherMissing = YES;
  result.voucherMissing = value;
  return self;
}
- (CMsgMvMVictoryInfo_Player_Builder*) clearVoucherMissing {
  result.hasVoucherMissing = NO;
  result.voucherMissing = NO;
  return self;
}
@end

@interface CMsgMvMVictoryInfo_Builder()
@property (retain) CMsgMvMVictoryInfo* _builderResult;
@end

@implementation CMsgMvMVictoryInfo_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMvMVictoryInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMvMVictoryInfo_Builder*) clear {
  _builderResult = [[[CMsgMvMVictoryInfo alloc] init] autorelease];
  return self;
}
- (CMsgMvMVictoryInfo_Builder*) clone {
  return [CMsgMvMVictoryInfo builderWithPrototype:_builderResult];
}
- (CMsgMvMVictoryInfo*) defaultInstance {
  return [CMsgMvMVictoryInfo defaultInstance];
}
- (CMsgMvMVictoryInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMvMVictoryInfo*) buildPartial {
  CMsgMvMVictoryInfo* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMvMVictoryInfo_Builder*) mergeFrom:(CMsgMvMVictoryInfo*) other {
  if (other == [CMsgMvMVictoryInfo defaultInstance]) {
    return self;
  }
  if (other.playersArray.count > 0) {
    if (result.playersArray == nil) {
      result.playersArray = [[other.playersArray copyWithZone:[other.playersArray zone]] autorelease];
    } else {
      [result.playersArray appendArray:other.playersArray];
    }
  }
  if (other.hasTourName) {
    [self setTourName:other.tourName];
  }
  if (other.hasMissionName) {
    [self setMissionName:other.missionName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMvMVictoryInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMvMVictoryInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgMvMVictoryInfo_Player_Builder* subBuilder = [CMsgMvMVictoryInfo_Player builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPlayers:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setTourName:[input readString]];
        break;
      }
      case 26: {
        [self setMissionName:[input readString]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)players {
  return result.playersArray;
}
- (CMsgMvMVictoryInfo_Player*)playersAtIndex:(NSUInteger)index {
  return [result playersAtIndex:index];
}
- (CMsgMvMVictoryInfo_Builder *)addPlayers:(CMsgMvMVictoryInfo_Player*)value {
  if (result.playersArray == nil) {
    result.playersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.playersArray addObject:value];
  return self;
}
- (CMsgMvMVictoryInfo_Builder *)setPlayersArray:(NSArray *)array {
  result.playersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgMvMVictoryInfo_Builder *)setPlayersValues:(const CMsgMvMVictoryInfo_Player* *)values count:(NSUInteger)count {
  result.playersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgMvMVictoryInfo_Builder *)clearPlayers {
  result.playersArray = nil;
  return self;
}
- (BOOL) hasTourName {
  return result.hasTourName;
}
- (NSString*) tourName {
  return result.tourName;
}
- (CMsgMvMVictoryInfo_Builder*) setTourName:(NSString*) value {
  result.hasTourName = YES;
  result.tourName = value;
  return self;
}
- (CMsgMvMVictoryInfo_Builder*) clearTourName {
  result.hasTourName = NO;
  result.tourName = @"";
  return self;
}
- (BOOL) hasMissionName {
  return result.hasMissionName;
}
- (NSString*) missionName {
  return result.missionName;
}
- (CMsgMvMVictoryInfo_Builder*) setMissionName:(NSString*) value {
  result.hasMissionName = YES;
  result.missionName = value;
  return self;
}
- (CMsgMvMVictoryInfo_Builder*) clearMissionName {
  result.hasMissionName = NO;
  result.missionName = @"";
  return self;
}
@end

@interface CGCMsgTFHelloResponse ()
@property uint32_t versionCheck;
@property (retain) PBAppendableArray * versionChecksumArray;
@end

@implementation CGCMsgTFHelloResponse

- (BOOL) hasVersionCheck {
  return !!hasVersionCheck_;
}
- (void) setHasVersionCheck:(BOOL) value_ {
  hasVersionCheck_ = !!value_;
}
@synthesize versionCheck;
@synthesize versionChecksumArray;
@dynamic versionChecksum;
- (void) dealloc {
  self.versionChecksumArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.versionCheck = 0;
  }
  return self;
}
static CGCMsgTFHelloResponse* defaultCGCMsgTFHelloResponseInstance = nil;
+ (void) initialize {
  if (self == [CGCMsgTFHelloResponse class]) {
    defaultCGCMsgTFHelloResponseInstance = [[CGCMsgTFHelloResponse alloc] init];
  }
}
+ (CGCMsgTFHelloResponse*) defaultInstance {
  return defaultCGCMsgTFHelloResponseInstance;
}
- (CGCMsgTFHelloResponse*) defaultInstance {
  return defaultCGCMsgTFHelloResponseInstance;
}
- (PBArray *)versionChecksum {
  return versionChecksumArray;
}
- (uint64_t)versionChecksumAtIndex:(NSUInteger)index {
  return [versionChecksumArray uint64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersionCheck) {
    [output writeUInt32:1 value:self.versionCheck];
  }
  const NSUInteger versionChecksumArrayCount = self.versionChecksumArray.count;
  if (versionChecksumArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.versionChecksumArray.data;
    for (NSUInteger i = 0; i < versionChecksumArrayCount; ++i) {
      [output writeUInt64:2 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersionCheck) {
    size_ += computeUInt32Size(1, self.versionCheck);
  }
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.versionChecksumArray.count;
    const uint64_t *values = (const uint64_t *)self.versionChecksumArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CGCMsgTFHelloResponse*) parseFromData:(NSData*) data {
  return (CGCMsgTFHelloResponse*)[[[CGCMsgTFHelloResponse builder] mergeFromData:data] build];
}
+ (CGCMsgTFHelloResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CGCMsgTFHelloResponse*)[[[CGCMsgTFHelloResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CGCMsgTFHelloResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CGCMsgTFHelloResponse*)[[[CGCMsgTFHelloResponse builder] mergeFromInputStream:input] build];
}
+ (CGCMsgTFHelloResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CGCMsgTFHelloResponse*)[[[CGCMsgTFHelloResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CGCMsgTFHelloResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CGCMsgTFHelloResponse*)[[[CGCMsgTFHelloResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CGCMsgTFHelloResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CGCMsgTFHelloResponse*)[[[CGCMsgTFHelloResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CGCMsgTFHelloResponse_Builder*) builder {
  return [[[CGCMsgTFHelloResponse_Builder alloc] init] autorelease];
}
+ (CGCMsgTFHelloResponse_Builder*) builderWithPrototype:(CGCMsgTFHelloResponse*) prototype {
  return [[CGCMsgTFHelloResponse builder] mergeFrom:prototype];
}
- (CGCMsgTFHelloResponse_Builder*) builder {
  return [CGCMsgTFHelloResponse builder];
}
- (CGCMsgTFHelloResponse_Builder*) toBuilder {
  return [CGCMsgTFHelloResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersionCheck) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionCheck", [NSNumber numberWithInt:self.versionCheck]];
  }
  for (NSNumber* value in self.versionChecksumArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionChecksum", value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CGCMsgTFHelloResponse class]]) {
    return NO;
  }
  CGCMsgTFHelloResponse *otherMessage = other;
  return
      self.hasVersionCheck == otherMessage.hasVersionCheck &&
      (!self.hasVersionCheck || self.versionCheck == otherMessage.versionCheck) &&
      [self.versionChecksumArray isEqualToArray:otherMessage.versionChecksumArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasVersionCheck) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.versionCheck] hash];
  }
  for (NSNumber* value in self.versionChecksumArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CGCMsgTFHelloResponse_Builder()
@property (retain) CGCMsgTFHelloResponse* _builderResult;
@end

@implementation CGCMsgTFHelloResponse_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CGCMsgTFHelloResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CGCMsgTFHelloResponse_Builder*) clear {
  _builderResult = [[[CGCMsgTFHelloResponse alloc] init] autorelease];
  return self;
}
- (CGCMsgTFHelloResponse_Builder*) clone {
  return [CGCMsgTFHelloResponse builderWithPrototype:_builderResult];
}
- (CGCMsgTFHelloResponse*) defaultInstance {
  return [CGCMsgTFHelloResponse defaultInstance];
}
- (CGCMsgTFHelloResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CGCMsgTFHelloResponse*) buildPartial {
  CGCMsgTFHelloResponse* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CGCMsgTFHelloResponse_Builder*) mergeFrom:(CGCMsgTFHelloResponse*) other {
  if (other == [CGCMsgTFHelloResponse defaultInstance]) {
    return self;
  }
  if (other.hasVersionCheck) {
    [self setVersionCheck:other.versionCheck];
  }
  if (other.versionChecksumArray.count > 0) {
    if (result.versionChecksumArray == nil) {
      result.versionChecksumArray = [[other.versionChecksumArray copyWithZone:[other.versionChecksumArray zone]] autorelease];
    } else {
      [result.versionChecksumArray appendArray:other.versionChecksumArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CGCMsgTFHelloResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CGCMsgTFHelloResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVersionCheck:[input readUInt32]];
        break;
      }
      case 16: {
        [self addVersionChecksum:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasVersionCheck {
  return result.hasVersionCheck;
}
- (uint32_t) versionCheck {
  return result.versionCheck;
}
- (CGCMsgTFHelloResponse_Builder*) setVersionCheck:(uint32_t) value {
  result.hasVersionCheck = YES;
  result.versionCheck = value;
  return self;
}
- (CGCMsgTFHelloResponse_Builder*) clearVersionCheck {
  result.hasVersionCheck = NO;
  result.versionCheck = 0;
  return self;
}
- (PBAppendableArray *)versionChecksum {
  return result.versionChecksumArray;
}
- (uint64_t)versionChecksumAtIndex:(NSUInteger)index {
  return [result versionChecksumAtIndex:index];
}
- (CGCMsgTFHelloResponse_Builder *)addVersionChecksum:(uint64_t)value {
  if (result.versionChecksumArray == nil) {
    result.versionChecksumArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [result.versionChecksumArray addUint64:value];
  return self;
}
- (CGCMsgTFHelloResponse_Builder *)setVersionChecksumArray:(NSArray *)array {
  result.versionChecksumArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CGCMsgTFHelloResponse_Builder *)setVersionChecksumValues:(const uint64_t *)values count:(NSUInteger)count {
  result.versionChecksumArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CGCMsgTFHelloResponse_Builder *)clearVersionChecksum {
  result.versionChecksumArray = nil;
  return self;
}
@end

@interface CGCMsgTFSync ()
@property (retain) NSData* versionChecksum;
@property uint32_t versionCheck;
@end

@implementation CGCMsgTFSync

- (BOOL) hasVersionChecksum {
  return !!hasVersionChecksum_;
}
- (void) setHasVersionChecksum:(BOOL) value_ {
  hasVersionChecksum_ = !!value_;
}
@synthesize versionChecksum;
- (BOOL) hasVersionCheck {
  return !!hasVersionCheck_;
}
- (void) setHasVersionCheck:(BOOL) value_ {
  hasVersionCheck_ = !!value_;
}
@synthesize versionCheck;
- (void) dealloc {
  self.versionChecksum = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.versionChecksum = [NSData data];
    self.versionCheck = 0;
  }
  return self;
}
static CGCMsgTFSync* defaultCGCMsgTFSyncInstance = nil;
+ (void) initialize {
  if (self == [CGCMsgTFSync class]) {
    defaultCGCMsgTFSyncInstance = [[CGCMsgTFSync alloc] init];
  }
}
+ (CGCMsgTFSync*) defaultInstance {
  return defaultCGCMsgTFSyncInstance;
}
- (CGCMsgTFSync*) defaultInstance {
  return defaultCGCMsgTFSyncInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersionChecksum) {
    [output writeData:1 value:self.versionChecksum];
  }
  if (self.hasVersionCheck) {
    [output writeUInt32:2 value:self.versionCheck];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersionChecksum) {
    size_ += computeDataSize(1, self.versionChecksum);
  }
  if (self.hasVersionCheck) {
    size_ += computeUInt32Size(2, self.versionCheck);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CGCMsgTFSync*) parseFromData:(NSData*) data {
  return (CGCMsgTFSync*)[[[CGCMsgTFSync builder] mergeFromData:data] build];
}
+ (CGCMsgTFSync*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CGCMsgTFSync*)[[[CGCMsgTFSync builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CGCMsgTFSync*) parseFromInputStream:(NSInputStream*) input {
  return (CGCMsgTFSync*)[[[CGCMsgTFSync builder] mergeFromInputStream:input] build];
}
+ (CGCMsgTFSync*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CGCMsgTFSync*)[[[CGCMsgTFSync builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CGCMsgTFSync*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CGCMsgTFSync*)[[[CGCMsgTFSync builder] mergeFromCodedInputStream:input] build];
}
+ (CGCMsgTFSync*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CGCMsgTFSync*)[[[CGCMsgTFSync builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CGCMsgTFSync_Builder*) builder {
  return [[[CGCMsgTFSync_Builder alloc] init] autorelease];
}
+ (CGCMsgTFSync_Builder*) builderWithPrototype:(CGCMsgTFSync*) prototype {
  return [[CGCMsgTFSync builder] mergeFrom:prototype];
}
- (CGCMsgTFSync_Builder*) builder {
  return [CGCMsgTFSync builder];
}
- (CGCMsgTFSync_Builder*) toBuilder {
  return [CGCMsgTFSync builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersionChecksum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionChecksum", self.versionChecksum];
  }
  if (self.hasVersionCheck) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionCheck", [NSNumber numberWithInt:self.versionCheck]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CGCMsgTFSync class]]) {
    return NO;
  }
  CGCMsgTFSync *otherMessage = other;
  return
      self.hasVersionChecksum == otherMessage.hasVersionChecksum &&
      (!self.hasVersionChecksum || [self.versionChecksum isEqual:otherMessage.versionChecksum]) &&
      self.hasVersionCheck == otherMessage.hasVersionCheck &&
      (!self.hasVersionCheck || self.versionCheck == otherMessage.versionCheck) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasVersionChecksum) {
    hashCode = hashCode * 31 + [self.versionChecksum hash];
  }
  if (self.hasVersionCheck) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.versionCheck] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CGCMsgTFSync_Builder()
@property (retain) CGCMsgTFSync* _builderResult;
@end

@implementation CGCMsgTFSync_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CGCMsgTFSync alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CGCMsgTFSync_Builder*) clear {
  _builderResult = [[[CGCMsgTFSync alloc] init] autorelease];
  return self;
}
- (CGCMsgTFSync_Builder*) clone {
  return [CGCMsgTFSync builderWithPrototype:_builderResult];
}
- (CGCMsgTFSync*) defaultInstance {
  return [CGCMsgTFSync defaultInstance];
}
- (CGCMsgTFSync*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CGCMsgTFSync*) buildPartial {
  CGCMsgTFSync* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CGCMsgTFSync_Builder*) mergeFrom:(CGCMsgTFSync*) other {
  if (other == [CGCMsgTFSync defaultInstance]) {
    return self;
  }
  if (other.hasVersionChecksum) {
    [self setVersionChecksum:other.versionChecksum];
  }
  if (other.hasVersionCheck) {
    [self setVersionCheck:other.versionCheck];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CGCMsgTFSync_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CGCMsgTFSync_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setVersionChecksum:[input readData]];
        break;
      }
      case 16: {
        [self setVersionCheck:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasVersionChecksum {
  return result.hasVersionChecksum;
}
- (NSData*) versionChecksum {
  return result.versionChecksum;
}
- (CGCMsgTFSync_Builder*) setVersionChecksum:(NSData*) value {
  result.hasVersionChecksum = YES;
  result.versionChecksum = value;
  return self;
}
- (CGCMsgTFSync_Builder*) clearVersionChecksum {
  result.hasVersionChecksum = NO;
  result.versionChecksum = [NSData data];
  return self;
}
- (BOOL) hasVersionCheck {
  return result.hasVersionCheck;
}
- (uint32_t) versionCheck {
  return result.versionCheck;
}
- (CGCMsgTFSync_Builder*) setVersionCheck:(uint32_t) value {
  result.hasVersionCheck = YES;
  result.versionCheck = value;
  return self;
}
- (CGCMsgTFSync_Builder*) clearVersionCheck {
  result.hasVersionCheck = NO;
  result.versionCheck = 0;
  return self;
}
@end

@interface CMsgMvMVictory ()
@property uint32_t legacyMissionIndex;
@property (retain) NSString* tourNameMannup;
@property (retain) NSString* missionName;
@property (retain) PBAppendableArray * playersArray;
@property uint64_t lobbyId;
@property uint32_t eventTime;
@end

@implementation CMsgMvMVictory

- (BOOL) hasLegacyMissionIndex {
  return !!hasLegacyMissionIndex_;
}
- (void) setHasLegacyMissionIndex:(BOOL) value_ {
  hasLegacyMissionIndex_ = !!value_;
}
@synthesize legacyMissionIndex;
- (BOOL) hasTourNameMannup {
  return !!hasTourNameMannup_;
}
- (void) setHasTourNameMannup:(BOOL) value_ {
  hasTourNameMannup_ = !!value_;
}
@synthesize tourNameMannup;
- (BOOL) hasMissionName {
  return !!hasMissionName_;
}
- (void) setHasMissionName:(BOOL) value_ {
  hasMissionName_ = !!value_;
}
@synthesize missionName;
@synthesize playersArray;
@dynamic players;
- (BOOL) hasLobbyId {
  return !!hasLobbyId_;
}
- (void) setHasLobbyId:(BOOL) value_ {
  hasLobbyId_ = !!value_;
}
@synthesize lobbyId;
- (BOOL) hasEventTime {
  return !!hasEventTime_;
}
- (void) setHasEventTime:(BOOL) value_ {
  hasEventTime_ = !!value_;
}
@synthesize eventTime;
- (void) dealloc {
  self.tourNameMannup = nil;
  self.missionName = nil;
  self.playersArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.legacyMissionIndex = 0;
    self.tourNameMannup = @"";
    self.missionName = @"";
    self.lobbyId = 0L;
    self.eventTime = 0;
  }
  return self;
}
static CMsgMvMVictory* defaultCMsgMvMVictoryInstance = nil;
+ (void) initialize {
  if (self == [CMsgMvMVictory class]) {
    defaultCMsgMvMVictoryInstance = [[CMsgMvMVictory alloc] init];
  }
}
+ (CMsgMvMVictory*) defaultInstance {
  return defaultCMsgMvMVictoryInstance;
}
- (CMsgMvMVictory*) defaultInstance {
  return defaultCMsgMvMVictoryInstance;
}
- (PBArray *)players {
  return playersArray;
}
- (CMsgMvMVictory_Player*)playersAtIndex:(NSUInteger)index {
  return [playersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLegacyMissionIndex) {
    [output writeUInt32:1 value:self.legacyMissionIndex];
  }
  for (CMsgMvMVictory_Player *element in self.playersArray) {
    [output writeMessage:2 value:element];
  }
  if (self.hasLobbyId) {
    [output writeUInt64:3 value:self.lobbyId];
  }
  if (self.hasEventTime) {
    [output writeFixed32:4 value:self.eventTime];
  }
  if (self.hasTourNameMannup) {
    [output writeString:5 value:self.tourNameMannup];
  }
  if (self.hasMissionName) {
    [output writeString:6 value:self.missionName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLegacyMissionIndex) {
    size_ += computeUInt32Size(1, self.legacyMissionIndex);
  }
  for (CMsgMvMVictory_Player *element in self.playersArray) {
    size_ += computeMessageSize(2, element);
  }
  if (self.hasLobbyId) {
    size_ += computeUInt64Size(3, self.lobbyId);
  }
  if (self.hasEventTime) {
    size_ += computeFixed32Size(4, self.eventTime);
  }
  if (self.hasTourNameMannup) {
    size_ += computeStringSize(5, self.tourNameMannup);
  }
  if (self.hasMissionName) {
    size_ += computeStringSize(6, self.missionName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMvMVictory*) parseFromData:(NSData*) data {
  return (CMsgMvMVictory*)[[[CMsgMvMVictory builder] mergeFromData:data] build];
}
+ (CMsgMvMVictory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictory*)[[[CMsgMvMVictory builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictory*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMvMVictory*)[[[CMsgMvMVictory builder] mergeFromInputStream:input] build];
}
+ (CMsgMvMVictory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictory*)[[[CMsgMvMVictory builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictory*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMvMVictory*)[[[CMsgMvMVictory builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMvMVictory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictory*)[[[CMsgMvMVictory builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictory_Builder*) builder {
  return [[[CMsgMvMVictory_Builder alloc] init] autorelease];
}
+ (CMsgMvMVictory_Builder*) builderWithPrototype:(CMsgMvMVictory*) prototype {
  return [[CMsgMvMVictory builder] mergeFrom:prototype];
}
- (CMsgMvMVictory_Builder*) builder {
  return [CMsgMvMVictory builder];
}
- (CMsgMvMVictory_Builder*) toBuilder {
  return [CMsgMvMVictory builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLegacyMissionIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"legacyMissionIndex", [NSNumber numberWithInt:self.legacyMissionIndex]];
  }
  for (CMsgMvMVictory_Player* element in self.playersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"players"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasLobbyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lobbyId", [NSNumber numberWithLongLong:self.lobbyId]];
  }
  if (self.hasEventTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"eventTime", [NSNumber numberWithInt:self.eventTime]];
  }
  if (self.hasTourNameMannup) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tourNameMannup", self.tourNameMannup];
  }
  if (self.hasMissionName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"missionName", self.missionName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMvMVictory class]]) {
    return NO;
  }
  CMsgMvMVictory *otherMessage = other;
  return
      self.hasLegacyMissionIndex == otherMessage.hasLegacyMissionIndex &&
      (!self.hasLegacyMissionIndex || self.legacyMissionIndex == otherMessage.legacyMissionIndex) &&
      [self.playersArray isEqualToArray:otherMessage.playersArray] &&
      self.hasLobbyId == otherMessage.hasLobbyId &&
      (!self.hasLobbyId || self.lobbyId == otherMessage.lobbyId) &&
      self.hasEventTime == otherMessage.hasEventTime &&
      (!self.hasEventTime || self.eventTime == otherMessage.eventTime) &&
      self.hasTourNameMannup == otherMessage.hasTourNameMannup &&
      (!self.hasTourNameMannup || [self.tourNameMannup isEqual:otherMessage.tourNameMannup]) &&
      self.hasMissionName == otherMessage.hasMissionName &&
      (!self.hasMissionName || [self.missionName isEqual:otherMessage.missionName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasLegacyMissionIndex) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.legacyMissionIndex] hash];
  }
  for (CMsgMvMVictory_Player* element in self.playersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasLobbyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lobbyId] hash];
  }
  if (self.hasEventTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.eventTime] hash];
  }
  if (self.hasTourNameMannup) {
    hashCode = hashCode * 31 + [self.tourNameMannup hash];
  }
  if (self.hasMissionName) {
    hashCode = hashCode * 31 + [self.missionName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMvMVictory_Player ()
@property uint64_t steamId;
@property BOOL squadSurplus;
@end

@implementation CMsgMvMVictory_Player

- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (BOOL) hasSquadSurplus {
  return !!hasSquadSurplus_;
}
- (void) setHasSquadSurplus:(BOOL) value_ {
  hasSquadSurplus_ = !!value_;
}
- (BOOL) squadSurplus {
  return !!squadSurplus_;
}
- (void) setSquadSurplus:(BOOL) value_ {
  squadSurplus_ = !!value_;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.steamId = 0L;
    self.squadSurplus = NO;
  }
  return self;
}
static CMsgMvMVictory_Player* defaultCMsgMvMVictory_PlayerInstance = nil;
+ (void) initialize {
  if (self == [CMsgMvMVictory_Player class]) {
    defaultCMsgMvMVictory_PlayerInstance = [[CMsgMvMVictory_Player alloc] init];
  }
}
+ (CMsgMvMVictory_Player*) defaultInstance {
  return defaultCMsgMvMVictory_PlayerInstance;
}
- (CMsgMvMVictory_Player*) defaultInstance {
  return defaultCMsgMvMVictory_PlayerInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSteamId) {
    [output writeFixed64:1 value:self.steamId];
  }
  if (self.hasSquadSurplus) {
    [output writeBool:2 value:self.squadSurplus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSteamId) {
    size_ += computeFixed64Size(1, self.steamId);
  }
  if (self.hasSquadSurplus) {
    size_ += computeBoolSize(2, self.squadSurplus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMvMVictory_Player*) parseFromData:(NSData*) data {
  return (CMsgMvMVictory_Player*)[[[CMsgMvMVictory_Player builder] mergeFromData:data] build];
}
+ (CMsgMvMVictory_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictory_Player*)[[[CMsgMvMVictory_Player builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictory_Player*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMvMVictory_Player*)[[[CMsgMvMVictory_Player builder] mergeFromInputStream:input] build];
}
+ (CMsgMvMVictory_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictory_Player*)[[[CMsgMvMVictory_Player builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictory_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMvMVictory_Player*)[[[CMsgMvMVictory_Player builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMvMVictory_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMVictory_Player*)[[[CMsgMvMVictory_Player builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMVictory_Player_Builder*) builder {
  return [[[CMsgMvMVictory_Player_Builder alloc] init] autorelease];
}
+ (CMsgMvMVictory_Player_Builder*) builderWithPrototype:(CMsgMvMVictory_Player*) prototype {
  return [[CMsgMvMVictory_Player builder] mergeFrom:prototype];
}
- (CMsgMvMVictory_Player_Builder*) builder {
  return [CMsgMvMVictory_Player builder];
}
- (CMsgMvMVictory_Player_Builder*) toBuilder {
  return [CMsgMvMVictory_Player builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  if (self.hasSquadSurplus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"squadSurplus", [NSNumber numberWithBool:self.squadSurplus]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMvMVictory_Player class]]) {
    return NO;
  }
  CMsgMvMVictory_Player *otherMessage = other;
  return
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      self.hasSquadSurplus == otherMessage.hasSquadSurplus &&
      (!self.hasSquadSurplus || self.squadSurplus == otherMessage.squadSurplus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  if (self.hasSquadSurplus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.squadSurplus] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMvMVictory_Player_Builder()
@property (retain) CMsgMvMVictory_Player* _builderResult;
@end

@implementation CMsgMvMVictory_Player_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMvMVictory_Player alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMvMVictory_Player_Builder*) clear {
  _builderResult = [[[CMsgMvMVictory_Player alloc] init] autorelease];
  return self;
}
- (CMsgMvMVictory_Player_Builder*) clone {
  return [CMsgMvMVictory_Player builderWithPrototype:_builderResult];
}
- (CMsgMvMVictory_Player*) defaultInstance {
  return [CMsgMvMVictory_Player defaultInstance];
}
- (CMsgMvMVictory_Player*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMvMVictory_Player*) buildPartial {
  CMsgMvMVictory_Player* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMvMVictory_Player_Builder*) mergeFrom:(CMsgMvMVictory_Player*) other {
  if (other == [CMsgMvMVictory_Player defaultInstance]) {
    return self;
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  if (other.hasSquadSurplus) {
    [self setSquadSurplus:other.squadSurplus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMvMVictory_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMvMVictory_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setSteamId:[input readFixed64]];
        break;
      }
      case 16: {
        [self setSquadSurplus:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgMvMVictory_Player_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgMvMVictory_Player_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
- (BOOL) hasSquadSurplus {
  return result.hasSquadSurplus;
}
- (BOOL) squadSurplus {
  return result.squadSurplus;
}
- (CMsgMvMVictory_Player_Builder*) setSquadSurplus:(BOOL) value {
  result.hasSquadSurplus = YES;
  result.squadSurplus = value;
  return self;
}
- (CMsgMvMVictory_Player_Builder*) clearSquadSurplus {
  result.hasSquadSurplus = NO;
  result.squadSurplus = NO;
  return self;
}
@end

@interface CMsgMvMVictory_Builder()
@property (retain) CMsgMvMVictory* _builderResult;
@end

@implementation CMsgMvMVictory_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMvMVictory alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMvMVictory_Builder*) clear {
  _builderResult = [[[CMsgMvMVictory alloc] init] autorelease];
  return self;
}
- (CMsgMvMVictory_Builder*) clone {
  return [CMsgMvMVictory builderWithPrototype:_builderResult];
}
- (CMsgMvMVictory*) defaultInstance {
  return [CMsgMvMVictory defaultInstance];
}
- (CMsgMvMVictory*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMvMVictory*) buildPartial {
  CMsgMvMVictory* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMvMVictory_Builder*) mergeFrom:(CMsgMvMVictory*) other {
  if (other == [CMsgMvMVictory defaultInstance]) {
    return self;
  }
  if (other.hasLegacyMissionIndex) {
    [self setLegacyMissionIndex:other.legacyMissionIndex];
  }
  if (other.hasTourNameMannup) {
    [self setTourNameMannup:other.tourNameMannup];
  }
  if (other.hasMissionName) {
    [self setMissionName:other.missionName];
  }
  if (other.playersArray.count > 0) {
    if (result.playersArray == nil) {
      result.playersArray = [[other.playersArray copyWithZone:[other.playersArray zone]] autorelease];
    } else {
      [result.playersArray appendArray:other.playersArray];
    }
  }
  if (other.hasLobbyId) {
    [self setLobbyId:other.lobbyId];
  }
  if (other.hasEventTime) {
    [self setEventTime:other.eventTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMvMVictory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMvMVictory_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLegacyMissionIndex:[input readUInt32]];
        break;
      }
      case 18: {
        CMsgMvMVictory_Player_Builder* subBuilder = [CMsgMvMVictory_Player builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPlayers:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setLobbyId:[input readUInt64]];
        break;
      }
      case 37: {
        [self setEventTime:[input readFixed32]];
        break;
      }
      case 42: {
        [self setTourNameMannup:[input readString]];
        break;
      }
      case 50: {
        [self setMissionName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLegacyMissionIndex {
  return result.hasLegacyMissionIndex;
}
- (uint32_t) legacyMissionIndex {
  return result.legacyMissionIndex;
}
- (CMsgMvMVictory_Builder*) setLegacyMissionIndex:(uint32_t) value {
  result.hasLegacyMissionIndex = YES;
  result.legacyMissionIndex = value;
  return self;
}
- (CMsgMvMVictory_Builder*) clearLegacyMissionIndex {
  result.hasLegacyMissionIndex = NO;
  result.legacyMissionIndex = 0;
  return self;
}
- (BOOL) hasTourNameMannup {
  return result.hasTourNameMannup;
}
- (NSString*) tourNameMannup {
  return result.tourNameMannup;
}
- (CMsgMvMVictory_Builder*) setTourNameMannup:(NSString*) value {
  result.hasTourNameMannup = YES;
  result.tourNameMannup = value;
  return self;
}
- (CMsgMvMVictory_Builder*) clearTourNameMannup {
  result.hasTourNameMannup = NO;
  result.tourNameMannup = @"";
  return self;
}
- (BOOL) hasMissionName {
  return result.hasMissionName;
}
- (NSString*) missionName {
  return result.missionName;
}
- (CMsgMvMVictory_Builder*) setMissionName:(NSString*) value {
  result.hasMissionName = YES;
  result.missionName = value;
  return self;
}
- (CMsgMvMVictory_Builder*) clearMissionName {
  result.hasMissionName = NO;
  result.missionName = @"";
  return self;
}
- (PBAppendableArray *)players {
  return result.playersArray;
}
- (CMsgMvMVictory_Player*)playersAtIndex:(NSUInteger)index {
  return [result playersAtIndex:index];
}
- (CMsgMvMVictory_Builder *)addPlayers:(CMsgMvMVictory_Player*)value {
  if (result.playersArray == nil) {
    result.playersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.playersArray addObject:value];
  return self;
}
- (CMsgMvMVictory_Builder *)setPlayersArray:(NSArray *)array {
  result.playersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgMvMVictory_Builder *)setPlayersValues:(const CMsgMvMVictory_Player* *)values count:(NSUInteger)count {
  result.playersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgMvMVictory_Builder *)clearPlayers {
  result.playersArray = nil;
  return self;
}
- (BOOL) hasLobbyId {
  return result.hasLobbyId;
}
- (uint64_t) lobbyId {
  return result.lobbyId;
}
- (CMsgMvMVictory_Builder*) setLobbyId:(uint64_t) value {
  result.hasLobbyId = YES;
  result.lobbyId = value;
  return self;
}
- (CMsgMvMVictory_Builder*) clearLobbyId {
  result.hasLobbyId = NO;
  result.lobbyId = 0L;
  return self;
}
- (BOOL) hasEventTime {
  return result.hasEventTime;
}
- (uint32_t) eventTime {
  return result.eventTime;
}
- (CMsgMvMVictory_Builder*) setEventTime:(uint32_t) value {
  result.hasEventTime = YES;
  result.eventTime = value;
  return self;
}
- (CMsgMvMVictory_Builder*) clearEventTime {
  result.hasEventTime = NO;
  result.eventTime = 0;
  return self;
}
@end

@interface CMsgMvMMannUpVictoryReply ()
@property uint32_t result;
@end

@implementation CMsgMvMMannUpVictoryReply

- (BOOL) hasResult {
  return !!hasResult_;
}
- (void) setHasResult:(BOOL) value_ {
  hasResult_ = !!value_;
}
@synthesize result;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = 0;
  }
  return self;
}
static CMsgMvMMannUpVictoryReply* defaultCMsgMvMMannUpVictoryReplyInstance = nil;
+ (void) initialize {
  if (self == [CMsgMvMMannUpVictoryReply class]) {
    defaultCMsgMvMMannUpVictoryReplyInstance = [[CMsgMvMMannUpVictoryReply alloc] init];
  }
}
+ (CMsgMvMMannUpVictoryReply*) defaultInstance {
  return defaultCMsgMvMMannUpVictoryReplyInstance;
}
- (CMsgMvMMannUpVictoryReply*) defaultInstance {
  return defaultCMsgMvMMannUpVictoryReplyInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResult) {
    [output writeUInt32:1 value:self.result];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResult) {
    size_ += computeUInt32Size(1, self.result);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMvMMannUpVictoryReply*) parseFromData:(NSData*) data {
  return (CMsgMvMMannUpVictoryReply*)[[[CMsgMvMMannUpVictoryReply builder] mergeFromData:data] build];
}
+ (CMsgMvMMannUpVictoryReply*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMMannUpVictoryReply*)[[[CMsgMvMMannUpVictoryReply builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMMannUpVictoryReply*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMvMMannUpVictoryReply*)[[[CMsgMvMMannUpVictoryReply builder] mergeFromInputStream:input] build];
}
+ (CMsgMvMMannUpVictoryReply*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMMannUpVictoryReply*)[[[CMsgMvMMannUpVictoryReply builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMMannUpVictoryReply*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMvMMannUpVictoryReply*)[[[CMsgMvMMannUpVictoryReply builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMvMMannUpVictoryReply*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMvMMannUpVictoryReply*)[[[CMsgMvMMannUpVictoryReply builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMvMMannUpVictoryReply_Builder*) builder {
  return [[[CMsgMvMMannUpVictoryReply_Builder alloc] init] autorelease];
}
+ (CMsgMvMMannUpVictoryReply_Builder*) builderWithPrototype:(CMsgMvMMannUpVictoryReply*) prototype {
  return [[CMsgMvMMannUpVictoryReply builder] mergeFrom:prototype];
}
- (CMsgMvMMannUpVictoryReply_Builder*) builder {
  return [CMsgMvMMannUpVictoryReply builder];
}
- (CMsgMvMMannUpVictoryReply_Builder*) toBuilder {
  return [CMsgMvMMannUpVictoryReply builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResult) {
    [output appendFormat:@"%@%@: %@\n", indent, @"result", [NSNumber numberWithInt:self.result]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMvMMannUpVictoryReply class]]) {
    return NO;
  }
  CMsgMvMMannUpVictoryReply *otherMessage = other;
  return
      self.hasResult == otherMessage.hasResult &&
      (!self.hasResult || self.result == otherMessage.result) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasResult) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.result] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMvMMannUpVictoryReply_Builder()
@property (retain) CMsgMvMMannUpVictoryReply* _builderResult;
@end

@implementation CMsgMvMMannUpVictoryReply_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgMvMMannUpVictoryReply alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgMvMMannUpVictoryReply_Builder*) clear {
  _builderResult = [[[CMsgMvMMannUpVictoryReply alloc] init] autorelease];
  return self;
}
- (CMsgMvMMannUpVictoryReply_Builder*) clone {
  return [CMsgMvMMannUpVictoryReply builderWithPrototype:_builderResult];
}
- (CMsgMvMMannUpVictoryReply*) defaultInstance {
  return [CMsgMvMMannUpVictoryReply defaultInstance];
}
- (CMsgMvMMannUpVictoryReply*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMvMMannUpVictoryReply*) buildPartial {
  CMsgMvMMannUpVictoryReply* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgMvMMannUpVictoryReply_Builder*) mergeFrom:(CMsgMvMMannUpVictoryReply*) other {
  if (other == [CMsgMvMMannUpVictoryReply defaultInstance]) {
    return self;
  }
  if (other.hasResult) {
    [self setResult:other.result];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMvMMannUpVictoryReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMvMMannUpVictoryReply_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResult:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasResult {
  return result.hasResult;
}
- (uint32_t) result {
  return result.result;
}
- (CMsgMvMMannUpVictoryReply_Builder*) setResult:(uint32_t) value {
  result.hasResult = YES;
  result.result = value;
  return self;
}
- (CMsgMvMMannUpVictoryReply_Builder*) clearResult {
  result.hasResult = NO;
  result.result = 0;
  return self;
}
@end

@interface CMsgGameServerKickingLobby ()
@property (retain) PBAppendableArray * connectedPlayersArray;
@end

@implementation CMsgGameServerKickingLobby

@synthesize connectedPlayersArray;
@dynamic connectedPlayers;
- (void) dealloc {
  self.connectedPlayersArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CMsgGameServerKickingLobby* defaultCMsgGameServerKickingLobbyInstance = nil;
+ (void) initialize {
  if (self == [CMsgGameServerKickingLobby class]) {
    defaultCMsgGameServerKickingLobbyInstance = [[CMsgGameServerKickingLobby alloc] init];
  }
}
+ (CMsgGameServerKickingLobby*) defaultInstance {
  return defaultCMsgGameServerKickingLobbyInstance;
}
- (CMsgGameServerKickingLobby*) defaultInstance {
  return defaultCMsgGameServerKickingLobbyInstance;
}
- (PBArray *)connectedPlayers {
  return connectedPlayersArray;
}
- (uint64_t)connectedPlayersAtIndex:(NSUInteger)index {
  return [connectedPlayersArray uint64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger connectedPlayersArrayCount = self.connectedPlayersArray.count;
  if (connectedPlayersArrayCount > 0) {
    const uint64_t *values = (const uint64_t *)self.connectedPlayersArray.data;
    for (NSUInteger i = 0; i < connectedPlayersArrayCount; ++i) {
      [output writeFixed64:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    int32_t dataSize = 0;
    const NSUInteger count = self.connectedPlayersArray.count;
    dataSize = 8 * count;
    size_ += dataSize;
    size_ += 1 * count;
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgGameServerKickingLobby*) parseFromData:(NSData*) data {
  return (CMsgGameServerKickingLobby*)[[[CMsgGameServerKickingLobby builder] mergeFromData:data] build];
}
+ (CMsgGameServerKickingLobby*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameServerKickingLobby*)[[[CMsgGameServerKickingLobby builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameServerKickingLobby*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgGameServerKickingLobby*)[[[CMsgGameServerKickingLobby builder] mergeFromInputStream:input] build];
}
+ (CMsgGameServerKickingLobby*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameServerKickingLobby*)[[[CMsgGameServerKickingLobby builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameServerKickingLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgGameServerKickingLobby*)[[[CMsgGameServerKickingLobby builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgGameServerKickingLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgGameServerKickingLobby*)[[[CMsgGameServerKickingLobby builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgGameServerKickingLobby_Builder*) builder {
  return [[[CMsgGameServerKickingLobby_Builder alloc] init] autorelease];
}
+ (CMsgGameServerKickingLobby_Builder*) builderWithPrototype:(CMsgGameServerKickingLobby*) prototype {
  return [[CMsgGameServerKickingLobby builder] mergeFrom:prototype];
}
- (CMsgGameServerKickingLobby_Builder*) builder {
  return [CMsgGameServerKickingLobby builder];
}
- (CMsgGameServerKickingLobby_Builder*) toBuilder {
  return [CMsgGameServerKickingLobby builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (NSNumber* value in self.connectedPlayersArray) {
    [output appendFormat:@"%@%@: %@\n", indent, @"connectedPlayers", value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgGameServerKickingLobby class]]) {
    return NO;
  }
  CMsgGameServerKickingLobby *otherMessage = other;
  return
      [self.connectedPlayersArray isEqualToArray:otherMessage.connectedPlayersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (NSNumber* value in self.connectedPlayersArray) {
    hashCode = hashCode * 31 + [value intValue];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgGameServerKickingLobby_Builder()
@property (retain) CMsgGameServerKickingLobby* _builderResult;
@end

@implementation CMsgGameServerKickingLobby_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgGameServerKickingLobby alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgGameServerKickingLobby_Builder*) clear {
  _builderResult = [[[CMsgGameServerKickingLobby alloc] init] autorelease];
  return self;
}
- (CMsgGameServerKickingLobby_Builder*) clone {
  return [CMsgGameServerKickingLobby builderWithPrototype:_builderResult];
}
- (CMsgGameServerKickingLobby*) defaultInstance {
  return [CMsgGameServerKickingLobby defaultInstance];
}
- (CMsgGameServerKickingLobby*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgGameServerKickingLobby*) buildPartial {
  CMsgGameServerKickingLobby* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgGameServerKickingLobby_Builder*) mergeFrom:(CMsgGameServerKickingLobby*) other {
  if (other == [CMsgGameServerKickingLobby defaultInstance]) {
    return self;
  }
  if (other.connectedPlayersArray.count > 0) {
    if (result.connectedPlayersArray == nil) {
      result.connectedPlayersArray = [[other.connectedPlayersArray copyWithZone:[other.connectedPlayersArray zone]] autorelease];
    } else {
      [result.connectedPlayersArray appendArray:other.connectedPlayersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgGameServerKickingLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgGameServerKickingLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self addConnectedPlayers:[input readFixed64]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)connectedPlayers {
  return result.connectedPlayersArray;
}
- (uint64_t)connectedPlayersAtIndex:(NSUInteger)index {
  return [result connectedPlayersAtIndex:index];
}
- (CMsgGameServerKickingLobby_Builder *)addConnectedPlayers:(uint64_t)value {
  if (result.connectedPlayersArray == nil) {
    result.connectedPlayersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt64];
  }
  [result.connectedPlayersArray addUint64:value];
  return self;
}
- (CMsgGameServerKickingLobby_Builder *)setConnectedPlayersArray:(NSArray *)array {
  result.connectedPlayersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CMsgGameServerKickingLobby_Builder *)setConnectedPlayersValues:(const uint64_t *)values count:(NSUInteger)count {
  result.connectedPlayersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt64];
  return self;
}
- (CMsgGameServerKickingLobby_Builder *)clearConnectedPlayers {
  result.connectedPlayersArray = nil;
  return self;
}
@end

@interface CMsgLeaveGameAndPrepareToJoinParty ()
@property uint64_t partyId;
@end

@implementation CMsgLeaveGameAndPrepareToJoinParty

- (BOOL) hasPartyId {
  return !!hasPartyId_;
}
- (void) setHasPartyId:(BOOL) value_ {
  hasPartyId_ = !!value_;
}
@synthesize partyId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.partyId = 0L;
  }
  return self;
}
static CMsgLeaveGameAndPrepareToJoinParty* defaultCMsgLeaveGameAndPrepareToJoinPartyInstance = nil;
+ (void) initialize {
  if (self == [CMsgLeaveGameAndPrepareToJoinParty class]) {
    defaultCMsgLeaveGameAndPrepareToJoinPartyInstance = [[CMsgLeaveGameAndPrepareToJoinParty alloc] init];
  }
}
+ (CMsgLeaveGameAndPrepareToJoinParty*) defaultInstance {
  return defaultCMsgLeaveGameAndPrepareToJoinPartyInstance;
}
- (CMsgLeaveGameAndPrepareToJoinParty*) defaultInstance {
  return defaultCMsgLeaveGameAndPrepareToJoinPartyInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPartyId) {
    [output writeFixed64:1 value:self.partyId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPartyId) {
    size_ += computeFixed64Size(1, self.partyId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromData:(NSData*) data {
  return (CMsgLeaveGameAndPrepareToJoinParty*)[[[CMsgLeaveGameAndPrepareToJoinParty builder] mergeFromData:data] build];
}
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgLeaveGameAndPrepareToJoinParty*)[[[CMsgLeaveGameAndPrepareToJoinParty builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgLeaveGameAndPrepareToJoinParty*)[[[CMsgLeaveGameAndPrepareToJoinParty builder] mergeFromInputStream:input] build];
}
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgLeaveGameAndPrepareToJoinParty*)[[[CMsgLeaveGameAndPrepareToJoinParty builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgLeaveGameAndPrepareToJoinParty*)[[[CMsgLeaveGameAndPrepareToJoinParty builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgLeaveGameAndPrepareToJoinParty*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgLeaveGameAndPrepareToJoinParty*)[[[CMsgLeaveGameAndPrepareToJoinParty builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgLeaveGameAndPrepareToJoinParty_Builder*) builder {
  return [[[CMsgLeaveGameAndPrepareToJoinParty_Builder alloc] init] autorelease];
}
+ (CMsgLeaveGameAndPrepareToJoinParty_Builder*) builderWithPrototype:(CMsgLeaveGameAndPrepareToJoinParty*) prototype {
  return [[CMsgLeaveGameAndPrepareToJoinParty builder] mergeFrom:prototype];
}
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) builder {
  return [CMsgLeaveGameAndPrepareToJoinParty builder];
}
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) toBuilder {
  return [CMsgLeaveGameAndPrepareToJoinParty builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPartyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"partyId", [NSNumber numberWithLongLong:self.partyId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgLeaveGameAndPrepareToJoinParty class]]) {
    return NO;
  }
  CMsgLeaveGameAndPrepareToJoinParty *otherMessage = other;
  return
      self.hasPartyId == otherMessage.hasPartyId &&
      (!self.hasPartyId || self.partyId == otherMessage.partyId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasPartyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.partyId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgLeaveGameAndPrepareToJoinParty_Builder()
@property (retain) CMsgLeaveGameAndPrepareToJoinParty* _builderResult;
@end

@implementation CMsgLeaveGameAndPrepareToJoinParty_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgLeaveGameAndPrepareToJoinParty alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) clear {
  _builderResult = [[[CMsgLeaveGameAndPrepareToJoinParty alloc] init] autorelease];
  return self;
}
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) clone {
  return [CMsgLeaveGameAndPrepareToJoinParty builderWithPrototype:_builderResult];
}
- (CMsgLeaveGameAndPrepareToJoinParty*) defaultInstance {
  return [CMsgLeaveGameAndPrepareToJoinParty defaultInstance];
}
- (CMsgLeaveGameAndPrepareToJoinParty*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgLeaveGameAndPrepareToJoinParty*) buildPartial {
  CMsgLeaveGameAndPrepareToJoinParty* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) mergeFrom:(CMsgLeaveGameAndPrepareToJoinParty*) other {
  if (other == [CMsgLeaveGameAndPrepareToJoinParty defaultInstance]) {
    return self;
  }
  if (other.hasPartyId) {
    [self setPartyId:other.partyId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setPartyId:[input readFixed64]];
        break;
      }
    }
  }
}
- (BOOL) hasPartyId {
  return result.hasPartyId;
}
- (uint64_t) partyId {
  return result.partyId;
}
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) setPartyId:(uint64_t) value {
  result.hasPartyId = YES;
  result.partyId = value;
  return self;
}
- (CMsgLeaveGameAndPrepareToJoinParty_Builder*) clearPartyId {
  result.hasPartyId = NO;
  result.partyId = 0L;
  return self;
}
@end

@interface CMsgRemovePlayerFromLobby ()
@property uint64_t steamId;
@property CMsgRemovePlayerFromLobby_RemoveReason remove_reason;
@end

@implementation CMsgRemovePlayerFromLobby

- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (BOOL) hasremove_reason {
  return !!hasremove_reason_;
}
- (void) setHasremove_reason:(BOOL) value_ {
  hasremove_reason_ = !!value_;
}
@synthesize remove_reason;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.steamId = 0L;
    self.remove_reason = CMsgRemovePlayerFromLobby_RemoveReasonVOTE_KICK;
  }
  return self;
}
static CMsgRemovePlayerFromLobby* defaultCMsgRemovePlayerFromLobbyInstance = nil;
+ (void) initialize {
  if (self == [CMsgRemovePlayerFromLobby class]) {
    defaultCMsgRemovePlayerFromLobbyInstance = [[CMsgRemovePlayerFromLobby alloc] init];
  }
}
+ (CMsgRemovePlayerFromLobby*) defaultInstance {
  return defaultCMsgRemovePlayerFromLobbyInstance;
}
- (CMsgRemovePlayerFromLobby*) defaultInstance {
  return defaultCMsgRemovePlayerFromLobbyInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSteamId) {
    [output writeFixed64:1 value:self.steamId];
  }
  if (self.hasremove_reason) {
    [output writeEnum:2 value:self.remove_reason];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSteamId) {
    size_ += computeFixed64Size(1, self.steamId);
  }
  if (self.hasremove_reason) {
    size_ += computeEnumSize(2, self.remove_reason);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgRemovePlayerFromLobby*) parseFromData:(NSData*) data {
  return (CMsgRemovePlayerFromLobby*)[[[CMsgRemovePlayerFromLobby builder] mergeFromData:data] build];
}
+ (CMsgRemovePlayerFromLobby*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgRemovePlayerFromLobby*)[[[CMsgRemovePlayerFromLobby builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgRemovePlayerFromLobby*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgRemovePlayerFromLobby*)[[[CMsgRemovePlayerFromLobby builder] mergeFromInputStream:input] build];
}
+ (CMsgRemovePlayerFromLobby*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgRemovePlayerFromLobby*)[[[CMsgRemovePlayerFromLobby builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgRemovePlayerFromLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgRemovePlayerFromLobby*)[[[CMsgRemovePlayerFromLobby builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgRemovePlayerFromLobby*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgRemovePlayerFromLobby*)[[[CMsgRemovePlayerFromLobby builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgRemovePlayerFromLobby_Builder*) builder {
  return [[[CMsgRemovePlayerFromLobby_Builder alloc] init] autorelease];
}
+ (CMsgRemovePlayerFromLobby_Builder*) builderWithPrototype:(CMsgRemovePlayerFromLobby*) prototype {
  return [[CMsgRemovePlayerFromLobby builder] mergeFrom:prototype];
}
- (CMsgRemovePlayerFromLobby_Builder*) builder {
  return [CMsgRemovePlayerFromLobby builder];
}
- (CMsgRemovePlayerFromLobby_Builder*) toBuilder {
  return [CMsgRemovePlayerFromLobby builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  if (self.hasremove_reason) {
    [output appendFormat:@"%@%@: %d\n", indent, @"remove_reason", self.remove_reason];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgRemovePlayerFromLobby class]]) {
    return NO;
  }
  CMsgRemovePlayerFromLobby *otherMessage = other;
  return
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      self.hasremove_reason == otherMessage.hasremove_reason &&
      (!self.hasremove_reason || self.remove_reason == otherMessage.remove_reason) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  if (self.hasremove_reason) {
    hashCode = hashCode * 31 + self.remove_reason;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CMsgRemovePlayerFromLobby_RemoveReasonIsValidValue(CMsgRemovePlayerFromLobby_RemoveReason value) {
  switch (value) {
    case CMsgRemovePlayerFromLobby_RemoveReasonVOTE_KICK:
    case CMsgRemovePlayerFromLobby_RemoveReasonIDLE_KICK:
    case CMsgRemovePlayerFromLobby_RemoveReasonADMIN_KICK:
      return YES;
    default:
      return NO;
  }
}
@interface CMsgRemovePlayerFromLobby_Builder()
@property (retain) CMsgRemovePlayerFromLobby* _builderResult;
@end

@implementation CMsgRemovePlayerFromLobby_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgRemovePlayerFromLobby alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgRemovePlayerFromLobby_Builder*) clear {
  _builderResult = [[[CMsgRemovePlayerFromLobby alloc] init] autorelease];
  return self;
}
- (CMsgRemovePlayerFromLobby_Builder*) clone {
  return [CMsgRemovePlayerFromLobby builderWithPrototype:_builderResult];
}
- (CMsgRemovePlayerFromLobby*) defaultInstance {
  return [CMsgRemovePlayerFromLobby defaultInstance];
}
- (CMsgRemovePlayerFromLobby*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgRemovePlayerFromLobby*) buildPartial {
  CMsgRemovePlayerFromLobby* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgRemovePlayerFromLobby_Builder*) mergeFrom:(CMsgRemovePlayerFromLobby*) other {
  if (other == [CMsgRemovePlayerFromLobby defaultInstance]) {
    return self;
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  if (other.hasremove_reason) {
    [self setremove_reason:other.remove_reason];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgRemovePlayerFromLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgRemovePlayerFromLobby_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setSteamId:[input readFixed64]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (CMsgRemovePlayerFromLobby_RemoveReasonIsValidValue(value)) {
          [self setremove_reason:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgRemovePlayerFromLobby_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgRemovePlayerFromLobby_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
- (BOOL) hasremove_reason {
  return result.hasremove_reason;
}
- (CMsgRemovePlayerFromLobby_RemoveReason) remove_reason {
  return result.remove_reason;
}
- (CMsgRemovePlayerFromLobby_Builder*) setremove_reason:(CMsgRemovePlayerFromLobby_RemoveReason) value {
  result.hasremove_reason = YES;
  result.remove_reason = value;
  return self;
}
- (CMsgRemovePlayerFromLobby_Builder*) clearremove_reason {
  result.hasremove_reason = NO;
  result.remove_reason = CMsgRemovePlayerFromLobby_RemoveReasonVOTE_KICK;
  return self;
}
@end

@interface CMsgSetLobbySafeToLeave ()
@property uint64_t lobbyId;
@end

@implementation CMsgSetLobbySafeToLeave

- (BOOL) hasLobbyId {
  return !!hasLobbyId_;
}
- (void) setHasLobbyId:(BOOL) value_ {
  hasLobbyId_ = !!value_;
}
@synthesize lobbyId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.lobbyId = 0L;
  }
  return self;
}
static CMsgSetLobbySafeToLeave* defaultCMsgSetLobbySafeToLeaveInstance = nil;
+ (void) initialize {
  if (self == [CMsgSetLobbySafeToLeave class]) {
    defaultCMsgSetLobbySafeToLeaveInstance = [[CMsgSetLobbySafeToLeave alloc] init];
  }
}
+ (CMsgSetLobbySafeToLeave*) defaultInstance {
  return defaultCMsgSetLobbySafeToLeaveInstance;
}
- (CMsgSetLobbySafeToLeave*) defaultInstance {
  return defaultCMsgSetLobbySafeToLeaveInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLobbyId) {
    [output writeFixed64:1 value:self.lobbyId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLobbyId) {
    size_ += computeFixed64Size(1, self.lobbyId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgSetLobbySafeToLeave*) parseFromData:(NSData*) data {
  return (CMsgSetLobbySafeToLeave*)[[[CMsgSetLobbySafeToLeave builder] mergeFromData:data] build];
}
+ (CMsgSetLobbySafeToLeave*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSetLobbySafeToLeave*)[[[CMsgSetLobbySafeToLeave builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgSetLobbySafeToLeave*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgSetLobbySafeToLeave*)[[[CMsgSetLobbySafeToLeave builder] mergeFromInputStream:input] build];
}
+ (CMsgSetLobbySafeToLeave*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSetLobbySafeToLeave*)[[[CMsgSetLobbySafeToLeave builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgSetLobbySafeToLeave*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgSetLobbySafeToLeave*)[[[CMsgSetLobbySafeToLeave builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgSetLobbySafeToLeave*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgSetLobbySafeToLeave*)[[[CMsgSetLobbySafeToLeave builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgSetLobbySafeToLeave_Builder*) builder {
  return [[[CMsgSetLobbySafeToLeave_Builder alloc] init] autorelease];
}
+ (CMsgSetLobbySafeToLeave_Builder*) builderWithPrototype:(CMsgSetLobbySafeToLeave*) prototype {
  return [[CMsgSetLobbySafeToLeave builder] mergeFrom:prototype];
}
- (CMsgSetLobbySafeToLeave_Builder*) builder {
  return [CMsgSetLobbySafeToLeave builder];
}
- (CMsgSetLobbySafeToLeave_Builder*) toBuilder {
  return [CMsgSetLobbySafeToLeave builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLobbyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lobbyId", [NSNumber numberWithLongLong:self.lobbyId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgSetLobbySafeToLeave class]]) {
    return NO;
  }
  CMsgSetLobbySafeToLeave *otherMessage = other;
  return
      self.hasLobbyId == otherMessage.hasLobbyId &&
      (!self.hasLobbyId || self.lobbyId == otherMessage.lobbyId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasLobbyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lobbyId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgSetLobbySafeToLeave_Builder()
@property (retain) CMsgSetLobbySafeToLeave* _builderResult;
@end

@implementation CMsgSetLobbySafeToLeave_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgSetLobbySafeToLeave alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgSetLobbySafeToLeave_Builder*) clear {
  _builderResult = [[[CMsgSetLobbySafeToLeave alloc] init] autorelease];
  return self;
}
- (CMsgSetLobbySafeToLeave_Builder*) clone {
  return [CMsgSetLobbySafeToLeave builderWithPrototype:_builderResult];
}
- (CMsgSetLobbySafeToLeave*) defaultInstance {
  return [CMsgSetLobbySafeToLeave defaultInstance];
}
- (CMsgSetLobbySafeToLeave*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgSetLobbySafeToLeave*) buildPartial {
  CMsgSetLobbySafeToLeave* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgSetLobbySafeToLeave_Builder*) mergeFrom:(CMsgSetLobbySafeToLeave*) other {
  if (other == [CMsgSetLobbySafeToLeave defaultInstance]) {
    return self;
  }
  if (other.hasLobbyId) {
    [self setLobbyId:other.lobbyId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgSetLobbySafeToLeave_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgSetLobbySafeToLeave_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setLobbyId:[input readFixed64]];
        break;
      }
    }
  }
}
- (BOOL) hasLobbyId {
  return result.hasLobbyId;
}
- (uint64_t) lobbyId {
  return result.lobbyId;
}
- (CMsgSetLobbySafeToLeave_Builder*) setLobbyId:(uint64_t) value {
  result.hasLobbyId = YES;
  result.lobbyId = value;
  return self;
}
- (CMsgSetLobbySafeToLeave_Builder*) clearLobbyId {
  result.hasLobbyId = NO;
  result.lobbyId = 0L;
  return self;
}
@end

@interface CMsgHalloween_ServerBossEvent ()
@property uint32_t eventCounter;
@property uint32_t timestamp;
@property uint32_t bossType;
@property uint32_t bossLevel;
@property uint32_t eventType;
@property uint32_t playersInvolved;
@property Float32 elapsedTime;
@end

@implementation CMsgHalloween_ServerBossEvent

- (BOOL) hasEventCounter {
  return !!hasEventCounter_;
}
- (void) setHasEventCounter:(BOOL) value_ {
  hasEventCounter_ = !!value_;
}
@synthesize eventCounter;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value_ {
  hasTimestamp_ = !!value_;
}
@synthesize timestamp;
- (BOOL) hasBossType {
  return !!hasBossType_;
}
- (void) setHasBossType:(BOOL) value_ {
  hasBossType_ = !!value_;
}
@synthesize bossType;
- (BOOL) hasBossLevel {
  return !!hasBossLevel_;
}
- (void) setHasBossLevel:(BOOL) value_ {
  hasBossLevel_ = !!value_;
}
@synthesize bossLevel;
- (BOOL) hasEventType {
  return !!hasEventType_;
}
- (void) setHasEventType:(BOOL) value_ {
  hasEventType_ = !!value_;
}
@synthesize eventType;
- (BOOL) hasPlayersInvolved {
  return !!hasPlayersInvolved_;
}
- (void) setHasPlayersInvolved:(BOOL) value_ {
  hasPlayersInvolved_ = !!value_;
}
@synthesize playersInvolved;
- (BOOL) hasElapsedTime {
  return !!hasElapsedTime_;
}
- (void) setHasElapsedTime:(BOOL) value_ {
  hasElapsedTime_ = !!value_;
}
@synthesize elapsedTime;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.eventCounter = 0;
    self.timestamp = 0;
    self.bossType = 0;
    self.bossLevel = 0;
    self.eventType = 0;
    self.playersInvolved = 0;
    self.elapsedTime = 0;
  }
  return self;
}
static CMsgHalloween_ServerBossEvent* defaultCMsgHalloween_ServerBossEventInstance = nil;
+ (void) initialize {
  if (self == [CMsgHalloween_ServerBossEvent class]) {
    defaultCMsgHalloween_ServerBossEventInstance = [[CMsgHalloween_ServerBossEvent alloc] init];
  }
}
+ (CMsgHalloween_ServerBossEvent*) defaultInstance {
  return defaultCMsgHalloween_ServerBossEventInstance;
}
- (CMsgHalloween_ServerBossEvent*) defaultInstance {
  return defaultCMsgHalloween_ServerBossEventInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEventCounter) {
    [output writeUInt32:1 value:self.eventCounter];
  }
  if (self.hasTimestamp) {
    [output writeUInt32:2 value:self.timestamp];
  }
  if (self.hasBossType) {
    [output writeUInt32:3 value:self.bossType];
  }
  if (self.hasBossLevel) {
    [output writeUInt32:4 value:self.bossLevel];
  }
  if (self.hasEventType) {
    [output writeUInt32:5 value:self.eventType];
  }
  if (self.hasPlayersInvolved) {
    [output writeUInt32:6 value:self.playersInvolved];
  }
  if (self.hasElapsedTime) {
    [output writeFloat:7 value:self.elapsedTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasEventCounter) {
    size_ += computeUInt32Size(1, self.eventCounter);
  }
  if (self.hasTimestamp) {
    size_ += computeUInt32Size(2, self.timestamp);
  }
  if (self.hasBossType) {
    size_ += computeUInt32Size(3, self.bossType);
  }
  if (self.hasBossLevel) {
    size_ += computeUInt32Size(4, self.bossLevel);
  }
  if (self.hasEventType) {
    size_ += computeUInt32Size(5, self.eventType);
  }
  if (self.hasPlayersInvolved) {
    size_ += computeUInt32Size(6, self.playersInvolved);
  }
  if (self.hasElapsedTime) {
    size_ += computeFloatSize(7, self.elapsedTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgHalloween_ServerBossEvent*) parseFromData:(NSData*) data {
  return (CMsgHalloween_ServerBossEvent*)[[[CMsgHalloween_ServerBossEvent builder] mergeFromData:data] build];
}
+ (CMsgHalloween_ServerBossEvent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgHalloween_ServerBossEvent*)[[[CMsgHalloween_ServerBossEvent builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgHalloween_ServerBossEvent*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgHalloween_ServerBossEvent*)[[[CMsgHalloween_ServerBossEvent builder] mergeFromInputStream:input] build];
}
+ (CMsgHalloween_ServerBossEvent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgHalloween_ServerBossEvent*)[[[CMsgHalloween_ServerBossEvent builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgHalloween_ServerBossEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgHalloween_ServerBossEvent*)[[[CMsgHalloween_ServerBossEvent builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgHalloween_ServerBossEvent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgHalloween_ServerBossEvent*)[[[CMsgHalloween_ServerBossEvent builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgHalloween_ServerBossEvent_Builder*) builder {
  return [[[CMsgHalloween_ServerBossEvent_Builder alloc] init] autorelease];
}
+ (CMsgHalloween_ServerBossEvent_Builder*) builderWithPrototype:(CMsgHalloween_ServerBossEvent*) prototype {
  return [[CMsgHalloween_ServerBossEvent builder] mergeFrom:prototype];
}
- (CMsgHalloween_ServerBossEvent_Builder*) builder {
  return [CMsgHalloween_ServerBossEvent builder];
}
- (CMsgHalloween_ServerBossEvent_Builder*) toBuilder {
  return [CMsgHalloween_ServerBossEvent builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasEventCounter) {
    [output appendFormat:@"%@%@: %@\n", indent, @"eventCounter", [NSNumber numberWithInt:self.eventCounter]];
  }
  if (self.hasTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timestamp", [NSNumber numberWithInt:self.timestamp]];
  }
  if (self.hasBossType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bossType", [NSNumber numberWithInt:self.bossType]];
  }
  if (self.hasBossLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bossLevel", [NSNumber numberWithInt:self.bossLevel]];
  }
  if (self.hasEventType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"eventType", [NSNumber numberWithInt:self.eventType]];
  }
  if (self.hasPlayersInvolved) {
    [output appendFormat:@"%@%@: %@\n", indent, @"playersInvolved", [NSNumber numberWithInt:self.playersInvolved]];
  }
  if (self.hasElapsedTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"elapsedTime", [NSNumber numberWithFloat:self.elapsedTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgHalloween_ServerBossEvent class]]) {
    return NO;
  }
  CMsgHalloween_ServerBossEvent *otherMessage = other;
  return
      self.hasEventCounter == otherMessage.hasEventCounter &&
      (!self.hasEventCounter || self.eventCounter == otherMessage.eventCounter) &&
      self.hasTimestamp == otherMessage.hasTimestamp &&
      (!self.hasTimestamp || self.timestamp == otherMessage.timestamp) &&
      self.hasBossType == otherMessage.hasBossType &&
      (!self.hasBossType || self.bossType == otherMessage.bossType) &&
      self.hasBossLevel == otherMessage.hasBossLevel &&
      (!self.hasBossLevel || self.bossLevel == otherMessage.bossLevel) &&
      self.hasEventType == otherMessage.hasEventType &&
      (!self.hasEventType || self.eventType == otherMessage.eventType) &&
      self.hasPlayersInvolved == otherMessage.hasPlayersInvolved &&
      (!self.hasPlayersInvolved || self.playersInvolved == otherMessage.playersInvolved) &&
      self.hasElapsedTime == otherMessage.hasElapsedTime &&
      (!self.hasElapsedTime || self.elapsedTime == otherMessage.elapsedTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasEventCounter) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.eventCounter] hash];
  }
  if (self.hasTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.timestamp] hash];
  }
  if (self.hasBossType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.bossType] hash];
  }
  if (self.hasBossLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.bossLevel] hash];
  }
  if (self.hasEventType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.eventType] hash];
  }
  if (self.hasPlayersInvolved) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.playersInvolved] hash];
  }
  if (self.hasElapsedTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.elapsedTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgHalloween_ServerBossEvent_Builder()
@property (retain) CMsgHalloween_ServerBossEvent* _builderResult;
@end

@implementation CMsgHalloween_ServerBossEvent_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgHalloween_ServerBossEvent alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgHalloween_ServerBossEvent_Builder*) clear {
  _builderResult = [[[CMsgHalloween_ServerBossEvent alloc] init] autorelease];
  return self;
}
- (CMsgHalloween_ServerBossEvent_Builder*) clone {
  return [CMsgHalloween_ServerBossEvent builderWithPrototype:_builderResult];
}
- (CMsgHalloween_ServerBossEvent*) defaultInstance {
  return [CMsgHalloween_ServerBossEvent defaultInstance];
}
- (CMsgHalloween_ServerBossEvent*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgHalloween_ServerBossEvent*) buildPartial {
  CMsgHalloween_ServerBossEvent* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgHalloween_ServerBossEvent_Builder*) mergeFrom:(CMsgHalloween_ServerBossEvent*) other {
  if (other == [CMsgHalloween_ServerBossEvent defaultInstance]) {
    return self;
  }
  if (other.hasEventCounter) {
    [self setEventCounter:other.eventCounter];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasBossType) {
    [self setBossType:other.bossType];
  }
  if (other.hasBossLevel) {
    [self setBossLevel:other.bossLevel];
  }
  if (other.hasEventType) {
    [self setEventType:other.eventType];
  }
  if (other.hasPlayersInvolved) {
    [self setPlayersInvolved:other.playersInvolved];
  }
  if (other.hasElapsedTime) {
    [self setElapsedTime:other.elapsedTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgHalloween_ServerBossEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgHalloween_ServerBossEvent_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setEventCounter:[input readUInt32]];
        break;
      }
      case 16: {
        [self setTimestamp:[input readUInt32]];
        break;
      }
      case 24: {
        [self setBossType:[input readUInt32]];
        break;
      }
      case 32: {
        [self setBossLevel:[input readUInt32]];
        break;
      }
      case 40: {
        [self setEventType:[input readUInt32]];
        break;
      }
      case 48: {
        [self setPlayersInvolved:[input readUInt32]];
        break;
      }
      case 61: {
        [self setElapsedTime:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasEventCounter {
  return result.hasEventCounter;
}
- (uint32_t) eventCounter {
  return result.eventCounter;
}
- (CMsgHalloween_ServerBossEvent_Builder*) setEventCounter:(uint32_t) value {
  result.hasEventCounter = YES;
  result.eventCounter = value;
  return self;
}
- (CMsgHalloween_ServerBossEvent_Builder*) clearEventCounter {
  result.hasEventCounter = NO;
  result.eventCounter = 0;
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (uint32_t) timestamp {
  return result.timestamp;
}
- (CMsgHalloween_ServerBossEvent_Builder*) setTimestamp:(uint32_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (CMsgHalloween_ServerBossEvent_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0;
  return self;
}
- (BOOL) hasBossType {
  return result.hasBossType;
}
- (uint32_t) bossType {
  return result.bossType;
}
- (CMsgHalloween_ServerBossEvent_Builder*) setBossType:(uint32_t) value {
  result.hasBossType = YES;
  result.bossType = value;
  return self;
}
- (CMsgHalloween_ServerBossEvent_Builder*) clearBossType {
  result.hasBossType = NO;
  result.bossType = 0;
  return self;
}
- (BOOL) hasBossLevel {
  return result.hasBossLevel;
}
- (uint32_t) bossLevel {
  return result.bossLevel;
}
- (CMsgHalloween_ServerBossEvent_Builder*) setBossLevel:(uint32_t) value {
  result.hasBossLevel = YES;
  result.bossLevel = value;
  return self;
}
- (CMsgHalloween_ServerBossEvent_Builder*) clearBossLevel {
  result.hasBossLevel = NO;
  result.bossLevel = 0;
  return self;
}
- (BOOL) hasEventType {
  return result.hasEventType;
}
- (uint32_t) eventType {
  return result.eventType;
}
- (CMsgHalloween_ServerBossEvent_Builder*) setEventType:(uint32_t) value {
  result.hasEventType = YES;
  result.eventType = value;
  return self;
}
- (CMsgHalloween_ServerBossEvent_Builder*) clearEventType {
  result.hasEventType = NO;
  result.eventType = 0;
  return self;
}
- (BOOL) hasPlayersInvolved {
  return result.hasPlayersInvolved;
}
- (uint32_t) playersInvolved {
  return result.playersInvolved;
}
- (CMsgHalloween_ServerBossEvent_Builder*) setPlayersInvolved:(uint32_t) value {
  result.hasPlayersInvolved = YES;
  result.playersInvolved = value;
  return self;
}
- (CMsgHalloween_ServerBossEvent_Builder*) clearPlayersInvolved {
  result.hasPlayersInvolved = NO;
  result.playersInvolved = 0;
  return self;
}
- (BOOL) hasElapsedTime {
  return result.hasElapsedTime;
}
- (Float32) elapsedTime {
  return result.elapsedTime;
}
- (CMsgHalloween_ServerBossEvent_Builder*) setElapsedTime:(Float32) value {
  result.hasElapsedTime = YES;
  result.elapsedTime = value;
  return self;
}
- (CMsgHalloween_ServerBossEvent_Builder*) clearElapsedTime {
  result.hasElapsedTime = NO;
  result.elapsedTime = 0;
  return self;
}
@end

@interface CMsgHalloween_Merasmus2012 ()
@property uint32_t eventCounter;
@property uint32_t timeSubmitted;
@property BOOL isValveServer;
@property uint32_t bossLevel;
@property uint32_t spawnedHealth;
@property uint32_t remainingHealth;
@property uint32_t lifeTime;
@property uint32_t bombKills;
@property uint32_t staffKills;
@property uint32_t pvpKills;
@property uint32_t prophuntTime1;
@property uint32_t prophuntTime2;
@property uint32_t dmgScout;
@property uint32_t dmgSniper;
@property uint32_t dmgSoldier;
@property uint32_t dmgDemo;
@property uint32_t dmgMedic;
@property uint32_t dmgHeavy;
@property uint32_t dmgPyro;
@property uint32_t dmgSpy;
@property uint32_t dmgEngineer;
@property uint32_t scoutCount;
@property uint32_t sniperCount;
@property uint32_t soliderCount;
@property uint32_t demoCount;
@property uint32_t medicCount;
@property uint32_t heavyCount;
@property uint32_t pyroCount;
@property uint32_t spyCount;
@property uint32_t engineerCount;
@end

@implementation CMsgHalloween_Merasmus2012

- (BOOL) hasEventCounter {
  return !!hasEventCounter_;
}
- (void) setHasEventCounter:(BOOL) value_ {
  hasEventCounter_ = !!value_;
}
@synthesize eventCounter;
- (BOOL) hasTimeSubmitted {
  return !!hasTimeSubmitted_;
}
- (void) setHasTimeSubmitted:(BOOL) value_ {
  hasTimeSubmitted_ = !!value_;
}
@synthesize timeSubmitted;
- (BOOL) hasIsValveServer {
  return !!hasIsValveServer_;
}
- (void) setHasIsValveServer:(BOOL) value_ {
  hasIsValveServer_ = !!value_;
}
- (BOOL) isValveServer {
  return !!isValveServer_;
}
- (void) setIsValveServer:(BOOL) value_ {
  isValveServer_ = !!value_;
}
- (BOOL) hasBossLevel {
  return !!hasBossLevel_;
}
- (void) setHasBossLevel:(BOOL) value_ {
  hasBossLevel_ = !!value_;
}
@synthesize bossLevel;
- (BOOL) hasSpawnedHealth {
  return !!hasSpawnedHealth_;
}
- (void) setHasSpawnedHealth:(BOOL) value_ {
  hasSpawnedHealth_ = !!value_;
}
@synthesize spawnedHealth;
- (BOOL) hasRemainingHealth {
  return !!hasRemainingHealth_;
}
- (void) setHasRemainingHealth:(BOOL) value_ {
  hasRemainingHealth_ = !!value_;
}
@synthesize remainingHealth;
- (BOOL) hasLifeTime {
  return !!hasLifeTime_;
}
- (void) setHasLifeTime:(BOOL) value_ {
  hasLifeTime_ = !!value_;
}
@synthesize lifeTime;
- (BOOL) hasBombKills {
  return !!hasBombKills_;
}
- (void) setHasBombKills:(BOOL) value_ {
  hasBombKills_ = !!value_;
}
@synthesize bombKills;
- (BOOL) hasStaffKills {
  return !!hasStaffKills_;
}
- (void) setHasStaffKills:(BOOL) value_ {
  hasStaffKills_ = !!value_;
}
@synthesize staffKills;
- (BOOL) hasPvpKills {
  return !!hasPvpKills_;
}
- (void) setHasPvpKills:(BOOL) value_ {
  hasPvpKills_ = !!value_;
}
@synthesize pvpKills;
- (BOOL) hasProphuntTime1 {
  return !!hasProphuntTime1_;
}
- (void) setHasProphuntTime1:(BOOL) value_ {
  hasProphuntTime1_ = !!value_;
}
@synthesize prophuntTime1;
- (BOOL) hasProphuntTime2 {
  return !!hasProphuntTime2_;
}
- (void) setHasProphuntTime2:(BOOL) value_ {
  hasProphuntTime2_ = !!value_;
}
@synthesize prophuntTime2;
- (BOOL) hasDmgScout {
  return !!hasDmgScout_;
}
- (void) setHasDmgScout:(BOOL) value_ {
  hasDmgScout_ = !!value_;
}
@synthesize dmgScout;
- (BOOL) hasDmgSniper {
  return !!hasDmgSniper_;
}
- (void) setHasDmgSniper:(BOOL) value_ {
  hasDmgSniper_ = !!value_;
}
@synthesize dmgSniper;
- (BOOL) hasDmgSoldier {
  return !!hasDmgSoldier_;
}
- (void) setHasDmgSoldier:(BOOL) value_ {
  hasDmgSoldier_ = !!value_;
}
@synthesize dmgSoldier;
- (BOOL) hasDmgDemo {
  return !!hasDmgDemo_;
}
- (void) setHasDmgDemo:(BOOL) value_ {
  hasDmgDemo_ = !!value_;
}
@synthesize dmgDemo;
- (BOOL) hasDmgMedic {
  return !!hasDmgMedic_;
}
- (void) setHasDmgMedic:(BOOL) value_ {
  hasDmgMedic_ = !!value_;
}
@synthesize dmgMedic;
- (BOOL) hasDmgHeavy {
  return !!hasDmgHeavy_;
}
- (void) setHasDmgHeavy:(BOOL) value_ {
  hasDmgHeavy_ = !!value_;
}
@synthesize dmgHeavy;
- (BOOL) hasDmgPyro {
  return !!hasDmgPyro_;
}
- (void) setHasDmgPyro:(BOOL) value_ {
  hasDmgPyro_ = !!value_;
}
@synthesize dmgPyro;
- (BOOL) hasDmgSpy {
  return !!hasDmgSpy_;
}
- (void) setHasDmgSpy:(BOOL) value_ {
  hasDmgSpy_ = !!value_;
}
@synthesize dmgSpy;
- (BOOL) hasDmgEngineer {
  return !!hasDmgEngineer_;
}
- (void) setHasDmgEngineer:(BOOL) value_ {
  hasDmgEngineer_ = !!value_;
}
@synthesize dmgEngineer;
- (BOOL) hasScoutCount {
  return !!hasScoutCount_;
}
- (void) setHasScoutCount:(BOOL) value_ {
  hasScoutCount_ = !!value_;
}
@synthesize scoutCount;
- (BOOL) hasSniperCount {
  return !!hasSniperCount_;
}
- (void) setHasSniperCount:(BOOL) value_ {
  hasSniperCount_ = !!value_;
}
@synthesize sniperCount;
- (BOOL) hasSoliderCount {
  return !!hasSoliderCount_;
}
- (void) setHasSoliderCount:(BOOL) value_ {
  hasSoliderCount_ = !!value_;
}
@synthesize soliderCount;
- (BOOL) hasDemoCount {
  return !!hasDemoCount_;
}
- (void) setHasDemoCount:(BOOL) value_ {
  hasDemoCount_ = !!value_;
}
@synthesize demoCount;
- (BOOL) hasMedicCount {
  return !!hasMedicCount_;
}
- (void) setHasMedicCount:(BOOL) value_ {
  hasMedicCount_ = !!value_;
}
@synthesize medicCount;
- (BOOL) hasHeavyCount {
  return !!hasHeavyCount_;
}
- (void) setHasHeavyCount:(BOOL) value_ {
  hasHeavyCount_ = !!value_;
}
@synthesize heavyCount;
- (BOOL) hasPyroCount {
  return !!hasPyroCount_;
}
- (void) setHasPyroCount:(BOOL) value_ {
  hasPyroCount_ = !!value_;
}
@synthesize pyroCount;
- (BOOL) hasSpyCount {
  return !!hasSpyCount_;
}
- (void) setHasSpyCount:(BOOL) value_ {
  hasSpyCount_ = !!value_;
}
@synthesize spyCount;
- (BOOL) hasEngineerCount {
  return !!hasEngineerCount_;
}
- (void) setHasEngineerCount:(BOOL) value_ {
  hasEngineerCount_ = !!value_;
}
@synthesize engineerCount;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.eventCounter = 0;
    self.timeSubmitted = 0;
    self.isValveServer = NO;
    self.bossLevel = 0;
    self.spawnedHealth = 0;
    self.remainingHealth = 0;
    self.lifeTime = 0;
    self.bombKills = 0;
    self.staffKills = 0;
    self.pvpKills = 0;
    self.prophuntTime1 = 0;
    self.prophuntTime2 = 0;
    self.dmgScout = 0;
    self.dmgSniper = 0;
    self.dmgSoldier = 0;
    self.dmgDemo = 0;
    self.dmgMedic = 0;
    self.dmgHeavy = 0;
    self.dmgPyro = 0;
    self.dmgSpy = 0;
    self.dmgEngineer = 0;
    self.scoutCount = 0;
    self.sniperCount = 0;
    self.soliderCount = 0;
    self.demoCount = 0;
    self.medicCount = 0;
    self.heavyCount = 0;
    self.pyroCount = 0;
    self.spyCount = 0;
    self.engineerCount = 0;
  }
  return self;
}
static CMsgHalloween_Merasmus2012* defaultCMsgHalloween_Merasmus2012Instance = nil;
+ (void) initialize {
  if (self == [CMsgHalloween_Merasmus2012 class]) {
    defaultCMsgHalloween_Merasmus2012Instance = [[CMsgHalloween_Merasmus2012 alloc] init];
  }
}
+ (CMsgHalloween_Merasmus2012*) defaultInstance {
  return defaultCMsgHalloween_Merasmus2012Instance;
}
- (CMsgHalloween_Merasmus2012*) defaultInstance {
  return defaultCMsgHalloween_Merasmus2012Instance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEventCounter) {
    [output writeUInt32:1 value:self.eventCounter];
  }
  if (self.hasTimeSubmitted) {
    [output writeFixed32:2 value:self.timeSubmitted];
  }
  if (self.hasIsValveServer) {
    [output writeBool:3 value:self.isValveServer];
  }
  if (self.hasBossLevel) {
    [output writeUInt32:4 value:self.bossLevel];
  }
  if (self.hasSpawnedHealth) {
    [output writeUInt32:5 value:self.spawnedHealth];
  }
  if (self.hasRemainingHealth) {
    [output writeUInt32:6 value:self.remainingHealth];
  }
  if (self.hasLifeTime) {
    [output writeUInt32:7 value:self.lifeTime];
  }
  if (self.hasBombKills) {
    [output writeUInt32:8 value:self.bombKills];
  }
  if (self.hasStaffKills) {
    [output writeUInt32:9 value:self.staffKills];
  }
  if (self.hasPvpKills) {
    [output writeUInt32:10 value:self.pvpKills];
  }
  if (self.hasProphuntTime1) {
    [output writeUInt32:11 value:self.prophuntTime1];
  }
  if (self.hasProphuntTime2) {
    [output writeUInt32:12 value:self.prophuntTime2];
  }
  if (self.hasDmgScout) {
    [output writeUInt32:13 value:self.dmgScout];
  }
  if (self.hasDmgSniper) {
    [output writeUInt32:14 value:self.dmgSniper];
  }
  if (self.hasDmgSoldier) {
    [output writeUInt32:15 value:self.dmgSoldier];
  }
  if (self.hasDmgDemo) {
    [output writeUInt32:16 value:self.dmgDemo];
  }
  if (self.hasDmgMedic) {
    [output writeUInt32:17 value:self.dmgMedic];
  }
  if (self.hasDmgHeavy) {
    [output writeUInt32:18 value:self.dmgHeavy];
  }
  if (self.hasDmgPyro) {
    [output writeUInt32:19 value:self.dmgPyro];
  }
  if (self.hasDmgSpy) {
    [output writeUInt32:20 value:self.dmgSpy];
  }
  if (self.hasDmgEngineer) {
    [output writeUInt32:21 value:self.dmgEngineer];
  }
  if (self.hasScoutCount) {
    [output writeUInt32:22 value:self.scoutCount];
  }
  if (self.hasSniperCount) {
    [output writeUInt32:23 value:self.sniperCount];
  }
  if (self.hasSoliderCount) {
    [output writeUInt32:24 value:self.soliderCount];
  }
  if (self.hasDemoCount) {
    [output writeUInt32:25 value:self.demoCount];
  }
  if (self.hasMedicCount) {
    [output writeUInt32:26 value:self.medicCount];
  }
  if (self.hasHeavyCount) {
    [output writeUInt32:27 value:self.heavyCount];
  }
  if (self.hasPyroCount) {
    [output writeUInt32:28 value:self.pyroCount];
  }
  if (self.hasSpyCount) {
    [output writeUInt32:29 value:self.spyCount];
  }
  if (self.hasEngineerCount) {
    [output writeUInt32:30 value:self.engineerCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasEventCounter) {
    size_ += computeUInt32Size(1, self.eventCounter);
  }
  if (self.hasTimeSubmitted) {
    size_ += computeFixed32Size(2, self.timeSubmitted);
  }
  if (self.hasIsValveServer) {
    size_ += computeBoolSize(3, self.isValveServer);
  }
  if (self.hasBossLevel) {
    size_ += computeUInt32Size(4, self.bossLevel);
  }
  if (self.hasSpawnedHealth) {
    size_ += computeUInt32Size(5, self.spawnedHealth);
  }
  if (self.hasRemainingHealth) {
    size_ += computeUInt32Size(6, self.remainingHealth);
  }
  if (self.hasLifeTime) {
    size_ += computeUInt32Size(7, self.lifeTime);
  }
  if (self.hasBombKills) {
    size_ += computeUInt32Size(8, self.bombKills);
  }
  if (self.hasStaffKills) {
    size_ += computeUInt32Size(9, self.staffKills);
  }
  if (self.hasPvpKills) {
    size_ += computeUInt32Size(10, self.pvpKills);
  }
  if (self.hasProphuntTime1) {
    size_ += computeUInt32Size(11, self.prophuntTime1);
  }
  if (self.hasProphuntTime2) {
    size_ += computeUInt32Size(12, self.prophuntTime2);
  }
  if (self.hasDmgScout) {
    size_ += computeUInt32Size(13, self.dmgScout);
  }
  if (self.hasDmgSniper) {
    size_ += computeUInt32Size(14, self.dmgSniper);
  }
  if (self.hasDmgSoldier) {
    size_ += computeUInt32Size(15, self.dmgSoldier);
  }
  if (self.hasDmgDemo) {
    size_ += computeUInt32Size(16, self.dmgDemo);
  }
  if (self.hasDmgMedic) {
    size_ += computeUInt32Size(17, self.dmgMedic);
  }
  if (self.hasDmgHeavy) {
    size_ += computeUInt32Size(18, self.dmgHeavy);
  }
  if (self.hasDmgPyro) {
    size_ += computeUInt32Size(19, self.dmgPyro);
  }
  if (self.hasDmgSpy) {
    size_ += computeUInt32Size(20, self.dmgSpy);
  }
  if (self.hasDmgEngineer) {
    size_ += computeUInt32Size(21, self.dmgEngineer);
  }
  if (self.hasScoutCount) {
    size_ += computeUInt32Size(22, self.scoutCount);
  }
  if (self.hasSniperCount) {
    size_ += computeUInt32Size(23, self.sniperCount);
  }
  if (self.hasSoliderCount) {
    size_ += computeUInt32Size(24, self.soliderCount);
  }
  if (self.hasDemoCount) {
    size_ += computeUInt32Size(25, self.demoCount);
  }
  if (self.hasMedicCount) {
    size_ += computeUInt32Size(26, self.medicCount);
  }
  if (self.hasHeavyCount) {
    size_ += computeUInt32Size(27, self.heavyCount);
  }
  if (self.hasPyroCount) {
    size_ += computeUInt32Size(28, self.pyroCount);
  }
  if (self.hasSpyCount) {
    size_ += computeUInt32Size(29, self.spyCount);
  }
  if (self.hasEngineerCount) {
    size_ += computeUInt32Size(30, self.engineerCount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgHalloween_Merasmus2012*) parseFromData:(NSData*) data {
  return (CMsgHalloween_Merasmus2012*)[[[CMsgHalloween_Merasmus2012 builder] mergeFromData:data] build];
}
+ (CMsgHalloween_Merasmus2012*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgHalloween_Merasmus2012*)[[[CMsgHalloween_Merasmus2012 builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgHalloween_Merasmus2012*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgHalloween_Merasmus2012*)[[[CMsgHalloween_Merasmus2012 builder] mergeFromInputStream:input] build];
}
+ (CMsgHalloween_Merasmus2012*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgHalloween_Merasmus2012*)[[[CMsgHalloween_Merasmus2012 builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgHalloween_Merasmus2012*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgHalloween_Merasmus2012*)[[[CMsgHalloween_Merasmus2012 builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgHalloween_Merasmus2012*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgHalloween_Merasmus2012*)[[[CMsgHalloween_Merasmus2012 builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgHalloween_Merasmus2012_Builder*) builder {
  return [[[CMsgHalloween_Merasmus2012_Builder alloc] init] autorelease];
}
+ (CMsgHalloween_Merasmus2012_Builder*) builderWithPrototype:(CMsgHalloween_Merasmus2012*) prototype {
  return [[CMsgHalloween_Merasmus2012 builder] mergeFrom:prototype];
}
- (CMsgHalloween_Merasmus2012_Builder*) builder {
  return [CMsgHalloween_Merasmus2012 builder];
}
- (CMsgHalloween_Merasmus2012_Builder*) toBuilder {
  return [CMsgHalloween_Merasmus2012 builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasEventCounter) {
    [output appendFormat:@"%@%@: %@\n", indent, @"eventCounter", [NSNumber numberWithInt:self.eventCounter]];
  }
  if (self.hasTimeSubmitted) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeSubmitted", [NSNumber numberWithInt:self.timeSubmitted]];
  }
  if (self.hasIsValveServer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isValveServer", [NSNumber numberWithBool:self.isValveServer]];
  }
  if (self.hasBossLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bossLevel", [NSNumber numberWithInt:self.bossLevel]];
  }
  if (self.hasSpawnedHealth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"spawnedHealth", [NSNumber numberWithInt:self.spawnedHealth]];
  }
  if (self.hasRemainingHealth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"remainingHealth", [NSNumber numberWithInt:self.remainingHealth]];
  }
  if (self.hasLifeTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lifeTime", [NSNumber numberWithInt:self.lifeTime]];
  }
  if (self.hasBombKills) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bombKills", [NSNumber numberWithInt:self.bombKills]];
  }
  if (self.hasStaffKills) {
    [output appendFormat:@"%@%@: %@\n", indent, @"staffKills", [NSNumber numberWithInt:self.staffKills]];
  }
  if (self.hasPvpKills) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pvpKills", [NSNumber numberWithInt:self.pvpKills]];
  }
  if (self.hasProphuntTime1) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prophuntTime1", [NSNumber numberWithInt:self.prophuntTime1]];
  }
  if (self.hasProphuntTime2) {
    [output appendFormat:@"%@%@: %@\n", indent, @"prophuntTime2", [NSNumber numberWithInt:self.prophuntTime2]];
  }
  if (self.hasDmgScout) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgScout", [NSNumber numberWithInt:self.dmgScout]];
  }
  if (self.hasDmgSniper) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgSniper", [NSNumber numberWithInt:self.dmgSniper]];
  }
  if (self.hasDmgSoldier) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgSoldier", [NSNumber numberWithInt:self.dmgSoldier]];
  }
  if (self.hasDmgDemo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgDemo", [NSNumber numberWithInt:self.dmgDemo]];
  }
  if (self.hasDmgMedic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgMedic", [NSNumber numberWithInt:self.dmgMedic]];
  }
  if (self.hasDmgHeavy) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgHeavy", [NSNumber numberWithInt:self.dmgHeavy]];
  }
  if (self.hasDmgPyro) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgPyro", [NSNumber numberWithInt:self.dmgPyro]];
  }
  if (self.hasDmgSpy) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgSpy", [NSNumber numberWithInt:self.dmgSpy]];
  }
  if (self.hasDmgEngineer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dmgEngineer", [NSNumber numberWithInt:self.dmgEngineer]];
  }
  if (self.hasScoutCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"scoutCount", [NSNumber numberWithInt:self.scoutCount]];
  }
  if (self.hasSniperCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sniperCount", [NSNumber numberWithInt:self.sniperCount]];
  }
  if (self.hasSoliderCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"soliderCount", [NSNumber numberWithInt:self.soliderCount]];
  }
  if (self.hasDemoCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"demoCount", [NSNumber numberWithInt:self.demoCount]];
  }
  if (self.hasMedicCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"medicCount", [NSNumber numberWithInt:self.medicCount]];
  }
  if (self.hasHeavyCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"heavyCount", [NSNumber numberWithInt:self.heavyCount]];
  }
  if (self.hasPyroCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pyroCount", [NSNumber numberWithInt:self.pyroCount]];
  }
  if (self.hasSpyCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"spyCount", [NSNumber numberWithInt:self.spyCount]];
  }
  if (self.hasEngineerCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"engineerCount", [NSNumber numberWithInt:self.engineerCount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgHalloween_Merasmus2012 class]]) {
    return NO;
  }
  CMsgHalloween_Merasmus2012 *otherMessage = other;
  return
      self.hasEventCounter == otherMessage.hasEventCounter &&
      (!self.hasEventCounter || self.eventCounter == otherMessage.eventCounter) &&
      self.hasTimeSubmitted == otherMessage.hasTimeSubmitted &&
      (!self.hasTimeSubmitted || self.timeSubmitted == otherMessage.timeSubmitted) &&
      self.hasIsValveServer == otherMessage.hasIsValveServer &&
      (!self.hasIsValveServer || self.isValveServer == otherMessage.isValveServer) &&
      self.hasBossLevel == otherMessage.hasBossLevel &&
      (!self.hasBossLevel || self.bossLevel == otherMessage.bossLevel) &&
      self.hasSpawnedHealth == otherMessage.hasSpawnedHealth &&
      (!self.hasSpawnedHealth || self.spawnedHealth == otherMessage.spawnedHealth) &&
      self.hasRemainingHealth == otherMessage.hasRemainingHealth &&
      (!self.hasRemainingHealth || self.remainingHealth == otherMessage.remainingHealth) &&
      self.hasLifeTime == otherMessage.hasLifeTime &&
      (!self.hasLifeTime || self.lifeTime == otherMessage.lifeTime) &&
      self.hasBombKills == otherMessage.hasBombKills &&
      (!self.hasBombKills || self.bombKills == otherMessage.bombKills) &&
      self.hasStaffKills == otherMessage.hasStaffKills &&
      (!self.hasStaffKills || self.staffKills == otherMessage.staffKills) &&
      self.hasPvpKills == otherMessage.hasPvpKills &&
      (!self.hasPvpKills || self.pvpKills == otherMessage.pvpKills) &&
      self.hasProphuntTime1 == otherMessage.hasProphuntTime1 &&
      (!self.hasProphuntTime1 || self.prophuntTime1 == otherMessage.prophuntTime1) &&
      self.hasProphuntTime2 == otherMessage.hasProphuntTime2 &&
      (!self.hasProphuntTime2 || self.prophuntTime2 == otherMessage.prophuntTime2) &&
      self.hasDmgScout == otherMessage.hasDmgScout &&
      (!self.hasDmgScout || self.dmgScout == otherMessage.dmgScout) &&
      self.hasDmgSniper == otherMessage.hasDmgSniper &&
      (!self.hasDmgSniper || self.dmgSniper == otherMessage.dmgSniper) &&
      self.hasDmgSoldier == otherMessage.hasDmgSoldier &&
      (!self.hasDmgSoldier || self.dmgSoldier == otherMessage.dmgSoldier) &&
      self.hasDmgDemo == otherMessage.hasDmgDemo &&
      (!self.hasDmgDemo || self.dmgDemo == otherMessage.dmgDemo) &&
      self.hasDmgMedic == otherMessage.hasDmgMedic &&
      (!self.hasDmgMedic || self.dmgMedic == otherMessage.dmgMedic) &&
      self.hasDmgHeavy == otherMessage.hasDmgHeavy &&
      (!self.hasDmgHeavy || self.dmgHeavy == otherMessage.dmgHeavy) &&
      self.hasDmgPyro == otherMessage.hasDmgPyro &&
      (!self.hasDmgPyro || self.dmgPyro == otherMessage.dmgPyro) &&
      self.hasDmgSpy == otherMessage.hasDmgSpy &&
      (!self.hasDmgSpy || self.dmgSpy == otherMessage.dmgSpy) &&
      self.hasDmgEngineer == otherMessage.hasDmgEngineer &&
      (!self.hasDmgEngineer || self.dmgEngineer == otherMessage.dmgEngineer) &&
      self.hasScoutCount == otherMessage.hasScoutCount &&
      (!self.hasScoutCount || self.scoutCount == otherMessage.scoutCount) &&
      self.hasSniperCount == otherMessage.hasSniperCount &&
      (!self.hasSniperCount || self.sniperCount == otherMessage.sniperCount) &&
      self.hasSoliderCount == otherMessage.hasSoliderCount &&
      (!self.hasSoliderCount || self.soliderCount == otherMessage.soliderCount) &&
      self.hasDemoCount == otherMessage.hasDemoCount &&
      (!self.hasDemoCount || self.demoCount == otherMessage.demoCount) &&
      self.hasMedicCount == otherMessage.hasMedicCount &&
      (!self.hasMedicCount || self.medicCount == otherMessage.medicCount) &&
      self.hasHeavyCount == otherMessage.hasHeavyCount &&
      (!self.hasHeavyCount || self.heavyCount == otherMessage.heavyCount) &&
      self.hasPyroCount == otherMessage.hasPyroCount &&
      (!self.hasPyroCount || self.pyroCount == otherMessage.pyroCount) &&
      self.hasSpyCount == otherMessage.hasSpyCount &&
      (!self.hasSpyCount || self.spyCount == otherMessage.spyCount) &&
      self.hasEngineerCount == otherMessage.hasEngineerCount &&
      (!self.hasEngineerCount || self.engineerCount == otherMessage.engineerCount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasEventCounter) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.eventCounter] hash];
  }
  if (self.hasTimeSubmitted) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.timeSubmitted] hash];
  }
  if (self.hasIsValveServer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isValveServer] hash];
  }
  if (self.hasBossLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.bossLevel] hash];
  }
  if (self.hasSpawnedHealth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.spawnedHealth] hash];
  }
  if (self.hasRemainingHealth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.remainingHealth] hash];
  }
  if (self.hasLifeTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.lifeTime] hash];
  }
  if (self.hasBombKills) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.bombKills] hash];
  }
  if (self.hasStaffKills) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.staffKills] hash];
  }
  if (self.hasPvpKills) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.pvpKills] hash];
  }
  if (self.hasProphuntTime1) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.prophuntTime1] hash];
  }
  if (self.hasProphuntTime2) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.prophuntTime2] hash];
  }
  if (self.hasDmgScout) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.dmgScout] hash];
  }
  if (self.hasDmgSniper) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.dmgSniper] hash];
  }
  if (self.hasDmgSoldier) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.dmgSoldier] hash];
  }
  if (self.hasDmgDemo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.dmgDemo] hash];
  }
  if (self.hasDmgMedic) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.dmgMedic] hash];
  }
  if (self.hasDmgHeavy) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.dmgHeavy] hash];
  }
  if (self.hasDmgPyro) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.dmgPyro] hash];
  }
  if (self.hasDmgSpy) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.dmgSpy] hash];
  }
  if (self.hasDmgEngineer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.dmgEngineer] hash];
  }
  if (self.hasScoutCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.scoutCount] hash];
  }
  if (self.hasSniperCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.sniperCount] hash];
  }
  if (self.hasSoliderCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.soliderCount] hash];
  }
  if (self.hasDemoCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.demoCount] hash];
  }
  if (self.hasMedicCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.medicCount] hash];
  }
  if (self.hasHeavyCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.heavyCount] hash];
  }
  if (self.hasPyroCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.pyroCount] hash];
  }
  if (self.hasSpyCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.spyCount] hash];
  }
  if (self.hasEngineerCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.engineerCount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgHalloween_Merasmus2012_Builder()
@property (retain) CMsgHalloween_Merasmus2012* _builderResult;
@end

@implementation CMsgHalloween_Merasmus2012_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgHalloween_Merasmus2012 alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgHalloween_Merasmus2012_Builder*) clear {
  _builderResult = [[[CMsgHalloween_Merasmus2012 alloc] init] autorelease];
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clone {
  return [CMsgHalloween_Merasmus2012 builderWithPrototype:_builderResult];
}
- (CMsgHalloween_Merasmus2012*) defaultInstance {
  return [CMsgHalloween_Merasmus2012 defaultInstance];
}
- (CMsgHalloween_Merasmus2012*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgHalloween_Merasmus2012*) buildPartial {
  CMsgHalloween_Merasmus2012* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgHalloween_Merasmus2012_Builder*) mergeFrom:(CMsgHalloween_Merasmus2012*) other {
  if (other == [CMsgHalloween_Merasmus2012 defaultInstance]) {
    return self;
  }
  if (other.hasEventCounter) {
    [self setEventCounter:other.eventCounter];
  }
  if (other.hasTimeSubmitted) {
    [self setTimeSubmitted:other.timeSubmitted];
  }
  if (other.hasIsValveServer) {
    [self setIsValveServer:other.isValveServer];
  }
  if (other.hasBossLevel) {
    [self setBossLevel:other.bossLevel];
  }
  if (other.hasSpawnedHealth) {
    [self setSpawnedHealth:other.spawnedHealth];
  }
  if (other.hasRemainingHealth) {
    [self setRemainingHealth:other.remainingHealth];
  }
  if (other.hasLifeTime) {
    [self setLifeTime:other.lifeTime];
  }
  if (other.hasBombKills) {
    [self setBombKills:other.bombKills];
  }
  if (other.hasStaffKills) {
    [self setStaffKills:other.staffKills];
  }
  if (other.hasPvpKills) {
    [self setPvpKills:other.pvpKills];
  }
  if (other.hasProphuntTime1) {
    [self setProphuntTime1:other.prophuntTime1];
  }
  if (other.hasProphuntTime2) {
    [self setProphuntTime2:other.prophuntTime2];
  }
  if (other.hasDmgScout) {
    [self setDmgScout:other.dmgScout];
  }
  if (other.hasDmgSniper) {
    [self setDmgSniper:other.dmgSniper];
  }
  if (other.hasDmgSoldier) {
    [self setDmgSoldier:other.dmgSoldier];
  }
  if (other.hasDmgDemo) {
    [self setDmgDemo:other.dmgDemo];
  }
  if (other.hasDmgMedic) {
    [self setDmgMedic:other.dmgMedic];
  }
  if (other.hasDmgHeavy) {
    [self setDmgHeavy:other.dmgHeavy];
  }
  if (other.hasDmgPyro) {
    [self setDmgPyro:other.dmgPyro];
  }
  if (other.hasDmgSpy) {
    [self setDmgSpy:other.dmgSpy];
  }
  if (other.hasDmgEngineer) {
    [self setDmgEngineer:other.dmgEngineer];
  }
  if (other.hasScoutCount) {
    [self setScoutCount:other.scoutCount];
  }
  if (other.hasSniperCount) {
    [self setSniperCount:other.sniperCount];
  }
  if (other.hasSoliderCount) {
    [self setSoliderCount:other.soliderCount];
  }
  if (other.hasDemoCount) {
    [self setDemoCount:other.demoCount];
  }
  if (other.hasMedicCount) {
    [self setMedicCount:other.medicCount];
  }
  if (other.hasHeavyCount) {
    [self setHeavyCount:other.heavyCount];
  }
  if (other.hasPyroCount) {
    [self setPyroCount:other.pyroCount];
  }
  if (other.hasSpyCount) {
    [self setSpyCount:other.spyCount];
  }
  if (other.hasEngineerCount) {
    [self setEngineerCount:other.engineerCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgHalloween_Merasmus2012_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setEventCounter:[input readUInt32]];
        break;
      }
      case 21: {
        [self setTimeSubmitted:[input readFixed32]];
        break;
      }
      case 24: {
        [self setIsValveServer:[input readBool]];
        break;
      }
      case 32: {
        [self setBossLevel:[input readUInt32]];
        break;
      }
      case 40: {
        [self setSpawnedHealth:[input readUInt32]];
        break;
      }
      case 48: {
        [self setRemainingHealth:[input readUInt32]];
        break;
      }
      case 56: {
        [self setLifeTime:[input readUInt32]];
        break;
      }
      case 64: {
        [self setBombKills:[input readUInt32]];
        break;
      }
      case 72: {
        [self setStaffKills:[input readUInt32]];
        break;
      }
      case 80: {
        [self setPvpKills:[input readUInt32]];
        break;
      }
      case 88: {
        [self setProphuntTime1:[input readUInt32]];
        break;
      }
      case 96: {
        [self setProphuntTime2:[input readUInt32]];
        break;
      }
      case 104: {
        [self setDmgScout:[input readUInt32]];
        break;
      }
      case 112: {
        [self setDmgSniper:[input readUInt32]];
        break;
      }
      case 120: {
        [self setDmgSoldier:[input readUInt32]];
        break;
      }
      case 128: {
        [self setDmgDemo:[input readUInt32]];
        break;
      }
      case 136: {
        [self setDmgMedic:[input readUInt32]];
        break;
      }
      case 144: {
        [self setDmgHeavy:[input readUInt32]];
        break;
      }
      case 152: {
        [self setDmgPyro:[input readUInt32]];
        break;
      }
      case 160: {
        [self setDmgSpy:[input readUInt32]];
        break;
      }
      case 168: {
        [self setDmgEngineer:[input readUInt32]];
        break;
      }
      case 176: {
        [self setScoutCount:[input readUInt32]];
        break;
      }
      case 184: {
        [self setSniperCount:[input readUInt32]];
        break;
      }
      case 192: {
        [self setSoliderCount:[input readUInt32]];
        break;
      }
      case 200: {
        [self setDemoCount:[input readUInt32]];
        break;
      }
      case 208: {
        [self setMedicCount:[input readUInt32]];
        break;
      }
      case 216: {
        [self setHeavyCount:[input readUInt32]];
        break;
      }
      case 224: {
        [self setPyroCount:[input readUInt32]];
        break;
      }
      case 232: {
        [self setSpyCount:[input readUInt32]];
        break;
      }
      case 240: {
        [self setEngineerCount:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasEventCounter {
  return result.hasEventCounter;
}
- (uint32_t) eventCounter {
  return result.eventCounter;
}
- (CMsgHalloween_Merasmus2012_Builder*) setEventCounter:(uint32_t) value {
  result.hasEventCounter = YES;
  result.eventCounter = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearEventCounter {
  result.hasEventCounter = NO;
  result.eventCounter = 0;
  return self;
}
- (BOOL) hasTimeSubmitted {
  return result.hasTimeSubmitted;
}
- (uint32_t) timeSubmitted {
  return result.timeSubmitted;
}
- (CMsgHalloween_Merasmus2012_Builder*) setTimeSubmitted:(uint32_t) value {
  result.hasTimeSubmitted = YES;
  result.timeSubmitted = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearTimeSubmitted {
  result.hasTimeSubmitted = NO;
  result.timeSubmitted = 0;
  return self;
}
- (BOOL) hasIsValveServer {
  return result.hasIsValveServer;
}
- (BOOL) isValveServer {
  return result.isValveServer;
}
- (CMsgHalloween_Merasmus2012_Builder*) setIsValveServer:(BOOL) value {
  result.hasIsValveServer = YES;
  result.isValveServer = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearIsValveServer {
  result.hasIsValveServer = NO;
  result.isValveServer = NO;
  return self;
}
- (BOOL) hasBossLevel {
  return result.hasBossLevel;
}
- (uint32_t) bossLevel {
  return result.bossLevel;
}
- (CMsgHalloween_Merasmus2012_Builder*) setBossLevel:(uint32_t) value {
  result.hasBossLevel = YES;
  result.bossLevel = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearBossLevel {
  result.hasBossLevel = NO;
  result.bossLevel = 0;
  return self;
}
- (BOOL) hasSpawnedHealth {
  return result.hasSpawnedHealth;
}
- (uint32_t) spawnedHealth {
  return result.spawnedHealth;
}
- (CMsgHalloween_Merasmus2012_Builder*) setSpawnedHealth:(uint32_t) value {
  result.hasSpawnedHealth = YES;
  result.spawnedHealth = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearSpawnedHealth {
  result.hasSpawnedHealth = NO;
  result.spawnedHealth = 0;
  return self;
}
- (BOOL) hasRemainingHealth {
  return result.hasRemainingHealth;
}
- (uint32_t) remainingHealth {
  return result.remainingHealth;
}
- (CMsgHalloween_Merasmus2012_Builder*) setRemainingHealth:(uint32_t) value {
  result.hasRemainingHealth = YES;
  result.remainingHealth = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearRemainingHealth {
  result.hasRemainingHealth = NO;
  result.remainingHealth = 0;
  return self;
}
- (BOOL) hasLifeTime {
  return result.hasLifeTime;
}
- (uint32_t) lifeTime {
  return result.lifeTime;
}
- (CMsgHalloween_Merasmus2012_Builder*) setLifeTime:(uint32_t) value {
  result.hasLifeTime = YES;
  result.lifeTime = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearLifeTime {
  result.hasLifeTime = NO;
  result.lifeTime = 0;
  return self;
}
- (BOOL) hasBombKills {
  return result.hasBombKills;
}
- (uint32_t) bombKills {
  return result.bombKills;
}
- (CMsgHalloween_Merasmus2012_Builder*) setBombKills:(uint32_t) value {
  result.hasBombKills = YES;
  result.bombKills = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearBombKills {
  result.hasBombKills = NO;
  result.bombKills = 0;
  return self;
}
- (BOOL) hasStaffKills {
  return result.hasStaffKills;
}
- (uint32_t) staffKills {
  return result.staffKills;
}
- (CMsgHalloween_Merasmus2012_Builder*) setStaffKills:(uint32_t) value {
  result.hasStaffKills = YES;
  result.staffKills = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearStaffKills {
  result.hasStaffKills = NO;
  result.staffKills = 0;
  return self;
}
- (BOOL) hasPvpKills {
  return result.hasPvpKills;
}
- (uint32_t) pvpKills {
  return result.pvpKills;
}
- (CMsgHalloween_Merasmus2012_Builder*) setPvpKills:(uint32_t) value {
  result.hasPvpKills = YES;
  result.pvpKills = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearPvpKills {
  result.hasPvpKills = NO;
  result.pvpKills = 0;
  return self;
}
- (BOOL) hasProphuntTime1 {
  return result.hasProphuntTime1;
}
- (uint32_t) prophuntTime1 {
  return result.prophuntTime1;
}
- (CMsgHalloween_Merasmus2012_Builder*) setProphuntTime1:(uint32_t) value {
  result.hasProphuntTime1 = YES;
  result.prophuntTime1 = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearProphuntTime1 {
  result.hasProphuntTime1 = NO;
  result.prophuntTime1 = 0;
  return self;
}
- (BOOL) hasProphuntTime2 {
  return result.hasProphuntTime2;
}
- (uint32_t) prophuntTime2 {
  return result.prophuntTime2;
}
- (CMsgHalloween_Merasmus2012_Builder*) setProphuntTime2:(uint32_t) value {
  result.hasProphuntTime2 = YES;
  result.prophuntTime2 = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearProphuntTime2 {
  result.hasProphuntTime2 = NO;
  result.prophuntTime2 = 0;
  return self;
}
- (BOOL) hasDmgScout {
  return result.hasDmgScout;
}
- (uint32_t) dmgScout {
  return result.dmgScout;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDmgScout:(uint32_t) value {
  result.hasDmgScout = YES;
  result.dmgScout = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgScout {
  result.hasDmgScout = NO;
  result.dmgScout = 0;
  return self;
}
- (BOOL) hasDmgSniper {
  return result.hasDmgSniper;
}
- (uint32_t) dmgSniper {
  return result.dmgSniper;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDmgSniper:(uint32_t) value {
  result.hasDmgSniper = YES;
  result.dmgSniper = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgSniper {
  result.hasDmgSniper = NO;
  result.dmgSniper = 0;
  return self;
}
- (BOOL) hasDmgSoldier {
  return result.hasDmgSoldier;
}
- (uint32_t) dmgSoldier {
  return result.dmgSoldier;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDmgSoldier:(uint32_t) value {
  result.hasDmgSoldier = YES;
  result.dmgSoldier = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgSoldier {
  result.hasDmgSoldier = NO;
  result.dmgSoldier = 0;
  return self;
}
- (BOOL) hasDmgDemo {
  return result.hasDmgDemo;
}
- (uint32_t) dmgDemo {
  return result.dmgDemo;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDmgDemo:(uint32_t) value {
  result.hasDmgDemo = YES;
  result.dmgDemo = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgDemo {
  result.hasDmgDemo = NO;
  result.dmgDemo = 0;
  return self;
}
- (BOOL) hasDmgMedic {
  return result.hasDmgMedic;
}
- (uint32_t) dmgMedic {
  return result.dmgMedic;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDmgMedic:(uint32_t) value {
  result.hasDmgMedic = YES;
  result.dmgMedic = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgMedic {
  result.hasDmgMedic = NO;
  result.dmgMedic = 0;
  return self;
}
- (BOOL) hasDmgHeavy {
  return result.hasDmgHeavy;
}
- (uint32_t) dmgHeavy {
  return result.dmgHeavy;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDmgHeavy:(uint32_t) value {
  result.hasDmgHeavy = YES;
  result.dmgHeavy = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgHeavy {
  result.hasDmgHeavy = NO;
  result.dmgHeavy = 0;
  return self;
}
- (BOOL) hasDmgPyro {
  return result.hasDmgPyro;
}
- (uint32_t) dmgPyro {
  return result.dmgPyro;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDmgPyro:(uint32_t) value {
  result.hasDmgPyro = YES;
  result.dmgPyro = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgPyro {
  result.hasDmgPyro = NO;
  result.dmgPyro = 0;
  return self;
}
- (BOOL) hasDmgSpy {
  return result.hasDmgSpy;
}
- (uint32_t) dmgSpy {
  return result.dmgSpy;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDmgSpy:(uint32_t) value {
  result.hasDmgSpy = YES;
  result.dmgSpy = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgSpy {
  result.hasDmgSpy = NO;
  result.dmgSpy = 0;
  return self;
}
- (BOOL) hasDmgEngineer {
  return result.hasDmgEngineer;
}
- (uint32_t) dmgEngineer {
  return result.dmgEngineer;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDmgEngineer:(uint32_t) value {
  result.hasDmgEngineer = YES;
  result.dmgEngineer = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDmgEngineer {
  result.hasDmgEngineer = NO;
  result.dmgEngineer = 0;
  return self;
}
- (BOOL) hasScoutCount {
  return result.hasScoutCount;
}
- (uint32_t) scoutCount {
  return result.scoutCount;
}
- (CMsgHalloween_Merasmus2012_Builder*) setScoutCount:(uint32_t) value {
  result.hasScoutCount = YES;
  result.scoutCount = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearScoutCount {
  result.hasScoutCount = NO;
  result.scoutCount = 0;
  return self;
}
- (BOOL) hasSniperCount {
  return result.hasSniperCount;
}
- (uint32_t) sniperCount {
  return result.sniperCount;
}
- (CMsgHalloween_Merasmus2012_Builder*) setSniperCount:(uint32_t) value {
  result.hasSniperCount = YES;
  result.sniperCount = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearSniperCount {
  result.hasSniperCount = NO;
  result.sniperCount = 0;
  return self;
}
- (BOOL) hasSoliderCount {
  return result.hasSoliderCount;
}
- (uint32_t) soliderCount {
  return result.soliderCount;
}
- (CMsgHalloween_Merasmus2012_Builder*) setSoliderCount:(uint32_t) value {
  result.hasSoliderCount = YES;
  result.soliderCount = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearSoliderCount {
  result.hasSoliderCount = NO;
  result.soliderCount = 0;
  return self;
}
- (BOOL) hasDemoCount {
  return result.hasDemoCount;
}
- (uint32_t) demoCount {
  return result.demoCount;
}
- (CMsgHalloween_Merasmus2012_Builder*) setDemoCount:(uint32_t) value {
  result.hasDemoCount = YES;
  result.demoCount = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearDemoCount {
  result.hasDemoCount = NO;
  result.demoCount = 0;
  return self;
}
- (BOOL) hasMedicCount {
  return result.hasMedicCount;
}
- (uint32_t) medicCount {
  return result.medicCount;
}
- (CMsgHalloween_Merasmus2012_Builder*) setMedicCount:(uint32_t) value {
  result.hasMedicCount = YES;
  result.medicCount = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearMedicCount {
  result.hasMedicCount = NO;
  result.medicCount = 0;
  return self;
}
- (BOOL) hasHeavyCount {
  return result.hasHeavyCount;
}
- (uint32_t) heavyCount {
  return result.heavyCount;
}
- (CMsgHalloween_Merasmus2012_Builder*) setHeavyCount:(uint32_t) value {
  result.hasHeavyCount = YES;
  result.heavyCount = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearHeavyCount {
  result.hasHeavyCount = NO;
  result.heavyCount = 0;
  return self;
}
- (BOOL) hasPyroCount {
  return result.hasPyroCount;
}
- (uint32_t) pyroCount {
  return result.pyroCount;
}
- (CMsgHalloween_Merasmus2012_Builder*) setPyroCount:(uint32_t) value {
  result.hasPyroCount = YES;
  result.pyroCount = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearPyroCount {
  result.hasPyroCount = NO;
  result.pyroCount = 0;
  return self;
}
- (BOOL) hasSpyCount {
  return result.hasSpyCount;
}
- (uint32_t) spyCount {
  return result.spyCount;
}
- (CMsgHalloween_Merasmus2012_Builder*) setSpyCount:(uint32_t) value {
  result.hasSpyCount = YES;
  result.spyCount = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearSpyCount {
  result.hasSpyCount = NO;
  result.spyCount = 0;
  return self;
}
- (BOOL) hasEngineerCount {
  return result.hasEngineerCount;
}
- (uint32_t) engineerCount {
  return result.engineerCount;
}
- (CMsgHalloween_Merasmus2012_Builder*) setEngineerCount:(uint32_t) value {
  result.hasEngineerCount = YES;
  result.engineerCount = value;
  return self;
}
- (CMsgHalloween_Merasmus2012_Builder*) clearEngineerCount {
  result.hasEngineerCount = NO;
  result.engineerCount = 0;
  return self;
}
@end

@interface CMsgUpdateHalloweenMerasmusLootLevel ()
@property (retain) PBAppendableArray * playersArray;
@property uint32_t merasmusLevel;
@end

@implementation CMsgUpdateHalloweenMerasmusLootLevel

@synthesize playersArray;
@dynamic players;
- (BOOL) hasMerasmusLevel {
  return !!hasMerasmusLevel_;
}
- (void) setHasMerasmusLevel:(BOOL) value_ {
  hasMerasmusLevel_ = !!value_;
}
@synthesize merasmusLevel;
- (void) dealloc {
  self.playersArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.merasmusLevel = 0;
  }
  return self;
}
static CMsgUpdateHalloweenMerasmusLootLevel* defaultCMsgUpdateHalloweenMerasmusLootLevelInstance = nil;
+ (void) initialize {
  if (self == [CMsgUpdateHalloweenMerasmusLootLevel class]) {
    defaultCMsgUpdateHalloweenMerasmusLootLevelInstance = [[CMsgUpdateHalloweenMerasmusLootLevel alloc] init];
  }
}
+ (CMsgUpdateHalloweenMerasmusLootLevel*) defaultInstance {
  return defaultCMsgUpdateHalloweenMerasmusLootLevelInstance;
}
- (CMsgUpdateHalloweenMerasmusLootLevel*) defaultInstance {
  return defaultCMsgUpdateHalloweenMerasmusLootLevelInstance;
}
- (PBArray *)players {
  return playersArray;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*)playersAtIndex:(NSUInteger)index {
  return [playersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CMsgUpdateHalloweenMerasmusLootLevel_Player *element in self.playersArray) {
    [output writeMessage:1 value:element];
  }
  if (self.hasMerasmusLevel) {
    [output writeUInt32:2 value:self.merasmusLevel];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (CMsgUpdateHalloweenMerasmusLootLevel_Player *element in self.playersArray) {
    size_ += computeMessageSize(1, element);
  }
  if (self.hasMerasmusLevel) {
    size_ += computeUInt32Size(2, self.merasmusLevel);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromData:(NSData*) data {
  return (CMsgUpdateHalloweenMerasmusLootLevel*)[[[CMsgUpdateHalloweenMerasmusLootLevel builder] mergeFromData:data] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgUpdateHalloweenMerasmusLootLevel*)[[[CMsgUpdateHalloweenMerasmusLootLevel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgUpdateHalloweenMerasmusLootLevel*)[[[CMsgUpdateHalloweenMerasmusLootLevel builder] mergeFromInputStream:input] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgUpdateHalloweenMerasmusLootLevel*)[[[CMsgUpdateHalloweenMerasmusLootLevel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgUpdateHalloweenMerasmusLootLevel*)[[[CMsgUpdateHalloweenMerasmusLootLevel builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgUpdateHalloweenMerasmusLootLevel*)[[[CMsgUpdateHalloweenMerasmusLootLevel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) builder {
  return [[[CMsgUpdateHalloweenMerasmusLootLevel_Builder alloc] init] autorelease];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) builderWithPrototype:(CMsgUpdateHalloweenMerasmusLootLevel*) prototype {
  return [[CMsgUpdateHalloweenMerasmusLootLevel builder] mergeFrom:prototype];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) builder {
  return [CMsgUpdateHalloweenMerasmusLootLevel builder];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) toBuilder {
  return [CMsgUpdateHalloweenMerasmusLootLevel builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (CMsgUpdateHalloweenMerasmusLootLevel_Player* element in self.playersArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"players"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMerasmusLevel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"merasmusLevel", [NSNumber numberWithInt:self.merasmusLevel]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgUpdateHalloweenMerasmusLootLevel class]]) {
    return NO;
  }
  CMsgUpdateHalloweenMerasmusLootLevel *otherMessage = other;
  return
      [self.playersArray isEqualToArray:otherMessage.playersArray] &&
      self.hasMerasmusLevel == otherMessage.hasMerasmusLevel &&
      (!self.hasMerasmusLevel || self.merasmusLevel == otherMessage.merasmusLevel) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (CMsgUpdateHalloweenMerasmusLootLevel_Player* element in self.playersArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasMerasmusLevel) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.merasmusLevel] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgUpdateHalloweenMerasmusLootLevel_Player ()
@property uint64_t steamId;
@end

@implementation CMsgUpdateHalloweenMerasmusLootLevel_Player

- (BOOL) hasSteamId {
  return !!hasSteamId_;
}
- (void) setHasSteamId:(BOOL) value_ {
  hasSteamId_ = !!value_;
}
@synthesize steamId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.steamId = 0L;
  }
  return self;
}
static CMsgUpdateHalloweenMerasmusLootLevel_Player* defaultCMsgUpdateHalloweenMerasmusLootLevel_PlayerInstance = nil;
+ (void) initialize {
  if (self == [CMsgUpdateHalloweenMerasmusLootLevel_Player class]) {
    defaultCMsgUpdateHalloweenMerasmusLootLevel_PlayerInstance = [[CMsgUpdateHalloweenMerasmusLootLevel_Player alloc] init];
  }
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) defaultInstance {
  return defaultCMsgUpdateHalloweenMerasmusLootLevel_PlayerInstance;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*) defaultInstance {
  return defaultCMsgUpdateHalloweenMerasmusLootLevel_PlayerInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSteamId) {
    [output writeFixed64:1 value:self.steamId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSteamId) {
    size_ += computeFixed64Size(1, self.steamId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromData:(NSData*) data {
  return (CMsgUpdateHalloweenMerasmusLootLevel_Player*)[[[CMsgUpdateHalloweenMerasmusLootLevel_Player builder] mergeFromData:data] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgUpdateHalloweenMerasmusLootLevel_Player*)[[[CMsgUpdateHalloweenMerasmusLootLevel_Player builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgUpdateHalloweenMerasmusLootLevel_Player*)[[[CMsgUpdateHalloweenMerasmusLootLevel_Player builder] mergeFromInputStream:input] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgUpdateHalloweenMerasmusLootLevel_Player*)[[[CMsgUpdateHalloweenMerasmusLootLevel_Player builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgUpdateHalloweenMerasmusLootLevel_Player*)[[[CMsgUpdateHalloweenMerasmusLootLevel_Player builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgUpdateHalloweenMerasmusLootLevel_Player*)[[[CMsgUpdateHalloweenMerasmusLootLevel_Player builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) builder {
  return [[[CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder alloc] init] autorelease];
}
+ (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) builderWithPrototype:(CMsgUpdateHalloweenMerasmusLootLevel_Player*) prototype {
  return [[CMsgUpdateHalloweenMerasmusLootLevel_Player builder] mergeFrom:prototype];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) builder {
  return [CMsgUpdateHalloweenMerasmusLootLevel_Player builder];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) toBuilder {
  return [CMsgUpdateHalloweenMerasmusLootLevel_Player builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSteamId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamId", [NSNumber numberWithLongLong:self.steamId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgUpdateHalloweenMerasmusLootLevel_Player class]]) {
    return NO;
  }
  CMsgUpdateHalloweenMerasmusLootLevel_Player *otherMessage = other;
  return
      self.hasSteamId == otherMessage.hasSteamId &&
      (!self.hasSteamId || self.steamId == otherMessage.steamId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSteamId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder()
@property (retain) CMsgUpdateHalloweenMerasmusLootLevel_Player* _builderResult;
@end

@implementation CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgUpdateHalloweenMerasmusLootLevel_Player alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) clear {
  _builderResult = [[[CMsgUpdateHalloweenMerasmusLootLevel_Player alloc] init] autorelease];
  return self;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) clone {
  return [CMsgUpdateHalloweenMerasmusLootLevel_Player builderWithPrototype:_builderResult];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*) defaultInstance {
  return [CMsgUpdateHalloweenMerasmusLootLevel_Player defaultInstance];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*) buildPartial {
  CMsgUpdateHalloweenMerasmusLootLevel_Player* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) mergeFrom:(CMsgUpdateHalloweenMerasmusLootLevel_Player*) other {
  if (other == [CMsgUpdateHalloweenMerasmusLootLevel_Player defaultInstance]) {
    return self;
  }
  if (other.hasSteamId) {
    [self setSteamId:other.steamId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setSteamId:[input readFixed64]];
        break;
      }
    }
  }
}
- (BOOL) hasSteamId {
  return result.hasSteamId;
}
- (uint64_t) steamId {
  return result.steamId;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) setSteamId:(uint64_t) value {
  result.hasSteamId = YES;
  result.steamId = value;
  return self;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder*) clearSteamId {
  result.hasSteamId = NO;
  result.steamId = 0L;
  return self;
}
@end

@interface CMsgUpdateHalloweenMerasmusLootLevel_Builder()
@property (retain) CMsgUpdateHalloweenMerasmusLootLevel* _builderResult;
@end

@implementation CMsgUpdateHalloweenMerasmusLootLevel_Builder
@synthesize _builderResult;
- (void) dealloc {
  self._builderResult = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self._builderResult = [[[CMsgUpdateHalloweenMerasmusLootLevel alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return _builderResult;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) clear {
  _builderResult = [[[CMsgUpdateHalloweenMerasmusLootLevel alloc] init] autorelease];
  return self;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) clone {
  return [CMsgUpdateHalloweenMerasmusLootLevel builderWithPrototype:_builderResult];
}
- (CMsgUpdateHalloweenMerasmusLootLevel*) defaultInstance {
  return [CMsgUpdateHalloweenMerasmusLootLevel defaultInstance];
}
- (CMsgUpdateHalloweenMerasmusLootLevel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgUpdateHalloweenMerasmusLootLevel*) buildPartial {
  CMsgUpdateHalloweenMerasmusLootLevel* returnMe = [[_builderResult retain] autorelease];
  self._builderResult = nil;
  return returnMe;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) mergeFrom:(CMsgUpdateHalloweenMerasmusLootLevel*) other {
  if (other == [CMsgUpdateHalloweenMerasmusLootLevel defaultInstance]) {
    return self;
  }
  if (other.playersArray.count > 0) {
    if (result.playersArray == nil) {
      result.playersArray = [[other.playersArray copyWithZone:[other.playersArray zone]] autorelease];
    } else {
      [result.playersArray appendArray:other.playersArray];
    }
  }
  if (other.hasMerasmusLevel) {
    [self setMerasmusLevel:other.merasmusLevel];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CMsgUpdateHalloweenMerasmusLootLevel_Player_Builder* subBuilder = [CMsgUpdateHalloweenMerasmusLootLevel_Player builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPlayers:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setMerasmusLevel:[input readUInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)players {
  return result.playersArray;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Player*)playersAtIndex:(NSUInteger)index {
  return [result playersAtIndex:index];
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder *)addPlayers:(CMsgUpdateHalloweenMerasmusLootLevel_Player*)value {
  if (result.playersArray == nil) {
    result.playersArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.playersArray addObject:value];
  return self;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder *)setPlayersArray:(NSArray *)array {
  result.playersArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder *)setPlayersValues:(const CMsgUpdateHalloweenMerasmusLootLevel_Player* *)values count:(NSUInteger)count {
  result.playersArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder *)clearPlayers {
  result.playersArray = nil;
  return self;
}
- (BOOL) hasMerasmusLevel {
  return result.hasMerasmusLevel;
}
- (uint32_t) merasmusLevel {
  return result.merasmusLevel;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) setMerasmusLevel:(uint32_t) value {
  result.hasMerasmusLevel = YES;
  result.merasmusLevel = value;
  return self;
}
- (CMsgUpdateHalloweenMerasmusLootLevel_Builder*) clearMerasmusLevel {
  result.hasMerasmusLevel = NO;
  result.merasmusLevel = 0;
  return self;
}
@end

