// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

@class ContentManifestMetadata;
@class ContentManifestMetadata_Builder;
@class ContentManifestPayload;
@class ContentManifestPayload_Builder;
@class ContentManifestPayload_FileMapping;
@class ContentManifestPayload_FileMapping_Builder;
@class ContentManifestPayload_FileMapping_ChunkData;
@class ContentManifestPayload_FileMapping_ChunkData_Builder;
@class ContentManifestSignature;
@class ContentManifestSignature_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface ContentManifestRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface ContentManifestPayload : PBGeneratedMessage {
@private
  PBAppendableArray * mappingsArray;
}
@property (readonly, retain) PBArray * mappings;
- (ContentManifestPayload_FileMapping*)mappingsAtIndex:(NSUInteger)index;

+ (ContentManifestPayload*) defaultInstance;
- (ContentManifestPayload*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentManifestPayload_Builder*) builder;
+ (ContentManifestPayload_Builder*) builder;
+ (ContentManifestPayload_Builder*) builderWithPrototype:(ContentManifestPayload*) prototype;
- (ContentManifestPayload_Builder*) toBuilder;

+ (ContentManifestPayload*) parseFromData:(NSData*) data;
+ (ContentManifestPayload*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestPayload*) parseFromInputStream:(NSInputStream*) input;
+ (ContentManifestPayload*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestPayload*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentManifestPayload*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentManifestPayload_FileMapping : PBGeneratedMessage {
@private
  BOOL hasSize_:1;
  BOOL hasFilename_:1;
  BOOL hasShaFilename_:1;
  BOOL hasShaContent_:1;
  BOOL hasFlags_:1;
  uint64_t size;
  NSString* filename;
  NSData* shaFilename;
  NSData* shaContent;
  uint32_t flags;
  PBAppendableArray * chunksArray;
}
- (BOOL) hasFilename;
- (BOOL) hasSize;
- (BOOL) hasFlags;
- (BOOL) hasShaFilename;
- (BOOL) hasShaContent;
@property (readonly, retain) NSString* filename;
@property (readonly) uint64_t size;
@property (readonly) uint32_t flags;
@property (readonly, retain) NSData* shaFilename;
@property (readonly, retain) NSData* shaContent;
@property (readonly, retain) PBArray * chunks;
- (ContentManifestPayload_FileMapping_ChunkData*)chunksAtIndex:(NSUInteger)index;

+ (ContentManifestPayload_FileMapping*) defaultInstance;
- (ContentManifestPayload_FileMapping*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentManifestPayload_FileMapping_Builder*) builder;
+ (ContentManifestPayload_FileMapping_Builder*) builder;
+ (ContentManifestPayload_FileMapping_Builder*) builderWithPrototype:(ContentManifestPayload_FileMapping*) prototype;
- (ContentManifestPayload_FileMapping_Builder*) toBuilder;

+ (ContentManifestPayload_FileMapping*) parseFromData:(NSData*) data;
+ (ContentManifestPayload_FileMapping*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestPayload_FileMapping*) parseFromInputStream:(NSInputStream*) input;
+ (ContentManifestPayload_FileMapping*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestPayload_FileMapping*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentManifestPayload_FileMapping*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentManifestPayload_FileMapping_ChunkData : PBGeneratedMessage {
@private
  BOOL hasOffset_:1;
  BOOL hasCrc_:1;
  BOOL hasSha_:1;
  BOOL hasCbOriginal_:1;
  BOOL hasCbCompressed_:1;
  uint64_t offset;
  uint32_t crc;
  NSData* sha;
  uint32_t cbOriginal;
  uint32_t cbCompressed;
}
- (BOOL) hasSha;
- (BOOL) hasCrc;
- (BOOL) hasOffset;
- (BOOL) hasCbOriginal;
- (BOOL) hasCbCompressed;
@property (readonly, retain) NSData* sha;
@property (readonly) uint32_t crc;
@property (readonly) uint64_t offset;
@property (readonly) uint32_t cbOriginal;
@property (readonly) uint32_t cbCompressed;

+ (ContentManifestPayload_FileMapping_ChunkData*) defaultInstance;
- (ContentManifestPayload_FileMapping_ChunkData*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) builder;
+ (ContentManifestPayload_FileMapping_ChunkData_Builder*) builder;
+ (ContentManifestPayload_FileMapping_ChunkData_Builder*) builderWithPrototype:(ContentManifestPayload_FileMapping_ChunkData*) prototype;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) toBuilder;

+ (ContentManifestPayload_FileMapping_ChunkData*) parseFromData:(NSData*) data;
+ (ContentManifestPayload_FileMapping_ChunkData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestPayload_FileMapping_ChunkData*) parseFromInputStream:(NSInputStream*) input;
+ (ContentManifestPayload_FileMapping_ChunkData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestPayload_FileMapping_ChunkData*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentManifestPayload_FileMapping_ChunkData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentManifestPayload_FileMapping_ChunkData_Builder : PBGeneratedMessage_Builder {
@private
  ContentManifestPayload_FileMapping_ChunkData* result;
}

- (ContentManifestPayload_FileMapping_ChunkData*) defaultInstance;

- (ContentManifestPayload_FileMapping_ChunkData_Builder*) clear;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) clone;

- (ContentManifestPayload_FileMapping_ChunkData*) build;
- (ContentManifestPayload_FileMapping_ChunkData*) buildPartial;

- (ContentManifestPayload_FileMapping_ChunkData_Builder*) mergeFrom:(ContentManifestPayload_FileMapping_ChunkData*) other;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSha;
- (NSData*) sha;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) setSha:(NSData*) value;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) clearSha;

- (BOOL) hasCrc;
- (uint32_t) crc;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) setCrc:(uint32_t) value;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) clearCrc;

- (BOOL) hasOffset;
- (uint64_t) offset;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) setOffset:(uint64_t) value;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) clearOffset;

- (BOOL) hasCbOriginal;
- (uint32_t) cbOriginal;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) setCbOriginal:(uint32_t) value;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) clearCbOriginal;

- (BOOL) hasCbCompressed;
- (uint32_t) cbCompressed;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) setCbCompressed:(uint32_t) value;
- (ContentManifestPayload_FileMapping_ChunkData_Builder*) clearCbCompressed;
@end

@interface ContentManifestPayload_FileMapping_Builder : PBGeneratedMessage_Builder {
@private
  ContentManifestPayload_FileMapping* result;
}

- (ContentManifestPayload_FileMapping*) defaultInstance;

- (ContentManifestPayload_FileMapping_Builder*) clear;
- (ContentManifestPayload_FileMapping_Builder*) clone;

- (ContentManifestPayload_FileMapping*) build;
- (ContentManifestPayload_FileMapping*) buildPartial;

- (ContentManifestPayload_FileMapping_Builder*) mergeFrom:(ContentManifestPayload_FileMapping*) other;
- (ContentManifestPayload_FileMapping_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentManifestPayload_FileMapping_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFilename;
- (NSString*) filename;
- (ContentManifestPayload_FileMapping_Builder*) setFilename:(NSString*) value;
- (ContentManifestPayload_FileMapping_Builder*) clearFilename;

- (BOOL) hasSize;
- (uint64_t) size;
- (ContentManifestPayload_FileMapping_Builder*) setSize:(uint64_t) value;
- (ContentManifestPayload_FileMapping_Builder*) clearSize;

- (BOOL) hasFlags;
- (uint32_t) flags;
- (ContentManifestPayload_FileMapping_Builder*) setFlags:(uint32_t) value;
- (ContentManifestPayload_FileMapping_Builder*) clearFlags;

- (BOOL) hasShaFilename;
- (NSData*) shaFilename;
- (ContentManifestPayload_FileMapping_Builder*) setShaFilename:(NSData*) value;
- (ContentManifestPayload_FileMapping_Builder*) clearShaFilename;

- (BOOL) hasShaContent;
- (NSData*) shaContent;
- (ContentManifestPayload_FileMapping_Builder*) setShaContent:(NSData*) value;
- (ContentManifestPayload_FileMapping_Builder*) clearShaContent;

- (PBAppendableArray *)chunks;
- (ContentManifestPayload_FileMapping_ChunkData*)chunksAtIndex:(NSUInteger)index;
- (ContentManifestPayload_FileMapping_Builder *)addChunks:(ContentManifestPayload_FileMapping_ChunkData*)value;
- (ContentManifestPayload_FileMapping_Builder *)setChunksArray:(NSArray *)array;
- (ContentManifestPayload_FileMapping_Builder *)setChunksValues:(const ContentManifestPayload_FileMapping_ChunkData* *)values count:(NSUInteger)count;
- (ContentManifestPayload_FileMapping_Builder *)clearChunks;
@end

@interface ContentManifestPayload_Builder : PBGeneratedMessage_Builder {
@private
  ContentManifestPayload* result;
}

- (ContentManifestPayload*) defaultInstance;

- (ContentManifestPayload_Builder*) clear;
- (ContentManifestPayload_Builder*) clone;

- (ContentManifestPayload*) build;
- (ContentManifestPayload*) buildPartial;

- (ContentManifestPayload_Builder*) mergeFrom:(ContentManifestPayload*) other;
- (ContentManifestPayload_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentManifestPayload_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)mappings;
- (ContentManifestPayload_FileMapping*)mappingsAtIndex:(NSUInteger)index;
- (ContentManifestPayload_Builder *)addMappings:(ContentManifestPayload_FileMapping*)value;
- (ContentManifestPayload_Builder *)setMappingsArray:(NSArray *)array;
- (ContentManifestPayload_Builder *)setMappingsValues:(const ContentManifestPayload_FileMapping* *)values count:(NSUInteger)count;
- (ContentManifestPayload_Builder *)clearMappings;
@end

@interface ContentManifestMetadata : PBGeneratedMessage {
@private
  BOOL hasFilenamesEncrypted_:1;
  BOOL hasGidManifest_:1;
  BOOL hasCbDiskOriginal_:1;
  BOOL hasCbDiskCompressed_:1;
  BOOL hasDepotId_:1;
  BOOL hasCreationTime_:1;
  BOOL hasUniqueChunks_:1;
  BOOL hasCrcEncrypted_:1;
  BOOL hasCrcClear_:1;
  BOOL filenamesEncrypted_:1;
  uint64_t gidManifest;
  uint64_t cbDiskOriginal;
  uint64_t cbDiskCompressed;
  uint32_t depotId;
  uint32_t creationTime;
  uint32_t uniqueChunks;
  uint32_t crcEncrypted;
  uint32_t crcClear;
}
- (BOOL) hasDepotId;
- (BOOL) hasGidManifest;
- (BOOL) hasCreationTime;
- (BOOL) hasFilenamesEncrypted;
- (BOOL) hasCbDiskOriginal;
- (BOOL) hasCbDiskCompressed;
- (BOOL) hasUniqueChunks;
- (BOOL) hasCrcEncrypted;
- (BOOL) hasCrcClear;
@property (readonly) uint32_t depotId;
@property (readonly) uint64_t gidManifest;
@property (readonly) uint32_t creationTime;
- (BOOL) filenamesEncrypted;
@property (readonly) uint64_t cbDiskOriginal;
@property (readonly) uint64_t cbDiskCompressed;
@property (readonly) uint32_t uniqueChunks;
@property (readonly) uint32_t crcEncrypted;
@property (readonly) uint32_t crcClear;

+ (ContentManifestMetadata*) defaultInstance;
- (ContentManifestMetadata*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentManifestMetadata_Builder*) builder;
+ (ContentManifestMetadata_Builder*) builder;
+ (ContentManifestMetadata_Builder*) builderWithPrototype:(ContentManifestMetadata*) prototype;
- (ContentManifestMetadata_Builder*) toBuilder;

+ (ContentManifestMetadata*) parseFromData:(NSData*) data;
+ (ContentManifestMetadata*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestMetadata*) parseFromInputStream:(NSInputStream*) input;
+ (ContentManifestMetadata*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestMetadata*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentManifestMetadata*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentManifestMetadata_Builder : PBGeneratedMessage_Builder {
@private
  ContentManifestMetadata* result;
}

- (ContentManifestMetadata*) defaultInstance;

- (ContentManifestMetadata_Builder*) clear;
- (ContentManifestMetadata_Builder*) clone;

- (ContentManifestMetadata*) build;
- (ContentManifestMetadata*) buildPartial;

- (ContentManifestMetadata_Builder*) mergeFrom:(ContentManifestMetadata*) other;
- (ContentManifestMetadata_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentManifestMetadata_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDepotId;
- (uint32_t) depotId;
- (ContentManifestMetadata_Builder*) setDepotId:(uint32_t) value;
- (ContentManifestMetadata_Builder*) clearDepotId;

- (BOOL) hasGidManifest;
- (uint64_t) gidManifest;
- (ContentManifestMetadata_Builder*) setGidManifest:(uint64_t) value;
- (ContentManifestMetadata_Builder*) clearGidManifest;

- (BOOL) hasCreationTime;
- (uint32_t) creationTime;
- (ContentManifestMetadata_Builder*) setCreationTime:(uint32_t) value;
- (ContentManifestMetadata_Builder*) clearCreationTime;

- (BOOL) hasFilenamesEncrypted;
- (BOOL) filenamesEncrypted;
- (ContentManifestMetadata_Builder*) setFilenamesEncrypted:(BOOL) value;
- (ContentManifestMetadata_Builder*) clearFilenamesEncrypted;

- (BOOL) hasCbDiskOriginal;
- (uint64_t) cbDiskOriginal;
- (ContentManifestMetadata_Builder*) setCbDiskOriginal:(uint64_t) value;
- (ContentManifestMetadata_Builder*) clearCbDiskOriginal;

- (BOOL) hasCbDiskCompressed;
- (uint64_t) cbDiskCompressed;
- (ContentManifestMetadata_Builder*) setCbDiskCompressed:(uint64_t) value;
- (ContentManifestMetadata_Builder*) clearCbDiskCompressed;

- (BOOL) hasUniqueChunks;
- (uint32_t) uniqueChunks;
- (ContentManifestMetadata_Builder*) setUniqueChunks:(uint32_t) value;
- (ContentManifestMetadata_Builder*) clearUniqueChunks;

- (BOOL) hasCrcEncrypted;
- (uint32_t) crcEncrypted;
- (ContentManifestMetadata_Builder*) setCrcEncrypted:(uint32_t) value;
- (ContentManifestMetadata_Builder*) clearCrcEncrypted;

- (BOOL) hasCrcClear;
- (uint32_t) crcClear;
- (ContentManifestMetadata_Builder*) setCrcClear:(uint32_t) value;
- (ContentManifestMetadata_Builder*) clearCrcClear;
@end

@interface ContentManifestSignature : PBGeneratedMessage {
@private
  BOOL hasSignature_:1;
  NSData* signature;
}
- (BOOL) hasSignature;
@property (readonly, retain) NSData* signature;

+ (ContentManifestSignature*) defaultInstance;
- (ContentManifestSignature*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContentManifestSignature_Builder*) builder;
+ (ContentManifestSignature_Builder*) builder;
+ (ContentManifestSignature_Builder*) builderWithPrototype:(ContentManifestSignature*) prototype;
- (ContentManifestSignature_Builder*) toBuilder;

+ (ContentManifestSignature*) parseFromData:(NSData*) data;
+ (ContentManifestSignature*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestSignature*) parseFromInputStream:(NSInputStream*) input;
+ (ContentManifestSignature*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContentManifestSignature*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContentManifestSignature*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContentManifestSignature_Builder : PBGeneratedMessage_Builder {
@private
  ContentManifestSignature* result;
}

- (ContentManifestSignature*) defaultInstance;

- (ContentManifestSignature_Builder*) clear;
- (ContentManifestSignature_Builder*) clone;

- (ContentManifestSignature*) build;
- (ContentManifestSignature*) buildPartial;

- (ContentManifestSignature_Builder*) mergeFrom:(ContentManifestSignature*) other;
- (ContentManifestSignature_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContentManifestSignature_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSignature;
- (NSData*) signature;
- (ContentManifestSignature_Builder*) setSignature:(NSData*) value;
- (ContentManifestSignature_Builder*) clearSignature;
@end

