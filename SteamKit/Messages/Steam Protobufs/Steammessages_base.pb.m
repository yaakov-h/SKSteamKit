// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Steammessages_base.pb.h"

@implementation SteammessagesBaseRoot
static id<PBExtensionField> SteammessagesBaseRoot_msgpoolSoftLimit = nil;
static id<PBExtensionField> SteammessagesBaseRoot_msgpoolHardLimit = nil;
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SteammessagesBaseRoot class]) {
    SteammessagesBaseRoot_msgpoolSoftLimit =
      [[PBConcreteExtensionField extensionWithType:PBExtensionTypeInt32
                                     extendedClass:[PBMessageOptions class]
                                       fieldNumber:50000
                                      defaultValue:[NSNumber numberWithInt:32]
                               messageOrGroupClass:[NSNumber class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO] retain];
    SteammessagesBaseRoot_msgpoolHardLimit =
      [[PBConcreteExtensionField extensionWithType:PBExtensionTypeInt32
                                     extendedClass:[PBMessageOptions class]
                                       fieldNumber:50001
                                      defaultValue:[NSNumber numberWithInt:384]
                               messageOrGroupClass:[NSNumber class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO] retain];
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [PBDescriptorRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
  [registry addExtension:SteammessagesBaseRoot_msgpoolSoftLimit];
  [registry addExtension:SteammessagesBaseRoot_msgpoolHardLimit];
}
+ (id<PBExtensionField>) msgpoolSoftLimit {
  return SteammessagesBaseRoot_msgpoolSoftLimit;
}
+ (id<PBExtensionField>) msgpoolHardLimit {
  return SteammessagesBaseRoot_msgpoolHardLimit;
}
@end

@interface CMsgProtoBufHeader ()
@property uint64_t steamid;
@property int32_t clientSessionid;
@property uint32_t routingAppid;
@property uint64_t jobidSource;
@property uint64_t jobidTarget;
@property (retain) NSString* targetJobName;
@property int32_t eresult;
@property (retain) NSString* errorMessage;
@property uint32_t ip;
@property uint32_t authAccountFlags;
@property int32_t transportError;
@property uint64_t messageid;
@property uint32_t publisherid;
@end

@implementation CMsgProtoBufHeader

- (BOOL) hasSteamid {
  return !!hasSteamid_;
}
- (void) setHasSteamid:(BOOL) value_ {
  hasSteamid_ = !!value_;
}
@synthesize steamid;
- (BOOL) hasClientSessionid {
  return !!hasClientSessionid_;
}
- (void) setHasClientSessionid:(BOOL) value_ {
  hasClientSessionid_ = !!value_;
}
@synthesize clientSessionid;
- (BOOL) hasRoutingAppid {
  return !!hasRoutingAppid_;
}
- (void) setHasRoutingAppid:(BOOL) value_ {
  hasRoutingAppid_ = !!value_;
}
@synthesize routingAppid;
- (BOOL) hasJobidSource {
  return !!hasJobidSource_;
}
- (void) setHasJobidSource:(BOOL) value_ {
  hasJobidSource_ = !!value_;
}
@synthesize jobidSource;
- (BOOL) hasJobidTarget {
  return !!hasJobidTarget_;
}
- (void) setHasJobidTarget:(BOOL) value_ {
  hasJobidTarget_ = !!value_;
}
@synthesize jobidTarget;
- (BOOL) hasTargetJobName {
  return !!hasTargetJobName_;
}
- (void) setHasTargetJobName:(BOOL) value_ {
  hasTargetJobName_ = !!value_;
}
@synthesize targetJobName;
- (BOOL) hasEresult {
  return !!hasEresult_;
}
- (void) setHasEresult:(BOOL) value_ {
  hasEresult_ = !!value_;
}
@synthesize eresult;
- (BOOL) hasErrorMessage {
  return !!hasErrorMessage_;
}
- (void) setHasErrorMessage:(BOOL) value_ {
  hasErrorMessage_ = !!value_;
}
@synthesize errorMessage;
- (BOOL) hasIp {
  return !!hasIp_;
}
- (void) setHasIp:(BOOL) value_ {
  hasIp_ = !!value_;
}
@synthesize ip;
- (BOOL) hasAuthAccountFlags {
  return !!hasAuthAccountFlags_;
}
- (void) setHasAuthAccountFlags:(BOOL) value_ {
  hasAuthAccountFlags_ = !!value_;
}
@synthesize authAccountFlags;
- (BOOL) hasTransportError {
  return !!hasTransportError_;
}
- (void) setHasTransportError:(BOOL) value_ {
  hasTransportError_ = !!value_;
}
@synthesize transportError;
- (BOOL) hasMessageid {
  return !!hasMessageid_;
}
- (void) setHasMessageid:(BOOL) value_ {
  hasMessageid_ = !!value_;
}
@synthesize messageid;
- (BOOL) hasPublisherid {
  return !!hasPublisherid_;
}
- (void) setHasPublisherid:(BOOL) value_ {
  hasPublisherid_ = !!value_;
}
@synthesize publisherid;
- (void) dealloc {
  self.targetJobName = nil;
  self.errorMessage = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.steamid = 0L;
    self.clientSessionid = 0;
    self.routingAppid = 0;
    self.jobidSource = -1L;
    self.jobidTarget = -1L;
    self.targetJobName = @"";
    self.eresult = 2;
    self.errorMessage = @"";
    self.ip = 0;
    self.authAccountFlags = 0;
    self.transportError = 1;
    self.messageid = -1L;
    self.publisherid = 0;
  }
  return self;
}
static CMsgProtoBufHeader* defaultCMsgProtoBufHeaderInstance = nil;
+ (void) initialize {
  if (self == [CMsgProtoBufHeader class]) {
    defaultCMsgProtoBufHeaderInstance = [[CMsgProtoBufHeader alloc] init];
  }
}
+ (CMsgProtoBufHeader*) defaultInstance {
  return defaultCMsgProtoBufHeaderInstance;
}
- (CMsgProtoBufHeader*) defaultInstance {
  return defaultCMsgProtoBufHeaderInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSteamid) {
    [output writeFixed64:1 value:self.steamid];
  }
  if (self.hasClientSessionid) {
    [output writeInt32:2 value:self.clientSessionid];
  }
  if (self.hasRoutingAppid) {
    [output writeUInt32:3 value:self.routingAppid];
  }
  if (self.hasJobidSource) {
    [output writeFixed64:10 value:self.jobidSource];
  }
  if (self.hasJobidTarget) {
    [output writeFixed64:11 value:self.jobidTarget];
  }
  if (self.hasTargetJobName) {
    [output writeString:12 value:self.targetJobName];
  }
  if (self.hasEresult) {
    [output writeInt32:13 value:self.eresult];
  }
  if (self.hasErrorMessage) {
    [output writeString:14 value:self.errorMessage];
  }
  if (self.hasIp) {
    [output writeUInt32:15 value:self.ip];
  }
  if (self.hasAuthAccountFlags) {
    [output writeUInt32:16 value:self.authAccountFlags];
  }
  if (self.hasTransportError) {
    [output writeInt32:17 value:self.transportError];
  }
  if (self.hasMessageid) {
    [output writeUInt64:18 value:self.messageid];
  }
  if (self.hasPublisherid) {
    [output writeUInt32:19 value:self.publisherid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSteamid) {
    size_ += computeFixed64Size(1, self.steamid);
  }
  if (self.hasClientSessionid) {
    size_ += computeInt32Size(2, self.clientSessionid);
  }
  if (self.hasRoutingAppid) {
    size_ += computeUInt32Size(3, self.routingAppid);
  }
  if (self.hasJobidSource) {
    size_ += computeFixed64Size(10, self.jobidSource);
  }
  if (self.hasJobidTarget) {
    size_ += computeFixed64Size(11, self.jobidTarget);
  }
  if (self.hasTargetJobName) {
    size_ += computeStringSize(12, self.targetJobName);
  }
  if (self.hasEresult) {
    size_ += computeInt32Size(13, self.eresult);
  }
  if (self.hasErrorMessage) {
    size_ += computeStringSize(14, self.errorMessage);
  }
  if (self.hasIp) {
    size_ += computeUInt32Size(15, self.ip);
  }
  if (self.hasAuthAccountFlags) {
    size_ += computeUInt32Size(16, self.authAccountFlags);
  }
  if (self.hasTransportError) {
    size_ += computeInt32Size(17, self.transportError);
  }
  if (self.hasMessageid) {
    size_ += computeUInt64Size(18, self.messageid);
  }
  if (self.hasPublisherid) {
    size_ += computeUInt32Size(19, self.publisherid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgProtoBufHeader*) parseFromData:(NSData*) data {
  return (CMsgProtoBufHeader*)[[[CMsgProtoBufHeader builder] mergeFromData:data] build];
}
+ (CMsgProtoBufHeader*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgProtoBufHeader*)[[[CMsgProtoBufHeader builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgProtoBufHeader*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgProtoBufHeader*)[[[CMsgProtoBufHeader builder] mergeFromInputStream:input] build];
}
+ (CMsgProtoBufHeader*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgProtoBufHeader*)[[[CMsgProtoBufHeader builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgProtoBufHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgProtoBufHeader*)[[[CMsgProtoBufHeader builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgProtoBufHeader*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgProtoBufHeader*)[[[CMsgProtoBufHeader builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgProtoBufHeader_Builder*) builder {
  return [[[CMsgProtoBufHeader_Builder alloc] init] autorelease];
}
+ (CMsgProtoBufHeader_Builder*) builderWithPrototype:(CMsgProtoBufHeader*) prototype {
  return [[CMsgProtoBufHeader builder] mergeFrom:prototype];
}
- (CMsgProtoBufHeader_Builder*) builder {
  return [CMsgProtoBufHeader builder];
}
- (CMsgProtoBufHeader_Builder*) toBuilder {
  return [CMsgProtoBufHeader builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSteamid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamid", [NSNumber numberWithLongLong:self.steamid]];
  }
  if (self.hasClientSessionid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"clientSessionid", [NSNumber numberWithInt:self.clientSessionid]];
  }
  if (self.hasRoutingAppid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"routingAppid", [NSNumber numberWithInt:self.routingAppid]];
  }
  if (self.hasJobidSource) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobidSource", [NSNumber numberWithLongLong:self.jobidSource]];
  }
  if (self.hasJobidTarget) {
    [output appendFormat:@"%@%@: %@\n", indent, @"jobidTarget", [NSNumber numberWithLongLong:self.jobidTarget]];
  }
  if (self.hasTargetJobName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetJobName", self.targetJobName];
  }
  if (self.hasEresult) {
    [output appendFormat:@"%@%@: %@\n", indent, @"eresult", [NSNumber numberWithInt:self.eresult]];
  }
  if (self.hasErrorMessage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorMessage", self.errorMessage];
  }
  if (self.hasIp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ip", [NSNumber numberWithInt:self.ip]];
  }
  if (self.hasAuthAccountFlags) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authAccountFlags", [NSNumber numberWithInt:self.authAccountFlags]];
  }
  if (self.hasTransportError) {
    [output appendFormat:@"%@%@: %@\n", indent, @"transportError", [NSNumber numberWithInt:self.transportError]];
  }
  if (self.hasMessageid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"messageid", [NSNumber numberWithLongLong:self.messageid]];
  }
  if (self.hasPublisherid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"publisherid", [NSNumber numberWithInt:self.publisherid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgProtoBufHeader class]]) {
    return NO;
  }
  CMsgProtoBufHeader *otherMessage = other;
  return
      self.hasSteamid == otherMessage.hasSteamid &&
      (!self.hasSteamid || self.steamid == otherMessage.steamid) &&
      self.hasClientSessionid == otherMessage.hasClientSessionid &&
      (!self.hasClientSessionid || self.clientSessionid == otherMessage.clientSessionid) &&
      self.hasRoutingAppid == otherMessage.hasRoutingAppid &&
      (!self.hasRoutingAppid || self.routingAppid == otherMessage.routingAppid) &&
      self.hasJobidSource == otherMessage.hasJobidSource &&
      (!self.hasJobidSource || self.jobidSource == otherMessage.jobidSource) &&
      self.hasJobidTarget == otherMessage.hasJobidTarget &&
      (!self.hasJobidTarget || self.jobidTarget == otherMessage.jobidTarget) &&
      self.hasTargetJobName == otherMessage.hasTargetJobName &&
      (!self.hasTargetJobName || [self.targetJobName isEqual:otherMessage.targetJobName]) &&
      self.hasEresult == otherMessage.hasEresult &&
      (!self.hasEresult || self.eresult == otherMessage.eresult) &&
      self.hasErrorMessage == otherMessage.hasErrorMessage &&
      (!self.hasErrorMessage || [self.errorMessage isEqual:otherMessage.errorMessage]) &&
      self.hasIp == otherMessage.hasIp &&
      (!self.hasIp || self.ip == otherMessage.ip) &&
      self.hasAuthAccountFlags == otherMessage.hasAuthAccountFlags &&
      (!self.hasAuthAccountFlags || self.authAccountFlags == otherMessage.authAccountFlags) &&
      self.hasTransportError == otherMessage.hasTransportError &&
      (!self.hasTransportError || self.transportError == otherMessage.transportError) &&
      self.hasMessageid == otherMessage.hasMessageid &&
      (!self.hasMessageid || self.messageid == otherMessage.messageid) &&
      self.hasPublisherid == otherMessage.hasPublisherid &&
      (!self.hasPublisherid || self.publisherid == otherMessage.publisherid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSteamid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamid] hash];
  }
  if (self.hasClientSessionid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.clientSessionid] hash];
  }
  if (self.hasRoutingAppid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.routingAppid] hash];
  }
  if (self.hasJobidSource) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.jobidSource] hash];
  }
  if (self.hasJobidTarget) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.jobidTarget] hash];
  }
  if (self.hasTargetJobName) {
    hashCode = hashCode * 31 + [self.targetJobName hash];
  }
  if (self.hasEresult) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.eresult] hash];
  }
  if (self.hasErrorMessage) {
    hashCode = hashCode * 31 + [self.errorMessage hash];
  }
  if (self.hasIp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.ip] hash];
  }
  if (self.hasAuthAccountFlags) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.authAccountFlags] hash];
  }
  if (self.hasTransportError) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.transportError] hash];
  }
  if (self.hasMessageid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.messageid] hash];
  }
  if (self.hasPublisherid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.publisherid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgProtoBufHeader_Builder()
@property (retain) CMsgProtoBufHeader* result;
@end

@implementation CMsgProtoBufHeader_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CMsgProtoBufHeader alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CMsgProtoBufHeader_Builder*) clear {
  self.result = [[[CMsgProtoBufHeader alloc] init] autorelease];
  return self;
}
- (CMsgProtoBufHeader_Builder*) clone {
  return [CMsgProtoBufHeader builderWithPrototype:result];
}
- (CMsgProtoBufHeader*) defaultInstance {
  return [CMsgProtoBufHeader defaultInstance];
}
- (CMsgProtoBufHeader*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgProtoBufHeader*) buildPartial {
  CMsgProtoBufHeader* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CMsgProtoBufHeader_Builder*) mergeFrom:(CMsgProtoBufHeader*) other {
  if (other == [CMsgProtoBufHeader defaultInstance]) {
    return self;
  }
  if (other.hasSteamid) {
    [self setSteamid:other.steamid];
  }
  if (other.hasClientSessionid) {
    [self setClientSessionid:other.clientSessionid];
  }
  if (other.hasRoutingAppid) {
    [self setRoutingAppid:other.routingAppid];
  }
  if (other.hasJobidSource) {
    [self setJobidSource:other.jobidSource];
  }
  if (other.hasJobidTarget) {
    [self setJobidTarget:other.jobidTarget];
  }
  if (other.hasTargetJobName) {
    [self setTargetJobName:other.targetJobName];
  }
  if (other.hasEresult) {
    [self setEresult:other.eresult];
  }
  if (other.hasErrorMessage) {
    [self setErrorMessage:other.errorMessage];
  }
  if (other.hasIp) {
    [self setIp:other.ip];
  }
  if (other.hasAuthAccountFlags) {
    [self setAuthAccountFlags:other.authAccountFlags];
  }
  if (other.hasTransportError) {
    [self setTransportError:other.transportError];
  }
  if (other.hasMessageid) {
    [self setMessageid:other.messageid];
  }
  if (other.hasPublisherid) {
    [self setPublisherid:other.publisherid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgProtoBufHeader_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgProtoBufHeader_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setSteamid:[input readFixed64]];
        break;
      }
      case 16: {
        [self setClientSessionid:[input readInt32]];
        break;
      }
      case 24: {
        [self setRoutingAppid:[input readUInt32]];
        break;
      }
      case 81: {
        [self setJobidSource:[input readFixed64]];
        break;
      }
      case 89: {
        [self setJobidTarget:[input readFixed64]];
        break;
      }
      case 98: {
        [self setTargetJobName:[input readString]];
        break;
      }
      case 104: {
        [self setEresult:[input readInt32]];
        break;
      }
      case 114: {
        [self setErrorMessage:[input readString]];
        break;
      }
      case 120: {
        [self setIp:[input readUInt32]];
        break;
      }
      case 128: {
        [self setAuthAccountFlags:[input readUInt32]];
        break;
      }
      case 136: {
        [self setTransportError:[input readInt32]];
        break;
      }
      case 144: {
        [self setMessageid:[input readUInt64]];
        break;
      }
      case 152: {
        [self setPublisherid:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSteamid {
  return result.hasSteamid;
}
- (uint64_t) steamid {
  return result.steamid;
}
- (CMsgProtoBufHeader_Builder*) setSteamid:(uint64_t) value {
  result.hasSteamid = YES;
  result.steamid = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearSteamid {
  result.hasSteamid = NO;
  result.steamid = 0L;
  return self;
}
- (BOOL) hasClientSessionid {
  return result.hasClientSessionid;
}
- (int32_t) clientSessionid {
  return result.clientSessionid;
}
- (CMsgProtoBufHeader_Builder*) setClientSessionid:(int32_t) value {
  result.hasClientSessionid = YES;
  result.clientSessionid = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearClientSessionid {
  result.hasClientSessionid = NO;
  result.clientSessionid = 0;
  return self;
}
- (BOOL) hasRoutingAppid {
  return result.hasRoutingAppid;
}
- (uint32_t) routingAppid {
  return result.routingAppid;
}
- (CMsgProtoBufHeader_Builder*) setRoutingAppid:(uint32_t) value {
  result.hasRoutingAppid = YES;
  result.routingAppid = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearRoutingAppid {
  result.hasRoutingAppid = NO;
  result.routingAppid = 0;
  return self;
}
- (BOOL) hasJobidSource {
  return result.hasJobidSource;
}
- (uint64_t) jobidSource {
  return result.jobidSource;
}
- (CMsgProtoBufHeader_Builder*) setJobidSource:(uint64_t) value {
  result.hasJobidSource = YES;
  result.jobidSource = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearJobidSource {
  result.hasJobidSource = NO;
  result.jobidSource = -1L;
  return self;
}
- (BOOL) hasJobidTarget {
  return result.hasJobidTarget;
}
- (uint64_t) jobidTarget {
  return result.jobidTarget;
}
- (CMsgProtoBufHeader_Builder*) setJobidTarget:(uint64_t) value {
  result.hasJobidTarget = YES;
  result.jobidTarget = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearJobidTarget {
  result.hasJobidTarget = NO;
  result.jobidTarget = -1L;
  return self;
}
- (BOOL) hasTargetJobName {
  return result.hasTargetJobName;
}
- (NSString*) targetJobName {
  return result.targetJobName;
}
- (CMsgProtoBufHeader_Builder*) setTargetJobName:(NSString*) value {
  result.hasTargetJobName = YES;
  result.targetJobName = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearTargetJobName {
  result.hasTargetJobName = NO;
  result.targetJobName = @"";
  return self;
}
- (BOOL) hasEresult {
  return result.hasEresult;
}
- (int32_t) eresult {
  return result.eresult;
}
- (CMsgProtoBufHeader_Builder*) setEresult:(int32_t) value {
  result.hasEresult = YES;
  result.eresult = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearEresult {
  result.hasEresult = NO;
  result.eresult = 2;
  return self;
}
- (BOOL) hasErrorMessage {
  return result.hasErrorMessage;
}
- (NSString*) errorMessage {
  return result.errorMessage;
}
- (CMsgProtoBufHeader_Builder*) setErrorMessage:(NSString*) value {
  result.hasErrorMessage = YES;
  result.errorMessage = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearErrorMessage {
  result.hasErrorMessage = NO;
  result.errorMessage = @"";
  return self;
}
- (BOOL) hasIp {
  return result.hasIp;
}
- (uint32_t) ip {
  return result.ip;
}
- (CMsgProtoBufHeader_Builder*) setIp:(uint32_t) value {
  result.hasIp = YES;
  result.ip = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearIp {
  result.hasIp = NO;
  result.ip = 0;
  return self;
}
- (BOOL) hasAuthAccountFlags {
  return result.hasAuthAccountFlags;
}
- (uint32_t) authAccountFlags {
  return result.authAccountFlags;
}
- (CMsgProtoBufHeader_Builder*) setAuthAccountFlags:(uint32_t) value {
  result.hasAuthAccountFlags = YES;
  result.authAccountFlags = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearAuthAccountFlags {
  result.hasAuthAccountFlags = NO;
  result.authAccountFlags = 0;
  return self;
}
- (BOOL) hasTransportError {
  return result.hasTransportError;
}
- (int32_t) transportError {
  return result.transportError;
}
- (CMsgProtoBufHeader_Builder*) setTransportError:(int32_t) value {
  result.hasTransportError = YES;
  result.transportError = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearTransportError {
  result.hasTransportError = NO;
  result.transportError = 1;
  return self;
}
- (BOOL) hasMessageid {
  return result.hasMessageid;
}
- (uint64_t) messageid {
  return result.messageid;
}
- (CMsgProtoBufHeader_Builder*) setMessageid:(uint64_t) value {
  result.hasMessageid = YES;
  result.messageid = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearMessageid {
  result.hasMessageid = NO;
  result.messageid = -1L;
  return self;
}
- (BOOL) hasPublisherid {
  return result.hasPublisherid;
}
- (uint32_t) publisherid {
  return result.publisherid;
}
- (CMsgProtoBufHeader_Builder*) setPublisherid:(uint32_t) value {
  result.hasPublisherid = YES;
  result.publisherid = value;
  return self;
}
- (CMsgProtoBufHeader_Builder*) clearPublisherid {
  result.hasPublisherid = NO;
  result.publisherid = 0;
  return self;
}
@end

@interface CMsgMulti ()
@property uint32_t sizeUnzipped;
@property (retain) NSData* messageBody;
@end

@implementation CMsgMulti

- (BOOL) hasSizeUnzipped {
  return !!hasSizeUnzipped_;
}
- (void) setHasSizeUnzipped:(BOOL) value_ {
  hasSizeUnzipped_ = !!value_;
}
@synthesize sizeUnzipped;
- (BOOL) hasMessageBody {
  return !!hasMessageBody_;
}
- (void) setHasMessageBody:(BOOL) value_ {
  hasMessageBody_ = !!value_;
}
@synthesize messageBody;
- (void) dealloc {
  self.messageBody = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sizeUnzipped = 0;
    self.messageBody = [NSData data];
  }
  return self;
}
static CMsgMulti* defaultCMsgMultiInstance = nil;
+ (void) initialize {
  if (self == [CMsgMulti class]) {
    defaultCMsgMultiInstance = [[CMsgMulti alloc] init];
  }
}
+ (CMsgMulti*) defaultInstance {
  return defaultCMsgMultiInstance;
}
- (CMsgMulti*) defaultInstance {
  return defaultCMsgMultiInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSizeUnzipped) {
    [output writeUInt32:1 value:self.sizeUnzipped];
  }
  if (self.hasMessageBody) {
    [output writeData:2 value:self.messageBody];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSizeUnzipped) {
    size_ += computeUInt32Size(1, self.sizeUnzipped);
  }
  if (self.hasMessageBody) {
    size_ += computeDataSize(2, self.messageBody);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgMulti*) parseFromData:(NSData*) data {
  return (CMsgMulti*)[[[CMsgMulti builder] mergeFromData:data] build];
}
+ (CMsgMulti*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMulti*)[[[CMsgMulti builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgMulti*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgMulti*)[[[CMsgMulti builder] mergeFromInputStream:input] build];
}
+ (CMsgMulti*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMulti*)[[[CMsgMulti builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMulti*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgMulti*)[[[CMsgMulti builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgMulti*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgMulti*)[[[CMsgMulti builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgMulti_Builder*) builder {
  return [[[CMsgMulti_Builder alloc] init] autorelease];
}
+ (CMsgMulti_Builder*) builderWithPrototype:(CMsgMulti*) prototype {
  return [[CMsgMulti builder] mergeFrom:prototype];
}
- (CMsgMulti_Builder*) builder {
  return [CMsgMulti builder];
}
- (CMsgMulti_Builder*) toBuilder {
  return [CMsgMulti builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSizeUnzipped) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sizeUnzipped", [NSNumber numberWithInt:self.sizeUnzipped]];
  }
  if (self.hasMessageBody) {
    [output appendFormat:@"%@%@: %@\n", indent, @"messageBody", self.messageBody];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgMulti class]]) {
    return NO;
  }
  CMsgMulti *otherMessage = other;
  return
      self.hasSizeUnzipped == otherMessage.hasSizeUnzipped &&
      (!self.hasSizeUnzipped || self.sizeUnzipped == otherMessage.sizeUnzipped) &&
      self.hasMessageBody == otherMessage.hasMessageBody &&
      (!self.hasMessageBody || [self.messageBody isEqual:otherMessage.messageBody]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasSizeUnzipped) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.sizeUnzipped] hash];
  }
  if (self.hasMessageBody) {
    hashCode = hashCode * 31 + [self.messageBody hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgMulti_Builder()
@property (retain) CMsgMulti* result;
@end

@implementation CMsgMulti_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CMsgMulti alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CMsgMulti_Builder*) clear {
  self.result = [[[CMsgMulti alloc] init] autorelease];
  return self;
}
- (CMsgMulti_Builder*) clone {
  return [CMsgMulti builderWithPrototype:result];
}
- (CMsgMulti*) defaultInstance {
  return [CMsgMulti defaultInstance];
}
- (CMsgMulti*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgMulti*) buildPartial {
  CMsgMulti* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CMsgMulti_Builder*) mergeFrom:(CMsgMulti*) other {
  if (other == [CMsgMulti defaultInstance]) {
    return self;
  }
  if (other.hasSizeUnzipped) {
    [self setSizeUnzipped:other.sizeUnzipped];
  }
  if (other.hasMessageBody) {
    [self setMessageBody:other.messageBody];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgMulti_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgMulti_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSizeUnzipped:[input readUInt32]];
        break;
      }
      case 18: {
        [self setMessageBody:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasSizeUnzipped {
  return result.hasSizeUnzipped;
}
- (uint32_t) sizeUnzipped {
  return result.sizeUnzipped;
}
- (CMsgMulti_Builder*) setSizeUnzipped:(uint32_t) value {
  result.hasSizeUnzipped = YES;
  result.sizeUnzipped = value;
  return self;
}
- (CMsgMulti_Builder*) clearSizeUnzipped {
  result.hasSizeUnzipped = NO;
  result.sizeUnzipped = 0;
  return self;
}
- (BOOL) hasMessageBody {
  return result.hasMessageBody;
}
- (NSData*) messageBody {
  return result.messageBody;
}
- (CMsgMulti_Builder*) setMessageBody:(NSData*) value {
  result.hasMessageBody = YES;
  result.messageBody = value;
  return self;
}
- (CMsgMulti_Builder*) clearMessageBody {
  result.hasMessageBody = NO;
  result.messageBody = [NSData data];
  return self;
}
@end

@interface CMsgAuthTicket ()
@property uint32_t estate;
@property uint32_t eresult;
@property uint64_t steamid;
@property uint64_t gameid;
@property uint32_t hSteamPipe;
@property uint32_t ticketCrc;
@property (retain) NSData* ticket;
@end

@implementation CMsgAuthTicket

- (BOOL) hasEstate {
  return !!hasEstate_;
}
- (void) setHasEstate:(BOOL) value_ {
  hasEstate_ = !!value_;
}
@synthesize estate;
- (BOOL) hasEresult {
  return !!hasEresult_;
}
- (void) setHasEresult:(BOOL) value_ {
  hasEresult_ = !!value_;
}
@synthesize eresult;
- (BOOL) hasSteamid {
  return !!hasSteamid_;
}
- (void) setHasSteamid:(BOOL) value_ {
  hasSteamid_ = !!value_;
}
@synthesize steamid;
- (BOOL) hasGameid {
  return !!hasGameid_;
}
- (void) setHasGameid:(BOOL) value_ {
  hasGameid_ = !!value_;
}
@synthesize gameid;
- (BOOL) hasHSteamPipe {
  return !!hasHSteamPipe_;
}
- (void) setHasHSteamPipe:(BOOL) value_ {
  hasHSteamPipe_ = !!value_;
}
@synthesize hSteamPipe;
- (BOOL) hasTicketCrc {
  return !!hasTicketCrc_;
}
- (void) setHasTicketCrc:(BOOL) value_ {
  hasTicketCrc_ = !!value_;
}
@synthesize ticketCrc;
- (BOOL) hasTicket {
  return !!hasTicket_;
}
- (void) setHasTicket:(BOOL) value_ {
  hasTicket_ = !!value_;
}
@synthesize ticket;
- (void) dealloc {
  self.ticket = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.estate = 0;
    self.eresult = 2;
    self.steamid = 0L;
    self.gameid = 0L;
    self.hSteamPipe = 0;
    self.ticketCrc = 0;
    self.ticket = [NSData data];
  }
  return self;
}
static CMsgAuthTicket* defaultCMsgAuthTicketInstance = nil;
+ (void) initialize {
  if (self == [CMsgAuthTicket class]) {
    defaultCMsgAuthTicketInstance = [[CMsgAuthTicket alloc] init];
  }
}
+ (CMsgAuthTicket*) defaultInstance {
  return defaultCMsgAuthTicketInstance;
}
- (CMsgAuthTicket*) defaultInstance {
  return defaultCMsgAuthTicketInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEstate) {
    [output writeUInt32:1 value:self.estate];
  }
  if (self.hasEresult) {
    [output writeUInt32:2 value:self.eresult];
  }
  if (self.hasSteamid) {
    [output writeFixed64:3 value:self.steamid];
  }
  if (self.hasGameid) {
    [output writeFixed64:4 value:self.gameid];
  }
  if (self.hasHSteamPipe) {
    [output writeUInt32:5 value:self.hSteamPipe];
  }
  if (self.hasTicketCrc) {
    [output writeUInt32:6 value:self.ticketCrc];
  }
  if (self.hasTicket) {
    [output writeData:7 value:self.ticket];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasEstate) {
    size_ += computeUInt32Size(1, self.estate);
  }
  if (self.hasEresult) {
    size_ += computeUInt32Size(2, self.eresult);
  }
  if (self.hasSteamid) {
    size_ += computeFixed64Size(3, self.steamid);
  }
  if (self.hasGameid) {
    size_ += computeFixed64Size(4, self.gameid);
  }
  if (self.hasHSteamPipe) {
    size_ += computeUInt32Size(5, self.hSteamPipe);
  }
  if (self.hasTicketCrc) {
    size_ += computeUInt32Size(6, self.ticketCrc);
  }
  if (self.hasTicket) {
    size_ += computeDataSize(7, self.ticket);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgAuthTicket*) parseFromData:(NSData*) data {
  return (CMsgAuthTicket*)[[[CMsgAuthTicket builder] mergeFromData:data] build];
}
+ (CMsgAuthTicket*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAuthTicket*)[[[CMsgAuthTicket builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgAuthTicket*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgAuthTicket*)[[[CMsgAuthTicket builder] mergeFromInputStream:input] build];
}
+ (CMsgAuthTicket*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAuthTicket*)[[[CMsgAuthTicket builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAuthTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgAuthTicket*)[[[CMsgAuthTicket builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgAuthTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAuthTicket*)[[[CMsgAuthTicket builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAuthTicket_Builder*) builder {
  return [[[CMsgAuthTicket_Builder alloc] init] autorelease];
}
+ (CMsgAuthTicket_Builder*) builderWithPrototype:(CMsgAuthTicket*) prototype {
  return [[CMsgAuthTicket builder] mergeFrom:prototype];
}
- (CMsgAuthTicket_Builder*) builder {
  return [CMsgAuthTicket builder];
}
- (CMsgAuthTicket_Builder*) toBuilder {
  return [CMsgAuthTicket builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasEstate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"estate", [NSNumber numberWithInt:self.estate]];
  }
  if (self.hasEresult) {
    [output appendFormat:@"%@%@: %@\n", indent, @"eresult", [NSNumber numberWithInt:self.eresult]];
  }
  if (self.hasSteamid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"steamid", [NSNumber numberWithLongLong:self.steamid]];
  }
  if (self.hasGameid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gameid", [NSNumber numberWithLongLong:self.gameid]];
  }
  if (self.hasHSteamPipe) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hSteamPipe", [NSNumber numberWithInt:self.hSteamPipe]];
  }
  if (self.hasTicketCrc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ticketCrc", [NSNumber numberWithInt:self.ticketCrc]];
  }
  if (self.hasTicket) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ticket", self.ticket];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgAuthTicket class]]) {
    return NO;
  }
  CMsgAuthTicket *otherMessage = other;
  return
      self.hasEstate == otherMessage.hasEstate &&
      (!self.hasEstate || self.estate == otherMessage.estate) &&
      self.hasEresult == otherMessage.hasEresult &&
      (!self.hasEresult || self.eresult == otherMessage.eresult) &&
      self.hasSteamid == otherMessage.hasSteamid &&
      (!self.hasSteamid || self.steamid == otherMessage.steamid) &&
      self.hasGameid == otherMessage.hasGameid &&
      (!self.hasGameid || self.gameid == otherMessage.gameid) &&
      self.hasHSteamPipe == otherMessage.hasHSteamPipe &&
      (!self.hasHSteamPipe || self.hSteamPipe == otherMessage.hSteamPipe) &&
      self.hasTicketCrc == otherMessage.hasTicketCrc &&
      (!self.hasTicketCrc || self.ticketCrc == otherMessage.ticketCrc) &&
      self.hasTicket == otherMessage.hasTicket &&
      (!self.hasTicket || [self.ticket isEqual:otherMessage.ticket]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasEstate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.estate] hash];
  }
  if (self.hasEresult) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.eresult] hash];
  }
  if (self.hasSteamid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.steamid] hash];
  }
  if (self.hasGameid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gameid] hash];
  }
  if (self.hasHSteamPipe) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.hSteamPipe] hash];
  }
  if (self.hasTicketCrc) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.ticketCrc] hash];
  }
  if (self.hasTicket) {
    hashCode = hashCode * 31 + [self.ticket hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgAuthTicket_Builder()
@property (retain) CMsgAuthTicket* result;
@end

@implementation CMsgAuthTicket_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CMsgAuthTicket alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CMsgAuthTicket_Builder*) clear {
  self.result = [[[CMsgAuthTicket alloc] init] autorelease];
  return self;
}
- (CMsgAuthTicket_Builder*) clone {
  return [CMsgAuthTicket builderWithPrototype:result];
}
- (CMsgAuthTicket*) defaultInstance {
  return [CMsgAuthTicket defaultInstance];
}
- (CMsgAuthTicket*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgAuthTicket*) buildPartial {
  CMsgAuthTicket* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CMsgAuthTicket_Builder*) mergeFrom:(CMsgAuthTicket*) other {
  if (other == [CMsgAuthTicket defaultInstance]) {
    return self;
  }
  if (other.hasEstate) {
    [self setEstate:other.estate];
  }
  if (other.hasEresult) {
    [self setEresult:other.eresult];
  }
  if (other.hasSteamid) {
    [self setSteamid:other.steamid];
  }
  if (other.hasGameid) {
    [self setGameid:other.gameid];
  }
  if (other.hasHSteamPipe) {
    [self setHSteamPipe:other.hSteamPipe];
  }
  if (other.hasTicketCrc) {
    [self setTicketCrc:other.ticketCrc];
  }
  if (other.hasTicket) {
    [self setTicket:other.ticket];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgAuthTicket_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgAuthTicket_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setEstate:[input readUInt32]];
        break;
      }
      case 16: {
        [self setEresult:[input readUInt32]];
        break;
      }
      case 25: {
        [self setSteamid:[input readFixed64]];
        break;
      }
      case 33: {
        [self setGameid:[input readFixed64]];
        break;
      }
      case 40: {
        [self setHSteamPipe:[input readUInt32]];
        break;
      }
      case 48: {
        [self setTicketCrc:[input readUInt32]];
        break;
      }
      case 58: {
        [self setTicket:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasEstate {
  return result.hasEstate;
}
- (uint32_t) estate {
  return result.estate;
}
- (CMsgAuthTicket_Builder*) setEstate:(uint32_t) value {
  result.hasEstate = YES;
  result.estate = value;
  return self;
}
- (CMsgAuthTicket_Builder*) clearEstate {
  result.hasEstate = NO;
  result.estate = 0;
  return self;
}
- (BOOL) hasEresult {
  return result.hasEresult;
}
- (uint32_t) eresult {
  return result.eresult;
}
- (CMsgAuthTicket_Builder*) setEresult:(uint32_t) value {
  result.hasEresult = YES;
  result.eresult = value;
  return self;
}
- (CMsgAuthTicket_Builder*) clearEresult {
  result.hasEresult = NO;
  result.eresult = 2;
  return self;
}
- (BOOL) hasSteamid {
  return result.hasSteamid;
}
- (uint64_t) steamid {
  return result.steamid;
}
- (CMsgAuthTicket_Builder*) setSteamid:(uint64_t) value {
  result.hasSteamid = YES;
  result.steamid = value;
  return self;
}
- (CMsgAuthTicket_Builder*) clearSteamid {
  result.hasSteamid = NO;
  result.steamid = 0L;
  return self;
}
- (BOOL) hasGameid {
  return result.hasGameid;
}
- (uint64_t) gameid {
  return result.gameid;
}
- (CMsgAuthTicket_Builder*) setGameid:(uint64_t) value {
  result.hasGameid = YES;
  result.gameid = value;
  return self;
}
- (CMsgAuthTicket_Builder*) clearGameid {
  result.hasGameid = NO;
  result.gameid = 0L;
  return self;
}
- (BOOL) hasHSteamPipe {
  return result.hasHSteamPipe;
}
- (uint32_t) hSteamPipe {
  return result.hSteamPipe;
}
- (CMsgAuthTicket_Builder*) setHSteamPipe:(uint32_t) value {
  result.hasHSteamPipe = YES;
  result.hSteamPipe = value;
  return self;
}
- (CMsgAuthTicket_Builder*) clearHSteamPipe {
  result.hasHSteamPipe = NO;
  result.hSteamPipe = 0;
  return self;
}
- (BOOL) hasTicketCrc {
  return result.hasTicketCrc;
}
- (uint32_t) ticketCrc {
  return result.ticketCrc;
}
- (CMsgAuthTicket_Builder*) setTicketCrc:(uint32_t) value {
  result.hasTicketCrc = YES;
  result.ticketCrc = value;
  return self;
}
- (CMsgAuthTicket_Builder*) clearTicketCrc {
  result.hasTicketCrc = NO;
  result.ticketCrc = 0;
  return self;
}
- (BOOL) hasTicket {
  return result.hasTicket;
}
- (NSData*) ticket {
  return result.ticket;
}
- (CMsgAuthTicket_Builder*) setTicket:(NSData*) value {
  result.hasTicket = YES;
  result.ticket = value;
  return self;
}
- (CMsgAuthTicket_Builder*) clearTicket {
  result.hasTicket = NO;
  result.ticket = [NSData data];
  return self;
}
@end

@interface CCDDBAppDetailCommon ()
@property uint32_t appid;
@property (retain) NSString* name;
@property (retain) NSString* icon;
@property (retain) NSString* logo;
@property (retain) NSString* logoSmall;
@property BOOL tool;
@property BOOL demo;
@property BOOL media;
@property BOOL communityVisibleStats;
@property (retain) NSString* friendlyName;
@property (retain) NSString* propagation;
@end

@implementation CCDDBAppDetailCommon

- (BOOL) hasAppid {
  return !!hasAppid_;
}
- (void) setHasAppid:(BOOL) value_ {
  hasAppid_ = !!value_;
}
@synthesize appid;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasIcon {
  return !!hasIcon_;
}
- (void) setHasIcon:(BOOL) value_ {
  hasIcon_ = !!value_;
}
@synthesize icon;
- (BOOL) hasLogo {
  return !!hasLogo_;
}
- (void) setHasLogo:(BOOL) value_ {
  hasLogo_ = !!value_;
}
@synthesize logo;
- (BOOL) hasLogoSmall {
  return !!hasLogoSmall_;
}
- (void) setHasLogoSmall:(BOOL) value_ {
  hasLogoSmall_ = !!value_;
}
@synthesize logoSmall;
- (BOOL) hasTool {
  return !!hasTool_;
}
- (void) setHasTool:(BOOL) value_ {
  hasTool_ = !!value_;
}
- (BOOL) tool {
  return !!tool_;
}
- (void) setTool:(BOOL) value_ {
  tool_ = !!value_;
}
- (BOOL) hasDemo {
  return !!hasDemo_;
}
- (void) setHasDemo:(BOOL) value_ {
  hasDemo_ = !!value_;
}
- (BOOL) demo {
  return !!demo_;
}
- (void) setDemo:(BOOL) value_ {
  demo_ = !!value_;
}
- (BOOL) hasMedia {
  return !!hasMedia_;
}
- (void) setHasMedia:(BOOL) value_ {
  hasMedia_ = !!value_;
}
- (BOOL) media {
  return !!media_;
}
- (void) setMedia:(BOOL) value_ {
  media_ = !!value_;
}
- (BOOL) hasCommunityVisibleStats {
  return !!hasCommunityVisibleStats_;
}
- (void) setHasCommunityVisibleStats:(BOOL) value_ {
  hasCommunityVisibleStats_ = !!value_;
}
- (BOOL) communityVisibleStats {
  return !!communityVisibleStats_;
}
- (void) setCommunityVisibleStats:(BOOL) value_ {
  communityVisibleStats_ = !!value_;
}
- (BOOL) hasFriendlyName {
  return !!hasFriendlyName_;
}
- (void) setHasFriendlyName:(BOOL) value_ {
  hasFriendlyName_ = !!value_;
}
@synthesize friendlyName;
- (BOOL) hasPropagation {
  return !!hasPropagation_;
}
- (void) setHasPropagation:(BOOL) value_ {
  hasPropagation_ = !!value_;
}
@synthesize propagation;
- (void) dealloc {
  self.name = nil;
  self.icon = nil;
  self.logo = nil;
  self.logoSmall = nil;
  self.friendlyName = nil;
  self.propagation = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.appid = 0;
    self.name = @"";
    self.icon = @"";
    self.logo = @"";
    self.logoSmall = @"";
    self.tool = NO;
    self.demo = NO;
    self.media = NO;
    self.communityVisibleStats = NO;
    self.friendlyName = @"";
    self.propagation = @"";
  }
  return self;
}
static CCDDBAppDetailCommon* defaultCCDDBAppDetailCommonInstance = nil;
+ (void) initialize {
  if (self == [CCDDBAppDetailCommon class]) {
    defaultCCDDBAppDetailCommonInstance = [[CCDDBAppDetailCommon alloc] init];
  }
}
+ (CCDDBAppDetailCommon*) defaultInstance {
  return defaultCCDDBAppDetailCommonInstance;
}
- (CCDDBAppDetailCommon*) defaultInstance {
  return defaultCCDDBAppDetailCommonInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAppid) {
    [output writeUInt32:1 value:self.appid];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasIcon) {
    [output writeString:3 value:self.icon];
  }
  if (self.hasLogo) {
    [output writeString:4 value:self.logo];
  }
  if (self.hasLogoSmall) {
    [output writeString:5 value:self.logoSmall];
  }
  if (self.hasTool) {
    [output writeBool:6 value:self.tool];
  }
  if (self.hasDemo) {
    [output writeBool:7 value:self.demo];
  }
  if (self.hasMedia) {
    [output writeBool:8 value:self.media];
  }
  if (self.hasCommunityVisibleStats) {
    [output writeBool:9 value:self.communityVisibleStats];
  }
  if (self.hasFriendlyName) {
    [output writeString:10 value:self.friendlyName];
  }
  if (self.hasPropagation) {
    [output writeString:11 value:self.propagation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAppid) {
    size_ += computeUInt32Size(1, self.appid);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasIcon) {
    size_ += computeStringSize(3, self.icon);
  }
  if (self.hasLogo) {
    size_ += computeStringSize(4, self.logo);
  }
  if (self.hasLogoSmall) {
    size_ += computeStringSize(5, self.logoSmall);
  }
  if (self.hasTool) {
    size_ += computeBoolSize(6, self.tool);
  }
  if (self.hasDemo) {
    size_ += computeBoolSize(7, self.demo);
  }
  if (self.hasMedia) {
    size_ += computeBoolSize(8, self.media);
  }
  if (self.hasCommunityVisibleStats) {
    size_ += computeBoolSize(9, self.communityVisibleStats);
  }
  if (self.hasFriendlyName) {
    size_ += computeStringSize(10, self.friendlyName);
  }
  if (self.hasPropagation) {
    size_ += computeStringSize(11, self.propagation);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CCDDBAppDetailCommon*) parseFromData:(NSData*) data {
  return (CCDDBAppDetailCommon*)[[[CCDDBAppDetailCommon builder] mergeFromData:data] build];
}
+ (CCDDBAppDetailCommon*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CCDDBAppDetailCommon*)[[[CCDDBAppDetailCommon builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CCDDBAppDetailCommon*) parseFromInputStream:(NSInputStream*) input {
  return (CCDDBAppDetailCommon*)[[[CCDDBAppDetailCommon builder] mergeFromInputStream:input] build];
}
+ (CCDDBAppDetailCommon*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CCDDBAppDetailCommon*)[[[CCDDBAppDetailCommon builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CCDDBAppDetailCommon*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CCDDBAppDetailCommon*)[[[CCDDBAppDetailCommon builder] mergeFromCodedInputStream:input] build];
}
+ (CCDDBAppDetailCommon*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CCDDBAppDetailCommon*)[[[CCDDBAppDetailCommon builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CCDDBAppDetailCommon_Builder*) builder {
  return [[[CCDDBAppDetailCommon_Builder alloc] init] autorelease];
}
+ (CCDDBAppDetailCommon_Builder*) builderWithPrototype:(CCDDBAppDetailCommon*) prototype {
  return [[CCDDBAppDetailCommon builder] mergeFrom:prototype];
}
- (CCDDBAppDetailCommon_Builder*) builder {
  return [CCDDBAppDetailCommon builder];
}
- (CCDDBAppDetailCommon_Builder*) toBuilder {
  return [CCDDBAppDetailCommon builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAppid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appid", [NSNumber numberWithInt:self.appid]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasIcon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"icon", self.icon];
  }
  if (self.hasLogo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"logo", self.logo];
  }
  if (self.hasLogoSmall) {
    [output appendFormat:@"%@%@: %@\n", indent, @"logoSmall", self.logoSmall];
  }
  if (self.hasTool) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tool", [NSNumber numberWithBool:self.tool]];
  }
  if (self.hasDemo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"demo", [NSNumber numberWithBool:self.demo]];
  }
  if (self.hasMedia) {
    [output appendFormat:@"%@%@: %@\n", indent, @"media", [NSNumber numberWithBool:self.media]];
  }
  if (self.hasCommunityVisibleStats) {
    [output appendFormat:@"%@%@: %@\n", indent, @"communityVisibleStats", [NSNumber numberWithBool:self.communityVisibleStats]];
  }
  if (self.hasFriendlyName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendlyName", self.friendlyName];
  }
  if (self.hasPropagation) {
    [output appendFormat:@"%@%@: %@\n", indent, @"propagation", self.propagation];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CCDDBAppDetailCommon class]]) {
    return NO;
  }
  CCDDBAppDetailCommon *otherMessage = other;
  return
      self.hasAppid == otherMessage.hasAppid &&
      (!self.hasAppid || self.appid == otherMessage.appid) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasIcon == otherMessage.hasIcon &&
      (!self.hasIcon || [self.icon isEqual:otherMessage.icon]) &&
      self.hasLogo == otherMessage.hasLogo &&
      (!self.hasLogo || [self.logo isEqual:otherMessage.logo]) &&
      self.hasLogoSmall == otherMessage.hasLogoSmall &&
      (!self.hasLogoSmall || [self.logoSmall isEqual:otherMessage.logoSmall]) &&
      self.hasTool == otherMessage.hasTool &&
      (!self.hasTool || self.tool == otherMessage.tool) &&
      self.hasDemo == otherMessage.hasDemo &&
      (!self.hasDemo || self.demo == otherMessage.demo) &&
      self.hasMedia == otherMessage.hasMedia &&
      (!self.hasMedia || self.media == otherMessage.media) &&
      self.hasCommunityVisibleStats == otherMessage.hasCommunityVisibleStats &&
      (!self.hasCommunityVisibleStats || self.communityVisibleStats == otherMessage.communityVisibleStats) &&
      self.hasFriendlyName == otherMessage.hasFriendlyName &&
      (!self.hasFriendlyName || [self.friendlyName isEqual:otherMessage.friendlyName]) &&
      self.hasPropagation == otherMessage.hasPropagation &&
      (!self.hasPropagation || [self.propagation isEqual:otherMessage.propagation]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasAppid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.appid] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasIcon) {
    hashCode = hashCode * 31 + [self.icon hash];
  }
  if (self.hasLogo) {
    hashCode = hashCode * 31 + [self.logo hash];
  }
  if (self.hasLogoSmall) {
    hashCode = hashCode * 31 + [self.logoSmall hash];
  }
  if (self.hasTool) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.tool] hash];
  }
  if (self.hasDemo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.demo] hash];
  }
  if (self.hasMedia) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.media] hash];
  }
  if (self.hasCommunityVisibleStats) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.communityVisibleStats] hash];
  }
  if (self.hasFriendlyName) {
    hashCode = hashCode * 31 + [self.friendlyName hash];
  }
  if (self.hasPropagation) {
    hashCode = hashCode * 31 + [self.propagation hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CCDDBAppDetailCommon_Builder()
@property (retain) CCDDBAppDetailCommon* result;
@end

@implementation CCDDBAppDetailCommon_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CCDDBAppDetailCommon alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CCDDBAppDetailCommon_Builder*) clear {
  self.result = [[[CCDDBAppDetailCommon alloc] init] autorelease];
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clone {
  return [CCDDBAppDetailCommon builderWithPrototype:result];
}
- (CCDDBAppDetailCommon*) defaultInstance {
  return [CCDDBAppDetailCommon defaultInstance];
}
- (CCDDBAppDetailCommon*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CCDDBAppDetailCommon*) buildPartial {
  CCDDBAppDetailCommon* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CCDDBAppDetailCommon_Builder*) mergeFrom:(CCDDBAppDetailCommon*) other {
  if (other == [CCDDBAppDetailCommon defaultInstance]) {
    return self;
  }
  if (other.hasAppid) {
    [self setAppid:other.appid];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasIcon) {
    [self setIcon:other.icon];
  }
  if (other.hasLogo) {
    [self setLogo:other.logo];
  }
  if (other.hasLogoSmall) {
    [self setLogoSmall:other.logoSmall];
  }
  if (other.hasTool) {
    [self setTool:other.tool];
  }
  if (other.hasDemo) {
    [self setDemo:other.demo];
  }
  if (other.hasMedia) {
    [self setMedia:other.media];
  }
  if (other.hasCommunityVisibleStats) {
    [self setCommunityVisibleStats:other.communityVisibleStats];
  }
  if (other.hasFriendlyName) {
    [self setFriendlyName:other.friendlyName];
  }
  if (other.hasPropagation) {
    [self setPropagation:other.propagation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CCDDBAppDetailCommon_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CCDDBAppDetailCommon_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAppid:[input readUInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setIcon:[input readString]];
        break;
      }
      case 34: {
        [self setLogo:[input readString]];
        break;
      }
      case 42: {
        [self setLogoSmall:[input readString]];
        break;
      }
      case 48: {
        [self setTool:[input readBool]];
        break;
      }
      case 56: {
        [self setDemo:[input readBool]];
        break;
      }
      case 64: {
        [self setMedia:[input readBool]];
        break;
      }
      case 72: {
        [self setCommunityVisibleStats:[input readBool]];
        break;
      }
      case 82: {
        [self setFriendlyName:[input readString]];
        break;
      }
      case 90: {
        [self setPropagation:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAppid {
  return result.hasAppid;
}
- (uint32_t) appid {
  return result.appid;
}
- (CCDDBAppDetailCommon_Builder*) setAppid:(uint32_t) value {
  result.hasAppid = YES;
  result.appid = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearAppid {
  result.hasAppid = NO;
  result.appid = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (CCDDBAppDetailCommon_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasIcon {
  return result.hasIcon;
}
- (NSString*) icon {
  return result.icon;
}
- (CCDDBAppDetailCommon_Builder*) setIcon:(NSString*) value {
  result.hasIcon = YES;
  result.icon = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearIcon {
  result.hasIcon = NO;
  result.icon = @"";
  return self;
}
- (BOOL) hasLogo {
  return result.hasLogo;
}
- (NSString*) logo {
  return result.logo;
}
- (CCDDBAppDetailCommon_Builder*) setLogo:(NSString*) value {
  result.hasLogo = YES;
  result.logo = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearLogo {
  result.hasLogo = NO;
  result.logo = @"";
  return self;
}
- (BOOL) hasLogoSmall {
  return result.hasLogoSmall;
}
- (NSString*) logoSmall {
  return result.logoSmall;
}
- (CCDDBAppDetailCommon_Builder*) setLogoSmall:(NSString*) value {
  result.hasLogoSmall = YES;
  result.logoSmall = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearLogoSmall {
  result.hasLogoSmall = NO;
  result.logoSmall = @"";
  return self;
}
- (BOOL) hasTool {
  return result.hasTool;
}
- (BOOL) tool {
  return result.tool;
}
- (CCDDBAppDetailCommon_Builder*) setTool:(BOOL) value {
  result.hasTool = YES;
  result.tool = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearTool {
  result.hasTool = NO;
  result.tool = NO;
  return self;
}
- (BOOL) hasDemo {
  return result.hasDemo;
}
- (BOOL) demo {
  return result.demo;
}
- (CCDDBAppDetailCommon_Builder*) setDemo:(BOOL) value {
  result.hasDemo = YES;
  result.demo = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearDemo {
  result.hasDemo = NO;
  result.demo = NO;
  return self;
}
- (BOOL) hasMedia {
  return result.hasMedia;
}
- (BOOL) media {
  return result.media;
}
- (CCDDBAppDetailCommon_Builder*) setMedia:(BOOL) value {
  result.hasMedia = YES;
  result.media = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearMedia {
  result.hasMedia = NO;
  result.media = NO;
  return self;
}
- (BOOL) hasCommunityVisibleStats {
  return result.hasCommunityVisibleStats;
}
- (BOOL) communityVisibleStats {
  return result.communityVisibleStats;
}
- (CCDDBAppDetailCommon_Builder*) setCommunityVisibleStats:(BOOL) value {
  result.hasCommunityVisibleStats = YES;
  result.communityVisibleStats = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearCommunityVisibleStats {
  result.hasCommunityVisibleStats = NO;
  result.communityVisibleStats = NO;
  return self;
}
- (BOOL) hasFriendlyName {
  return result.hasFriendlyName;
}
- (NSString*) friendlyName {
  return result.friendlyName;
}
- (CCDDBAppDetailCommon_Builder*) setFriendlyName:(NSString*) value {
  result.hasFriendlyName = YES;
  result.friendlyName = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearFriendlyName {
  result.hasFriendlyName = NO;
  result.friendlyName = @"";
  return self;
}
- (BOOL) hasPropagation {
  return result.hasPropagation;
}
- (NSString*) propagation {
  return result.propagation;
}
- (CCDDBAppDetailCommon_Builder*) setPropagation:(NSString*) value {
  result.hasPropagation = YES;
  result.propagation = value;
  return self;
}
- (CCDDBAppDetailCommon_Builder*) clearPropagation {
  result.hasPropagation = NO;
  result.propagation = @"";
  return self;
}
@end

@interface CMsgAppRights ()
@property BOOL editInfo;
@property BOOL publish;
@property BOOL viewErrorData;
@property BOOL download;
@property BOOL uploadCdkeys;
@property BOOL generateCdkeys;
@property BOOL viewFinancials;
@property BOOL manageCeg;
@property BOOL manageSigning;
@property BOOL manageCdkeys;
@property BOOL editMarketing;
@property BOOL economySupport;
@property BOOL economySupportSupervisor;
@end

@implementation CMsgAppRights

- (BOOL) hasEditInfo {
  return !!hasEditInfo_;
}
- (void) setHasEditInfo:(BOOL) value_ {
  hasEditInfo_ = !!value_;
}
- (BOOL) editInfo {
  return !!editInfo_;
}
- (void) setEditInfo:(BOOL) value_ {
  editInfo_ = !!value_;
}
- (BOOL) hasPublish {
  return !!hasPublish_;
}
- (void) setHasPublish:(BOOL) value_ {
  hasPublish_ = !!value_;
}
- (BOOL) publish {
  return !!publish_;
}
- (void) setPublish:(BOOL) value_ {
  publish_ = !!value_;
}
- (BOOL) hasViewErrorData {
  return !!hasViewErrorData_;
}
- (void) setHasViewErrorData:(BOOL) value_ {
  hasViewErrorData_ = !!value_;
}
- (BOOL) viewErrorData {
  return !!viewErrorData_;
}
- (void) setViewErrorData:(BOOL) value_ {
  viewErrorData_ = !!value_;
}
- (BOOL) hasDownload {
  return !!hasDownload_;
}
- (void) setHasDownload:(BOOL) value_ {
  hasDownload_ = !!value_;
}
- (BOOL) download {
  return !!download_;
}
- (void) setDownload:(BOOL) value_ {
  download_ = !!value_;
}
- (BOOL) hasUploadCdkeys {
  return !!hasUploadCdkeys_;
}
- (void) setHasUploadCdkeys:(BOOL) value_ {
  hasUploadCdkeys_ = !!value_;
}
- (BOOL) uploadCdkeys {
  return !!uploadCdkeys_;
}
- (void) setUploadCdkeys:(BOOL) value_ {
  uploadCdkeys_ = !!value_;
}
- (BOOL) hasGenerateCdkeys {
  return !!hasGenerateCdkeys_;
}
- (void) setHasGenerateCdkeys:(BOOL) value_ {
  hasGenerateCdkeys_ = !!value_;
}
- (BOOL) generateCdkeys {
  return !!generateCdkeys_;
}
- (void) setGenerateCdkeys:(BOOL) value_ {
  generateCdkeys_ = !!value_;
}
- (BOOL) hasViewFinancials {
  return !!hasViewFinancials_;
}
- (void) setHasViewFinancials:(BOOL) value_ {
  hasViewFinancials_ = !!value_;
}
- (BOOL) viewFinancials {
  return !!viewFinancials_;
}
- (void) setViewFinancials:(BOOL) value_ {
  viewFinancials_ = !!value_;
}
- (BOOL) hasManageCeg {
  return !!hasManageCeg_;
}
- (void) setHasManageCeg:(BOOL) value_ {
  hasManageCeg_ = !!value_;
}
- (BOOL) manageCeg {
  return !!manageCeg_;
}
- (void) setManageCeg:(BOOL) value_ {
  manageCeg_ = !!value_;
}
- (BOOL) hasManageSigning {
  return !!hasManageSigning_;
}
- (void) setHasManageSigning:(BOOL) value_ {
  hasManageSigning_ = !!value_;
}
- (BOOL) manageSigning {
  return !!manageSigning_;
}
- (void) setManageSigning:(BOOL) value_ {
  manageSigning_ = !!value_;
}
- (BOOL) hasManageCdkeys {
  return !!hasManageCdkeys_;
}
- (void) setHasManageCdkeys:(BOOL) value_ {
  hasManageCdkeys_ = !!value_;
}
- (BOOL) manageCdkeys {
  return !!manageCdkeys_;
}
- (void) setManageCdkeys:(BOOL) value_ {
  manageCdkeys_ = !!value_;
}
- (BOOL) hasEditMarketing {
  return !!hasEditMarketing_;
}
- (void) setHasEditMarketing:(BOOL) value_ {
  hasEditMarketing_ = !!value_;
}
- (BOOL) editMarketing {
  return !!editMarketing_;
}
- (void) setEditMarketing:(BOOL) value_ {
  editMarketing_ = !!value_;
}
- (BOOL) hasEconomySupport {
  return !!hasEconomySupport_;
}
- (void) setHasEconomySupport:(BOOL) value_ {
  hasEconomySupport_ = !!value_;
}
- (BOOL) economySupport {
  return !!economySupport_;
}
- (void) setEconomySupport:(BOOL) value_ {
  economySupport_ = !!value_;
}
- (BOOL) hasEconomySupportSupervisor {
  return !!hasEconomySupportSupervisor_;
}
- (void) setHasEconomySupportSupervisor:(BOOL) value_ {
  hasEconomySupportSupervisor_ = !!value_;
}
- (BOOL) economySupportSupervisor {
  return !!economySupportSupervisor_;
}
- (void) setEconomySupportSupervisor:(BOOL) value_ {
  economySupportSupervisor_ = !!value_;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.editInfo = NO;
    self.publish = NO;
    self.viewErrorData = NO;
    self.download = NO;
    self.uploadCdkeys = NO;
    self.generateCdkeys = NO;
    self.viewFinancials = NO;
    self.manageCeg = NO;
    self.manageSigning = NO;
    self.manageCdkeys = NO;
    self.editMarketing = NO;
    self.economySupport = NO;
    self.economySupportSupervisor = NO;
  }
  return self;
}
static CMsgAppRights* defaultCMsgAppRightsInstance = nil;
+ (void) initialize {
  if (self == [CMsgAppRights class]) {
    defaultCMsgAppRightsInstance = [[CMsgAppRights alloc] init];
  }
}
+ (CMsgAppRights*) defaultInstance {
  return defaultCMsgAppRightsInstance;
}
- (CMsgAppRights*) defaultInstance {
  return defaultCMsgAppRightsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEditInfo) {
    [output writeBool:1 value:self.editInfo];
  }
  if (self.hasPublish) {
    [output writeBool:2 value:self.publish];
  }
  if (self.hasViewErrorData) {
    [output writeBool:3 value:self.viewErrorData];
  }
  if (self.hasDownload) {
    [output writeBool:4 value:self.download];
  }
  if (self.hasUploadCdkeys) {
    [output writeBool:5 value:self.uploadCdkeys];
  }
  if (self.hasGenerateCdkeys) {
    [output writeBool:6 value:self.generateCdkeys];
  }
  if (self.hasViewFinancials) {
    [output writeBool:7 value:self.viewFinancials];
  }
  if (self.hasManageCeg) {
    [output writeBool:8 value:self.manageCeg];
  }
  if (self.hasManageSigning) {
    [output writeBool:9 value:self.manageSigning];
  }
  if (self.hasManageCdkeys) {
    [output writeBool:10 value:self.manageCdkeys];
  }
  if (self.hasEditMarketing) {
    [output writeBool:11 value:self.editMarketing];
  }
  if (self.hasEconomySupport) {
    [output writeBool:12 value:self.economySupport];
  }
  if (self.hasEconomySupportSupervisor) {
    [output writeBool:13 value:self.economySupportSupervisor];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasEditInfo) {
    size_ += computeBoolSize(1, self.editInfo);
  }
  if (self.hasPublish) {
    size_ += computeBoolSize(2, self.publish);
  }
  if (self.hasViewErrorData) {
    size_ += computeBoolSize(3, self.viewErrorData);
  }
  if (self.hasDownload) {
    size_ += computeBoolSize(4, self.download);
  }
  if (self.hasUploadCdkeys) {
    size_ += computeBoolSize(5, self.uploadCdkeys);
  }
  if (self.hasGenerateCdkeys) {
    size_ += computeBoolSize(6, self.generateCdkeys);
  }
  if (self.hasViewFinancials) {
    size_ += computeBoolSize(7, self.viewFinancials);
  }
  if (self.hasManageCeg) {
    size_ += computeBoolSize(8, self.manageCeg);
  }
  if (self.hasManageSigning) {
    size_ += computeBoolSize(9, self.manageSigning);
  }
  if (self.hasManageCdkeys) {
    size_ += computeBoolSize(10, self.manageCdkeys);
  }
  if (self.hasEditMarketing) {
    size_ += computeBoolSize(11, self.editMarketing);
  }
  if (self.hasEconomySupport) {
    size_ += computeBoolSize(12, self.economySupport);
  }
  if (self.hasEconomySupportSupervisor) {
    size_ += computeBoolSize(13, self.economySupportSupervisor);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (CMsgAppRights*) parseFromData:(NSData*) data {
  return (CMsgAppRights*)[[[CMsgAppRights builder] mergeFromData:data] build];
}
+ (CMsgAppRights*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAppRights*)[[[CMsgAppRights builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CMsgAppRights*) parseFromInputStream:(NSInputStream*) input {
  return (CMsgAppRights*)[[[CMsgAppRights builder] mergeFromInputStream:input] build];
}
+ (CMsgAppRights*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAppRights*)[[[CMsgAppRights builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAppRights*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CMsgAppRights*)[[[CMsgAppRights builder] mergeFromCodedInputStream:input] build];
}
+ (CMsgAppRights*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CMsgAppRights*)[[[CMsgAppRights builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CMsgAppRights_Builder*) builder {
  return [[[CMsgAppRights_Builder alloc] init] autorelease];
}
+ (CMsgAppRights_Builder*) builderWithPrototype:(CMsgAppRights*) prototype {
  return [[CMsgAppRights builder] mergeFrom:prototype];
}
- (CMsgAppRights_Builder*) builder {
  return [CMsgAppRights builder];
}
- (CMsgAppRights_Builder*) toBuilder {
  return [CMsgAppRights builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasEditInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"editInfo", [NSNumber numberWithBool:self.editInfo]];
  }
  if (self.hasPublish) {
    [output appendFormat:@"%@%@: %@\n", indent, @"publish", [NSNumber numberWithBool:self.publish]];
  }
  if (self.hasViewErrorData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"viewErrorData", [NSNumber numberWithBool:self.viewErrorData]];
  }
  if (self.hasDownload) {
    [output appendFormat:@"%@%@: %@\n", indent, @"download", [NSNumber numberWithBool:self.download]];
  }
  if (self.hasUploadCdkeys) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uploadCdkeys", [NSNumber numberWithBool:self.uploadCdkeys]];
  }
  if (self.hasGenerateCdkeys) {
    [output appendFormat:@"%@%@: %@\n", indent, @"generateCdkeys", [NSNumber numberWithBool:self.generateCdkeys]];
  }
  if (self.hasViewFinancials) {
    [output appendFormat:@"%@%@: %@\n", indent, @"viewFinancials", [NSNumber numberWithBool:self.viewFinancials]];
  }
  if (self.hasManageCeg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"manageCeg", [NSNumber numberWithBool:self.manageCeg]];
  }
  if (self.hasManageSigning) {
    [output appendFormat:@"%@%@: %@\n", indent, @"manageSigning", [NSNumber numberWithBool:self.manageSigning]];
  }
  if (self.hasManageCdkeys) {
    [output appendFormat:@"%@%@: %@\n", indent, @"manageCdkeys", [NSNumber numberWithBool:self.manageCdkeys]];
  }
  if (self.hasEditMarketing) {
    [output appendFormat:@"%@%@: %@\n", indent, @"editMarketing", [NSNumber numberWithBool:self.editMarketing]];
  }
  if (self.hasEconomySupport) {
    [output appendFormat:@"%@%@: %@\n", indent, @"economySupport", [NSNumber numberWithBool:self.economySupport]];
  }
  if (self.hasEconomySupportSupervisor) {
    [output appendFormat:@"%@%@: %@\n", indent, @"economySupportSupervisor", [NSNumber numberWithBool:self.economySupportSupervisor]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CMsgAppRights class]]) {
    return NO;
  }
  CMsgAppRights *otherMessage = other;
  return
      self.hasEditInfo == otherMessage.hasEditInfo &&
      (!self.hasEditInfo || self.editInfo == otherMessage.editInfo) &&
      self.hasPublish == otherMessage.hasPublish &&
      (!self.hasPublish || self.publish == otherMessage.publish) &&
      self.hasViewErrorData == otherMessage.hasViewErrorData &&
      (!self.hasViewErrorData || self.viewErrorData == otherMessage.viewErrorData) &&
      self.hasDownload == otherMessage.hasDownload &&
      (!self.hasDownload || self.download == otherMessage.download) &&
      self.hasUploadCdkeys == otherMessage.hasUploadCdkeys &&
      (!self.hasUploadCdkeys || self.uploadCdkeys == otherMessage.uploadCdkeys) &&
      self.hasGenerateCdkeys == otherMessage.hasGenerateCdkeys &&
      (!self.hasGenerateCdkeys || self.generateCdkeys == otherMessage.generateCdkeys) &&
      self.hasViewFinancials == otherMessage.hasViewFinancials &&
      (!self.hasViewFinancials || self.viewFinancials == otherMessage.viewFinancials) &&
      self.hasManageCeg == otherMessage.hasManageCeg &&
      (!self.hasManageCeg || self.manageCeg == otherMessage.manageCeg) &&
      self.hasManageSigning == otherMessage.hasManageSigning &&
      (!self.hasManageSigning || self.manageSigning == otherMessage.manageSigning) &&
      self.hasManageCdkeys == otherMessage.hasManageCdkeys &&
      (!self.hasManageCdkeys || self.manageCdkeys == otherMessage.manageCdkeys) &&
      self.hasEditMarketing == otherMessage.hasEditMarketing &&
      (!self.hasEditMarketing || self.editMarketing == otherMessage.editMarketing) &&
      self.hasEconomySupport == otherMessage.hasEconomySupport &&
      (!self.hasEconomySupport || self.economySupport == otherMessage.economySupport) &&
      self.hasEconomySupportSupervisor == otherMessage.hasEconomySupportSupervisor &&
      (!self.hasEconomySupportSupervisor || self.economySupportSupervisor == otherMessage.economySupportSupervisor) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasEditInfo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.editInfo] hash];
  }
  if (self.hasPublish) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.publish] hash];
  }
  if (self.hasViewErrorData) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.viewErrorData] hash];
  }
  if (self.hasDownload) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.download] hash];
  }
  if (self.hasUploadCdkeys) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.uploadCdkeys] hash];
  }
  if (self.hasGenerateCdkeys) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.generateCdkeys] hash];
  }
  if (self.hasViewFinancials) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.viewFinancials] hash];
  }
  if (self.hasManageCeg) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.manageCeg] hash];
  }
  if (self.hasManageSigning) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.manageSigning] hash];
  }
  if (self.hasManageCdkeys) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.manageCdkeys] hash];
  }
  if (self.hasEditMarketing) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.editMarketing] hash];
  }
  if (self.hasEconomySupport) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.economySupport] hash];
  }
  if (self.hasEconomySupportSupervisor) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.economySupportSupervisor] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CMsgAppRights_Builder()
@property (retain) CMsgAppRights* result;
@end

@implementation CMsgAppRights_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CMsgAppRights alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CMsgAppRights_Builder*) clear {
  self.result = [[[CMsgAppRights alloc] init] autorelease];
  return self;
}
- (CMsgAppRights_Builder*) clone {
  return [CMsgAppRights builderWithPrototype:result];
}
- (CMsgAppRights*) defaultInstance {
  return [CMsgAppRights defaultInstance];
}
- (CMsgAppRights*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CMsgAppRights*) buildPartial {
  CMsgAppRights* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CMsgAppRights_Builder*) mergeFrom:(CMsgAppRights*) other {
  if (other == [CMsgAppRights defaultInstance]) {
    return self;
  }
  if (other.hasEditInfo) {
    [self setEditInfo:other.editInfo];
  }
  if (other.hasPublish) {
    [self setPublish:other.publish];
  }
  if (other.hasViewErrorData) {
    [self setViewErrorData:other.viewErrorData];
  }
  if (other.hasDownload) {
    [self setDownload:other.download];
  }
  if (other.hasUploadCdkeys) {
    [self setUploadCdkeys:other.uploadCdkeys];
  }
  if (other.hasGenerateCdkeys) {
    [self setGenerateCdkeys:other.generateCdkeys];
  }
  if (other.hasViewFinancials) {
    [self setViewFinancials:other.viewFinancials];
  }
  if (other.hasManageCeg) {
    [self setManageCeg:other.manageCeg];
  }
  if (other.hasManageSigning) {
    [self setManageSigning:other.manageSigning];
  }
  if (other.hasManageCdkeys) {
    [self setManageCdkeys:other.manageCdkeys];
  }
  if (other.hasEditMarketing) {
    [self setEditMarketing:other.editMarketing];
  }
  if (other.hasEconomySupport) {
    [self setEconomySupport:other.economySupport];
  }
  if (other.hasEconomySupportSupervisor) {
    [self setEconomySupportSupervisor:other.economySupportSupervisor];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CMsgAppRights_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CMsgAppRights_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setEditInfo:[input readBool]];
        break;
      }
      case 16: {
        [self setPublish:[input readBool]];
        break;
      }
      case 24: {
        [self setViewErrorData:[input readBool]];
        break;
      }
      case 32: {
        [self setDownload:[input readBool]];
        break;
      }
      case 40: {
        [self setUploadCdkeys:[input readBool]];
        break;
      }
      case 48: {
        [self setGenerateCdkeys:[input readBool]];
        break;
      }
      case 56: {
        [self setViewFinancials:[input readBool]];
        break;
      }
      case 64: {
        [self setManageCeg:[input readBool]];
        break;
      }
      case 72: {
        [self setManageSigning:[input readBool]];
        break;
      }
      case 80: {
        [self setManageCdkeys:[input readBool]];
        break;
      }
      case 88: {
        [self setEditMarketing:[input readBool]];
        break;
      }
      case 96: {
        [self setEconomySupport:[input readBool]];
        break;
      }
      case 104: {
        [self setEconomySupportSupervisor:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasEditInfo {
  return result.hasEditInfo;
}
- (BOOL) editInfo {
  return result.editInfo;
}
- (CMsgAppRights_Builder*) setEditInfo:(BOOL) value {
  result.hasEditInfo = YES;
  result.editInfo = value;
  return self;
}
- (CMsgAppRights_Builder*) clearEditInfo {
  result.hasEditInfo = NO;
  result.editInfo = NO;
  return self;
}
- (BOOL) hasPublish {
  return result.hasPublish;
}
- (BOOL) publish {
  return result.publish;
}
- (CMsgAppRights_Builder*) setPublish:(BOOL) value {
  result.hasPublish = YES;
  result.publish = value;
  return self;
}
- (CMsgAppRights_Builder*) clearPublish {
  result.hasPublish = NO;
  result.publish = NO;
  return self;
}
- (BOOL) hasViewErrorData {
  return result.hasViewErrorData;
}
- (BOOL) viewErrorData {
  return result.viewErrorData;
}
- (CMsgAppRights_Builder*) setViewErrorData:(BOOL) value {
  result.hasViewErrorData = YES;
  result.viewErrorData = value;
  return self;
}
- (CMsgAppRights_Builder*) clearViewErrorData {
  result.hasViewErrorData = NO;
  result.viewErrorData = NO;
  return self;
}
- (BOOL) hasDownload {
  return result.hasDownload;
}
- (BOOL) download {
  return result.download;
}
- (CMsgAppRights_Builder*) setDownload:(BOOL) value {
  result.hasDownload = YES;
  result.download = value;
  return self;
}
- (CMsgAppRights_Builder*) clearDownload {
  result.hasDownload = NO;
  result.download = NO;
  return self;
}
- (BOOL) hasUploadCdkeys {
  return result.hasUploadCdkeys;
}
- (BOOL) uploadCdkeys {
  return result.uploadCdkeys;
}
- (CMsgAppRights_Builder*) setUploadCdkeys:(BOOL) value {
  result.hasUploadCdkeys = YES;
  result.uploadCdkeys = value;
  return self;
}
- (CMsgAppRights_Builder*) clearUploadCdkeys {
  result.hasUploadCdkeys = NO;
  result.uploadCdkeys = NO;
  return self;
}
- (BOOL) hasGenerateCdkeys {
  return result.hasGenerateCdkeys;
}
- (BOOL) generateCdkeys {
  return result.generateCdkeys;
}
- (CMsgAppRights_Builder*) setGenerateCdkeys:(BOOL) value {
  result.hasGenerateCdkeys = YES;
  result.generateCdkeys = value;
  return self;
}
- (CMsgAppRights_Builder*) clearGenerateCdkeys {
  result.hasGenerateCdkeys = NO;
  result.generateCdkeys = NO;
  return self;
}
- (BOOL) hasViewFinancials {
  return result.hasViewFinancials;
}
- (BOOL) viewFinancials {
  return result.viewFinancials;
}
- (CMsgAppRights_Builder*) setViewFinancials:(BOOL) value {
  result.hasViewFinancials = YES;
  result.viewFinancials = value;
  return self;
}
- (CMsgAppRights_Builder*) clearViewFinancials {
  result.hasViewFinancials = NO;
  result.viewFinancials = NO;
  return self;
}
- (BOOL) hasManageCeg {
  return result.hasManageCeg;
}
- (BOOL) manageCeg {
  return result.manageCeg;
}
- (CMsgAppRights_Builder*) setManageCeg:(BOOL) value {
  result.hasManageCeg = YES;
  result.manageCeg = value;
  return self;
}
- (CMsgAppRights_Builder*) clearManageCeg {
  result.hasManageCeg = NO;
  result.manageCeg = NO;
  return self;
}
- (BOOL) hasManageSigning {
  return result.hasManageSigning;
}
- (BOOL) manageSigning {
  return result.manageSigning;
}
- (CMsgAppRights_Builder*) setManageSigning:(BOOL) value {
  result.hasManageSigning = YES;
  result.manageSigning = value;
  return self;
}
- (CMsgAppRights_Builder*) clearManageSigning {
  result.hasManageSigning = NO;
  result.manageSigning = NO;
  return self;
}
- (BOOL) hasManageCdkeys {
  return result.hasManageCdkeys;
}
- (BOOL) manageCdkeys {
  return result.manageCdkeys;
}
- (CMsgAppRights_Builder*) setManageCdkeys:(BOOL) value {
  result.hasManageCdkeys = YES;
  result.manageCdkeys = value;
  return self;
}
- (CMsgAppRights_Builder*) clearManageCdkeys {
  result.hasManageCdkeys = NO;
  result.manageCdkeys = NO;
  return self;
}
- (BOOL) hasEditMarketing {
  return result.hasEditMarketing;
}
- (BOOL) editMarketing {
  return result.editMarketing;
}
- (CMsgAppRights_Builder*) setEditMarketing:(BOOL) value {
  result.hasEditMarketing = YES;
  result.editMarketing = value;
  return self;
}
- (CMsgAppRights_Builder*) clearEditMarketing {
  result.hasEditMarketing = NO;
  result.editMarketing = NO;
  return self;
}
- (BOOL) hasEconomySupport {
  return result.hasEconomySupport;
}
- (BOOL) economySupport {
  return result.economySupport;
}
- (CMsgAppRights_Builder*) setEconomySupport:(BOOL) value {
  result.hasEconomySupport = YES;
  result.economySupport = value;
  return self;
}
- (CMsgAppRights_Builder*) clearEconomySupport {
  result.hasEconomySupport = NO;
  result.economySupport = NO;
  return self;
}
- (BOOL) hasEconomySupportSupervisor {
  return result.hasEconomySupportSupervisor;
}
- (BOOL) economySupportSupervisor {
  return result.economySupportSupervisor;
}
- (CMsgAppRights_Builder*) setEconomySupportSupervisor:(BOOL) value {
  result.hasEconomySupportSupervisor = YES;
  result.economySupportSupervisor = value;
  return self;
}
- (CMsgAppRights_Builder*) clearEconomySupportSupervisor {
  result.hasEconomySupportSupervisor = NO;
  result.economySupportSupervisor = NO;
  return self;
}
@end

